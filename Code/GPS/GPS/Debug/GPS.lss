
GPS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001b6  00800100  00003d86  00003e1a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003d86  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000126  008002b6  008002b6  00003fd0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003fd0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000402c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000338  00000000  00000000  0000406c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005962  00000000  00000000  000043a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e8c  00000000  00000000  00009d06  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003bf8  00000000  00000000  0000ab92  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000f94  00000000  00000000  0000e78c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b5e  00000000  00000000  0000f720  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000079be  00000000  00000000  0001027e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000358  00000000  00000000  00017c3c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5f c0       	rjmp	.+190    	; 0xc0 <__ctors_end>
       2:	00 00       	nop
       4:	7c c0       	rjmp	.+248    	; 0xfe <__bad_interrupt>
       6:	00 00       	nop
       8:	7a c0       	rjmp	.+244    	; 0xfe <__bad_interrupt>
       a:	00 00       	nop
       c:	78 c0       	rjmp	.+240    	; 0xfe <__bad_interrupt>
       e:	00 00       	nop
      10:	76 c0       	rjmp	.+236    	; 0xfe <__bad_interrupt>
      12:	00 00       	nop
      14:	74 c0       	rjmp	.+232    	; 0xfe <__bad_interrupt>
      16:	00 00       	nop
      18:	72 c0       	rjmp	.+228    	; 0xfe <__bad_interrupt>
      1a:	00 00       	nop
      1c:	70 c0       	rjmp	.+224    	; 0xfe <__bad_interrupt>
      1e:	00 00       	nop
      20:	6e c0       	rjmp	.+220    	; 0xfe <__bad_interrupt>
      22:	00 00       	nop
      24:	6c c0       	rjmp	.+216    	; 0xfe <__bad_interrupt>
      26:	00 00       	nop
      28:	6a c0       	rjmp	.+212    	; 0xfe <__bad_interrupt>
      2a:	00 00       	nop
      2c:	68 c0       	rjmp	.+208    	; 0xfe <__bad_interrupt>
      2e:	00 00       	nop
      30:	66 c0       	rjmp	.+204    	; 0xfe <__bad_interrupt>
      32:	00 00       	nop
      34:	64 c0       	rjmp	.+200    	; 0xfe <__bad_interrupt>
      36:	00 00       	nop
      38:	62 c0       	rjmp	.+196    	; 0xfe <__bad_interrupt>
      3a:	00 00       	nop
      3c:	60 c0       	rjmp	.+192    	; 0xfe <__bad_interrupt>
      3e:	00 00       	nop
      40:	5e c0       	rjmp	.+188    	; 0xfe <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 a9 19 	jmp	0x3352	; 0x3352 <__vector_17>
      48:	5b c0       	rjmp	.+182    	; 0x100 <__vector_18>
      4a:	00 00       	nop
      4c:	58 c0       	rjmp	.+176    	; 0xfe <__bad_interrupt>
      4e:	00 00       	nop
      50:	56 c0       	rjmp	.+172    	; 0xfe <__bad_interrupt>
      52:	00 00       	nop
      54:	54 c0       	rjmp	.+168    	; 0xfe <__bad_interrupt>
      56:	00 00       	nop
      58:	52 c0       	rjmp	.+164    	; 0xfe <__bad_interrupt>
      5a:	00 00       	nop
      5c:	50 c0       	rjmp	.+160    	; 0xfe <__bad_interrupt>
      5e:	00 00       	nop
      60:	4e c0       	rjmp	.+156    	; 0xfe <__bad_interrupt>
      62:	00 00       	nop
      64:	4c c0       	rjmp	.+152    	; 0xfe <__bad_interrupt>
      66:	00 00       	nop
      68:	4a c0       	rjmp	.+148    	; 0xfe <__bad_interrupt>
      6a:	00 00       	nop
      6c:	48 c0       	rjmp	.+144    	; 0xfe <__bad_interrupt>
      6e:	00 00       	nop
      70:	46 c0       	rjmp	.+140    	; 0xfe <__bad_interrupt>
      72:	00 00       	nop
      74:	44 c0       	rjmp	.+136    	; 0xfe <__bad_interrupt>
      76:	00 00       	nop
      78:	42 c0       	rjmp	.+132    	; 0xfe <__bad_interrupt>
      7a:	00 00       	nop
      7c:	40 c0       	rjmp	.+128    	; 0xfe <__bad_interrupt>
      7e:	00 00       	nop
      80:	0c 94 37 17 	jmp	0x2e6e	; 0x2e6e <__vector_32>
      84:	3c c0       	rjmp	.+120    	; 0xfe <__bad_interrupt>
      86:	00 00       	nop
      88:	3a c0       	rjmp	.+116    	; 0xfe <__bad_interrupt>
      8a:	00 00       	nop
      8c:	38 c0       	rjmp	.+112    	; 0xfe <__bad_interrupt>
      8e:	00 00       	nop
      90:	36 c0       	rjmp	.+108    	; 0xfe <__bad_interrupt>
      92:	00 00       	nop
      94:	bf 04       	cpc	r11, r15
      96:	c6 04       	cpc	r12, r6
      98:	2d 05       	cpc	r18, r13
      9a:	34 05       	cpc	r19, r4
      9c:	05 06       	cpc	r0, r21
      9e:	05 06       	cpc	r0, r21
      a0:	05 06       	cpc	r0, r21
      a2:	05 06       	cpc	r0, r21
      a4:	05 06       	cpc	r0, r21
      a6:	05 06       	cpc	r0, r21
      a8:	b8 05       	cpc	r27, r8
      aa:	be 05       	cpc	r27, r14
      ac:	cf 05       	cpc	r28, r15
      ae:	e0 05       	cpc	r30, r0
      b0:	f4 05       	cpc	r31, r4
      b2:	b1 17       	cp	r27, r17
      b4:	b7 17       	cp	r27, r23
      b6:	bd 17       	cp	r27, r29
      b8:	c3 17       	cp	r28, r19
      ba:	c9 17       	cp	r28, r25
      bc:	cf 17       	cp	r28, r31
      be:	d5 17       	cp	r29, r21

000000c0 <__ctors_end>:
      c0:	11 24       	eor	r1, r1
      c2:	1f be       	out	0x3f, r1	; 63
      c4:	cf ef       	ldi	r28, 0xFF	; 255
      c6:	d0 e1       	ldi	r29, 0x10	; 16
      c8:	de bf       	out	0x3e, r29	; 62
      ca:	cd bf       	out	0x3d, r28	; 61

000000cc <__do_copy_data>:
      cc:	12 e0       	ldi	r17, 0x02	; 2
      ce:	a0 e0       	ldi	r26, 0x00	; 0
      d0:	b1 e0       	ldi	r27, 0x01	; 1
      d2:	e6 e8       	ldi	r30, 0x86	; 134
      d4:	fd e3       	ldi	r31, 0x3D	; 61
      d6:	00 e0       	ldi	r16, 0x00	; 0
      d8:	0b bf       	out	0x3b, r16	; 59
      da:	02 c0       	rjmp	.+4      	; 0xe0 <__do_copy_data+0x14>
      dc:	07 90       	elpm	r0, Z+
      de:	0d 92       	st	X+, r0
      e0:	a6 3b       	cpi	r26, 0xB6	; 182
      e2:	b1 07       	cpc	r27, r17
      e4:	d9 f7       	brne	.-10     	; 0xdc <__do_copy_data+0x10>

000000e6 <__do_clear_bss>:
      e6:	23 e0       	ldi	r18, 0x03	; 3
      e8:	a6 eb       	ldi	r26, 0xB6	; 182
      ea:	b2 e0       	ldi	r27, 0x02	; 2
      ec:	01 c0       	rjmp	.+2      	; 0xf0 <.do_clear_bss_start>

000000ee <.do_clear_bss_loop>:
      ee:	1d 92       	st	X+, r1

000000f0 <.do_clear_bss_start>:
      f0:	ac 3d       	cpi	r26, 0xDC	; 220
      f2:	b2 07       	cpc	r27, r18
      f4:	e1 f7       	brne	.-8      	; 0xee <.do_clear_bss_loop>
      f6:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <main>
      fa:	0c 94 c1 1e 	jmp	0x3d82	; 0x3d82 <_exit>

000000fe <__bad_interrupt>:
      fe:	80 cf       	rjmp	.-256    	; 0x0 <__vectors>

00000100 <__vector_18>:

//! CAN interrupt service routine

//! presently only used for reception of CAN packets
ISR( CANIT_vect)
	{
     100:	1f 92       	push	r1
     102:	0f 92       	push	r0
     104:	0f b6       	in	r0, 0x3f	; 63
     106:	0f 92       	push	r0
     108:	11 24       	eor	r1, r1
     10a:	0b b6       	in	r0, 0x3b	; 59
     10c:	0f 92       	push	r0
     10e:	2f 93       	push	r18
     110:	3f 93       	push	r19
     112:	4f 93       	push	r20
     114:	5f 93       	push	r21
     116:	6f 93       	push	r22
     118:	7f 93       	push	r23
     11a:	8f 93       	push	r24
     11c:	9f 93       	push	r25
     11e:	af 93       	push	r26
     120:	bf 93       	push	r27
     122:	cf 93       	push	r28
     124:	ef 93       	push	r30
     126:	ff 93       	push	r31
	unsigned i;
	static CAN_packet packet;
	char save_canpage=CANPAGE;
     128:	ed ee       	ldi	r30, 0xED	; 237
     12a:	f0 e0       	ldi	r31, 0x00	; 0
     12c:	c0 81       	ld	r28, Z
	
	unsigned mob=CANHPMOB; // get highest prio mob
     12e:	80 91 ec 00 	lds	r24, 0x00EC
     132:	68 2f       	mov	r22, r24
     134:	70 e0       	ldi	r23, 0x00	; 0
    CANPAGE = mob & 0xf0;
     136:	80 7f       	andi	r24, 0xF0	; 240
     138:	80 83       	st	Z, r24
	mob >>= 4; // -> mob number 0..15
     13a:	72 95       	swap	r23
     13c:	62 95       	swap	r22
     13e:	6f 70       	andi	r22, 0x0F	; 15
     140:	67 27       	eor	r22, r23
     142:	7f 70       	andi	r23, 0x0F	; 15
     144:	67 27       	eor	r22, r23
	ASSERT( (CANSTMOB & ~0xa0) ==0); // allow only RX ready and DLC warning
     146:	80 91 ee 00 	lds	r24, 0x00EE
     14a:	8f 75       	andi	r24, 0x5F	; 95
     14c:	09 f0       	breq	.+2      	; 0x150 <__vector_18+0x50>
     14e:	98 95       	break
	register char length;
	packet.id=(CANIDT2>>5) | (CANIDT1 <<3);
     150:	20 91 f2 00 	lds	r18, 0x00F2
     154:	80 91 f3 00 	lds	r24, 0x00F3
     158:	e6 eb       	ldi	r30, 0xB6	; 182
     15a:	f2 e0       	ldi	r31, 0x02	; 2
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	88 0f       	add	r24, r24
     160:	99 1f       	adc	r25, r25
     162:	88 0f       	add	r24, r24
     164:	99 1f       	adc	r25, r25
     166:	88 0f       	add	r24, r24
     168:	99 1f       	adc	r25, r25
     16a:	22 95       	swap	r18
     16c:	26 95       	lsr	r18
     16e:	27 70       	andi	r18, 0x07	; 7
     170:	82 2b       	or	r24, r18
     172:	91 83       	std	Z+1, r25	; 0x01
     174:	80 83       	st	Z, r24
	length=CANCDMOB & 0x0f;
     176:	80 91 ef 00 	lds	r24, 0x00EF
     17a:	8f 70       	andi	r24, 0x0F	; 15
	packet.length=length;
     17c:	82 83       	std	Z+2, r24	; 0x02
	for (i = 0; i <length; ++i)
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	00 97       	sbiw	r24, 0x00	; 0
     182:	59 f0       	breq	.+22     	; 0x19a <__vector_18+0x9a>
     184:	e9 eb       	ldi	r30, 0xB9	; 185
     186:	f2 e0       	ldi	r31, 0x02	; 2
     188:	87 54       	subi	r24, 0x47	; 71
     18a:	9d 4f       	sbci	r25, 0xFD	; 253
		{
		 packet.data[i] = CANMSG;
     18c:	aa ef       	ldi	r26, 0xFA	; 250
     18e:	b0 e0       	ldi	r27, 0x00	; 0
     190:	2c 91       	ld	r18, X
     192:	21 93       	st	Z+, r18
	ASSERT( (CANSTMOB & ~0xa0) ==0); // allow only RX ready and DLC warning
	register char length;
	packet.id=(CANIDT2>>5) | (CANIDT1 <<3);
	length=CANCDMOB & 0x0f;
	packet.length=length;
	for (i = 0; i <length; ++i)
     194:	e8 17       	cp	r30, r24
     196:	f9 07       	cpc	r31, r25
     198:	d9 f7       	brne	.-10     	; 0x190 <__vector_18+0x90>
		{
		 packet.data[i] = CANMSG;
		}
	CANSTMOB=0;		// reset INT reason
     19a:	10 92 ee 00 	sts	0x00EE, r1
	CANCDMOB=0x80;	// re-enable RX on this channel
     19e:	80 e8       	ldi	r24, 0x80	; 128
     1a0:	80 93 ef 00 	sts	0x00EF, r24
	canlist[ mob]( &packet, mob);
     1a4:	fb 01       	movw	r30, r22
     1a6:	ee 0f       	add	r30, r30
     1a8:	ff 1f       	adc	r31, r31
     1aa:	ee 52       	subi	r30, 0x2E	; 46
     1ac:	fd 4f       	sbci	r31, 0xFD	; 253
     1ae:	01 90       	ld	r0, Z+
     1b0:	f0 81       	ld	r31, Z
     1b2:	e0 2d       	mov	r30, r0
     1b4:	86 eb       	ldi	r24, 0xB6	; 182
     1b6:	92 e0       	ldi	r25, 0x02	; 2
     1b8:	09 95       	icall
	CANPAGE=save_canpage;	// restore CANPAGE
     1ba:	c0 93 ed 00 	sts	0x00ED, r28
	}
     1be:	ff 91       	pop	r31
     1c0:	ef 91       	pop	r30
     1c2:	cf 91       	pop	r28
     1c4:	bf 91       	pop	r27
     1c6:	af 91       	pop	r26
     1c8:	9f 91       	pop	r25
     1ca:	8f 91       	pop	r24
     1cc:	7f 91       	pop	r23
     1ce:	6f 91       	pop	r22
     1d0:	5f 91       	pop	r21
     1d2:	4f 91       	pop	r20
     1d4:	3f 91       	pop	r19
     1d6:	2f 91       	pop	r18
     1d8:	0f 90       	pop	r0
     1da:	0b be       	out	0x3b, r0	; 59
     1dc:	0f 90       	pop	r0
     1de:	0f be       	out	0x3f, r0	; 63
     1e0:	0f 90       	pop	r0
     1e2:	1f 90       	pop	r1
     1e4:	18 95       	reti

000001e6 <can_tx>:

BOOL can_tx( char mob, 	CAN_packet *packet)
	{
     1e6:	cf 93       	push	r28
     1e8:	df 93       	push	r29
     1ea:	fb 01       	movw	r30, r22
	unsigned cnt;
	ASSERT( packet->id <= 0x7ff);
     1ec:	20 81       	ld	r18, Z
     1ee:	31 81       	ldd	r19, Z+1	; 0x01
     1f0:	21 15       	cp	r18, r1
     1f2:	38 40       	sbci	r19, 0x08	; 8
     1f4:	08 f0       	brcs	.+2      	; 0x1f8 <can_tx+0x12>
     1f6:	98 95       	break
	ASSERT( packet->length <=8);
     1f8:	92 81       	ldd	r25, Z+2	; 0x02
     1fa:	99 30       	cpi	r25, 0x09	; 9
     1fc:	08 f0       	brcs	.+2      	; 0x200 <can_tx+0x1a>
     1fe:	98 95       	break
	ASSERT( mob <=14);
     200:	8f 30       	cpi	r24, 0x0F	; 15
     202:	08 f0       	brcs	.+2      	; 0x206 <can_tx+0x20>
     204:	98 95       	break
    CANPAGE = mob << 4;
     206:	82 95       	swap	r24
     208:	80 7f       	andi	r24, 0xF0	; 240
     20a:	80 93 ed 00 	sts	0x00ED, r24
	if(
		(  CANCDMOB & 0b11000000) // if MOB in use
     20e:	80 91 ef 00 	lds	r24, 0x00EF
     212:	80 7c       	andi	r24, 0xC0	; 192
	unsigned cnt;
	ASSERT( packet->id <= 0x7ff);
	ASSERT( packet->length <=8);
	ASSERT( mob <=14);
    CANPAGE = mob << 4;
	if(
     214:	21 f0       	breq	.+8      	; 0x21e <can_tx+0x38>
		(  CANCDMOB & 0b11000000) // if MOB in use
		&& 
	  	( (CANSTMOB & 0x40) ==0)   // TX not ready
     216:	80 91 ee 00 	lds	r24, 0x00EE
	ASSERT( packet->length <=8);
	ASSERT( mob <=14);
    CANPAGE = mob << 4;
	if(
		(  CANCDMOB & 0b11000000) // if MOB in use
		&& 
     21a:	86 ff       	sbrs	r24, 6
     21c:	55 c0       	rjmp	.+170    	; 0x2c8 <can_tx+0xe2>
	  	( (CANSTMOB & 0x40) ==0)   // TX not ready
	  )
		return FALSE;
	CANSTMOB = 0x00;    	// cancel pending operation 
     21e:	10 92 ee 00 	sts	0x00EE, r1
	CANCDMOB = 0x00;		
     222:	10 92 ef 00 	sts	0x00EF, r1
	if( packet->length!=RTR)
     226:	82 81       	ldd	r24, Z+2	; 0x02
     228:	8f 3f       	cpi	r24, 0xFF	; 255
     22a:	61 f1       	breq	.+88     	; 0x284 <can_tx+0x9e>
		{
		CANIDT1=packet->id >>3;
     22c:	80 81       	ld	r24, Z
     22e:	91 81       	ldd	r25, Z+1	; 0x01
     230:	96 95       	lsr	r25
     232:	87 95       	ror	r24
     234:	96 95       	lsr	r25
     236:	87 95       	ror	r24
     238:	96 95       	lsr	r25
     23a:	87 95       	ror	r24
     23c:	80 93 f3 00 	sts	0x00F3, r24
		CANIDT2=packet->id <<5;
     240:	80 81       	ld	r24, Z
     242:	82 95       	swap	r24
     244:	88 0f       	add	r24, r24
     246:	80 7e       	andi	r24, 0xE0	; 224
     248:	80 93 f2 00 	sts	0x00F2, r24
        CANIDT3 = 0;
     24c:	10 92 f1 00 	sts	0x00F1, r1
        CANIDT4 = 0;
     250:	10 92 f0 00 	sts	0x00F0, r1
		for (cnt=0; cnt < packet->length; ++cnt) 
     254:	22 81       	ldd	r18, Z+2	; 0x02
     256:	22 23       	and	r18, r18
     258:	79 f0       	breq	.+30     	; 0x278 <can_tx+0x92>
     25a:	df 01       	movw	r26, r30
     25c:	13 96       	adiw	r26, 0x03	; 3
     25e:	80 e0       	ldi	r24, 0x00	; 0
     260:	90 e0       	ldi	r25, 0x00	; 0
			CANMSG = packet->data[cnt];         
     262:	ca ef       	ldi	r28, 0xFA	; 250
     264:	d0 e0       	ldi	r29, 0x00	; 0
     266:	2d 91       	ld	r18, X+
     268:	28 83       	st	Y, r18
		{
		CANIDT1=packet->id >>3;
		CANIDT2=packet->id <<5;
        CANIDT3 = 0;
        CANIDT4 = 0;
		for (cnt=0; cnt < packet->length; ++cnt) 
     26a:	01 96       	adiw	r24, 0x01	; 1
     26c:	22 81       	ldd	r18, Z+2	; 0x02
     26e:	42 2f       	mov	r20, r18
     270:	50 e0       	ldi	r21, 0x00	; 0
     272:	84 17       	cp	r24, r20
     274:	95 07       	cpc	r25, r21
     276:	b8 f3       	brcs	.-18     	; 0x266 <can_tx+0x80>
			CANMSG = packet->data[cnt];         
    	CANCDMOB|=packet->length;
     278:	ef ee       	ldi	r30, 0xEF	; 239
     27a:	f0 e0       	ldi	r31, 0x00	; 0
     27c:	80 81       	ld	r24, Z
     27e:	28 2b       	or	r18, r24
     280:	20 83       	st	Z, r18
     282:	1b c0       	rjmp	.+54     	; 0x2ba <can_tx+0xd4>
		}
	else
		{
		CANIDT1=packet->id >>3;
     284:	80 81       	ld	r24, Z
     286:	91 81       	ldd	r25, Z+1	; 0x01
     288:	96 95       	lsr	r25
     28a:	87 95       	ror	r24
     28c:	96 95       	lsr	r25
     28e:	87 95       	ror	r24
     290:	96 95       	lsr	r25
     292:	87 95       	ror	r24
     294:	80 93 f3 00 	sts	0x00F3, r24
		CANIDT2=packet->id <<5;
     298:	80 81       	ld	r24, Z
     29a:	82 95       	swap	r24
     29c:	88 0f       	add	r24, r24
     29e:	80 7e       	andi	r24, 0xE0	; 224
     2a0:	80 93 f2 00 	sts	0x00F2, r24
        CANIDT3 = 0;
     2a4:	10 92 f1 00 	sts	0x00F1, r1
        CANIDT4 = 1<<RTRTAG;
     2a8:	84 e0       	ldi	r24, 0x04	; 4
     2aa:	80 93 f0 00 	sts	0x00F0, r24
		CANCDMOB|=packet->length;
     2ae:	af ee       	ldi	r26, 0xEF	; 239
     2b0:	b0 e0       	ldi	r27, 0x00	; 0
     2b2:	9c 91       	ld	r25, X
     2b4:	82 81       	ldd	r24, Z+2	; 0x02
     2b6:	89 2b       	or	r24, r25
     2b8:	8c 93       	st	X, r24
		}
    CANCDMOB|=0x40; //enable TX
     2ba:	ef ee       	ldi	r30, 0xEF	; 239
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	80 81       	ld	r24, Z
     2c0:	80 64       	ori	r24, 0x40	; 64
     2c2:	80 83       	st	Z, r24
	return TRUE;
     2c4:	81 e0       	ldi	r24, 0x01	; 1
     2c6:	01 c0       	rjmp	.+2      	; 0x2ca <can_tx+0xe4>
	if(
		(  CANCDMOB & 0b11000000) // if MOB in use
		&& 
	  	( (CANSTMOB & 0x40) ==0)   // TX not ready
	  )
		return FALSE;
     2c8:	80 e0       	ldi	r24, 0x00	; 0
        CANIDT4 = 1<<RTRTAG;
		CANCDMOB|=packet->length;
		}
    CANCDMOB|=0x40; //enable TX
	return TRUE;
	}
     2ca:	df 91       	pop	r29
     2cc:	cf 91       	pop	r28
     2ce:	08 95       	ret

000002d0 <prepare_rx>:

BOOL prepare_rx( char mob, unsigned id, unsigned idmask, CAN_cbf callback)
	{
	if( mob >= 15) 				// illegal MOB number
     2d0:	8f 30       	cpi	r24, 0x0F	; 15
     2d2:	08 f0       	brcs	.+2      	; 0x2d6 <prepare_rx+0x6>
     2d4:	6d c0       	rjmp	.+218    	; 0x3b0 <prepare_rx+0xe0>
		return TRUE;
	canlist[ (unsigned)mob]=callback;
     2d6:	e8 2f       	mov	r30, r24
     2d8:	f0 e0       	ldi	r31, 0x00	; 0
     2da:	ee 0f       	add	r30, r30
     2dc:	ff 1f       	adc	r31, r31
     2de:	ee 52       	subi	r30, 0x2E	; 46
     2e0:	fd 4f       	sbci	r31, 0xFD	; 253
     2e2:	31 83       	std	Z+1, r19	; 0x01
     2e4:	20 83       	st	Z, r18
    CANPAGE = mob << 4;
     2e6:	98 2f       	mov	r25, r24
     2e8:	92 95       	swap	r25
     2ea:	90 7f       	andi	r25, 0xF0	; 240
     2ec:	90 93 ed 00 	sts	0x00ED, r25
	if( callback==0)			// release this MOB 
     2f0:	23 2b       	or	r18, r19
     2f2:	d9 f4       	brne	.+54     	; 0x32a <prepare_rx+0x5a>
		{
		CANSTMOB = 0x00;    	// cancel pending operation
     2f4:	10 92 ee 00 	sts	0x00EE, r1
		CANCDMOB = 0x00;
     2f8:	10 92 ef 00 	sts	0x00EF, r1
		unsigned mask=1<<mob;
     2fc:	21 e0       	ldi	r18, 0x01	; 1
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	a9 01       	movw	r20, r18
     302:	02 c0       	rjmp	.+4      	; 0x308 <prepare_rx+0x38>
     304:	44 0f       	add	r20, r20
     306:	55 1f       	adc	r21, r21
     308:	8a 95       	dec	r24
     30a:	e2 f7       	brpl	.-8      	; 0x304 <prepare_rx+0x34>
     30c:	ca 01       	movw	r24, r20
		CANIE2 &=  ~mask;
     30e:	ee ed       	ldi	r30, 0xDE	; 222
     310:	f0 e0       	ldi	r31, 0x00	; 0
     312:	20 81       	ld	r18, Z
     314:	80 95       	com	r24
     316:	82 23       	and	r24, r18
     318:	80 83       	st	Z, r24
		CANIE1 &= ~(mask>>8);
     31a:	ef ed       	ldi	r30, 0xDF	; 223
     31c:	f0 e0       	ldi	r31, 0x00	; 0
     31e:	80 81       	ld	r24, Z
     320:	90 95       	com	r25
     322:	89 23       	and	r24, r25
     324:	80 83       	st	Z, r24
		return FALSE;
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	08 95       	ret
		}
	if( CANCDMOB & 0b11000000) 	// if MOB already in use
     32a:	90 91 ef 00 	lds	r25, 0x00EF
     32e:	90 7c       	andi	r25, 0xC0	; 192
     330:	09 f0       	breq	.+2      	; 0x334 <prepare_rx+0x64>
     332:	40 c0       	rjmp	.+128    	; 0x3b4 <prepare_rx+0xe4>
		return TRUE;			// no vacancy ...
	CANSTMOB = 0x00;    	// cancel pending operation 
     334:	10 92 ee 00 	sts	0x00EE, r1
	CANCDMOB = 0x00;		
     338:	ef ee       	ldi	r30, 0xEF	; 239
     33a:	f0 e0       	ldi	r31, 0x00	; 0
     33c:	10 82       	st	Z, r1
	CANHPMOB = 0x00;		// enable direct mob indexing, see doc
     33e:	10 92 ec 00 	sts	0x00EC, r1
	CANIDT1=id >>3;
     342:	9b 01       	movw	r18, r22
     344:	36 95       	lsr	r19
     346:	27 95       	ror	r18
     348:	36 95       	lsr	r19
     34a:	27 95       	ror	r18
     34c:	36 95       	lsr	r19
     34e:	27 95       	ror	r18
     350:	20 93 f3 00 	sts	0x00F3, r18
	CANIDT2=id <<5;
     354:	62 95       	swap	r22
     356:	66 0f       	add	r22, r22
     358:	60 7e       	andi	r22, 0xE0	; 224
     35a:	60 93 f2 00 	sts	0x00F2, r22
	CANIDM1=idmask >>3;
     35e:	9a 01       	movw	r18, r20
     360:	36 95       	lsr	r19
     362:	27 95       	ror	r18
     364:	36 95       	lsr	r19
     366:	27 95       	ror	r18
     368:	36 95       	lsr	r19
     36a:	27 95       	ror	r18
     36c:	20 93 f7 00 	sts	0x00F7, r18
	CANIDM2=idmask <<5;
     370:	42 95       	swap	r20
     372:	44 0f       	add	r20, r20
     374:	40 7e       	andi	r20, 0xE0	; 224
     376:	40 93 f6 00 	sts	0x00F6, r20
	CANIDM3=0;
     37a:	10 92 f5 00 	sts	0x00F5, r1
	CANIDM4=0;
     37e:	10 92 f4 00 	sts	0x00F4, r1
	CANCDMOB=0x80; // enable RX
     382:	90 e8       	ldi	r25, 0x80	; 128
     384:	90 83       	st	Z, r25
	unsigned mask=1<<mob;
     386:	21 e0       	ldi	r18, 0x01	; 1
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	a9 01       	movw	r20, r18
     38c:	02 c0       	rjmp	.+4      	; 0x392 <prepare_rx+0xc2>
     38e:	44 0f       	add	r20, r20
     390:	55 1f       	adc	r21, r21
     392:	8a 95       	dec	r24
     394:	e2 f7       	brpl	.-8      	; 0x38e <prepare_rx+0xbe>
     396:	ca 01       	movw	r24, r20
	CANIE2 |=  mask;
     398:	ee ed       	ldi	r30, 0xDE	; 222
     39a:	f0 e0       	ldi	r31, 0x00	; 0
     39c:	20 81       	ld	r18, Z
     39e:	82 2b       	or	r24, r18
     3a0:	80 83       	st	Z, r24
	CANIE1 |= (mask>>8);
     3a2:	ef ed       	ldi	r30, 0xDF	; 223
     3a4:	f0 e0       	ldi	r31, 0x00	; 0
     3a6:	80 81       	ld	r24, Z
     3a8:	89 2b       	or	r24, r25
     3aa:	80 83       	st	Z, r24
	return FALSE;
     3ac:	80 e0       	ldi	r24, 0x00	; 0
     3ae:	08 95       	ret
	}

BOOL prepare_rx( char mob, unsigned id, unsigned idmask, CAN_cbf callback)
	{
	if( mob >= 15) 				// illegal MOB number
		return TRUE;
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	08 95       	ret
		CANIE2 &=  ~mask;
		CANIE1 &= ~(mask>>8);
		return FALSE;
		}
	if( CANCDMOB & 0b11000000) 	// if MOB already in use
		return TRUE;			// no vacancy ...
     3b4:	81 e0       	ldi	r24, 0x01	; 1
	CANCDMOB=0x80; // enable RX
	unsigned mask=1<<mob;
	CANIE2 |=  mask;
	CANIE1 |= (mask>>8);
	return FALSE;
	}
     3b6:	08 95       	ret

000003b8 <can_init>:

void can_init( void)
	{
     3b8:	cf 93       	push	r28
     3ba:	df 93       	push	r29
	unsigned mob;
//! \bug different baud rate support not implemented yet 
#if F_CPU == 8000000
	//Old implementation
	CANBT1=0x06;	// 8MHz, 100kbit/s
     3bc:	86 e0       	ldi	r24, 0x06	; 6
     3be:	80 93 e2 00 	sts	0x00E2, r24
	CANBT2=0x0c;
     3c2:	8c e0       	ldi	r24, 0x0C	; 12
     3c4:	80 93 e3 00 	sts	0x00E3, r24
	CANBT3=0x5a;
     3c8:	8a e5       	ldi	r24, 0x5A	; 90
     3ca:	80 93 e4 00 	sts	0x00E4, r24
     3ce:	80 e0       	ldi	r24, 0x00	; 0
	CANBT2=0x04;
	CANBT3=0x13;
#endif
	for (mob = 0; mob < NO_MOBS; mob++)
		{
		CANPAGE  = (mob << 4);
     3d0:	cd ee       	ldi	r28, 0xED	; 237
     3d2:	d0 e0       	ldi	r29, 0x00	; 0
		CANSTMOB = 0;
     3d4:	ae ee       	ldi	r26, 0xEE	; 238
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
		CANCDMOB = 0;
     3d8:	ef ee       	ldi	r30, 0xEF	; 239
     3da:	f0 e0       	ldi	r31, 0x00	; 0
	CANBT2=0x04;
	CANBT3=0x13;
#endif
	for (mob = 0; mob < NO_MOBS; mob++)
		{
		CANPAGE  = (mob << 4);
     3dc:	98 2f       	mov	r25, r24
     3de:	92 95       	swap	r25
     3e0:	90 7f       	andi	r25, 0xF0	; 240
     3e2:	98 83       	st	Y, r25
		CANSTMOB = 0;
     3e4:	1c 92       	st	X, r1
		CANCDMOB = 0;
     3e6:	10 82       	st	Z, r1
     3e8:	8f 5f       	subi	r24, 0xFF	; 255
#else
	CANBT1=0x26;	// 16 MHz, 100kbit/s
	CANBT2=0x04;
	CANBT3=0x13;
#endif
	for (mob = 0; mob < NO_MOBS; mob++)
     3ea:	8f 30       	cpi	r24, 0x0F	; 15
     3ec:	b9 f7       	brne	.-18     	; 0x3dc <can_init+0x24>
		{
		CANPAGE  = (mob << 4);
		CANSTMOB = 0;
		CANCDMOB = 0;
		}
	CANGCON |= 0x02;
     3ee:	e8 ed       	ldi	r30, 0xD8	; 216
     3f0:	f0 e0       	ldi	r31, 0x00	; 0
     3f2:	80 81       	ld	r24, Z
     3f4:	82 60       	ori	r24, 0x02	; 2
     3f6:	80 83       	st	Z, r24
	CANGIE=(1<<ENIT) | (1<< ENRX);
     3f8:	80 ea       	ldi	r24, 0xA0	; 160
     3fa:	80 93 db 00 	sts	0x00DB, r24
}
     3fe:	df 91       	pop	r29
     400:	cf 91       	pop	r28
     402:	08 95       	ret

00000404 <rcvr_spi>:
		if (pv & SOCKINS)			/* INS = H (Socket empty) */
			s |= (STA_NODISK | STA_NOINIT);
		else						/* INS = L (Card inserted) */
			s &= ~STA_NODISK;

		Stat = s;
     404:	f8 94       	cli
     406:	8f ef       	ldi	r24, 0xFF	; 255
     408:	8e bd       	out	0x2e, r24	; 46
     40a:	0d b4       	in	r0, 0x2d	; 45
     40c:	07 fe       	sbrs	r0, 7
     40e:	fd cf       	rjmp	.-6      	; 0x40a <rcvr_spi+0x6>
     410:	78 94       	sei
     412:	8e b5       	in	r24, 0x2e	; 46
     414:	08 95       	ret

00000416 <wait_ready>:
     416:	82 e3       	ldi	r24, 0x32	; 50
     418:	80 93 c2 02 	sts	0x02C2, r24
     41c:	f3 df       	rcall	.-26     	; 0x404 <rcvr_spi>
     41e:	f2 df       	rcall	.-28     	; 0x404 <rcvr_spi>
     420:	8f 3f       	cpi	r24, 0xFF	; 255
     422:	39 f0       	breq	.+14     	; 0x432 <wait_ready+0x1c>
     424:	80 91 c2 02 	lds	r24, 0x02C2
     428:	81 11       	cpse	r24, r1
     42a:	f9 cf       	rjmp	.-14     	; 0x41e <wait_ready+0x8>
     42c:	80 e0       	ldi	r24, 0x00	; 0
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	08 95       	ret
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	08 95       	ret

00000438 <deselect>:
     438:	28 9a       	sbi	0x05, 0	; 5
     43a:	e4 cf       	rjmp	.-56     	; 0x404 <rcvr_spi>
     43c:	08 95       	ret

0000043e <select>:
     43e:	cf 93       	push	r28
     440:	df 93       	push	r29
     442:	28 98       	cbi	0x05, 0	; 5
     444:	e8 df       	rcall	.-48     	; 0x416 <wait_ready>
     446:	ec 01       	movw	r28, r24
     448:	89 2b       	or	r24, r25
     44a:	11 f4       	brne	.+4      	; 0x450 <select+0x12>
     44c:	f5 df       	rcall	.-22     	; 0x438 <deselect>
     44e:	02 c0       	rjmp	.+4      	; 0x454 <select+0x16>
     450:	c1 e0       	ldi	r28, 0x01	; 1
     452:	d0 e0       	ldi	r29, 0x00	; 0
     454:	ce 01       	movw	r24, r28
     456:	df 91       	pop	r29
     458:	cf 91       	pop	r28
     45a:	08 95       	ret

0000045c <rcvr_datablock>:
     45c:	0f 93       	push	r16
     45e:	1f 93       	push	r17
     460:	cf 93       	push	r28
     462:	df 93       	push	r29
     464:	ec 01       	movw	r28, r24
     466:	8b 01       	movw	r16, r22
     468:	84 e1       	ldi	r24, 0x14	; 20
     46a:	80 93 c3 02 	sts	0x02C3, r24
     46e:	ca df       	rcall	.-108    	; 0x404 <rcvr_spi>
     470:	8f 3f       	cpi	r24, 0xFF	; 255
     472:	39 f4       	brne	.+14     	; 0x482 <rcvr_datablock+0x26>
     474:	90 91 c3 02 	lds	r25, 0x02C3
     478:	91 11       	cpse	r25, r1
     47a:	f9 cf       	rjmp	.-14     	; 0x46e <rcvr_datablock+0x12>
     47c:	80 e0       	ldi	r24, 0x00	; 0
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	31 c0       	rjmp	.+98     	; 0x4e4 <rcvr_datablock+0x88>
     482:	8e 3f       	cpi	r24, 0xFE	; 254
     484:	69 f5       	brne	.+90     	; 0x4e0 <rcvr_datablock+0x84>
     486:	ce 01       	movw	r24, r28
     488:	03 96       	adiw	r24, 0x03	; 3
     48a:	2f ef       	ldi	r18, 0xFF	; 255
     48c:	2e bd       	out	0x2e, r18	; 46
     48e:	0d b4       	in	r0, 0x2d	; 45
     490:	07 fe       	sbrs	r0, 7
     492:	fd cf       	rjmp	.-6      	; 0x48e <rcvr_datablock+0x32>
     494:	3e b5       	in	r19, 0x2e	; 46
     496:	fc 01       	movw	r30, r24
     498:	dc 01       	movw	r26, r24
     49a:	13 97       	sbiw	r26, 0x03	; 3
     49c:	3c 93       	st	X, r19
     49e:	2e bd       	out	0x2e, r18	; 46
     4a0:	0d b4       	in	r0, 0x2d	; 45
     4a2:	07 fe       	sbrs	r0, 7
     4a4:	fd cf       	rjmp	.-6      	; 0x4a0 <rcvr_datablock+0x44>
     4a6:	3e b5       	in	r19, 0x2e	; 46
     4a8:	df 01       	movw	r26, r30
     4aa:	12 97       	sbiw	r26, 0x02	; 2
     4ac:	3c 93       	st	X, r19
     4ae:	2e bd       	out	0x2e, r18	; 46
     4b0:	0d b4       	in	r0, 0x2d	; 45
     4b2:	07 fe       	sbrs	r0, 7
     4b4:	fd cf       	rjmp	.-6      	; 0x4b0 <rcvr_datablock+0x54>
     4b6:	3e b5       	in	r19, 0x2e	; 46
     4b8:	df 01       	movw	r26, r30
     4ba:	11 97       	sbiw	r26, 0x01	; 1
     4bc:	3c 93       	st	X, r19
     4be:	2e bd       	out	0x2e, r18	; 46
     4c0:	0d b4       	in	r0, 0x2d	; 45
     4c2:	07 fe       	sbrs	r0, 7
     4c4:	fd cf       	rjmp	.-6      	; 0x4c0 <rcvr_datablock+0x64>
     4c6:	3e b5       	in	r19, 0x2e	; 46
     4c8:	30 83       	st	Z, r19
     4ca:	04 50       	subi	r16, 0x04	; 4
     4cc:	11 09       	sbc	r17, r1
     4ce:	04 96       	adiw	r24, 0x04	; 4
     4d0:	01 15       	cp	r16, r1
     4d2:	11 05       	cpc	r17, r1
     4d4:	d9 f6       	brne	.-74     	; 0x48c <rcvr_datablock+0x30>
     4d6:	96 df       	rcall	.-212    	; 0x404 <rcvr_spi>
     4d8:	95 df       	rcall	.-214    	; 0x404 <rcvr_spi>
     4da:	81 e0       	ldi	r24, 0x01	; 1
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	02 c0       	rjmp	.+4      	; 0x4e4 <rcvr_datablock+0x88>
     4e0:	80 e0       	ldi	r24, 0x00	; 0
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	df 91       	pop	r29
     4e6:	cf 91       	pop	r28
     4e8:	1f 91       	pop	r17
     4ea:	0f 91       	pop	r16
     4ec:	08 95       	ret

000004ee <xmit_datablock>:
     4ee:	1f 93       	push	r17
     4f0:	cf 93       	push	r28
     4f2:	df 93       	push	r29
     4f4:	ec 01       	movw	r28, r24
     4f6:	16 2f       	mov	r17, r22
     4f8:	8e df       	rcall	.-228    	; 0x416 <wait_ready>
     4fa:	00 97       	sbiw	r24, 0x00	; 0
     4fc:	09 f4       	brne	.+2      	; 0x500 <xmit_datablock+0x12>
     4fe:	38 c0       	rjmp	.+112    	; 0x570 <xmit_datablock+0x82>
     500:	f8 94       	cli
     502:	1e bd       	out	0x2e, r17	; 46
     504:	0d b4       	in	r0, 0x2d	; 45
     506:	07 fe       	sbrs	r0, 7
     508:	fd cf       	rjmp	.-6      	; 0x504 <xmit_datablock+0x16>
     50a:	78 94       	sei
     50c:	1d 3f       	cpi	r17, 0xFD	; 253
     50e:	71 f1       	breq	.+92     	; 0x56c <xmit_datablock+0x7e>
     510:	9e 01       	movw	r18, r28
     512:	3e 5f       	subi	r19, 0xFE	; 254
     514:	f8 94       	cli
     516:	88 81       	ld	r24, Y
     518:	8e bd       	out	0x2e, r24	; 46
     51a:	0d b4       	in	r0, 0x2d	; 45
     51c:	07 fe       	sbrs	r0, 7
     51e:	fd cf       	rjmp	.-6      	; 0x51a <xmit_datablock+0x2c>
     520:	78 94       	sei
     522:	f8 94       	cli
     524:	22 96       	adiw	r28, 0x02	; 2
     526:	fe 01       	movw	r30, r28
     528:	31 97       	sbiw	r30, 0x01	; 1
     52a:	80 81       	ld	r24, Z
     52c:	8e bd       	out	0x2e, r24	; 46
     52e:	0d b4       	in	r0, 0x2d	; 45
     530:	07 fe       	sbrs	r0, 7
     532:	fd cf       	rjmp	.-6      	; 0x52e <xmit_datablock+0x40>
     534:	78 94       	sei
     536:	2c 17       	cp	r18, r28
     538:	3d 07       	cpc	r19, r29
     53a:	61 f7       	brne	.-40     	; 0x514 <xmit_datablock+0x26>
     53c:	f8 94       	cli
     53e:	8f ef       	ldi	r24, 0xFF	; 255
     540:	8e bd       	out	0x2e, r24	; 46
     542:	0d b4       	in	r0, 0x2d	; 45
     544:	07 fe       	sbrs	r0, 7
     546:	fd cf       	rjmp	.-6      	; 0x542 <xmit_datablock+0x54>
     548:	78 94       	sei
     54a:	f8 94       	cli
     54c:	8f ef       	ldi	r24, 0xFF	; 255
     54e:	8e bd       	out	0x2e, r24	; 46
     550:	0d b4       	in	r0, 0x2d	; 45
     552:	07 fe       	sbrs	r0, 7
     554:	fd cf       	rjmp	.-6      	; 0x550 <xmit_datablock+0x62>
     556:	78 94       	sei
     558:	55 df       	rcall	.-342    	; 0x404 <rcvr_spi>
     55a:	8f 71       	andi	r24, 0x1F	; 31
     55c:	31 e0       	ldi	r19, 0x01	; 1
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	85 30       	cpi	r24, 0x05	; 5
     562:	09 f0       	breq	.+2      	; 0x566 <xmit_datablock+0x78>
     564:	30 e0       	ldi	r19, 0x00	; 0
     566:	83 2f       	mov	r24, r19
     568:	92 2f       	mov	r25, r18
     56a:	02 c0       	rjmp	.+4      	; 0x570 <xmit_datablock+0x82>
     56c:	81 e0       	ldi	r24, 0x01	; 1
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	df 91       	pop	r29
     572:	cf 91       	pop	r28
     574:	1f 91       	pop	r17
     576:	08 95       	ret

00000578 <send_cmd>:
     578:	cf 92       	push	r12
     57a:	df 92       	push	r13
     57c:	ef 92       	push	r14
     57e:	ff 92       	push	r15
     580:	cf 93       	push	r28
     582:	c8 2f       	mov	r28, r24
     584:	6a 01       	movw	r12, r20
     586:	7b 01       	movw	r14, r22
     588:	88 23       	and	r24, r24
     58a:	4c f4       	brge	.+18     	; 0x59e <send_cmd+0x26>
     58c:	40 e0       	ldi	r20, 0x00	; 0
     58e:	50 e0       	ldi	r21, 0x00	; 0
     590:	ba 01       	movw	r22, r20
     592:	87 e3       	ldi	r24, 0x37	; 55
     594:	f1 df       	rcall	.-30     	; 0x578 <send_cmd>
     596:	82 30       	cpi	r24, 0x02	; 2
     598:	08 f0       	brcs	.+2      	; 0x59c <send_cmd+0x24>
     59a:	4b c0       	rjmp	.+150    	; 0x632 <send_cmd+0xba>
     59c:	cf 77       	andi	r28, 0x7F	; 127
     59e:	4c df       	rcall	.-360    	; 0x438 <deselect>
     5a0:	4e df       	rcall	.-356    	; 0x43e <select>
     5a2:	89 2b       	or	r24, r25
     5a4:	09 f4       	brne	.+2      	; 0x5a8 <send_cmd+0x30>
     5a6:	44 c0       	rjmp	.+136    	; 0x630 <send_cmd+0xb8>
     5a8:	f8 94       	cli
     5aa:	8c 2f       	mov	r24, r28
     5ac:	80 64       	ori	r24, 0x40	; 64
     5ae:	8e bd       	out	0x2e, r24	; 46
     5b0:	0d b4       	in	r0, 0x2d	; 45
     5b2:	07 fe       	sbrs	r0, 7
     5b4:	fd cf       	rjmp	.-6      	; 0x5b0 <send_cmd+0x38>
     5b6:	78 94       	sei
     5b8:	f8 94       	cli
     5ba:	8f 2d       	mov	r24, r15
     5bc:	99 27       	eor	r25, r25
     5be:	aa 27       	eor	r26, r26
     5c0:	bb 27       	eor	r27, r27
     5c2:	8e bd       	out	0x2e, r24	; 46
     5c4:	0d b4       	in	r0, 0x2d	; 45
     5c6:	07 fe       	sbrs	r0, 7
     5c8:	fd cf       	rjmp	.-6      	; 0x5c4 <send_cmd+0x4c>
     5ca:	78 94       	sei
     5cc:	f8 94       	cli
     5ce:	c7 01       	movw	r24, r14
     5d0:	aa 27       	eor	r26, r26
     5d2:	bb 27       	eor	r27, r27
     5d4:	8e bd       	out	0x2e, r24	; 46
     5d6:	0d b4       	in	r0, 0x2d	; 45
     5d8:	07 fe       	sbrs	r0, 7
     5da:	fd cf       	rjmp	.-6      	; 0x5d6 <send_cmd+0x5e>
     5dc:	78 94       	sei
     5de:	f8 94       	cli
     5e0:	bb 27       	eor	r27, r27
     5e2:	af 2d       	mov	r26, r15
     5e4:	9e 2d       	mov	r25, r14
     5e6:	8d 2d       	mov	r24, r13
     5e8:	8e bd       	out	0x2e, r24	; 46
     5ea:	0d b4       	in	r0, 0x2d	; 45
     5ec:	07 fe       	sbrs	r0, 7
     5ee:	fd cf       	rjmp	.-6      	; 0x5ea <send_cmd+0x72>
     5f0:	78 94       	sei
     5f2:	f8 94       	cli
     5f4:	ce bc       	out	0x2e, r12	; 46
     5f6:	0d b4       	in	r0, 0x2d	; 45
     5f8:	07 fe       	sbrs	r0, 7
     5fa:	fd cf       	rjmp	.-6      	; 0x5f6 <send_cmd+0x7e>
     5fc:	78 94       	sei
     5fe:	cc 23       	and	r28, r28
     600:	21 f0       	breq	.+8      	; 0x60a <send_cmd+0x92>
     602:	c8 30       	cpi	r28, 0x08	; 8
     604:	21 f4       	brne	.+8      	; 0x60e <send_cmd+0x96>
     606:	87 e8       	ldi	r24, 0x87	; 135
     608:	03 c0       	rjmp	.+6      	; 0x610 <send_cmd+0x98>
     60a:	85 e9       	ldi	r24, 0x95	; 149
     60c:	01 c0       	rjmp	.+2      	; 0x610 <send_cmd+0x98>
     60e:	81 e0       	ldi	r24, 0x01	; 1
     610:	f8 94       	cli
     612:	8e bd       	out	0x2e, r24	; 46
     614:	0d b4       	in	r0, 0x2d	; 45
     616:	07 fe       	sbrs	r0, 7
     618:	fd cf       	rjmp	.-6      	; 0x614 <send_cmd+0x9c>
     61a:	78 94       	sei
     61c:	cc 30       	cpi	r28, 0x0C	; 12
     61e:	09 f4       	brne	.+2      	; 0x622 <send_cmd+0xaa>
     620:	f1 de       	rcall	.-542    	; 0x404 <rcvr_spi>
     622:	ca e0       	ldi	r28, 0x0A	; 10
     624:	ef de       	rcall	.-546    	; 0x404 <rcvr_spi>
     626:	88 23       	and	r24, r24
     628:	24 f4       	brge	.+8      	; 0x632 <send_cmd+0xba>
     62a:	c1 50       	subi	r28, 0x01	; 1
     62c:	d9 f7       	brne	.-10     	; 0x624 <send_cmd+0xac>
     62e:	01 c0       	rjmp	.+2      	; 0x632 <send_cmd+0xba>
     630:	8f ef       	ldi	r24, 0xFF	; 255
     632:	cf 91       	pop	r28
     634:	ff 90       	pop	r15
     636:	ef 90       	pop	r14
     638:	df 90       	pop	r13
     63a:	cf 90       	pop	r12
     63c:	08 95       	ret

0000063e <disk_initialize>:
     63e:	cf 92       	push	r12
     640:	df 92       	push	r13
     642:	ef 92       	push	r14
     644:	ff 92       	push	r15
     646:	0f 93       	push	r16
     648:	1f 93       	push	r17
     64a:	cf 93       	push	r28
     64c:	df 93       	push	r29
     64e:	00 d0       	rcall	.+0      	; 0x650 <disk_initialize+0x12>
     650:	00 d0       	rcall	.+0      	; 0x652 <disk_initialize+0x14>
     652:	cd b7       	in	r28, 0x3d	; 61
     654:	de b7       	in	r29, 0x3e	; 62
     656:	81 11       	cpse	r24, r1
     658:	91 c0       	rjmp	.+290    	; 0x77c <disk_initialize+0x13e>
     65a:	80 91 06 01 	lds	r24, 0x0106
     65e:	81 ff       	sbrs	r24, 1
     660:	03 c0       	rjmp	.+6      	; 0x668 <disk_initialize+0x2a>
     662:	80 91 06 01 	lds	r24, 0x0106
     666:	95 c0       	rjmp	.+298    	; 0x792 <disk_initialize+0x154>
     668:	85 b1       	in	r24, 0x05	; 5
     66a:	80 6c       	ori	r24, 0xC0	; 192
     66c:	85 b9       	out	0x05, r24	; 5
     66e:	82 e5       	ldi	r24, 0x52	; 82
     670:	8c bd       	out	0x2c, r24	; 44
     672:	1a e0       	ldi	r17, 0x0A	; 10
     674:	c7 de       	rcall	.-626    	; 0x404 <rcvr_spi>
     676:	11 50       	subi	r17, 0x01	; 1
     678:	e9 f7       	brne	.-6      	; 0x674 <disk_initialize+0x36>
     67a:	40 e0       	ldi	r20, 0x00	; 0
     67c:	50 e0       	ldi	r21, 0x00	; 0
     67e:	ba 01       	movw	r22, r20
     680:	80 e0       	ldi	r24, 0x00	; 0
     682:	7a df       	rcall	.-268    	; 0x578 <send_cmd>
     684:	81 30       	cpi	r24, 0x01	; 1
     686:	09 f0       	breq	.+2      	; 0x68a <disk_initialize+0x4c>
     688:	80 c0       	rjmp	.+256    	; 0x78a <disk_initialize+0x14c>
     68a:	88 ec       	ldi	r24, 0xC8	; 200
     68c:	80 93 c3 02 	sts	0x02C3, r24
     690:	4a ea       	ldi	r20, 0xAA	; 170
     692:	51 e0       	ldi	r21, 0x01	; 1
     694:	60 e0       	ldi	r22, 0x00	; 0
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	88 e0       	ldi	r24, 0x08	; 8
     69a:	6e df       	rcall	.-292    	; 0x578 <send_cmd>
     69c:	81 30       	cpi	r24, 0x01	; 1
     69e:	09 f0       	breq	.+2      	; 0x6a2 <disk_initialize+0x64>
     6a0:	3b c0       	rjmp	.+118    	; 0x718 <disk_initialize+0xda>
     6a2:	ce 01       	movw	r24, r28
     6a4:	01 96       	adiw	r24, 0x01	; 1
     6a6:	6c 01       	movw	r12, r24
     6a8:	7e 01       	movw	r14, r28
     6aa:	95 e0       	ldi	r25, 0x05	; 5
     6ac:	e9 0e       	add	r14, r25
     6ae:	f1 1c       	adc	r15, r1
     6b0:	86 01       	movw	r16, r12
     6b2:	a8 de       	rcall	.-688    	; 0x404 <rcvr_spi>
     6b4:	f8 01       	movw	r30, r16
     6b6:	81 93       	st	Z+, r24
     6b8:	8f 01       	movw	r16, r30
     6ba:	ee 15       	cp	r30, r14
     6bc:	ff 05       	cpc	r31, r15
     6be:	c9 f7       	brne	.-14     	; 0x6b2 <disk_initialize+0x74>
     6c0:	8b 81       	ldd	r24, Y+3	; 0x03
     6c2:	81 30       	cpi	r24, 0x01	; 1
     6c4:	09 f0       	breq	.+2      	; 0x6c8 <disk_initialize+0x8a>
     6c6:	61 c0       	rjmp	.+194    	; 0x78a <disk_initialize+0x14c>
     6c8:	8c 81       	ldd	r24, Y+4	; 0x04
     6ca:	8a 3a       	cpi	r24, 0xAA	; 170
     6cc:	09 f0       	breq	.+2      	; 0x6d0 <disk_initialize+0x92>
     6ce:	5d c0       	rjmp	.+186    	; 0x78a <disk_initialize+0x14c>
     6d0:	80 91 c3 02 	lds	r24, 0x02C3
     6d4:	88 23       	and	r24, r24
     6d6:	41 f0       	breq	.+16     	; 0x6e8 <disk_initialize+0xaa>
     6d8:	40 e0       	ldi	r20, 0x00	; 0
     6da:	50 e0       	ldi	r21, 0x00	; 0
     6dc:	60 e0       	ldi	r22, 0x00	; 0
     6de:	70 e4       	ldi	r23, 0x40	; 64
     6e0:	89 ea       	ldi	r24, 0xA9	; 169
     6e2:	4a df       	rcall	.-364    	; 0x578 <send_cmd>
     6e4:	81 11       	cpse	r24, r1
     6e6:	f4 cf       	rjmp	.-24     	; 0x6d0 <disk_initialize+0x92>
     6e8:	80 91 c3 02 	lds	r24, 0x02C3
     6ec:	88 23       	and	r24, r24
     6ee:	09 f4       	brne	.+2      	; 0x6f2 <disk_initialize+0xb4>
     6f0:	4c c0       	rjmp	.+152    	; 0x78a <disk_initialize+0x14c>
     6f2:	40 e0       	ldi	r20, 0x00	; 0
     6f4:	50 e0       	ldi	r21, 0x00	; 0
     6f6:	ba 01       	movw	r22, r20
     6f8:	8a e3       	ldi	r24, 0x3A	; 58
     6fa:	3e df       	rcall	.-388    	; 0x578 <send_cmd>
     6fc:	81 11       	cpse	r24, r1
     6fe:	45 c0       	rjmp	.+138    	; 0x78a <disk_initialize+0x14c>
     700:	81 de       	rcall	.-766    	; 0x404 <rcvr_spi>
     702:	f6 01       	movw	r30, r12
     704:	81 93       	st	Z+, r24
     706:	6f 01       	movw	r12, r30
     708:	ee 15       	cp	r30, r14
     70a:	ff 05       	cpc	r31, r15
     70c:	c9 f7       	brne	.-14     	; 0x700 <disk_initialize+0xc2>
     70e:	89 81       	ldd	r24, Y+1	; 0x01
     710:	86 fd       	sbrc	r24, 6
     712:	36 c0       	rjmp	.+108    	; 0x780 <disk_initialize+0x142>
     714:	84 e0       	ldi	r24, 0x04	; 4
     716:	35 c0       	rjmp	.+106    	; 0x782 <disk_initialize+0x144>
     718:	40 e0       	ldi	r20, 0x00	; 0
     71a:	50 e0       	ldi	r21, 0x00	; 0
     71c:	ba 01       	movw	r22, r20
     71e:	89 ea       	ldi	r24, 0xA9	; 169
     720:	2b df       	rcall	.-426    	; 0x578 <send_cmd>
     722:	82 30       	cpi	r24, 0x02	; 2
     724:	18 f0       	brcs	.+6      	; 0x72c <disk_initialize+0xee>
     726:	01 e0       	ldi	r16, 0x01	; 1
     728:	11 e0       	ldi	r17, 0x01	; 1
     72a:	02 c0       	rjmp	.+4      	; 0x730 <disk_initialize+0xf2>
     72c:	02 e0       	ldi	r16, 0x02	; 2
     72e:	19 ea       	ldi	r17, 0xA9	; 169
     730:	90 91 c3 02 	lds	r25, 0x02C3
     734:	99 23       	and	r25, r25
     736:	39 f0       	breq	.+14     	; 0x746 <disk_initialize+0x108>
     738:	40 e0       	ldi	r20, 0x00	; 0
     73a:	50 e0       	ldi	r21, 0x00	; 0
     73c:	ba 01       	movw	r22, r20
     73e:	81 2f       	mov	r24, r17
     740:	1b df       	rcall	.-458    	; 0x578 <send_cmd>
     742:	81 11       	cpse	r24, r1
     744:	f5 cf       	rjmp	.-22     	; 0x730 <disk_initialize+0xf2>
     746:	80 91 c3 02 	lds	r24, 0x02C3
     74a:	88 23       	and	r24, r24
     74c:	f1 f0       	breq	.+60     	; 0x78a <disk_initialize+0x14c>
     74e:	40 e0       	ldi	r20, 0x00	; 0
     750:	52 e0       	ldi	r21, 0x02	; 2
     752:	60 e0       	ldi	r22, 0x00	; 0
     754:	70 e0       	ldi	r23, 0x00	; 0
     756:	80 e1       	ldi	r24, 0x10	; 16
     758:	0f df       	rcall	.-482    	; 0x578 <send_cmd>
     75a:	81 11       	cpse	r24, r1
     75c:	16 c0       	rjmp	.+44     	; 0x78a <disk_initialize+0x14c>
     75e:	00 93 c1 02 	sts	0x02C1, r16
     762:	6a de       	rcall	.-812    	; 0x438 <deselect>
     764:	00 23       	and	r16, r16
     766:	39 f0       	breq	.+14     	; 0x776 <disk_initialize+0x138>
     768:	80 91 06 01 	lds	r24, 0x0106
     76c:	8e 7f       	andi	r24, 0xFE	; 254
     76e:	80 93 06 01 	sts	0x0106, r24
     772:	80 e5       	ldi	r24, 0x50	; 80
     774:	8c bd       	out	0x2c, r24	; 44
     776:	80 91 06 01 	lds	r24, 0x0106
     77a:	0b c0       	rjmp	.+22     	; 0x792 <disk_initialize+0x154>
     77c:	81 e0       	ldi	r24, 0x01	; 1
     77e:	09 c0       	rjmp	.+18     	; 0x792 <disk_initialize+0x154>
     780:	8c e0       	ldi	r24, 0x0C	; 12
     782:	80 93 c1 02 	sts	0x02C1, r24
     786:	58 de       	rcall	.-848    	; 0x438 <deselect>
     788:	ef cf       	rjmp	.-34     	; 0x768 <disk_initialize+0x12a>
     78a:	10 92 c1 02 	sts	0x02C1, r1
     78e:	54 de       	rcall	.-856    	; 0x438 <deselect>
     790:	f2 cf       	rjmp	.-28     	; 0x776 <disk_initialize+0x138>
     792:	0f 90       	pop	r0
     794:	0f 90       	pop	r0
     796:	0f 90       	pop	r0
     798:	0f 90       	pop	r0
     79a:	df 91       	pop	r29
     79c:	cf 91       	pop	r28
     79e:	1f 91       	pop	r17
     7a0:	0f 91       	pop	r16
     7a2:	ff 90       	pop	r15
     7a4:	ef 90       	pop	r14
     7a6:	df 90       	pop	r13
     7a8:	cf 90       	pop	r12
     7aa:	08 95       	ret

000007ac <disk_status>:
     7ac:	81 11       	cpse	r24, r1
     7ae:	03 c0       	rjmp	.+6      	; 0x7b6 <disk_status+0xa>
     7b0:	80 91 06 01 	lds	r24, 0x0106
     7b4:	08 95       	ret
     7b6:	81 e0       	ldi	r24, 0x01	; 1
     7b8:	08 95       	ret

000007ba <disk_read>:
     7ba:	0f 93       	push	r16
     7bc:	cf 93       	push	r28
     7be:	df 93       	push	r29
     7c0:	eb 01       	movw	r28, r22
     7c2:	81 11       	cpse	r24, r1
     7c4:	3e c0       	rjmp	.+124    	; 0x842 <disk_read+0x88>
     7c6:	00 23       	and	r16, r16
     7c8:	09 f4       	brne	.+2      	; 0x7cc <disk_read+0x12>
     7ca:	3d c0       	rjmp	.+122    	; 0x846 <disk_read+0x8c>
     7cc:	80 91 06 01 	lds	r24, 0x0106
     7d0:	80 fd       	sbrc	r24, 0
     7d2:	3b c0       	rjmp	.+118    	; 0x84a <disk_read+0x90>
     7d4:	80 91 c1 02 	lds	r24, 0x02C1
     7d8:	83 fd       	sbrc	r24, 3
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <disk_read+0x34>
     7dc:	01 2e       	mov	r0, r17
     7de:	19 e0       	ldi	r17, 0x09	; 9
     7e0:	22 0f       	add	r18, r18
     7e2:	33 1f       	adc	r19, r19
     7e4:	44 1f       	adc	r20, r20
     7e6:	55 1f       	adc	r21, r21
     7e8:	1a 95       	dec	r17
     7ea:	d1 f7       	brne	.-12     	; 0x7e0 <disk_read+0x26>
     7ec:	10 2d       	mov	r17, r0
     7ee:	01 30       	cpi	r16, 0x01	; 1
     7f0:	71 f4       	brne	.+28     	; 0x80e <disk_read+0x54>
     7f2:	ba 01       	movw	r22, r20
     7f4:	a9 01       	movw	r20, r18
     7f6:	81 e1       	ldi	r24, 0x11	; 17
     7f8:	bf de       	rcall	.-642    	; 0x578 <send_cmd>
     7fa:	81 11       	cpse	r24, r1
     7fc:	1c c0       	rjmp	.+56     	; 0x836 <disk_read+0x7c>
     7fe:	60 e0       	ldi	r22, 0x00	; 0
     800:	72 e0       	ldi	r23, 0x02	; 2
     802:	ce 01       	movw	r24, r28
     804:	2b de       	rcall	.-938    	; 0x45c <rcvr_datablock>
     806:	89 2b       	or	r24, r25
     808:	b1 f0       	breq	.+44     	; 0x836 <disk_read+0x7c>
     80a:	00 e0       	ldi	r16, 0x00	; 0
     80c:	14 c0       	rjmp	.+40     	; 0x836 <disk_read+0x7c>
     80e:	ba 01       	movw	r22, r20
     810:	a9 01       	movw	r20, r18
     812:	82 e1       	ldi	r24, 0x12	; 18
     814:	b1 de       	rcall	.-670    	; 0x578 <send_cmd>
     816:	81 11       	cpse	r24, r1
     818:	0e c0       	rjmp	.+28     	; 0x836 <disk_read+0x7c>
     81a:	60 e0       	ldi	r22, 0x00	; 0
     81c:	72 e0       	ldi	r23, 0x02	; 2
     81e:	ce 01       	movw	r24, r28
     820:	1d de       	rcall	.-966    	; 0x45c <rcvr_datablock>
     822:	89 2b       	or	r24, r25
     824:	19 f0       	breq	.+6      	; 0x82c <disk_read+0x72>
     826:	de 5f       	subi	r29, 0xFE	; 254
     828:	01 50       	subi	r16, 0x01	; 1
     82a:	b9 f7       	brne	.-18     	; 0x81a <disk_read+0x60>
     82c:	40 e0       	ldi	r20, 0x00	; 0
     82e:	50 e0       	ldi	r21, 0x00	; 0
     830:	ba 01       	movw	r22, r20
     832:	8c e0       	ldi	r24, 0x0C	; 12
     834:	a1 de       	rcall	.-702    	; 0x578 <send_cmd>
     836:	00 de       	rcall	.-1024   	; 0x438 <deselect>
     838:	81 e0       	ldi	r24, 0x01	; 1
     83a:	01 11       	cpse	r16, r1
     83c:	07 c0       	rjmp	.+14     	; 0x84c <disk_read+0x92>
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	05 c0       	rjmp	.+10     	; 0x84c <disk_read+0x92>
     842:	84 e0       	ldi	r24, 0x04	; 4
     844:	03 c0       	rjmp	.+6      	; 0x84c <disk_read+0x92>
     846:	84 e0       	ldi	r24, 0x04	; 4
     848:	01 c0       	rjmp	.+2      	; 0x84c <disk_read+0x92>
     84a:	83 e0       	ldi	r24, 0x03	; 3
     84c:	df 91       	pop	r29
     84e:	cf 91       	pop	r28
     850:	0f 91       	pop	r16
     852:	08 95       	ret

00000854 <disk_write>:
     854:	cf 92       	push	r12
     856:	df 92       	push	r13
     858:	ef 92       	push	r14
     85a:	ff 92       	push	r15
     85c:	0f 93       	push	r16
     85e:	cf 93       	push	r28
     860:	df 93       	push	r29
     862:	eb 01       	movw	r28, r22
     864:	69 01       	movw	r12, r18
     866:	7a 01       	movw	r14, r20
     868:	81 11       	cpse	r24, r1
     86a:	4a c0       	rjmp	.+148    	; 0x900 <disk_write+0xac>
     86c:	00 23       	and	r16, r16
     86e:	09 f4       	brne	.+2      	; 0x872 <disk_write+0x1e>
     870:	49 c0       	rjmp	.+146    	; 0x904 <disk_write+0xb0>
     872:	80 91 06 01 	lds	r24, 0x0106
     876:	80 fd       	sbrc	r24, 0
     878:	47 c0       	rjmp	.+142    	; 0x908 <disk_write+0xb4>
     87a:	80 91 06 01 	lds	r24, 0x0106
     87e:	82 fd       	sbrc	r24, 2
     880:	45 c0       	rjmp	.+138    	; 0x90c <disk_write+0xb8>
     882:	80 91 c1 02 	lds	r24, 0x02C1
     886:	83 fd       	sbrc	r24, 3
     888:	09 c0       	rjmp	.+18     	; 0x89c <disk_write+0x48>
     88a:	0b 2e       	mov	r0, r27
     88c:	b9 e0       	ldi	r27, 0x09	; 9
     88e:	cc 0c       	add	r12, r12
     890:	dd 1c       	adc	r13, r13
     892:	ee 1c       	adc	r14, r14
     894:	ff 1c       	adc	r15, r15
     896:	ba 95       	dec	r27
     898:	d1 f7       	brne	.-12     	; 0x88e <disk_write+0x3a>
     89a:	b0 2d       	mov	r27, r0
     89c:	01 30       	cpi	r16, 0x01	; 1
     89e:	69 f4       	brne	.+26     	; 0x8ba <disk_write+0x66>
     8a0:	b7 01       	movw	r22, r14
     8a2:	a6 01       	movw	r20, r12
     8a4:	88 e1       	ldi	r24, 0x18	; 24
     8a6:	68 de       	rcall	.-816    	; 0x578 <send_cmd>
     8a8:	81 11       	cpse	r24, r1
     8aa:	24 c0       	rjmp	.+72     	; 0x8f4 <disk_write+0xa0>
     8ac:	6e ef       	ldi	r22, 0xFE	; 254
     8ae:	ce 01       	movw	r24, r28
     8b0:	1e de       	rcall	.-964    	; 0x4ee <xmit_datablock>
     8b2:	89 2b       	or	r24, r25
     8b4:	f9 f0       	breq	.+62     	; 0x8f4 <disk_write+0xa0>
     8b6:	00 e0       	ldi	r16, 0x00	; 0
     8b8:	1d c0       	rjmp	.+58     	; 0x8f4 <disk_write+0xa0>
     8ba:	86 70       	andi	r24, 0x06	; 6
     8bc:	31 f0       	breq	.+12     	; 0x8ca <disk_write+0x76>
     8be:	40 2f       	mov	r20, r16
     8c0:	50 e0       	ldi	r21, 0x00	; 0
     8c2:	60 e0       	ldi	r22, 0x00	; 0
     8c4:	70 e0       	ldi	r23, 0x00	; 0
     8c6:	87 e9       	ldi	r24, 0x97	; 151
     8c8:	57 de       	rcall	.-850    	; 0x578 <send_cmd>
     8ca:	b7 01       	movw	r22, r14
     8cc:	a6 01       	movw	r20, r12
     8ce:	89 e1       	ldi	r24, 0x19	; 25
     8d0:	53 de       	rcall	.-858    	; 0x578 <send_cmd>
     8d2:	81 11       	cpse	r24, r1
     8d4:	0f c0       	rjmp	.+30     	; 0x8f4 <disk_write+0xa0>
     8d6:	6c ef       	ldi	r22, 0xFC	; 252
     8d8:	ce 01       	movw	r24, r28
     8da:	09 de       	rcall	.-1006   	; 0x4ee <xmit_datablock>
     8dc:	89 2b       	or	r24, r25
     8de:	19 f0       	breq	.+6      	; 0x8e6 <disk_write+0x92>
     8e0:	de 5f       	subi	r29, 0xFE	; 254
     8e2:	01 50       	subi	r16, 0x01	; 1
     8e4:	c1 f7       	brne	.-16     	; 0x8d6 <disk_write+0x82>
     8e6:	6d ef       	ldi	r22, 0xFD	; 253
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	00 de       	rcall	.-1024   	; 0x4ee <xmit_datablock>
     8ee:	89 2b       	or	r24, r25
     8f0:	09 f4       	brne	.+2      	; 0x8f4 <disk_write+0xa0>
     8f2:	01 e0       	ldi	r16, 0x01	; 1
     8f4:	a1 dd       	rcall	.-1214   	; 0x438 <deselect>
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	01 11       	cpse	r16, r1
     8fa:	09 c0       	rjmp	.+18     	; 0x90e <disk_write+0xba>
     8fc:	80 e0       	ldi	r24, 0x00	; 0
     8fe:	07 c0       	rjmp	.+14     	; 0x90e <disk_write+0xba>
     900:	84 e0       	ldi	r24, 0x04	; 4
     902:	05 c0       	rjmp	.+10     	; 0x90e <disk_write+0xba>
     904:	84 e0       	ldi	r24, 0x04	; 4
     906:	03 c0       	rjmp	.+6      	; 0x90e <disk_write+0xba>
     908:	83 e0       	ldi	r24, 0x03	; 3
     90a:	01 c0       	rjmp	.+2      	; 0x90e <disk_write+0xba>
     90c:	82 e0       	ldi	r24, 0x02	; 2
     90e:	df 91       	pop	r29
     910:	cf 91       	pop	r28
     912:	0f 91       	pop	r16
     914:	ff 90       	pop	r15
     916:	ef 90       	pop	r14
     918:	df 90       	pop	r13
     91a:	cf 90       	pop	r12
     91c:	08 95       	ret

0000091e <disk_ioctl>:
     91e:	ef 92       	push	r14
     920:	ff 92       	push	r15
     922:	0f 93       	push	r16
     924:	1f 93       	push	r17
     926:	cf 93       	push	r28
     928:	df 93       	push	r29
     92a:	cd b7       	in	r28, 0x3d	; 61
     92c:	de b7       	in	r29, 0x3e	; 62
     92e:	60 97       	sbiw	r28, 0x10	; 16
     930:	0f b6       	in	r0, 0x3f	; 63
     932:	f8 94       	cli
     934:	de bf       	out	0x3e, r29	; 62
     936:	0f be       	out	0x3f, r0	; 63
     938:	cd bf       	out	0x3d, r28	; 61
     93a:	81 11       	cpse	r24, r1
     93c:	80 c1       	rjmp	.+768    	; 0xc3e <disk_ioctl+0x320>
     93e:	64 30       	cpi	r22, 0x04	; 4
     940:	71 f4       	brne	.+28     	; 0x95e <disk_ioctl+0x40>
     942:	fa 01       	movw	r30, r20
     944:	80 81       	ld	r24, Z
     946:	82 30       	cpi	r24, 0x02	; 2
     948:	08 f4       	brcc	.+2      	; 0x94c <disk_ioctl+0x2e>
     94a:	7b c1       	rjmp	.+758    	; 0xc42 <disk_ioctl+0x324>
     94c:	82 30       	cpi	r24, 0x02	; 2
     94e:	11 f0       	breq	.+4      	; 0x954 <disk_ioctl+0x36>
     950:	84 e0       	ldi	r24, 0x04	; 4
     952:	7a c1       	rjmp	.+756    	; 0xc48 <disk_ioctl+0x32a>
     954:	81 e0       	ldi	r24, 0x01	; 1
     956:	fa 01       	movw	r30, r20
     958:	81 83       	std	Z+1, r24	; 0x01
     95a:	80 e0       	ldi	r24, 0x00	; 0
     95c:	75 c1       	rjmp	.+746    	; 0xc48 <disk_ioctl+0x32a>
     95e:	80 91 06 01 	lds	r24, 0x0106
     962:	80 fd       	sbrc	r24, 0
     964:	70 c1       	rjmp	.+736    	; 0xc46 <disk_ioctl+0x328>
     966:	7a 01       	movw	r14, r20
     968:	06 2f       	mov	r16, r22
     96a:	10 e0       	ldi	r17, 0x00	; 0
     96c:	0f 30       	cpi	r16, 0x0F	; 15
     96e:	11 05       	cpc	r17, r1
     970:	08 f0       	brcs	.+2      	; 0x974 <disk_ioctl+0x56>
     972:	4b c1       	rjmp	.+662    	; 0xc0a <disk_ioctl+0x2ec>
     974:	f8 01       	movw	r30, r16
     976:	e6 5b       	subi	r30, 0xB6	; 182
     978:	ff 4f       	sbci	r31, 0xFF	; 255
     97a:	0c 94 1b 1a 	jmp	0x3436	; 0x3436 <__tablejump2__>
     97e:	5f dd       	rcall	.-1346   	; 0x43e <select>
     980:	89 2b       	or	r24, r25
     982:	09 f4       	brne	.+2      	; 0x986 <disk_ioctl+0x68>
     984:	44 c1       	rjmp	.+648    	; 0xc0e <disk_ioctl+0x2f0>
     986:	58 dd       	rcall	.-1360   	; 0x438 <deselect>
     988:	10 e0       	ldi	r17, 0x00	; 0
     98a:	56 c1       	rjmp	.+684    	; 0xc38 <disk_ioctl+0x31a>
     98c:	40 e0       	ldi	r20, 0x00	; 0
     98e:	50 e0       	ldi	r21, 0x00	; 0
     990:	ba 01       	movw	r22, r20
     992:	89 e0       	ldi	r24, 0x09	; 9
     994:	f1 dd       	rcall	.-1054   	; 0x578 <send_cmd>
     996:	81 11       	cpse	r24, r1
     998:	3c c1       	rjmp	.+632    	; 0xc12 <disk_ioctl+0x2f4>
     99a:	60 e1       	ldi	r22, 0x10	; 16
     99c:	70 e0       	ldi	r23, 0x00	; 0
     99e:	ce 01       	movw	r24, r28
     9a0:	01 96       	adiw	r24, 0x01	; 1
     9a2:	5c dd       	rcall	.-1352   	; 0x45c <rcvr_datablock>
     9a4:	89 2b       	or	r24, r25
     9a6:	09 f4       	brne	.+2      	; 0x9aa <disk_ioctl+0x8c>
     9a8:	36 c1       	rjmp	.+620    	; 0xc16 <disk_ioctl+0x2f8>
     9aa:	89 81       	ldd	r24, Y+1	; 0x01
     9ac:	82 95       	swap	r24
     9ae:	86 95       	lsr	r24
     9b0:	86 95       	lsr	r24
     9b2:	83 70       	andi	r24, 0x03	; 3
     9b4:	81 30       	cpi	r24, 0x01	; 1
     9b6:	e9 f4       	brne	.+58     	; 0x9f2 <disk_ioctl+0xd4>
     9b8:	8a 85       	ldd	r24, Y+10	; 0x0a
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	9c 01       	movw	r18, r24
     9be:	2f 5f       	subi	r18, 0xFF	; 255
     9c0:	3f 4f       	sbci	r19, 0xFF	; 255
     9c2:	89 85       	ldd	r24, Y+9	; 0x09
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	98 2f       	mov	r25, r24
     9c8:	88 27       	eor	r24, r24
     9ca:	82 0f       	add	r24, r18
     9cc:	93 1f       	adc	r25, r19
     9ce:	a0 e0       	ldi	r26, 0x00	; 0
     9d0:	b0 e0       	ldi	r27, 0x00	; 0
     9d2:	07 2e       	mov	r0, r23
     9d4:	7a e0       	ldi	r23, 0x0A	; 10
     9d6:	88 0f       	add	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	aa 1f       	adc	r26, r26
     9dc:	bb 1f       	adc	r27, r27
     9de:	7a 95       	dec	r23
     9e0:	d1 f7       	brne	.-12     	; 0x9d6 <disk_ioctl+0xb8>
     9e2:	70 2d       	mov	r23, r0
     9e4:	f7 01       	movw	r30, r14
     9e6:	80 83       	st	Z, r24
     9e8:	91 83       	std	Z+1, r25	; 0x01
     9ea:	a2 83       	std	Z+2, r26	; 0x02
     9ec:	b3 83       	std	Z+3, r27	; 0x03
     9ee:	10 e0       	ldi	r17, 0x00	; 0
     9f0:	23 c1       	rjmp	.+582    	; 0xc38 <disk_ioctl+0x31a>
     9f2:	29 85       	ldd	r18, Y+9	; 0x09
     9f4:	22 95       	swap	r18
     9f6:	26 95       	lsr	r18
     9f8:	26 95       	lsr	r18
     9fa:	23 70       	andi	r18, 0x03	; 3
     9fc:	88 85       	ldd	r24, Y+8	; 0x08
     9fe:	f4 e0       	ldi	r31, 0x04	; 4
     a00:	8f 9f       	mul	r24, r31
     a02:	c0 01       	movw	r24, r0
     a04:	11 24       	eor	r1, r1
     a06:	82 0f       	add	r24, r18
     a08:	91 1d       	adc	r25, r1
     a0a:	9c 01       	movw	r18, r24
     a0c:	2f 5f       	subi	r18, 0xFF	; 255
     a0e:	3f 4f       	sbci	r19, 0xFF	; 255
     a10:	8f 81       	ldd	r24, Y+7	; 0x07
     a12:	83 70       	andi	r24, 0x03	; 3
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	98 2f       	mov	r25, r24
     a18:	88 27       	eor	r24, r24
     a1a:	99 0f       	add	r25, r25
     a1c:	99 0f       	add	r25, r25
     a1e:	82 0f       	add	r24, r18
     a20:	93 1f       	adc	r25, r19
     a22:	a0 e0       	ldi	r26, 0x00	; 0
     a24:	b0 e0       	ldi	r27, 0x00	; 0
     a26:	3e 81       	ldd	r19, Y+6	; 0x06
     a28:	3f 70       	andi	r19, 0x0F	; 15
     a2a:	2b 85       	ldd	r18, Y+11	; 0x0b
     a2c:	22 1f       	adc	r18, r18
     a2e:	22 27       	eor	r18, r18
     a30:	22 1f       	adc	r18, r18
     a32:	32 0f       	add	r19, r18
     a34:	2a 85       	ldd	r18, Y+10	; 0x0a
     a36:	23 70       	andi	r18, 0x03	; 3
     a38:	22 0f       	add	r18, r18
     a3a:	23 0f       	add	r18, r19
     a3c:	27 50       	subi	r18, 0x07	; 7
     a3e:	04 c0       	rjmp	.+8      	; 0xa48 <disk_ioctl+0x12a>
     a40:	88 0f       	add	r24, r24
     a42:	99 1f       	adc	r25, r25
     a44:	aa 1f       	adc	r26, r26
     a46:	bb 1f       	adc	r27, r27
     a48:	2a 95       	dec	r18
     a4a:	d2 f7       	brpl	.-12     	; 0xa40 <disk_ioctl+0x122>
     a4c:	f7 01       	movw	r30, r14
     a4e:	80 83       	st	Z, r24
     a50:	91 83       	std	Z+1, r25	; 0x01
     a52:	a2 83       	std	Z+2, r26	; 0x02
     a54:	b3 83       	std	Z+3, r27	; 0x03
     a56:	10 e0       	ldi	r17, 0x00	; 0
     a58:	ef c0       	rjmp	.+478    	; 0xc38 <disk_ioctl+0x31a>
     a5a:	80 e0       	ldi	r24, 0x00	; 0
     a5c:	92 e0       	ldi	r25, 0x02	; 2
     a5e:	fa 01       	movw	r30, r20
     a60:	91 83       	std	Z+1, r25	; 0x01
     a62:	80 83       	st	Z, r24
     a64:	10 e0       	ldi	r17, 0x00	; 0
     a66:	e8 c0       	rjmp	.+464    	; 0xc38 <disk_ioctl+0x31a>
     a68:	10 91 c1 02 	lds	r17, 0x02C1
     a6c:	12 ff       	sbrs	r17, 2
     a6e:	28 c0       	rjmp	.+80     	; 0xac0 <disk_ioctl+0x1a2>
     a70:	40 e0       	ldi	r20, 0x00	; 0
     a72:	50 e0       	ldi	r21, 0x00	; 0
     a74:	ba 01       	movw	r22, r20
     a76:	8d e8       	ldi	r24, 0x8D	; 141
     a78:	7f dd       	rcall	.-1282   	; 0x578 <send_cmd>
     a7a:	81 11       	cpse	r24, r1
     a7c:	ce c0       	rjmp	.+412    	; 0xc1a <disk_ioctl+0x2fc>
     a7e:	c2 dc       	rcall	.-1660   	; 0x404 <rcvr_spi>
     a80:	60 e1       	ldi	r22, 0x10	; 16
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	ce 01       	movw	r24, r28
     a86:	01 96       	adiw	r24, 0x01	; 1
     a88:	e9 dc       	rcall	.-1582   	; 0x45c <rcvr_datablock>
     a8a:	89 2b       	or	r24, r25
     a8c:	09 f4       	brne	.+2      	; 0xa90 <disk_ioctl+0x172>
     a8e:	c7 c0       	rjmp	.+398    	; 0xc1e <disk_ioctl+0x300>
     a90:	10 e3       	ldi	r17, 0x30	; 48
     a92:	b8 dc       	rcall	.-1680   	; 0x404 <rcvr_spi>
     a94:	11 50       	subi	r17, 0x01	; 1
     a96:	e9 f7       	brne	.-6      	; 0xa92 <disk_ioctl+0x174>
     a98:	2b 85       	ldd	r18, Y+11	; 0x0b
     a9a:	22 95       	swap	r18
     a9c:	2f 70       	andi	r18, 0x0F	; 15
     a9e:	80 e1       	ldi	r24, 0x10	; 16
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	a0 e0       	ldi	r26, 0x00	; 0
     aa4:	b0 e0       	ldi	r27, 0x00	; 0
     aa6:	04 c0       	rjmp	.+8      	; 0xab0 <disk_ioctl+0x192>
     aa8:	88 0f       	add	r24, r24
     aaa:	99 1f       	adc	r25, r25
     aac:	aa 1f       	adc	r26, r26
     aae:	bb 1f       	adc	r27, r27
     ab0:	2a 95       	dec	r18
     ab2:	d2 f7       	brpl	.-12     	; 0xaa8 <disk_ioctl+0x18a>
     ab4:	f7 01       	movw	r30, r14
     ab6:	80 83       	st	Z, r24
     ab8:	91 83       	std	Z+1, r25	; 0x01
     aba:	a2 83       	std	Z+2, r26	; 0x02
     abc:	b3 83       	std	Z+3, r27	; 0x03
     abe:	bc c0       	rjmp	.+376    	; 0xc38 <disk_ioctl+0x31a>
     ac0:	40 e0       	ldi	r20, 0x00	; 0
     ac2:	50 e0       	ldi	r21, 0x00	; 0
     ac4:	ba 01       	movw	r22, r20
     ac6:	89 e0       	ldi	r24, 0x09	; 9
     ac8:	57 dd       	rcall	.-1362   	; 0x578 <send_cmd>
     aca:	81 11       	cpse	r24, r1
     acc:	aa c0       	rjmp	.+340    	; 0xc22 <disk_ioctl+0x304>
     ace:	60 e1       	ldi	r22, 0x10	; 16
     ad0:	70 e0       	ldi	r23, 0x00	; 0
     ad2:	ce 01       	movw	r24, r28
     ad4:	01 96       	adiw	r24, 0x01	; 1
     ad6:	c2 dc       	rcall	.-1660   	; 0x45c <rcvr_datablock>
     ad8:	89 2b       	or	r24, r25
     ada:	09 f4       	brne	.+2      	; 0xade <disk_ioctl+0x1c0>
     adc:	a4 c0       	rjmp	.+328    	; 0xc26 <disk_ioctl+0x308>
     ade:	11 ff       	sbrs	r17, 1
     ae0:	20 c0       	rjmp	.+64     	; 0xb22 <disk_ioctl+0x204>
     ae2:	8c 85       	ldd	r24, Y+12	; 0x0c
     ae4:	88 1f       	adc	r24, r24
     ae6:	88 27       	eor	r24, r24
     ae8:	88 1f       	adc	r24, r24
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	01 96       	adiw	r24, 0x01	; 1
     aee:	2b 85       	ldd	r18, Y+11	; 0x0b
     af0:	2f 73       	andi	r18, 0x3F	; 63
     af2:	82 0f       	add	r24, r18
     af4:	91 1d       	adc	r25, r1
     af6:	82 0f       	add	r24, r18
     af8:	91 1d       	adc	r25, r1
     afa:	2e 85       	ldd	r18, Y+14	; 0x0e
     afc:	22 95       	swap	r18
     afe:	26 95       	lsr	r18
     b00:	26 95       	lsr	r18
     b02:	23 70       	andi	r18, 0x03	; 3
     b04:	21 50       	subi	r18, 0x01	; 1
     b06:	02 c0       	rjmp	.+4      	; 0xb0c <disk_ioctl+0x1ee>
     b08:	88 0f       	add	r24, r24
     b0a:	99 1f       	adc	r25, r25
     b0c:	2a 95       	dec	r18
     b0e:	e2 f7       	brpl	.-8      	; 0xb08 <disk_ioctl+0x1ea>
     b10:	a0 e0       	ldi	r26, 0x00	; 0
     b12:	b0 e0       	ldi	r27, 0x00	; 0
     b14:	f7 01       	movw	r30, r14
     b16:	80 83       	st	Z, r24
     b18:	91 83       	std	Z+1, r25	; 0x01
     b1a:	a2 83       	std	Z+2, r26	; 0x02
     b1c:	b3 83       	std	Z+3, r27	; 0x03
     b1e:	10 e0       	ldi	r17, 0x00	; 0
     b20:	8b c0       	rjmp	.+278    	; 0xc38 <disk_ioctl+0x31a>
     b22:	8c 85       	ldd	r24, Y+12	; 0x0c
     b24:	28 2f       	mov	r18, r24
     b26:	23 70       	andi	r18, 0x03	; 3
     b28:	82 95       	swap	r24
     b2a:	86 95       	lsr	r24
     b2c:	87 70       	andi	r24, 0x07	; 7
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	f8 e0       	ldi	r31, 0x08	; 8
     b32:	2f 9f       	mul	r18, r31
     b34:	80 0d       	add	r24, r0
     b36:	91 1d       	adc	r25, r1
     b38:	11 24       	eor	r1, r1
     b3a:	01 96       	adiw	r24, 0x01	; 1
     b3c:	2b 85       	ldd	r18, Y+11	; 0x0b
     b3e:	2c 77       	andi	r18, 0x7C	; 124
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	35 95       	asr	r19
     b44:	27 95       	ror	r18
     b46:	35 95       	asr	r19
     b48:	27 95       	ror	r18
     b4a:	2f 5f       	subi	r18, 0xFF	; 255
     b4c:	3f 4f       	sbci	r19, 0xFF	; 255
     b4e:	82 9f       	mul	r24, r18
     b50:	a0 01       	movw	r20, r0
     b52:	83 9f       	mul	r24, r19
     b54:	50 0d       	add	r21, r0
     b56:	92 9f       	mul	r25, r18
     b58:	50 0d       	add	r21, r0
     b5a:	11 24       	eor	r1, r1
     b5c:	ca 01       	movw	r24, r20
     b5e:	a0 e0       	ldi	r26, 0x00	; 0
     b60:	b0 e0       	ldi	r27, 0x00	; 0
     b62:	f7 01       	movw	r30, r14
     b64:	80 83       	st	Z, r24
     b66:	91 83       	std	Z+1, r25	; 0x01
     b68:	a2 83       	std	Z+2, r26	; 0x02
     b6a:	b3 83       	std	Z+3, r27	; 0x03
     b6c:	10 e0       	ldi	r17, 0x00	; 0
     b6e:	64 c0       	rjmp	.+200    	; 0xc38 <disk_ioctl+0x31a>
     b70:	80 91 c1 02 	lds	r24, 0x02C1
     b74:	fa 01       	movw	r30, r20
     b76:	80 83       	st	Z, r24
     b78:	10 e0       	ldi	r17, 0x00	; 0
     b7a:	5e c0       	rjmp	.+188    	; 0xc38 <disk_ioctl+0x31a>
     b7c:	40 e0       	ldi	r20, 0x00	; 0
     b7e:	50 e0       	ldi	r21, 0x00	; 0
     b80:	ba 01       	movw	r22, r20
     b82:	89 e0       	ldi	r24, 0x09	; 9
     b84:	f9 dc       	rcall	.-1550   	; 0x578 <send_cmd>
     b86:	81 11       	cpse	r24, r1
     b88:	50 c0       	rjmp	.+160    	; 0xc2a <disk_ioctl+0x30c>
     b8a:	60 e1       	ldi	r22, 0x10	; 16
     b8c:	70 e0       	ldi	r23, 0x00	; 0
     b8e:	c7 01       	movw	r24, r14
     b90:	65 dc       	rcall	.-1846   	; 0x45c <rcvr_datablock>
     b92:	11 e0       	ldi	r17, 0x01	; 1
     b94:	89 2b       	or	r24, r25
     b96:	09 f4       	brne	.+2      	; 0xb9a <disk_ioctl+0x27c>
     b98:	4f c0       	rjmp	.+158    	; 0xc38 <disk_ioctl+0x31a>
     b9a:	10 e0       	ldi	r17, 0x00	; 0
     b9c:	4d c0       	rjmp	.+154    	; 0xc38 <disk_ioctl+0x31a>
     b9e:	40 e0       	ldi	r20, 0x00	; 0
     ba0:	50 e0       	ldi	r21, 0x00	; 0
     ba2:	ba 01       	movw	r22, r20
     ba4:	8a e0       	ldi	r24, 0x0A	; 10
     ba6:	e8 dc       	rcall	.-1584   	; 0x578 <send_cmd>
     ba8:	81 11       	cpse	r24, r1
     baa:	41 c0       	rjmp	.+130    	; 0xc2e <disk_ioctl+0x310>
     bac:	60 e1       	ldi	r22, 0x10	; 16
     bae:	70 e0       	ldi	r23, 0x00	; 0
     bb0:	c7 01       	movw	r24, r14
     bb2:	54 dc       	rcall	.-1880   	; 0x45c <rcvr_datablock>
     bb4:	11 e0       	ldi	r17, 0x01	; 1
     bb6:	89 2b       	or	r24, r25
     bb8:	09 f4       	brne	.+2      	; 0xbbc <disk_ioctl+0x29e>
     bba:	3e c0       	rjmp	.+124    	; 0xc38 <disk_ioctl+0x31a>
     bbc:	10 e0       	ldi	r17, 0x00	; 0
     bbe:	3c c0       	rjmp	.+120    	; 0xc38 <disk_ioctl+0x31a>
     bc0:	40 e0       	ldi	r20, 0x00	; 0
     bc2:	50 e0       	ldi	r21, 0x00	; 0
     bc4:	ba 01       	movw	r22, r20
     bc6:	8a e3       	ldi	r24, 0x3A	; 58
     bc8:	d7 dc       	rcall	.-1618   	; 0x578 <send_cmd>
     bca:	81 11       	cpse	r24, r1
     bcc:	32 c0       	rjmp	.+100    	; 0xc32 <disk_ioctl+0x314>
     bce:	87 01       	movw	r16, r14
     bd0:	f4 e0       	ldi	r31, 0x04	; 4
     bd2:	ef 0e       	add	r14, r31
     bd4:	f1 1c       	adc	r15, r1
     bd6:	16 dc       	rcall	.-2004   	; 0x404 <rcvr_spi>
     bd8:	f8 01       	movw	r30, r16
     bda:	81 93       	st	Z+, r24
     bdc:	8f 01       	movw	r16, r30
     bde:	ee 15       	cp	r30, r14
     be0:	ff 05       	cpc	r31, r15
     be2:	c9 f7       	brne	.-14     	; 0xbd6 <disk_ioctl+0x2b8>
     be4:	10 e0       	ldi	r17, 0x00	; 0
     be6:	28 c0       	rjmp	.+80     	; 0xc38 <disk_ioctl+0x31a>
     be8:	40 e0       	ldi	r20, 0x00	; 0
     bea:	50 e0       	ldi	r21, 0x00	; 0
     bec:	ba 01       	movw	r22, r20
     bee:	8d e8       	ldi	r24, 0x8D	; 141
     bf0:	c3 dc       	rcall	.-1658   	; 0x578 <send_cmd>
     bf2:	81 11       	cpse	r24, r1
     bf4:	20 c0       	rjmp	.+64     	; 0xc36 <disk_ioctl+0x318>
     bf6:	06 dc       	rcall	.-2036   	; 0x404 <rcvr_spi>
     bf8:	60 e4       	ldi	r22, 0x40	; 64
     bfa:	70 e0       	ldi	r23, 0x00	; 0
     bfc:	c7 01       	movw	r24, r14
     bfe:	2e dc       	rcall	.-1956   	; 0x45c <rcvr_datablock>
     c00:	11 e0       	ldi	r17, 0x01	; 1
     c02:	89 2b       	or	r24, r25
     c04:	c9 f0       	breq	.+50     	; 0xc38 <disk_ioctl+0x31a>
     c06:	10 e0       	ldi	r17, 0x00	; 0
     c08:	17 c0       	rjmp	.+46     	; 0xc38 <disk_ioctl+0x31a>
     c0a:	14 e0       	ldi	r17, 0x04	; 4
     c0c:	15 c0       	rjmp	.+42     	; 0xc38 <disk_ioctl+0x31a>
     c0e:	11 e0       	ldi	r17, 0x01	; 1
     c10:	13 c0       	rjmp	.+38     	; 0xc38 <disk_ioctl+0x31a>
     c12:	11 e0       	ldi	r17, 0x01	; 1
     c14:	11 c0       	rjmp	.+34     	; 0xc38 <disk_ioctl+0x31a>
     c16:	11 e0       	ldi	r17, 0x01	; 1
     c18:	0f c0       	rjmp	.+30     	; 0xc38 <disk_ioctl+0x31a>
     c1a:	11 e0       	ldi	r17, 0x01	; 1
     c1c:	0d c0       	rjmp	.+26     	; 0xc38 <disk_ioctl+0x31a>
     c1e:	11 e0       	ldi	r17, 0x01	; 1
     c20:	0b c0       	rjmp	.+22     	; 0xc38 <disk_ioctl+0x31a>
     c22:	11 e0       	ldi	r17, 0x01	; 1
     c24:	09 c0       	rjmp	.+18     	; 0xc38 <disk_ioctl+0x31a>
     c26:	11 e0       	ldi	r17, 0x01	; 1
     c28:	07 c0       	rjmp	.+14     	; 0xc38 <disk_ioctl+0x31a>
     c2a:	11 e0       	ldi	r17, 0x01	; 1
     c2c:	05 c0       	rjmp	.+10     	; 0xc38 <disk_ioctl+0x31a>
     c2e:	11 e0       	ldi	r17, 0x01	; 1
     c30:	03 c0       	rjmp	.+6      	; 0xc38 <disk_ioctl+0x31a>
     c32:	11 e0       	ldi	r17, 0x01	; 1
     c34:	01 c0       	rjmp	.+2      	; 0xc38 <disk_ioctl+0x31a>
     c36:	11 e0       	ldi	r17, 0x01	; 1
     c38:	ff db       	rcall	.-2050   	; 0x438 <deselect>
     c3a:	81 2f       	mov	r24, r17
     c3c:	05 c0       	rjmp	.+10     	; 0xc48 <disk_ioctl+0x32a>
     c3e:	84 e0       	ldi	r24, 0x04	; 4
     c40:	03 c0       	rjmp	.+6      	; 0xc48 <disk_ioctl+0x32a>
     c42:	80 e0       	ldi	r24, 0x00	; 0
     c44:	01 c0       	rjmp	.+2      	; 0xc48 <disk_ioctl+0x32a>
     c46:	83 e0       	ldi	r24, 0x03	; 3
     c48:	60 96       	adiw	r28, 0x10	; 16
     c4a:	0f b6       	in	r0, 0x3f	; 63
     c4c:	f8 94       	cli
     c4e:	de bf       	out	0x3e, r29	; 62
     c50:	0f be       	out	0x3f, r0	; 63
     c52:	cd bf       	out	0x3d, r28	; 61
     c54:	df 91       	pop	r29
     c56:	cf 91       	pop	r28
     c58:	1f 91       	pop	r17
     c5a:	0f 91       	pop	r16
     c5c:	ff 90       	pop	r15
     c5e:	ef 90       	pop	r14
     c60:	08 95       	ret

00000c62 <get_fattime>:
}

DWORD get_fattime ()
{
	return 0;
}
     c62:	60 e0       	ldi	r22, 0x00	; 0
     c64:	70 e0       	ldi	r23, 0x00	; 0
     c66:	cb 01       	movw	r24, r22
     c68:	08 95       	ret

00000c6a <mem_cpy>:
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
}
     c6a:	cf 93       	push	r28
     c6c:	df 93       	push	r29
     c6e:	ea 01       	movw	r28, r20
     c70:	42 30       	cpi	r20, 0x02	; 2
     c72:	51 05       	cpc	r21, r1
     c74:	e8 f0       	brcs	.+58     	; 0xcb0 <mem_cpy+0x46>
     c76:	db 01       	movw	r26, r22
     c78:	fc 01       	movw	r30, r24
     c7a:	2d 91       	ld	r18, X+
     c7c:	3d 91       	ld	r19, X+
     c7e:	21 93       	st	Z+, r18
     c80:	31 93       	st	Z+, r19
     c82:	42 50       	subi	r20, 0x02	; 2
     c84:	51 09       	sbc	r21, r1
     c86:	42 30       	cpi	r20, 0x02	; 2
     c88:	51 05       	cpc	r21, r1
     c8a:	b8 f7       	brcc	.-18     	; 0xc7a <mem_cpy+0x10>
     c8c:	ae 01       	movw	r20, r28
     c8e:	42 50       	subi	r20, 0x02	; 2
     c90:	51 09       	sbc	r21, r1
     c92:	9a 01       	movw	r18, r20
     c94:	36 95       	lsr	r19
     c96:	27 95       	ror	r18
     c98:	f9 01       	movw	r30, r18
     c9a:	31 96       	adiw	r30, 0x01	; 1
     c9c:	ee 0f       	add	r30, r30
     c9e:	ff 1f       	adc	r31, r31
     ca0:	8e 0f       	add	r24, r30
     ca2:	9f 1f       	adc	r25, r31
     ca4:	6e 0f       	add	r22, r30
     ca6:	7f 1f       	adc	r23, r31
     ca8:	22 0f       	add	r18, r18
     caa:	33 1f       	adc	r19, r19
     cac:	42 1b       	sub	r20, r18
     cae:	53 0b       	sbc	r21, r19
     cb0:	41 15       	cp	r20, r1
     cb2:	51 05       	cpc	r21, r1
     cb4:	49 f0       	breq	.+18     	; 0xcc8 <mem_cpy+0x5e>
     cb6:	db 01       	movw	r26, r22
     cb8:	fc 01       	movw	r30, r24
     cba:	48 0f       	add	r20, r24
     cbc:	59 1f       	adc	r21, r25
     cbe:	8d 91       	ld	r24, X+
     cc0:	81 93       	st	Z+, r24
     cc2:	e4 17       	cp	r30, r20
     cc4:	f5 07       	cpc	r31, r21
     cc6:	d9 f7       	brne	.-10     	; 0xcbe <mem_cpy+0x54>
     cc8:	df 91       	pop	r29
     cca:	cf 91       	pop	r28
     ccc:	08 95       	ret

00000cce <mem_set>:
     cce:	41 15       	cp	r20, r1
     cd0:	51 05       	cpc	r21, r1
     cd2:	39 f0       	breq	.+14     	; 0xce2 <mem_set+0x14>
     cd4:	fc 01       	movw	r30, r24
     cd6:	84 0f       	add	r24, r20
     cd8:	95 1f       	adc	r25, r21
     cda:	61 93       	st	Z+, r22
     cdc:	e8 17       	cp	r30, r24
     cde:	f9 07       	cpc	r31, r25
     ce0:	e1 f7       	brne	.-8      	; 0xcda <mem_set+0xc>
     ce2:	08 95       	ret

00000ce4 <move_window>:
     ce4:	4f 92       	push	r4
     ce6:	5f 92       	push	r5
     ce8:	6f 92       	push	r6
     cea:	7f 92       	push	r7
     cec:	af 92       	push	r10
     cee:	bf 92       	push	r11
     cf0:	cf 92       	push	r12
     cf2:	df 92       	push	r13
     cf4:	ef 92       	push	r14
     cf6:	ff 92       	push	r15
     cf8:	0f 93       	push	r16
     cfa:	1f 93       	push	r17
     cfc:	cf 93       	push	r28
     cfe:	df 93       	push	r29
     d00:	fc 01       	movw	r30, r24
     d02:	c6 a4       	ldd	r12, Z+46	; 0x2e
     d04:	d7 a4       	ldd	r13, Z+47	; 0x2f
     d06:	e0 a8       	ldd	r14, Z+48	; 0x30
     d08:	f1 a8       	ldd	r15, Z+49	; 0x31
     d0a:	c4 16       	cp	r12, r20
     d0c:	d5 06       	cpc	r13, r21
     d0e:	e6 06       	cpc	r14, r22
     d10:	f7 06       	cpc	r15, r23
     d12:	09 f4       	brne	.+2      	; 0xd16 <move_window+0x32>
     d14:	4c c0       	rjmp	.+152    	; 0xdae <move_window+0xca>
     d16:	2a 01       	movw	r4, r20
     d18:	3b 01       	movw	r6, r22
     d1a:	ec 01       	movw	r28, r24
     d1c:	84 81       	ldd	r24, Z+4	; 0x04
     d1e:	88 23       	and	r24, r24
     d20:	91 f1       	breq	.+100    	; 0xd86 <move_window+0xa2>
     d22:	5f 01       	movw	r10, r30
     d24:	f2 e3       	ldi	r31, 0x32	; 50
     d26:	af 0e       	add	r10, r31
     d28:	b1 1c       	adc	r11, r1
     d2a:	01 e0       	ldi	r16, 0x01	; 1
     d2c:	a7 01       	movw	r20, r14
     d2e:	96 01       	movw	r18, r12
     d30:	b5 01       	movw	r22, r10
     d32:	89 81       	ldd	r24, Y+1	; 0x01
     d34:	8f dd       	rcall	.-1250   	; 0x854 <disk_write>
     d36:	81 11       	cpse	r24, r1
     d38:	3c c0       	rjmp	.+120    	; 0xdb2 <move_window+0xce>
     d3a:	1c 82       	std	Y+4, r1	; 0x04
     d3c:	4e 8d       	ldd	r20, Y+30	; 0x1e
     d3e:	5f 8d       	ldd	r21, Y+31	; 0x1f
     d40:	68 a1       	ldd	r22, Y+32	; 0x20
     d42:	79 a1       	ldd	r23, Y+33	; 0x21
     d44:	8a a1       	ldd	r24, Y+34	; 0x22
     d46:	9b a1       	ldd	r25, Y+35	; 0x23
     d48:	ac a1       	ldd	r26, Y+36	; 0x24
     d4a:	bd a1       	ldd	r27, Y+37	; 0x25
     d4c:	84 0f       	add	r24, r20
     d4e:	95 1f       	adc	r25, r21
     d50:	a6 1f       	adc	r26, r22
     d52:	b7 1f       	adc	r27, r23
     d54:	c8 16       	cp	r12, r24
     d56:	d9 06       	cpc	r13, r25
     d58:	ea 06       	cpc	r14, r26
     d5a:	fb 06       	cpc	r15, r27
     d5c:	a0 f4       	brcc	.+40     	; 0xd86 <move_window+0xa2>
     d5e:	1b 81       	ldd	r17, Y+3	; 0x03
     d60:	12 30       	cpi	r17, 0x02	; 2
     d62:	88 f0       	brcs	.+34     	; 0xd86 <move_window+0xa2>
     d64:	8e 8d       	ldd	r24, Y+30	; 0x1e
     d66:	9f 8d       	ldd	r25, Y+31	; 0x1f
     d68:	a8 a1       	ldd	r26, Y+32	; 0x20
     d6a:	b9 a1       	ldd	r27, Y+33	; 0x21
     d6c:	c8 0e       	add	r12, r24
     d6e:	d9 1e       	adc	r13, r25
     d70:	ea 1e       	adc	r14, r26
     d72:	fb 1e       	adc	r15, r27
     d74:	01 e0       	ldi	r16, 0x01	; 1
     d76:	a7 01       	movw	r20, r14
     d78:	96 01       	movw	r18, r12
     d7a:	b5 01       	movw	r22, r10
     d7c:	89 81       	ldd	r24, Y+1	; 0x01
     d7e:	6a dd       	rcall	.-1324   	; 0x854 <disk_write>
     d80:	11 50       	subi	r17, 0x01	; 1
     d82:	11 30       	cpi	r17, 0x01	; 1
     d84:	79 f7       	brne	.-34     	; 0xd64 <move_window+0x80>
     d86:	41 14       	cp	r4, r1
     d88:	51 04       	cpc	r5, r1
     d8a:	61 04       	cpc	r6, r1
     d8c:	71 04       	cpc	r7, r1
     d8e:	99 f0       	breq	.+38     	; 0xdb6 <move_window+0xd2>
     d90:	01 e0       	ldi	r16, 0x01	; 1
     d92:	a3 01       	movw	r20, r6
     d94:	92 01       	movw	r18, r4
     d96:	be 01       	movw	r22, r28
     d98:	6e 5c       	subi	r22, 0xCE	; 206
     d9a:	7f 4f       	sbci	r23, 0xFF	; 255
     d9c:	89 81       	ldd	r24, Y+1	; 0x01
     d9e:	0d dd       	rcall	.-1510   	; 0x7ba <disk_read>
     da0:	81 11       	cpse	r24, r1
     da2:	0b c0       	rjmp	.+22     	; 0xdba <move_window+0xd6>
     da4:	4e a6       	std	Y+46, r4	; 0x2e
     da6:	5f a6       	std	Y+47, r5	; 0x2f
     da8:	68 aa       	std	Y+48, r6	; 0x30
     daa:	79 aa       	std	Y+49, r7	; 0x31
     dac:	07 c0       	rjmp	.+14     	; 0xdbc <move_window+0xd8>
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	05 c0       	rjmp	.+10     	; 0xdbc <move_window+0xd8>
     db2:	81 e0       	ldi	r24, 0x01	; 1
     db4:	03 c0       	rjmp	.+6      	; 0xdbc <move_window+0xd8>
     db6:	80 e0       	ldi	r24, 0x00	; 0
     db8:	01 c0       	rjmp	.+2      	; 0xdbc <move_window+0xd8>
     dba:	81 e0       	ldi	r24, 0x01	; 1
     dbc:	df 91       	pop	r29
     dbe:	cf 91       	pop	r28
     dc0:	1f 91       	pop	r17
     dc2:	0f 91       	pop	r16
     dc4:	ff 90       	pop	r15
     dc6:	ef 90       	pop	r14
     dc8:	df 90       	pop	r13
     dca:	cf 90       	pop	r12
     dcc:	bf 90       	pop	r11
     dce:	af 90       	pop	r10
     dd0:	7f 90       	pop	r7
     dd2:	6f 90       	pop	r6
     dd4:	5f 90       	pop	r5
     dd6:	4f 90       	pop	r4
     dd8:	08 95       	ret

00000dda <check_fs>:
     dda:	0f 93       	push	r16
     ddc:	cf 93       	push	r28
     dde:	df 93       	push	r29
     de0:	ec 01       	movw	r28, r24
     de2:	9a 01       	movw	r18, r20
     de4:	ab 01       	movw	r20, r22
     de6:	bc 01       	movw	r22, r24
     de8:	6e 5c       	subi	r22, 0xCE	; 206
     dea:	7f 4f       	sbci	r23, 0xFF	; 255
     dec:	01 e0       	ldi	r16, 0x01	; 1
     dee:	89 81       	ldd	r24, Y+1	; 0x01
     df0:	e4 dc       	rcall	.-1592   	; 0x7ba <disk_read>
     df2:	81 11       	cpse	r24, r1
     df4:	23 c0       	rjmp	.+70     	; 0xe3c <check_fs+0x62>
     df6:	fe 01       	movw	r30, r28
     df8:	e0 5d       	subi	r30, 0xD0	; 208
     dfa:	fd 4f       	sbci	r31, 0xFD	; 253
     dfc:	80 81       	ld	r24, Z
     dfe:	91 81       	ldd	r25, Z+1	; 0x01
     e00:	85 35       	cpi	r24, 0x55	; 85
     e02:	9a 4a       	sbci	r25, 0xAA	; 170
     e04:	e9 f4       	brne	.+58     	; 0xe40 <check_fs+0x66>
     e06:	e8 5c       	subi	r30, 0xC8	; 200
     e08:	f1 40       	sbci	r31, 0x01	; 1
     e0a:	80 81       	ld	r24, Z
     e0c:	91 81       	ldd	r25, Z+1	; 0x01
     e0e:	a2 81       	ldd	r26, Z+2	; 0x02
     e10:	b3 81       	ldd	r27, Z+3	; 0x03
     e12:	bb 27       	eor	r27, r27
     e14:	86 34       	cpi	r24, 0x46	; 70
     e16:	91 44       	sbci	r25, 0x41	; 65
     e18:	a4 45       	sbci	r26, 0x54	; 84
     e1a:	b1 05       	cpc	r27, r1
     e1c:	99 f0       	breq	.+38     	; 0xe44 <check_fs+0x6a>
     e1e:	cc 57       	subi	r28, 0x7C	; 124
     e20:	df 4f       	sbci	r29, 0xFF	; 255
     e22:	48 81       	ld	r20, Y
     e24:	59 81       	ldd	r21, Y+1	; 0x01
     e26:	6a 81       	ldd	r22, Y+2	; 0x02
     e28:	7b 81       	ldd	r23, Y+3	; 0x03
     e2a:	77 27       	eor	r23, r23
     e2c:	81 e0       	ldi	r24, 0x01	; 1
     e2e:	46 34       	cpi	r20, 0x46	; 70
     e30:	51 44       	sbci	r21, 0x41	; 65
     e32:	64 45       	sbci	r22, 0x54	; 84
     e34:	71 05       	cpc	r23, r1
     e36:	39 f4       	brne	.+14     	; 0xe46 <check_fs+0x6c>
     e38:	80 e0       	ldi	r24, 0x00	; 0
     e3a:	05 c0       	rjmp	.+10     	; 0xe46 <check_fs+0x6c>
     e3c:	83 e0       	ldi	r24, 0x03	; 3
     e3e:	03 c0       	rjmp	.+6      	; 0xe46 <check_fs+0x6c>
     e40:	82 e0       	ldi	r24, 0x02	; 2
     e42:	01 c0       	rjmp	.+2      	; 0xe46 <check_fs+0x6c>
     e44:	80 e0       	ldi	r24, 0x00	; 0
     e46:	df 91       	pop	r29
     e48:	cf 91       	pop	r28
     e4a:	0f 91       	pop	r16
     e4c:	08 95       	ret

00000e4e <validate>:
     e4e:	00 97       	sbiw	r24, 0x00	; 0
     e50:	79 f0       	breq	.+30     	; 0xe70 <validate+0x22>
     e52:	fc 01       	movw	r30, r24
     e54:	20 81       	ld	r18, Z
     e56:	22 23       	and	r18, r18
     e58:	69 f0       	breq	.+26     	; 0xe74 <validate+0x26>
     e5a:	26 81       	ldd	r18, Z+6	; 0x06
     e5c:	37 81       	ldd	r19, Z+7	; 0x07
     e5e:	26 17       	cp	r18, r22
     e60:	37 07       	cpc	r19, r23
     e62:	51 f4       	brne	.+20     	; 0xe78 <validate+0x2a>
     e64:	81 81       	ldd	r24, Z+1	; 0x01
     e66:	a2 dc       	rcall	.-1724   	; 0x7ac <disk_status>
     e68:	80 fd       	sbrc	r24, 0
     e6a:	08 c0       	rjmp	.+16     	; 0xe7c <validate+0x2e>
     e6c:	80 e0       	ldi	r24, 0x00	; 0
     e6e:	08 95       	ret
     e70:	89 e0       	ldi	r24, 0x09	; 9
     e72:	08 95       	ret
     e74:	89 e0       	ldi	r24, 0x09	; 9
     e76:	08 95       	ret
     e78:	89 e0       	ldi	r24, 0x09	; 9
     e7a:	08 95       	ret
     e7c:	83 e0       	ldi	r24, 0x03	; 3
     e7e:	08 95       	ret

00000e80 <chk_mounted>:
     e80:	2f 92       	push	r2
     e82:	3f 92       	push	r3
     e84:	4f 92       	push	r4
     e86:	5f 92       	push	r5
     e88:	6f 92       	push	r6
     e8a:	7f 92       	push	r7
     e8c:	8f 92       	push	r8
     e8e:	9f 92       	push	r9
     e90:	af 92       	push	r10
     e92:	bf 92       	push	r11
     e94:	cf 92       	push	r12
     e96:	df 92       	push	r13
     e98:	ef 92       	push	r14
     e9a:	ff 92       	push	r15
     e9c:	0f 93       	push	r16
     e9e:	1f 93       	push	r17
     ea0:	cf 93       	push	r28
     ea2:	df 93       	push	r29
     ea4:	cd b7       	in	r28, 0x3d	; 61
     ea6:	de b7       	in	r29, 0x3e	; 62
     ea8:	2e 97       	sbiw	r28, 0x0e	; 14
     eaa:	0f b6       	in	r0, 0x3f	; 63
     eac:	f8 94       	cli
     eae:	de bf       	out	0x3e, r29	; 62
     eb0:	0f be       	out	0x3f, r0	; 63
     eb2:	cd bf       	out	0x3d, r28	; 61
     eb4:	dc 01       	movw	r26, r24
     eb6:	ed 91       	ld	r30, X+
     eb8:	fc 91       	ld	r31, X
     eba:	e0 80       	ld	r14, Z
     ebc:	f1 2c       	mov	r15, r1
     ebe:	b0 e3       	ldi	r27, 0x30	; 48
     ec0:	eb 1a       	sub	r14, r27
     ec2:	f1 08       	sbc	r15, r1
     ec4:	2a e0       	ldi	r18, 0x0A	; 10
     ec6:	e2 16       	cp	r14, r18
     ec8:	f1 04       	cpc	r15, r1
     eca:	40 f4       	brcc	.+16     	; 0xedc <chk_mounted+0x5c>
     ecc:	21 81       	ldd	r18, Z+1	; 0x01
     ece:	2a 33       	cpi	r18, 0x3A	; 58
     ed0:	29 f4       	brne	.+10     	; 0xedc <chk_mounted+0x5c>
     ed2:	32 96       	adiw	r30, 0x02	; 2
     ed4:	dc 01       	movw	r26, r24
     ed6:	ed 93       	st	X+, r30
     ed8:	fc 93       	st	X, r31
     eda:	03 c0       	rjmp	.+6      	; 0xee2 <chk_mounted+0x62>
     edc:	e0 90 c4 02 	lds	r14, 0x02C4
     ee0:	f1 2c       	mov	r15, r1
     ee2:	b2 e0       	ldi	r27, 0x02	; 2
     ee4:	eb 16       	cp	r14, r27
     ee6:	f1 04       	cpc	r15, r1
     ee8:	08 f0       	brcs	.+2      	; 0xeec <chk_mounted+0x6c>
     eea:	ca c1       	rjmp	.+916    	; 0x1280 <__stack+0x181>
     eec:	f7 01       	movw	r30, r14
     eee:	ee 0f       	add	r30, r30
     ef0:	ff 1f       	adc	r31, r31
     ef2:	eb 53       	subi	r30, 0x3B	; 59
     ef4:	fd 4f       	sbci	r31, 0xFD	; 253
     ef6:	20 81       	ld	r18, Z
     ef8:	31 81       	ldd	r19, Z+1	; 0x01
     efa:	3e 87       	std	Y+14, r19	; 0x0e
     efc:	2d 87       	std	Y+13, r18	; 0x0d
     efe:	db 01       	movw	r26, r22
     f00:	2d 93       	st	X+, r18
     f02:	3c 93       	st	X, r19
     f04:	21 15       	cp	r18, r1
     f06:	31 05       	cpc	r19, r1
     f08:	09 f4       	brne	.+2      	; 0xf0c <chk_mounted+0x8c>
     f0a:	bc c1       	rjmp	.+888    	; 0x1284 <__stack+0x185>
     f0c:	14 2f       	mov	r17, r20
     f0e:	f9 01       	movw	r30, r18
     f10:	80 81       	ld	r24, Z
     f12:	88 23       	and	r24, r24
     f14:	59 f0       	breq	.+22     	; 0xf2c <chk_mounted+0xac>
     f16:	81 81       	ldd	r24, Z+1	; 0x01
     f18:	49 dc       	rcall	.-1902   	; 0x7ac <disk_status>
     f1a:	80 fd       	sbrc	r24, 0
     f1c:	07 c0       	rjmp	.+14     	; 0xf2c <chk_mounted+0xac>
     f1e:	11 23       	and	r17, r17
     f20:	09 f4       	brne	.+2      	; 0xf24 <chk_mounted+0xa4>
     f22:	b2 c1       	rjmp	.+868    	; 0x1288 <__stack+0x189>
     f24:	82 ff       	sbrs	r24, 2
     f26:	b2 c1       	rjmp	.+868    	; 0x128c <__stack+0x18d>
     f28:	8a e0       	ldi	r24, 0x0A	; 10
     f2a:	7e c2       	rjmp	.+1276   	; 0x1428 <__stack+0x329>
     f2c:	ad 85       	ldd	r26, Y+13	; 0x0d
     f2e:	be 85       	ldd	r27, Y+14	; 0x0e
     f30:	1c 92       	st	X, r1
     f32:	11 96       	adiw	r26, 0x01	; 1
     f34:	ec 92       	st	X, r14
     f36:	8e 2d       	mov	r24, r14
     f38:	82 db       	rcall	.-2300   	; 0x63e <disk_initialize>
     f3a:	80 fd       	sbrc	r24, 0
     f3c:	a9 c1       	rjmp	.+850    	; 0x1290 <__stack+0x191>
     f3e:	11 23       	and	r17, r17
     f40:	11 f0       	breq	.+4      	; 0xf46 <chk_mounted+0xc6>
     f42:	82 fd       	sbrc	r24, 2
     f44:	a7 c1       	rjmp	.+846    	; 0x1294 <__stack+0x195>
     f46:	40 e0       	ldi	r20, 0x00	; 0
     f48:	50 e0       	ldi	r21, 0x00	; 0
     f4a:	ba 01       	movw	r22, r20
     f4c:	8d 85       	ldd	r24, Y+13	; 0x0d
     f4e:	9e 85       	ldd	r25, Y+14	; 0x0e
     f50:	44 df       	rcall	.-376    	; 0xdda <check_fs>
     f52:	81 30       	cpi	r24, 0x01	; 1
     f54:	b1 f4       	brne	.+44     	; 0xf82 <chk_mounted+0x102>
     f56:	ed 85       	ldd	r30, Y+13	; 0x0d
     f58:	fe 85       	ldd	r31, Y+14	; 0x0e
     f5a:	ec 50       	subi	r30, 0x0C	; 12
     f5c:	fe 4f       	sbci	r31, 0xFE	; 254
     f5e:	80 81       	ld	r24, Z
     f60:	88 23       	and	r24, r24
     f62:	09 f4       	brne	.+2      	; 0xf66 <chk_mounted+0xe6>
     f64:	99 c1       	rjmp	.+818    	; 0x1298 <__stack+0x199>
     f66:	ed 85       	ldd	r30, Y+13	; 0x0d
     f68:	fe 85       	ldd	r31, Y+14	; 0x0e
     f6a:	e8 50       	subi	r30, 0x08	; 8
     f6c:	fe 4f       	sbci	r31, 0xFE	; 254
     f6e:	40 80       	ld	r4, Z
     f70:	51 80       	ldd	r5, Z+1	; 0x01
     f72:	62 80       	ldd	r6, Z+2	; 0x02
     f74:	73 80       	ldd	r7, Z+3	; 0x03
     f76:	b3 01       	movw	r22, r6
     f78:	a2 01       	movw	r20, r4
     f7a:	8d 85       	ldd	r24, Y+13	; 0x0d
     f7c:	9e 85       	ldd	r25, Y+14	; 0x0e
     f7e:	2d df       	rcall	.-422    	; 0xdda <check_fs>
     f80:	03 c0       	rjmp	.+6      	; 0xf88 <chk_mounted+0x108>
     f82:	41 2c       	mov	r4, r1
     f84:	51 2c       	mov	r5, r1
     f86:	32 01       	movw	r6, r4
     f88:	83 30       	cpi	r24, 0x03	; 3
     f8a:	09 f4       	brne	.+2      	; 0xf8e <chk_mounted+0x10e>
     f8c:	87 c1       	rjmp	.+782    	; 0x129c <__stack+0x19d>
     f8e:	81 11       	cpse	r24, r1
     f90:	87 c1       	rjmp	.+782    	; 0x12a0 <__stack+0x1a1>
     f92:	ed 85       	ldd	r30, Y+13	; 0x0d
     f94:	fe 85       	ldd	r31, Y+14	; 0x0e
     f96:	85 ad       	ldd	r24, Z+61	; 0x3d
     f98:	96 ad       	ldd	r25, Z+62	; 0x3e
     f9a:	81 15       	cp	r24, r1
     f9c:	92 40       	sbci	r25, 0x02	; 2
     f9e:	09 f0       	breq	.+2      	; 0xfa2 <chk_mounted+0x122>
     fa0:	81 c1       	rjmp	.+770    	; 0x12a4 <__stack+0x1a5>
     fa2:	ed 85       	ldd	r30, Y+13	; 0x0d
     fa4:	fe 85       	ldd	r31, Y+14	; 0x0e
     fa6:	e8 5b       	subi	r30, 0xB8	; 184
     fa8:	ff 4f       	sbci	r31, 0xFF	; 255
     faa:	80 80       	ld	r8, Z
     fac:	91 80       	ldd	r9, Z+1	; 0x01
     fae:	a1 2c       	mov	r10, r1
     fb0:	b1 2c       	mov	r11, r1
     fb2:	81 14       	cp	r8, r1
     fb4:	91 04       	cpc	r9, r1
     fb6:	a1 04       	cpc	r10, r1
     fb8:	b1 04       	cpc	r11, r1
     fba:	41 f4       	brne	.+16     	; 0xfcc <chk_mounted+0x14c>
     fbc:	ed 85       	ldd	r30, Y+13	; 0x0d
     fbe:	fe 85       	ldd	r31, Y+14	; 0x0e
     fc0:	ea 5a       	subi	r30, 0xAA	; 170
     fc2:	ff 4f       	sbci	r31, 0xFF	; 255
     fc4:	80 80       	ld	r8, Z
     fc6:	91 80       	ldd	r9, Z+1	; 0x01
     fc8:	a2 80       	ldd	r10, Z+2	; 0x02
     fca:	b3 80       	ldd	r11, Z+3	; 0x03
     fcc:	ad 85       	ldd	r26, Y+13	; 0x0d
     fce:	be 85       	ldd	r27, Y+14	; 0x0e
     fd0:	5e 96       	adiw	r26, 0x1e	; 30
     fd2:	8d 92       	st	X+, r8
     fd4:	9d 92       	st	X+, r9
     fd6:	ad 92       	st	X+, r10
     fd8:	bc 92       	st	X, r11
     fda:	91 97       	sbiw	r26, 0x21	; 33
     fdc:	fd 01       	movw	r30, r26
     fde:	ee 5b       	subi	r30, 0xBE	; 190
     fe0:	ff 4f       	sbci	r31, 0xFF	; 255
     fe2:	a0 81       	ld	r26, Z
     fe4:	ed 85       	ldd	r30, Y+13	; 0x0d
     fe6:	fe 85       	ldd	r31, Y+14	; 0x0e
     fe8:	a3 83       	std	Z+3, r26	; 0x03
     fea:	8f ef       	ldi	r24, 0xFF	; 255
     fec:	8a 0f       	add	r24, r26
     fee:	82 30       	cpi	r24, 0x02	; 2
     ff0:	08 f0       	brcs	.+2      	; 0xff4 <chk_mounted+0x174>
     ff2:	5a c1       	rjmp	.+692    	; 0x12a8 <__stack+0x1a9>
     ff4:	17 ad       	ldd	r17, Z+63	; 0x3f
     ff6:	12 83       	std	Z+2, r17	; 0x02
     ff8:	11 23       	and	r17, r17
     ffa:	09 f4       	brne	.+2      	; 0xffe <chk_mounted+0x17e>
     ffc:	57 c1       	rjmp	.+686    	; 0x12ac <__stack+0x1ad>
     ffe:	81 2f       	mov	r24, r17
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	9c 01       	movw	r18, r24
    1004:	21 50       	subi	r18, 0x01	; 1
    1006:	31 09       	sbc	r19, r1
    1008:	82 23       	and	r24, r18
    100a:	93 23       	and	r25, r19
    100c:	89 2b       	or	r24, r25
    100e:	09 f0       	breq	.+2      	; 0x1012 <chk_mounted+0x192>
    1010:	4f c1       	rjmp	.+670    	; 0x12b0 <__stack+0x1b1>
    1012:	ed 5b       	subi	r30, 0xBD	; 189
    1014:	ff 4f       	sbci	r31, 0xFF	; 255
    1016:	20 80       	ld	r2, Z
    1018:	31 80       	ldd	r3, Z+1	; 0x01
    101a:	ed 85       	ldd	r30, Y+13	; 0x0d
    101c:	fe 85       	ldd	r31, Y+14	; 0x0e
    101e:	31 86       	std	Z+9, r3	; 0x09
    1020:	20 86       	std	Z+8, r2	; 0x08
    1022:	c1 01       	movw	r24, r2
    1024:	8f 70       	andi	r24, 0x0F	; 15
    1026:	99 27       	eor	r25, r25
    1028:	89 2b       	or	r24, r25
    102a:	09 f0       	breq	.+2      	; 0x102e <chk_mounted+0x1ae>
    102c:	43 c1       	rjmp	.+646    	; 0x12b4 <__stack+0x1b5>
    102e:	eb 5b       	subi	r30, 0xBB	; 187
    1030:	ff 4f       	sbci	r31, 0xFF	; 255
    1032:	c0 80       	ld	r12, Z
    1034:	d1 80       	ldd	r13, Z+1	; 0x01
    1036:	e1 2c       	mov	r14, r1
    1038:	f1 2c       	mov	r15, r1
    103a:	c1 14       	cp	r12, r1
    103c:	d1 04       	cpc	r13, r1
    103e:	e1 04       	cpc	r14, r1
    1040:	f1 04       	cpc	r15, r1
    1042:	41 f4       	brne	.+16     	; 0x1054 <chk_mounted+0x1d4>
    1044:	ed 85       	ldd	r30, Y+13	; 0x0d
    1046:	fe 85       	ldd	r31, Y+14	; 0x0e
    1048:	ee 5a       	subi	r30, 0xAE	; 174
    104a:	ff 4f       	sbci	r31, 0xFF	; 255
    104c:	c0 80       	ld	r12, Z
    104e:	d1 80       	ldd	r13, Z+1	; 0x01
    1050:	e2 80       	ldd	r14, Z+2	; 0x02
    1052:	f3 80       	ldd	r15, Z+3	; 0x03
    1054:	ed 85       	ldd	r30, Y+13	; 0x0d
    1056:	fe 85       	ldd	r31, Y+14	; 0x0e
    1058:	e0 5c       	subi	r30, 0xC0	; 192
    105a:	ff 4f       	sbci	r31, 0xFF	; 255
    105c:	20 81       	ld	r18, Z
    105e:	31 81       	ldd	r19, Z+1	; 0x01
    1060:	3a 83       	std	Y+2, r19	; 0x02
    1062:	29 83       	std	Y+1, r18	; 0x01
    1064:	23 2b       	or	r18, r19
    1066:	09 f4       	brne	.+2      	; 0x106a <chk_mounted+0x1ea>
    1068:	27 c1       	rjmp	.+590    	; 0x12b8 <__stack+0x1b9>
    106a:	b0 e0       	ldi	r27, 0x00	; 0
    106c:	a5 01       	movw	r20, r10
    106e:	94 01       	movw	r18, r8
    1070:	0e 94 24 1a 	call	0x3448	; 0x3448 <__muluhisi3>
    1074:	69 87       	std	Y+9, r22	; 0x09
    1076:	7a 87       	std	Y+10, r23	; 0x0a
    1078:	8b 87       	std	Y+11, r24	; 0x0b
    107a:	9c 87       	std	Y+12, r25	; 0x0c
    107c:	a9 81       	ldd	r26, Y+1	; 0x01
    107e:	ba 81       	ldd	r27, Y+2	; 0x02
    1080:	cd 01       	movw	r24, r26
    1082:	a0 e0       	ldi	r26, 0x00	; 0
    1084:	b0 e0       	ldi	r27, 0x00	; 0
    1086:	8d 83       	std	Y+5, r24	; 0x05
    1088:	9e 83       	std	Y+6, r25	; 0x06
    108a:	af 83       	std	Y+7, r26	; 0x07
    108c:	b8 87       	std	Y+8, r27	; 0x08
    108e:	c1 01       	movw	r24, r2
    1090:	92 95       	swap	r25
    1092:	82 95       	swap	r24
    1094:	8f 70       	andi	r24, 0x0F	; 15
    1096:	89 27       	eor	r24, r25
    1098:	9f 70       	andi	r25, 0x0F	; 15
    109a:	89 27       	eor	r24, r25
    109c:	2d 81       	ldd	r18, Y+5	; 0x05
    109e:	3e 81       	ldd	r19, Y+6	; 0x06
    10a0:	4f 81       	ldd	r20, Y+7	; 0x07
    10a2:	58 85       	ldd	r21, Y+8	; 0x08
    10a4:	28 0f       	add	r18, r24
    10a6:	39 1f       	adc	r19, r25
    10a8:	41 1d       	adc	r20, r1
    10aa:	51 1d       	adc	r21, r1
    10ac:	da 01       	movw	r26, r20
    10ae:	c9 01       	movw	r24, r18
    10b0:	29 85       	ldd	r18, Y+9	; 0x09
    10b2:	3a 85       	ldd	r19, Y+10	; 0x0a
    10b4:	4b 85       	ldd	r20, Y+11	; 0x0b
    10b6:	5c 85       	ldd	r21, Y+12	; 0x0c
    10b8:	28 0f       	add	r18, r24
    10ba:	39 1f       	adc	r19, r25
    10bc:	4a 1f       	adc	r20, r26
    10be:	5b 1f       	adc	r21, r27
    10c0:	29 83       	std	Y+1, r18	; 0x01
    10c2:	3a 83       	std	Y+2, r19	; 0x02
    10c4:	4b 83       	std	Y+3, r20	; 0x03
    10c6:	5c 83       	std	Y+4, r21	; 0x04
    10c8:	c2 16       	cp	r12, r18
    10ca:	d3 06       	cpc	r13, r19
    10cc:	e4 06       	cpc	r14, r20
    10ce:	f5 06       	cpc	r15, r21
    10d0:	08 f4       	brcc	.+2      	; 0x10d4 <chk_mounted+0x254>
    10d2:	f4 c0       	rjmp	.+488    	; 0x12bc <__stack+0x1bd>
    10d4:	c7 01       	movw	r24, r14
    10d6:	b6 01       	movw	r22, r12
    10d8:	62 1b       	sub	r22, r18
    10da:	73 0b       	sbc	r23, r19
    10dc:	84 0b       	sbc	r24, r20
    10de:	95 0b       	sbc	r25, r21
    10e0:	21 2f       	mov	r18, r17
    10e2:	30 e0       	ldi	r19, 0x00	; 0
    10e4:	40 e0       	ldi	r20, 0x00	; 0
    10e6:	50 e0       	ldi	r21, 0x00	; 0
    10e8:	0e 94 f9 19 	call	0x33f2	; 0x33f2 <__udivmodsi4>
    10ec:	da 01       	movw	r26, r20
    10ee:	c9 01       	movw	r24, r18
    10f0:	21 15       	cp	r18, r1
    10f2:	31 05       	cpc	r19, r1
    10f4:	41 05       	cpc	r20, r1
    10f6:	51 05       	cpc	r21, r1
    10f8:	09 f4       	brne	.+2      	; 0x10fc <chk_mounted+0x27c>
    10fa:	e2 c0       	rjmp	.+452    	; 0x12c0 <__stack+0x1c1>
    10fc:	26 3f       	cpi	r18, 0xF6	; 246
    10fe:	6f e0       	ldi	r22, 0x0F	; 15
    1100:	36 07       	cpc	r19, r22
    1102:	41 05       	cpc	r20, r1
    1104:	51 05       	cpc	r21, r1
    1106:	08 f0       	brcs	.+2      	; 0x110a <__stack+0xb>
    1108:	87 c1       	rjmp	.+782    	; 0x1418 <__stack+0x319>
    110a:	11 e0       	ldi	r17, 0x01	; 1
    110c:	86 c1       	rjmp	.+780    	; 0x141a <__stack+0x31b>
    110e:	ed 85       	ldd	r30, Y+13	; 0x0d
    1110:	fe 85       	ldd	r31, Y+14	; 0x0e
    1112:	e2 5a       	subi	r30, 0xA2	; 162
    1114:	ff 4f       	sbci	r31, 0xFF	; 255
    1116:	80 81       	ld	r24, Z
    1118:	91 81       	ldd	r25, Z+1	; 0x01
    111a:	a2 81       	ldd	r26, Z+2	; 0x02
    111c:	b3 81       	ldd	r27, Z+3	; 0x03
    111e:	ed 85       	ldd	r30, Y+13	; 0x0d
    1120:	fe 85       	ldd	r31, Y+14	; 0x0e
    1122:	86 a3       	std	Z+38, r24	; 0x26
    1124:	97 a3       	std	Z+39, r25	; 0x27
    1126:	a0 a7       	std	Z+40, r26	; 0x28
    1128:	b1 a7       	std	Z+41, r27	; 0x29
    112a:	cc 0c       	add	r12, r12
    112c:	dd 1c       	adc	r13, r13
    112e:	ee 1c       	adc	r14, r14
    1130:	ff 1c       	adc	r15, r15
    1132:	cc 0c       	add	r12, r12
    1134:	dd 1c       	adc	r13, r13
    1136:	ee 1c       	adc	r14, r14
    1138:	ff 1c       	adc	r15, r15
    113a:	ff ef       	ldi	r31, 0xFF	; 255
    113c:	cf 0e       	add	r12, r31
    113e:	f1 e0       	ldi	r31, 0x01	; 1
    1140:	df 1e       	adc	r13, r31
    1142:	e1 1c       	adc	r14, r1
    1144:	f1 1c       	adc	r15, r1
    1146:	0b 2e       	mov	r0, r27
    1148:	b9 e0       	ldi	r27, 0x09	; 9
    114a:	f6 94       	lsr	r15
    114c:	e7 94       	ror	r14
    114e:	d7 94       	ror	r13
    1150:	c7 94       	ror	r12
    1152:	ba 95       	dec	r27
    1154:	d1 f7       	brne	.-12     	; 0x114a <__stack+0x4b>
    1156:	b0 2d       	mov	r27, r0
    1158:	8c 14       	cp	r8, r12
    115a:	9d 04       	cpc	r9, r13
    115c:	ae 04       	cpc	r10, r14
    115e:	bf 04       	cpc	r11, r15
    1160:	08 f4       	brcc	.+2      	; 0x1164 <__stack+0x65>
    1162:	b0 c0       	rjmp	.+352    	; 0x12c4 <__stack+0x1c5>
    1164:	03 c1       	rjmp	.+518    	; 0x136c <__stack+0x26d>
    1166:	49 84       	ldd	r4, Y+9	; 0x09
    1168:	5a 84       	ldd	r5, Y+10	; 0x0a
    116a:	6b 84       	ldd	r6, Y+11	; 0x0b
    116c:	7c 84       	ldd	r7, Y+12	; 0x0c
    116e:	48 0e       	add	r4, r24
    1170:	59 1e       	adc	r5, r25
    1172:	6a 1e       	adc	r6, r26
    1174:	7b 1e       	adc	r7, r27
    1176:	ad 85       	ldd	r26, Y+13	; 0x0d
    1178:	be 85       	ldd	r27, Y+14	; 0x0e
    117a:	96 96       	adiw	r26, 0x26	; 38
    117c:	4d 92       	st	X+, r4
    117e:	5d 92       	st	X+, r5
    1180:	6d 92       	st	X+, r6
    1182:	7c 92       	st	X, r7
    1184:	99 97       	sbiw	r26, 0x29	; 41
    1186:	12 30       	cpi	r17, 0x02	; 2
    1188:	29 f4       	brne	.+10     	; 0x1194 <__stack+0x95>
    118a:	cc 0c       	add	r12, r12
    118c:	dd 1c       	adc	r13, r13
    118e:	ee 1c       	adc	r14, r14
    1190:	ff 1c       	adc	r15, r15
    1192:	d6 c0       	rjmp	.+428    	; 0x1340 <__stack+0x241>
    1194:	a3 e0       	ldi	r26, 0x03	; 3
    1196:	b0 e0       	ldi	r27, 0x00	; 0
    1198:	a7 01       	movw	r20, r14
    119a:	96 01       	movw	r18, r12
    119c:	0e 94 24 1a 	call	0x3448	; 0x3448 <__muluhisi3>
    11a0:	dc 01       	movw	r26, r24
    11a2:	cb 01       	movw	r24, r22
    11a4:	b6 95       	lsr	r27
    11a6:	a7 95       	ror	r26
    11a8:	97 95       	ror	r25
    11aa:	87 95       	ror	r24
    11ac:	e1 e0       	ldi	r30, 0x01	; 1
    11ae:	ce 22       	and	r12, r30
    11b0:	dd 24       	eor	r13, r13
    11b2:	ee 24       	eor	r14, r14
    11b4:	ff 24       	eor	r15, r15
    11b6:	c8 0e       	add	r12, r24
    11b8:	d9 1e       	adc	r13, r25
    11ba:	ea 1e       	adc	r14, r26
    11bc:	fb 1e       	adc	r15, r27
    11be:	c0 c0       	rjmp	.+384    	; 0x1340 <__stack+0x241>
    11c0:	ed 85       	ldd	r30, Y+13	; 0x0d
    11c2:	fe 85       	ldd	r31, Y+14	; 0x0e
    11c4:	e0 5d       	subi	r30, 0xD0	; 208
    11c6:	fd 4f       	sbci	r31, 0xFD	; 253
    11c8:	80 81       	ld	r24, Z
    11ca:	91 81       	ldd	r25, Z+1	; 0x01
    11cc:	85 35       	cpi	r24, 0x55	; 85
    11ce:	9a 4a       	sbci	r25, 0xAA	; 170
    11d0:	a1 f5       	brne	.+104    	; 0x123a <__stack+0x13b>
    11d2:	ed 85       	ldd	r30, Y+13	; 0x0d
    11d4:	fe 85       	ldd	r31, Y+14	; 0x0e
    11d6:	82 a9       	ldd	r24, Z+50	; 0x32
    11d8:	93 a9       	ldd	r25, Z+51	; 0x33
    11da:	a4 a9       	ldd	r26, Z+52	; 0x34
    11dc:	b5 a9       	ldd	r27, Z+53	; 0x35
    11de:	82 35       	cpi	r24, 0x52	; 82
    11e0:	92 45       	sbci	r25, 0x52	; 82
    11e2:	a1 46       	sbci	r26, 0x61	; 97
    11e4:	b1 44       	sbci	r27, 0x41	; 65
    11e6:	59 f5       	brne	.+86     	; 0x123e <__stack+0x13f>
    11e8:	ed 85       	ldd	r30, Y+13	; 0x0d
    11ea:	fe 85       	ldd	r31, Y+14	; 0x0e
    11ec:	ea 5e       	subi	r30, 0xEA	; 234
    11ee:	fd 4f       	sbci	r31, 0xFD	; 253
    11f0:	80 81       	ld	r24, Z
    11f2:	91 81       	ldd	r25, Z+1	; 0x01
    11f4:	a2 81       	ldd	r26, Z+2	; 0x02
    11f6:	b3 81       	ldd	r27, Z+3	; 0x03
    11f8:	82 37       	cpi	r24, 0x72	; 114
    11fa:	92 47       	sbci	r25, 0x72	; 114
    11fc:	a1 44       	sbci	r26, 0x41	; 65
    11fe:	b1 46       	sbci	r27, 0x61	; 97
    1200:	01 f5       	brne	.+64     	; 0x1242 <__stack+0x143>
    1202:	ed 85       	ldd	r30, Y+13	; 0x0d
    1204:	fe 85       	ldd	r31, Y+14	; 0x0e
    1206:	e2 5e       	subi	r30, 0xE2	; 226
    1208:	fd 4f       	sbci	r31, 0xFD	; 253
    120a:	80 81       	ld	r24, Z
    120c:	91 81       	ldd	r25, Z+1	; 0x01
    120e:	a2 81       	ldd	r26, Z+2	; 0x02
    1210:	b3 81       	ldd	r27, Z+3	; 0x03
    1212:	ed 85       	ldd	r30, Y+13	; 0x0d
    1214:	fe 85       	ldd	r31, Y+14	; 0x0e
    1216:	82 87       	std	Z+10, r24	; 0x0a
    1218:	93 87       	std	Z+11, r25	; 0x0b
    121a:	a4 87       	std	Z+12, r26	; 0x0c
    121c:	b5 87       	std	Z+13, r27	; 0x0d
    121e:	e6 5e       	subi	r30, 0xE6	; 230
    1220:	fd 4f       	sbci	r31, 0xFD	; 253
    1222:	80 81       	ld	r24, Z
    1224:	91 81       	ldd	r25, Z+1	; 0x01
    1226:	a2 81       	ldd	r26, Z+2	; 0x02
    1228:	b3 81       	ldd	r27, Z+3	; 0x03
    122a:	ed 85       	ldd	r30, Y+13	; 0x0d
    122c:	fe 85       	ldd	r31, Y+14	; 0x0e
    122e:	86 87       	std	Z+14, r24	; 0x0e
    1230:	97 87       	std	Z+15, r25	; 0x0f
    1232:	a0 8b       	std	Z+16, r26	; 0x10
    1234:	b1 8b       	std	Z+17, r27	; 0x11
    1236:	13 e0       	ldi	r17, 0x03	; 3
    1238:	05 c0       	rjmp	.+10     	; 0x1244 <__stack+0x145>
    123a:	13 e0       	ldi	r17, 0x03	; 3
    123c:	03 c0       	rjmp	.+6      	; 0x1244 <__stack+0x145>
    123e:	13 e0       	ldi	r17, 0x03	; 3
    1240:	01 c0       	rjmp	.+2      	; 0x1244 <__stack+0x145>
    1242:	13 e0       	ldi	r17, 0x03	; 3
    1244:	ad 85       	ldd	r26, Y+13	; 0x0d
    1246:	be 85       	ldd	r27, Y+14	; 0x0e
    1248:	1c 93       	st	X, r17
    124a:	80 91 c9 02 	lds	r24, 0x02C9
    124e:	90 91 ca 02 	lds	r25, 0x02CA
    1252:	01 96       	adiw	r24, 0x01	; 1
    1254:	90 93 ca 02 	sts	0x02CA, r25
    1258:	80 93 c9 02 	sts	0x02C9, r24
    125c:	17 96       	adiw	r26, 0x07	; 7
    125e:	9c 93       	st	X, r25
    1260:	8e 93       	st	-X, r24
    1262:	16 97       	sbiw	r26, 0x06	; 6
    1264:	fd 01       	movw	r30, r26
    1266:	16 a6       	std	Z+46, r1	; 0x2e
    1268:	17 a6       	std	Z+47, r1	; 0x2f
    126a:	10 aa       	std	Z+48, r1	; 0x30
    126c:	11 aa       	std	Z+49, r1	; 0x31
    126e:	14 82       	std	Z+4, r1	; 0x04
    1270:	56 96       	adiw	r26, 0x16	; 22
    1272:	1d 92       	st	X+, r1
    1274:	1d 92       	st	X+, r1
    1276:	1d 92       	st	X+, r1
    1278:	1c 92       	st	X, r1
    127a:	59 97       	sbiw	r26, 0x19	; 25
    127c:	80 e0       	ldi	r24, 0x00	; 0
    127e:	d4 c0       	rjmp	.+424    	; 0x1428 <__stack+0x329>
    1280:	8b e0       	ldi	r24, 0x0B	; 11
    1282:	d2 c0       	rjmp	.+420    	; 0x1428 <__stack+0x329>
    1284:	8c e0       	ldi	r24, 0x0C	; 12
    1286:	d0 c0       	rjmp	.+416    	; 0x1428 <__stack+0x329>
    1288:	80 e0       	ldi	r24, 0x00	; 0
    128a:	ce c0       	rjmp	.+412    	; 0x1428 <__stack+0x329>
    128c:	80 e0       	ldi	r24, 0x00	; 0
    128e:	cc c0       	rjmp	.+408    	; 0x1428 <__stack+0x329>
    1290:	83 e0       	ldi	r24, 0x03	; 3
    1292:	ca c0       	rjmp	.+404    	; 0x1428 <__stack+0x329>
    1294:	8a e0       	ldi	r24, 0x0A	; 10
    1296:	c8 c0       	rjmp	.+400    	; 0x1428 <__stack+0x329>
    1298:	8d e0       	ldi	r24, 0x0D	; 13
    129a:	c6 c0       	rjmp	.+396    	; 0x1428 <__stack+0x329>
    129c:	81 e0       	ldi	r24, 0x01	; 1
    129e:	c4 c0       	rjmp	.+392    	; 0x1428 <__stack+0x329>
    12a0:	8d e0       	ldi	r24, 0x0D	; 13
    12a2:	c2 c0       	rjmp	.+388    	; 0x1428 <__stack+0x329>
    12a4:	8d e0       	ldi	r24, 0x0D	; 13
    12a6:	c0 c0       	rjmp	.+384    	; 0x1428 <__stack+0x329>
    12a8:	8d e0       	ldi	r24, 0x0D	; 13
    12aa:	be c0       	rjmp	.+380    	; 0x1428 <__stack+0x329>
    12ac:	8d e0       	ldi	r24, 0x0D	; 13
    12ae:	bc c0       	rjmp	.+376    	; 0x1428 <__stack+0x329>
    12b0:	8d e0       	ldi	r24, 0x0D	; 13
    12b2:	ba c0       	rjmp	.+372    	; 0x1428 <__stack+0x329>
    12b4:	8d e0       	ldi	r24, 0x0D	; 13
    12b6:	b8 c0       	rjmp	.+368    	; 0x1428 <__stack+0x329>
    12b8:	8d e0       	ldi	r24, 0x0D	; 13
    12ba:	b6 c0       	rjmp	.+364    	; 0x1428 <__stack+0x329>
    12bc:	8d e0       	ldi	r24, 0x0D	; 13
    12be:	b4 c0       	rjmp	.+360    	; 0x1428 <__stack+0x329>
    12c0:	8d e0       	ldi	r24, 0x0D	; 13
    12c2:	b2 c0       	rjmp	.+356    	; 0x1428 <__stack+0x329>
    12c4:	8d e0       	ldi	r24, 0x0D	; 13
    12c6:	b0 c0       	rjmp	.+352    	; 0x1428 <__stack+0x329>
    12c8:	8d e0       	ldi	r24, 0x0D	; 13
    12ca:	ae c0       	rjmp	.+348    	; 0x1428 <__stack+0x329>
    12cc:	8d e0       	ldi	r24, 0x0D	; 13
    12ce:	ac c0       	rjmp	.+344    	; 0x1428 <__stack+0x329>
    12d0:	8d e0       	ldi	r24, 0x0D	; 13
    12d2:	aa c0       	rjmp	.+340    	; 0x1428 <__stack+0x329>
    12d4:	69 01       	movw	r12, r18
    12d6:	7a 01       	movw	r14, r20
    12d8:	b2 e0       	ldi	r27, 0x02	; 2
    12da:	cb 0e       	add	r12, r27
    12dc:	d1 1c       	adc	r13, r1
    12de:	e1 1c       	adc	r14, r1
    12e0:	f1 1c       	adc	r15, r1
    12e2:	ed 85       	ldd	r30, Y+13	; 0x0d
    12e4:	fe 85       	ldd	r31, Y+14	; 0x0e
    12e6:	c2 8e       	std	Z+26, r12	; 0x1a
    12e8:	d3 8e       	std	Z+27, r13	; 0x1b
    12ea:	e4 8e       	std	Z+28, r14	; 0x1c
    12ec:	f5 8e       	std	Z+29, r15	; 0x1d
    12ee:	89 81       	ldd	r24, Y+1	; 0x01
    12f0:	9a 81       	ldd	r25, Y+2	; 0x02
    12f2:	ab 81       	ldd	r26, Y+3	; 0x03
    12f4:	bc 81       	ldd	r27, Y+4	; 0x04
    12f6:	84 0d       	add	r24, r4
    12f8:	95 1d       	adc	r25, r5
    12fa:	a6 1d       	adc	r26, r6
    12fc:	b7 1d       	adc	r27, r7
    12fe:	82 a7       	std	Z+42, r24	; 0x2a
    1300:	93 a7       	std	Z+43, r25	; 0x2b
    1302:	a4 a7       	std	Z+44, r26	; 0x2c
    1304:	b5 a7       	std	Z+45, r27	; 0x2d
    1306:	8d 81       	ldd	r24, Y+5	; 0x05
    1308:	9e 81       	ldd	r25, Y+6	; 0x06
    130a:	af 81       	ldd	r26, Y+7	; 0x07
    130c:	b8 85       	ldd	r27, Y+8	; 0x08
    130e:	84 0d       	add	r24, r4
    1310:	95 1d       	adc	r25, r5
    1312:	a6 1d       	adc	r26, r6
    1314:	b7 1d       	adc	r27, r7
    1316:	82 a3       	std	Z+34, r24	; 0x22
    1318:	93 a3       	std	Z+35, r25	; 0x23
    131a:	a4 a3       	std	Z+36, r26	; 0x24
    131c:	b5 a3       	std	Z+37, r27	; 0x25
    131e:	23 28       	or	r2, r3
    1320:	99 f6       	brne	.-90     	; 0x12c8 <__stack+0x1c9>
    1322:	f5 ce       	rjmp	.-534    	; 0x110e <__stack+0xf>
    1324:	8f ef       	ldi	r24, 0xFF	; 255
    1326:	9f ef       	ldi	r25, 0xFF	; 255
    1328:	dc 01       	movw	r26, r24
    132a:	ed 85       	ldd	r30, Y+13	; 0x0d
    132c:	fe 85       	ldd	r31, Y+14	; 0x0e
    132e:	86 87       	std	Z+14, r24	; 0x0e
    1330:	97 87       	std	Z+15, r25	; 0x0f
    1332:	a0 8b       	std	Z+16, r26	; 0x10
    1334:	b1 8b       	std	Z+17, r27	; 0x11
    1336:	12 86       	std	Z+10, r1	; 0x0a
    1338:	13 86       	std	Z+11, r1	; 0x0b
    133a:	14 86       	std	Z+12, r1	; 0x0c
    133c:	15 86       	std	Z+13, r1	; 0x0d
    133e:	82 cf       	rjmp	.-252    	; 0x1244 <__stack+0x145>
    1340:	bf ef       	ldi	r27, 0xFF	; 255
    1342:	cb 0e       	add	r12, r27
    1344:	b1 e0       	ldi	r27, 0x01	; 1
    1346:	db 1e       	adc	r13, r27
    1348:	e1 1c       	adc	r14, r1
    134a:	f1 1c       	adc	r15, r1
    134c:	0b 2e       	mov	r0, r27
    134e:	b9 e0       	ldi	r27, 0x09	; 9
    1350:	f6 94       	lsr	r15
    1352:	e7 94       	ror	r14
    1354:	d7 94       	ror	r13
    1356:	c7 94       	ror	r12
    1358:	ba 95       	dec	r27
    135a:	d1 f7       	brne	.-12     	; 0x1350 <__stack+0x251>
    135c:	b0 2d       	mov	r27, r0
    135e:	8c 14       	cp	r8, r12
    1360:	9d 04       	cpc	r9, r13
    1362:	ae 04       	cpc	r10, r14
    1364:	bf 04       	cpc	r11, r15
    1366:	08 f4       	brcc	.+2      	; 0x136a <__stack+0x26b>
    1368:	b1 cf       	rjmp	.-158    	; 0x12cc <__stack+0x1cd>
    136a:	dc cf       	rjmp	.-72     	; 0x1324 <__stack+0x225>
    136c:	8f ef       	ldi	r24, 0xFF	; 255
    136e:	9f ef       	ldi	r25, 0xFF	; 255
    1370:	dc 01       	movw	r26, r24
    1372:	ed 85       	ldd	r30, Y+13	; 0x0d
    1374:	fe 85       	ldd	r31, Y+14	; 0x0e
    1376:	86 87       	std	Z+14, r24	; 0x0e
    1378:	97 87       	std	Z+15, r25	; 0x0f
    137a:	a0 8b       	std	Z+16, r26	; 0x10
    137c:	b1 8b       	std	Z+17, r27	; 0x11
    137e:	df 01       	movw	r26, r30
    1380:	12 86       	std	Z+10, r1	; 0x0a
    1382:	13 86       	std	Z+11, r1	; 0x0b
    1384:	14 86       	std	Z+12, r1	; 0x0c
    1386:	15 86       	std	Z+13, r1	; 0x0d
    1388:	15 82       	std	Z+5, r1	; 0x05
    138a:	ee 59       	subi	r30, 0x9E	; 158
    138c:	ff 4f       	sbci	r31, 0xFF	; 255
    138e:	80 81       	ld	r24, Z
    1390:	91 81       	ldd	r25, Z+1	; 0x01
    1392:	a3 01       	movw	r20, r6
    1394:	92 01       	movw	r18, r4
    1396:	28 0f       	add	r18, r24
    1398:	39 1f       	adc	r19, r25
    139a:	41 1d       	adc	r20, r1
    139c:	51 1d       	adc	r21, r1
    139e:	fd 01       	movw	r30, r26
    13a0:	22 8b       	std	Z+18, r18	; 0x12
    13a2:	33 8b       	std	Z+19, r19	; 0x13
    13a4:	44 8b       	std	Z+20, r20	; 0x14
    13a6:	55 8b       	std	Z+21, r21	; 0x15
    13a8:	01 e0       	ldi	r16, 0x01	; 1
    13aa:	bd 01       	movw	r22, r26
    13ac:	6e 5c       	subi	r22, 0xCE	; 206
    13ae:	7f 4f       	sbci	r23, 0xFF	; 255
    13b0:	81 81       	ldd	r24, Z+1	; 0x01
    13b2:	03 da       	rcall	.-3066   	; 0x7ba <disk_read>
    13b4:	88 23       	and	r24, r24
    13b6:	09 f4       	brne	.+2      	; 0x13ba <__stack+0x2bb>
    13b8:	03 cf       	rjmp	.-506    	; 0x11c0 <__stack+0xc1>
    13ba:	13 e0       	ldi	r17, 0x03	; 3
    13bc:	43 cf       	rjmp	.-378    	; 0x1244 <__stack+0x145>
    13be:	69 01       	movw	r12, r18
    13c0:	7a 01       	movw	r14, r20
    13c2:	f2 e0       	ldi	r31, 0x02	; 2
    13c4:	cf 0e       	add	r12, r31
    13c6:	d1 1c       	adc	r13, r1
    13c8:	e1 1c       	adc	r14, r1
    13ca:	f1 1c       	adc	r15, r1
    13cc:	ad 85       	ldd	r26, Y+13	; 0x0d
    13ce:	be 85       	ldd	r27, Y+14	; 0x0e
    13d0:	5a 96       	adiw	r26, 0x1a	; 26
    13d2:	cd 92       	st	X+, r12
    13d4:	dd 92       	st	X+, r13
    13d6:	ed 92       	st	X+, r14
    13d8:	fc 92       	st	X, r15
    13da:	5d 97       	sbiw	r26, 0x1d	; 29
    13dc:	89 81       	ldd	r24, Y+1	; 0x01
    13de:	9a 81       	ldd	r25, Y+2	; 0x02
    13e0:	ab 81       	ldd	r26, Y+3	; 0x03
    13e2:	bc 81       	ldd	r27, Y+4	; 0x04
    13e4:	84 0d       	add	r24, r4
    13e6:	95 1d       	adc	r25, r5
    13e8:	a6 1d       	adc	r26, r6
    13ea:	b7 1d       	adc	r27, r7
    13ec:	ed 85       	ldd	r30, Y+13	; 0x0d
    13ee:	fe 85       	ldd	r31, Y+14	; 0x0e
    13f0:	82 a7       	std	Z+42, r24	; 0x2a
    13f2:	93 a7       	std	Z+43, r25	; 0x2b
    13f4:	a4 a7       	std	Z+44, r26	; 0x2c
    13f6:	b5 a7       	std	Z+45, r27	; 0x2d
    13f8:	8d 81       	ldd	r24, Y+5	; 0x05
    13fa:	9e 81       	ldd	r25, Y+6	; 0x06
    13fc:	af 81       	ldd	r26, Y+7	; 0x07
    13fe:	b8 85       	ldd	r27, Y+8	; 0x08
    1400:	84 0d       	add	r24, r4
    1402:	95 1d       	adc	r25, r5
    1404:	a6 1d       	adc	r26, r6
    1406:	b7 1d       	adc	r27, r7
    1408:	82 a3       	std	Z+34, r24	; 0x22
    140a:	93 a3       	std	Z+35, r25	; 0x23
    140c:	a4 a3       	std	Z+36, r26	; 0x24
    140e:	b5 a3       	std	Z+37, r27	; 0x25
    1410:	23 28       	or	r2, r3
    1412:	09 f4       	brne	.+2      	; 0x1416 <__stack+0x317>
    1414:	5d cf       	rjmp	.-326    	; 0x12d0 <__stack+0x1d1>
    1416:	a7 ce       	rjmp	.-690    	; 0x1166 <__stack+0x67>
    1418:	12 e0       	ldi	r17, 0x02	; 2
    141a:	86 3f       	cpi	r24, 0xF6	; 246
    141c:	9f 4f       	sbci	r25, 0xFF	; 255
    141e:	a1 05       	cpc	r26, r1
    1420:	b1 05       	cpc	r27, r1
    1422:	08 f0       	brcs	.+2      	; 0x1426 <__stack+0x327>
    1424:	57 cf       	rjmp	.-338    	; 0x12d4 <__stack+0x1d5>
    1426:	cb cf       	rjmp	.-106    	; 0x13be <__stack+0x2bf>
    1428:	2e 96       	adiw	r28, 0x0e	; 14
    142a:	0f b6       	in	r0, 0x3f	; 63
    142c:	f8 94       	cli
    142e:	de bf       	out	0x3e, r29	; 62
    1430:	0f be       	out	0x3f, r0	; 63
    1432:	cd bf       	out	0x3d, r28	; 61
    1434:	df 91       	pop	r29
    1436:	cf 91       	pop	r28
    1438:	1f 91       	pop	r17
    143a:	0f 91       	pop	r16
    143c:	ff 90       	pop	r15
    143e:	ef 90       	pop	r14
    1440:	df 90       	pop	r13
    1442:	cf 90       	pop	r12
    1444:	bf 90       	pop	r11
    1446:	af 90       	pop	r10
    1448:	9f 90       	pop	r9
    144a:	8f 90       	pop	r8
    144c:	7f 90       	pop	r7
    144e:	6f 90       	pop	r6
    1450:	5f 90       	pop	r5
    1452:	4f 90       	pop	r4
    1454:	3f 90       	pop	r3
    1456:	2f 90       	pop	r2
    1458:	08 95       	ret

0000145a <sync>:
    145a:	ef 92       	push	r14
    145c:	ff 92       	push	r15
    145e:	0f 93       	push	r16
    1460:	cf 93       	push	r28
    1462:	df 93       	push	r29
    1464:	ec 01       	movw	r28, r24
    1466:	40 e0       	ldi	r20, 0x00	; 0
    1468:	50 e0       	ldi	r21, 0x00	; 0
    146a:	ba 01       	movw	r22, r20
    146c:	3b dc       	rcall	.-1930   	; 0xce4 <move_window>
    146e:	98 2f       	mov	r25, r24
    1470:	81 11       	cpse	r24, r1
    1472:	52 c0       	rjmp	.+164    	; 0x1518 <sync+0xbe>
    1474:	88 81       	ld	r24, Y
    1476:	83 30       	cpi	r24, 0x03	; 3
    1478:	09 f0       	breq	.+2      	; 0x147c <sync+0x22>
    147a:	45 c0       	rjmp	.+138    	; 0x1506 <sync+0xac>
    147c:	8d 81       	ldd	r24, Y+5	; 0x05
    147e:	88 23       	and	r24, r24
    1480:	09 f4       	brne	.+2      	; 0x1484 <sync+0x2a>
    1482:	41 c0       	rjmp	.+130    	; 0x1506 <sync+0xac>
    1484:	1e a6       	std	Y+46, r1	; 0x2e
    1486:	1f a6       	std	Y+47, r1	; 0x2f
    1488:	18 aa       	std	Y+48, r1	; 0x30
    148a:	19 aa       	std	Y+49, r1	; 0x31
    148c:	40 e0       	ldi	r20, 0x00	; 0
    148e:	52 e0       	ldi	r21, 0x02	; 2
    1490:	60 e0       	ldi	r22, 0x00	; 0
    1492:	70 e0       	ldi	r23, 0x00	; 0
    1494:	7e 01       	movw	r14, r28
    1496:	82 e3       	ldi	r24, 0x32	; 50
    1498:	e8 0e       	add	r14, r24
    149a:	f1 1c       	adc	r15, r1
    149c:	c7 01       	movw	r24, r14
    149e:	17 dc       	rcall	.-2002   	; 0xcce <mem_set>
    14a0:	85 e5       	ldi	r24, 0x55	; 85
    14a2:	9a ea       	ldi	r25, 0xAA	; 170
    14a4:	fe 01       	movw	r30, r28
    14a6:	e0 5d       	subi	r30, 0xD0	; 208
    14a8:	fd 4f       	sbci	r31, 0xFD	; 253
    14aa:	91 83       	std	Z+1, r25	; 0x01
    14ac:	80 83       	st	Z, r24
    14ae:	82 e5       	ldi	r24, 0x52	; 82
    14b0:	92 e5       	ldi	r25, 0x52	; 82
    14b2:	a1 e6       	ldi	r26, 0x61	; 97
    14b4:	b1 e4       	ldi	r27, 0x41	; 65
    14b6:	8a ab       	std	Y+50, r24	; 0x32
    14b8:	9b ab       	std	Y+51, r25	; 0x33
    14ba:	ac ab       	std	Y+52, r26	; 0x34
    14bc:	bd ab       	std	Y+53, r27	; 0x35
    14be:	82 e7       	ldi	r24, 0x72	; 114
    14c0:	92 e7       	ldi	r25, 0x72	; 114
    14c2:	a1 e4       	ldi	r26, 0x41	; 65
    14c4:	b1 e6       	ldi	r27, 0x61	; 97
    14c6:	7a 97       	sbiw	r30, 0x1a	; 26
    14c8:	80 83       	st	Z, r24
    14ca:	91 83       	std	Z+1, r25	; 0x01
    14cc:	a2 83       	std	Z+2, r26	; 0x02
    14ce:	b3 83       	std	Z+3, r27	; 0x03
    14d0:	8e 85       	ldd	r24, Y+14	; 0x0e
    14d2:	9f 85       	ldd	r25, Y+15	; 0x0f
    14d4:	a8 89       	ldd	r26, Y+16	; 0x10
    14d6:	b9 89       	ldd	r27, Y+17	; 0x11
    14d8:	34 96       	adiw	r30, 0x04	; 4
    14da:	80 83       	st	Z, r24
    14dc:	91 83       	std	Z+1, r25	; 0x01
    14de:	a2 83       	std	Z+2, r26	; 0x02
    14e0:	b3 83       	std	Z+3, r27	; 0x03
    14e2:	8a 85       	ldd	r24, Y+10	; 0x0a
    14e4:	9b 85       	ldd	r25, Y+11	; 0x0b
    14e6:	ac 85       	ldd	r26, Y+12	; 0x0c
    14e8:	bd 85       	ldd	r27, Y+13	; 0x0d
    14ea:	34 96       	adiw	r30, 0x04	; 4
    14ec:	80 83       	st	Z, r24
    14ee:	91 83       	std	Z+1, r25	; 0x01
    14f0:	a2 83       	std	Z+2, r26	; 0x02
    14f2:	b3 83       	std	Z+3, r27	; 0x03
    14f4:	2a 89       	ldd	r18, Y+18	; 0x12
    14f6:	3b 89       	ldd	r19, Y+19	; 0x13
    14f8:	4c 89       	ldd	r20, Y+20	; 0x14
    14fa:	5d 89       	ldd	r21, Y+21	; 0x15
    14fc:	01 e0       	ldi	r16, 0x01	; 1
    14fe:	b7 01       	movw	r22, r14
    1500:	89 81       	ldd	r24, Y+1	; 0x01
    1502:	a8 d9       	rcall	.-3248   	; 0x854 <disk_write>
    1504:	1d 82       	std	Y+5, r1	; 0x05
    1506:	40 e0       	ldi	r20, 0x00	; 0
    1508:	50 e0       	ldi	r21, 0x00	; 0
    150a:	60 e0       	ldi	r22, 0x00	; 0
    150c:	89 81       	ldd	r24, Y+1	; 0x01
    150e:	07 da       	rcall	.-3058   	; 0x91e <disk_ioctl>
    1510:	91 e0       	ldi	r25, 0x01	; 1
    1512:	81 11       	cpse	r24, r1
    1514:	01 c0       	rjmp	.+2      	; 0x1518 <sync+0xbe>
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	89 2f       	mov	r24, r25
    151a:	df 91       	pop	r29
    151c:	cf 91       	pop	r28
    151e:	0f 91       	pop	r16
    1520:	ff 90       	pop	r15
    1522:	ef 90       	pop	r14
    1524:	08 95       	ret

00001526 <get_fat>:
    1526:	af 92       	push	r10
    1528:	bf 92       	push	r11
    152a:	cf 92       	push	r12
    152c:	df 92       	push	r13
    152e:	ef 92       	push	r14
    1530:	ff 92       	push	r15
    1532:	1f 93       	push	r17
    1534:	cf 93       	push	r28
    1536:	df 93       	push	r29
    1538:	ec 01       	movw	r28, r24
    153a:	6a 01       	movw	r12, r20
    153c:	7b 01       	movw	r14, r22
    153e:	42 30       	cpi	r20, 0x02	; 2
    1540:	51 05       	cpc	r21, r1
    1542:	61 05       	cpc	r22, r1
    1544:	71 05       	cpc	r23, r1
    1546:	08 f4       	brcc	.+2      	; 0x154a <get_fat+0x24>
    1548:	a6 c0       	rjmp	.+332    	; 0x1696 <get_fat+0x170>
    154a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    154c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    154e:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1550:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1552:	48 17       	cp	r20, r24
    1554:	59 07       	cpc	r21, r25
    1556:	6a 07       	cpc	r22, r26
    1558:	7b 07       	cpc	r23, r27
    155a:	08 f0       	brcs	.+2      	; 0x155e <get_fat+0x38>
    155c:	a1 c0       	rjmp	.+322    	; 0x16a0 <get_fat+0x17a>
    155e:	88 81       	ld	r24, Y
    1560:	82 30       	cpi	r24, 0x02	; 2
    1562:	09 f4       	brne	.+2      	; 0x1566 <get_fat+0x40>
    1564:	4a c0       	rjmp	.+148    	; 0x15fa <get_fat+0xd4>
    1566:	83 30       	cpi	r24, 0x03	; 3
    1568:	09 f4       	brne	.+2      	; 0x156c <get_fat+0x46>
    156a:	68 c0       	rjmp	.+208    	; 0x163c <get_fat+0x116>
    156c:	81 30       	cpi	r24, 0x01	; 1
    156e:	09 f0       	breq	.+2      	; 0x1572 <get_fat+0x4c>
    1570:	9c c0       	rjmp	.+312    	; 0x16aa <get_fat+0x184>
    1572:	5a 01       	movw	r10, r20
    1574:	b6 94       	lsr	r11
    1576:	a7 94       	ror	r10
    1578:	a4 0e       	add	r10, r20
    157a:	b5 1e       	adc	r11, r21
    157c:	c5 01       	movw	r24, r10
    157e:	89 2f       	mov	r24, r25
    1580:	99 27       	eor	r25, r25
    1582:	86 95       	lsr	r24
    1584:	4a a1       	ldd	r20, Y+34	; 0x22
    1586:	5b a1       	ldd	r21, Y+35	; 0x23
    1588:	6c a1       	ldd	r22, Y+36	; 0x24
    158a:	7d a1       	ldd	r23, Y+37	; 0x25
    158c:	48 0f       	add	r20, r24
    158e:	59 1f       	adc	r21, r25
    1590:	61 1d       	adc	r22, r1
    1592:	71 1d       	adc	r23, r1
    1594:	ce 01       	movw	r24, r28
    1596:	a6 db       	rcall	.-2228   	; 0xce4 <move_window>
    1598:	81 11       	cpse	r24, r1
    159a:	8b c0       	rjmp	.+278    	; 0x16b2 <get_fat+0x18c>
    159c:	f5 01       	movw	r30, r10
    159e:	f1 70       	andi	r31, 0x01	; 1
    15a0:	ec 0f       	add	r30, r28
    15a2:	fd 1f       	adc	r31, r29
    15a4:	12 a9       	ldd	r17, Z+50	; 0x32
    15a6:	8f ef       	ldi	r24, 0xFF	; 255
    15a8:	a8 1a       	sub	r10, r24
    15aa:	b8 0a       	sbc	r11, r24
    15ac:	c5 01       	movw	r24, r10
    15ae:	89 2f       	mov	r24, r25
    15b0:	99 27       	eor	r25, r25
    15b2:	86 95       	lsr	r24
    15b4:	4a a1       	ldd	r20, Y+34	; 0x22
    15b6:	5b a1       	ldd	r21, Y+35	; 0x23
    15b8:	6c a1       	ldd	r22, Y+36	; 0x24
    15ba:	7d a1       	ldd	r23, Y+37	; 0x25
    15bc:	48 0f       	add	r20, r24
    15be:	59 1f       	adc	r21, r25
    15c0:	61 1d       	adc	r22, r1
    15c2:	71 1d       	adc	r23, r1
    15c4:	ce 01       	movw	r24, r28
    15c6:	8e db       	rcall	.-2276   	; 0xce4 <move_window>
    15c8:	81 11       	cpse	r24, r1
    15ca:	77 c0       	rjmp	.+238    	; 0x16ba <get_fat+0x194>
    15cc:	81 e0       	ldi	r24, 0x01	; 1
    15ce:	b8 22       	and	r11, r24
    15d0:	ca 0d       	add	r28, r10
    15d2:	db 1d       	adc	r29, r11
    15d4:	8a a9       	ldd	r24, Y+50	; 0x32
    15d6:	61 2f       	mov	r22, r17
    15d8:	70 e0       	ldi	r23, 0x00	; 0
    15da:	78 2b       	or	r23, r24
    15dc:	c0 fe       	sbrs	r12, 0
    15de:	09 c0       	rjmp	.+18     	; 0x15f2 <get_fat+0xcc>
    15e0:	72 95       	swap	r23
    15e2:	62 95       	swap	r22
    15e4:	6f 70       	andi	r22, 0x0F	; 15
    15e6:	67 27       	eor	r22, r23
    15e8:	7f 70       	andi	r23, 0x0F	; 15
    15ea:	67 27       	eor	r22, r23
    15ec:	80 e0       	ldi	r24, 0x00	; 0
    15ee:	90 e0       	ldi	r25, 0x00	; 0
    15f0:	6f c0       	rjmp	.+222    	; 0x16d0 <get_fat+0x1aa>
    15f2:	7f 70       	andi	r23, 0x0F	; 15
    15f4:	80 e0       	ldi	r24, 0x00	; 0
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	6b c0       	rjmp	.+214    	; 0x16d0 <get_fat+0x1aa>
    15fa:	45 2f       	mov	r20, r21
    15fc:	56 2f       	mov	r21, r22
    15fe:	67 2f       	mov	r22, r23
    1600:	77 27       	eor	r23, r23
    1602:	8a a1       	ldd	r24, Y+34	; 0x22
    1604:	9b a1       	ldd	r25, Y+35	; 0x23
    1606:	ac a1       	ldd	r26, Y+36	; 0x24
    1608:	bd a1       	ldd	r27, Y+37	; 0x25
    160a:	48 0f       	add	r20, r24
    160c:	59 1f       	adc	r21, r25
    160e:	6a 1f       	adc	r22, r26
    1610:	7b 1f       	adc	r23, r27
    1612:	ce 01       	movw	r24, r28
    1614:	67 db       	rcall	.-2354   	; 0xce4 <move_window>
    1616:	81 11       	cpse	r24, r1
    1618:	54 c0       	rjmp	.+168    	; 0x16c2 <get_fat+0x19c>
    161a:	cc 0c       	add	r12, r12
    161c:	dd 1c       	adc	r13, r13
    161e:	ee 1c       	adc	r14, r14
    1620:	ff 1c       	adc	r15, r15
    1622:	e8 94       	clt
    1624:	c0 f8       	bld	r12, 0
    1626:	81 e0       	ldi	r24, 0x01	; 1
    1628:	d8 22       	and	r13, r24
    162a:	ee 24       	eor	r14, r14
    162c:	ff 24       	eor	r15, r15
    162e:	cc 0d       	add	r28, r12
    1630:	dd 1d       	adc	r29, r13
    1632:	6a a9       	ldd	r22, Y+50	; 0x32
    1634:	7b a9       	ldd	r23, Y+51	; 0x33
    1636:	80 e0       	ldi	r24, 0x00	; 0
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	4a c0       	rjmp	.+148    	; 0x16d0 <get_fat+0x1aa>
    163c:	8a a1       	ldd	r24, Y+34	; 0x22
    163e:	9b a1       	ldd	r25, Y+35	; 0x23
    1640:	ac a1       	ldd	r26, Y+36	; 0x24
    1642:	bd a1       	ldd	r27, Y+37	; 0x25
    1644:	68 94       	set
    1646:	16 f8       	bld	r1, 6
    1648:	76 95       	lsr	r23
    164a:	67 95       	ror	r22
    164c:	57 95       	ror	r21
    164e:	47 95       	ror	r20
    1650:	16 94       	lsr	r1
    1652:	d1 f7       	brne	.-12     	; 0x1648 <get_fat+0x122>
    1654:	48 0f       	add	r20, r24
    1656:	59 1f       	adc	r21, r25
    1658:	6a 1f       	adc	r22, r26
    165a:	7b 1f       	adc	r23, r27
    165c:	ce 01       	movw	r24, r28
    165e:	42 db       	rcall	.-2428   	; 0xce4 <move_window>
    1660:	81 11       	cpse	r24, r1
    1662:	33 c0       	rjmp	.+102    	; 0x16ca <get_fat+0x1a4>
    1664:	cc 0c       	add	r12, r12
    1666:	dd 1c       	adc	r13, r13
    1668:	ee 1c       	adc	r14, r14
    166a:	ff 1c       	adc	r15, r15
    166c:	cc 0c       	add	r12, r12
    166e:	dd 1c       	adc	r13, r13
    1670:	ee 1c       	adc	r14, r14
    1672:	ff 1c       	adc	r15, r15
    1674:	8c ef       	ldi	r24, 0xFC	; 252
    1676:	c8 22       	and	r12, r24
    1678:	81 e0       	ldi	r24, 0x01	; 1
    167a:	d8 22       	and	r13, r24
    167c:	ee 24       	eor	r14, r14
    167e:	ff 24       	eor	r15, r15
    1680:	fe 01       	movw	r30, r28
    1682:	ec 0d       	add	r30, r12
    1684:	fd 1d       	adc	r31, r13
    1686:	82 a9       	ldd	r24, Z+50	; 0x32
    1688:	93 a9       	ldd	r25, Z+51	; 0x33
    168a:	a4 a9       	ldd	r26, Z+52	; 0x34
    168c:	b5 a9       	ldd	r27, Z+53	; 0x35
    168e:	bc 01       	movw	r22, r24
    1690:	cd 01       	movw	r24, r26
    1692:	9f 70       	andi	r25, 0x0F	; 15
    1694:	1d c0       	rjmp	.+58     	; 0x16d0 <get_fat+0x1aa>
    1696:	61 e0       	ldi	r22, 0x01	; 1
    1698:	70 e0       	ldi	r23, 0x00	; 0
    169a:	80 e0       	ldi	r24, 0x00	; 0
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	18 c0       	rjmp	.+48     	; 0x16d0 <get_fat+0x1aa>
    16a0:	61 e0       	ldi	r22, 0x01	; 1
    16a2:	70 e0       	ldi	r23, 0x00	; 0
    16a4:	80 e0       	ldi	r24, 0x00	; 0
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	13 c0       	rjmp	.+38     	; 0x16d0 <get_fat+0x1aa>
    16aa:	6f ef       	ldi	r22, 0xFF	; 255
    16ac:	7f ef       	ldi	r23, 0xFF	; 255
    16ae:	cb 01       	movw	r24, r22
    16b0:	0f c0       	rjmp	.+30     	; 0x16d0 <get_fat+0x1aa>
    16b2:	6f ef       	ldi	r22, 0xFF	; 255
    16b4:	7f ef       	ldi	r23, 0xFF	; 255
    16b6:	cb 01       	movw	r24, r22
    16b8:	0b c0       	rjmp	.+22     	; 0x16d0 <get_fat+0x1aa>
    16ba:	6f ef       	ldi	r22, 0xFF	; 255
    16bc:	7f ef       	ldi	r23, 0xFF	; 255
    16be:	cb 01       	movw	r24, r22
    16c0:	07 c0       	rjmp	.+14     	; 0x16d0 <get_fat+0x1aa>
    16c2:	6f ef       	ldi	r22, 0xFF	; 255
    16c4:	7f ef       	ldi	r23, 0xFF	; 255
    16c6:	cb 01       	movw	r24, r22
    16c8:	03 c0       	rjmp	.+6      	; 0x16d0 <get_fat+0x1aa>
    16ca:	6f ef       	ldi	r22, 0xFF	; 255
    16cc:	7f ef       	ldi	r23, 0xFF	; 255
    16ce:	cb 01       	movw	r24, r22
    16d0:	df 91       	pop	r29
    16d2:	cf 91       	pop	r28
    16d4:	1f 91       	pop	r17
    16d6:	ff 90       	pop	r15
    16d8:	ef 90       	pop	r14
    16da:	df 90       	pop	r13
    16dc:	cf 90       	pop	r12
    16de:	bf 90       	pop	r11
    16e0:	af 90       	pop	r10
    16e2:	08 95       	ret

000016e4 <put_fat>:
    16e4:	4f 92       	push	r4
    16e6:	5f 92       	push	r5
    16e8:	6f 92       	push	r6
    16ea:	7f 92       	push	r7
    16ec:	af 92       	push	r10
    16ee:	bf 92       	push	r11
    16f0:	cf 92       	push	r12
    16f2:	df 92       	push	r13
    16f4:	ef 92       	push	r14
    16f6:	ff 92       	push	r15
    16f8:	0f 93       	push	r16
    16fa:	1f 93       	push	r17
    16fc:	cf 93       	push	r28
    16fe:	df 93       	push	r29
    1700:	ec 01       	movw	r28, r24
    1702:	6a 01       	movw	r12, r20
    1704:	7b 01       	movw	r14, r22
    1706:	28 01       	movw	r4, r16
    1708:	39 01       	movw	r6, r18
    170a:	42 30       	cpi	r20, 0x02	; 2
    170c:	51 05       	cpc	r21, r1
    170e:	61 05       	cpc	r22, r1
    1710:	71 05       	cpc	r23, r1
    1712:	08 f4       	brcc	.+2      	; 0x1716 <put_fat+0x32>
    1714:	d4 c0       	rjmp	.+424    	; 0x18be <put_fat+0x1da>
    1716:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1718:	9b 8d       	ldd	r25, Y+27	; 0x1b
    171a:	ac 8d       	ldd	r26, Y+28	; 0x1c
    171c:	bd 8d       	ldd	r27, Y+29	; 0x1d
    171e:	48 17       	cp	r20, r24
    1720:	59 07       	cpc	r21, r25
    1722:	6a 07       	cpc	r22, r26
    1724:	7b 07       	cpc	r23, r27
    1726:	08 f0       	brcs	.+2      	; 0x172a <put_fat+0x46>
    1728:	cc c0       	rjmp	.+408    	; 0x18c2 <put_fat+0x1de>
    172a:	88 81       	ld	r24, Y
    172c:	82 30       	cpi	r24, 0x02	; 2
    172e:	09 f4       	brne	.+2      	; 0x1732 <put_fat+0x4e>
    1730:	60 c0       	rjmp	.+192    	; 0x17f2 <put_fat+0x10e>
    1732:	83 30       	cpi	r24, 0x03	; 3
    1734:	09 f4       	brne	.+2      	; 0x1738 <put_fat+0x54>
    1736:	81 c0       	rjmp	.+258    	; 0x183a <put_fat+0x156>
    1738:	81 30       	cpi	r24, 0x01	; 1
    173a:	09 f0       	breq	.+2      	; 0x173e <put_fat+0x5a>
    173c:	b8 c0       	rjmp	.+368    	; 0x18ae <put_fat+0x1ca>
    173e:	5a 01       	movw	r10, r20
    1740:	b6 94       	lsr	r11
    1742:	a7 94       	ror	r10
    1744:	a4 0e       	add	r10, r20
    1746:	b5 1e       	adc	r11, r21
    1748:	c5 01       	movw	r24, r10
    174a:	89 2f       	mov	r24, r25
    174c:	99 27       	eor	r25, r25
    174e:	86 95       	lsr	r24
    1750:	4a a1       	ldd	r20, Y+34	; 0x22
    1752:	5b a1       	ldd	r21, Y+35	; 0x23
    1754:	6c a1       	ldd	r22, Y+36	; 0x24
    1756:	7d a1       	ldd	r23, Y+37	; 0x25
    1758:	48 0f       	add	r20, r24
    175a:	59 1f       	adc	r21, r25
    175c:	61 1d       	adc	r22, r1
    175e:	71 1d       	adc	r23, r1
    1760:	ce 01       	movw	r24, r28
    1762:	c0 da       	rcall	.-2688   	; 0xce4 <move_window>
    1764:	18 2f       	mov	r17, r24
    1766:	81 11       	cpse	r24, r1
    1768:	a7 c0       	rjmp	.+334    	; 0x18b8 <put_fat+0x1d4>
    176a:	c5 01       	movw	r24, r10
    176c:	91 70       	andi	r25, 0x01	; 1
    176e:	c0 fe       	sbrs	r12, 0
    1770:	22 c0       	rjmp	.+68     	; 0x17b6 <put_fat+0xd2>
    1772:	fe 01       	movw	r30, r28
    1774:	e8 0f       	add	r30, r24
    1776:	f9 1f       	adc	r31, r25
    1778:	82 a9       	ldd	r24, Z+50	; 0x32
    177a:	28 2f       	mov	r18, r24
    177c:	2f 70       	andi	r18, 0x0F	; 15
    177e:	30 e1       	ldi	r19, 0x10	; 16
    1780:	43 9e       	mul	r4, r19
    1782:	c0 01       	movw	r24, r0
    1784:	11 24       	eor	r1, r1
    1786:	82 2b       	or	r24, r18
    1788:	82 ab       	std	Z+50, r24	; 0x32
    178a:	8f ef       	ldi	r24, 0xFF	; 255
    178c:	a8 1a       	sub	r10, r24
    178e:	b8 0a       	sbc	r11, r24
    1790:	81 e0       	ldi	r24, 0x01	; 1
    1792:	8c 83       	std	Y+4, r24	; 0x04
    1794:	c5 01       	movw	r24, r10
    1796:	89 2f       	mov	r24, r25
    1798:	99 27       	eor	r25, r25
    179a:	86 95       	lsr	r24
    179c:	4a a1       	ldd	r20, Y+34	; 0x22
    179e:	5b a1       	ldd	r21, Y+35	; 0x23
    17a0:	6c a1       	ldd	r22, Y+36	; 0x24
    17a2:	7d a1       	ldd	r23, Y+37	; 0x25
    17a4:	48 0f       	add	r20, r24
    17a6:	59 1f       	adc	r21, r25
    17a8:	61 1d       	adc	r22, r1
    17aa:	71 1d       	adc	r23, r1
    17ac:	ce 01       	movw	r24, r28
    17ae:	9a da       	rcall	.-2764   	; 0xce4 <move_window>
    17b0:	81 11       	cpse	r24, r1
    17b2:	7f c0       	rjmp	.+254    	; 0x18b2 <put_fat+0x1ce>
    17b4:	88 c0       	rjmp	.+272    	; 0x18c6 <put_fat+0x1e2>
    17b6:	fe 01       	movw	r30, r28
    17b8:	e8 0f       	add	r30, r24
    17ba:	f9 1f       	adc	r31, r25
    17bc:	42 aa       	std	Z+50, r4	; 0x32
    17be:	3f ef       	ldi	r19, 0xFF	; 255
    17c0:	a3 1a       	sub	r10, r19
    17c2:	b3 0a       	sbc	r11, r19
    17c4:	81 e0       	ldi	r24, 0x01	; 1
    17c6:	8c 83       	std	Y+4, r24	; 0x04
    17c8:	c5 01       	movw	r24, r10
    17ca:	89 2f       	mov	r24, r25
    17cc:	99 27       	eor	r25, r25
    17ce:	86 95       	lsr	r24
    17d0:	4a a1       	ldd	r20, Y+34	; 0x22
    17d2:	5b a1       	ldd	r21, Y+35	; 0x23
    17d4:	6c a1       	ldd	r22, Y+36	; 0x24
    17d6:	7d a1       	ldd	r23, Y+37	; 0x25
    17d8:	48 0f       	add	r20, r24
    17da:	59 1f       	adc	r21, r25
    17dc:	61 1d       	adc	r22, r1
    17de:	71 1d       	adc	r23, r1
    17e0:	ce 01       	movw	r24, r28
    17e2:	80 da       	rcall	.-2816   	; 0xce4 <move_window>
    17e4:	81 11       	cpse	r24, r1
    17e6:	67 c0       	rjmp	.+206    	; 0x18b6 <put_fat+0x1d2>
    17e8:	79 c0       	rjmp	.+242    	; 0x18dc <put_fat+0x1f8>
    17ea:	ec 0f       	add	r30, r28
    17ec:	fd 1f       	adc	r31, r29
    17ee:	42 aa       	std	Z+50, r4	; 0x32
    17f0:	63 c0       	rjmp	.+198    	; 0x18b8 <put_fat+0x1d4>
    17f2:	45 2f       	mov	r20, r21
    17f4:	56 2f       	mov	r21, r22
    17f6:	67 2f       	mov	r22, r23
    17f8:	77 27       	eor	r23, r23
    17fa:	8a a1       	ldd	r24, Y+34	; 0x22
    17fc:	9b a1       	ldd	r25, Y+35	; 0x23
    17fe:	ac a1       	ldd	r26, Y+36	; 0x24
    1800:	bd a1       	ldd	r27, Y+37	; 0x25
    1802:	48 0f       	add	r20, r24
    1804:	59 1f       	adc	r21, r25
    1806:	6a 1f       	adc	r22, r26
    1808:	7b 1f       	adc	r23, r27
    180a:	ce 01       	movw	r24, r28
    180c:	6b da       	rcall	.-2858   	; 0xce4 <move_window>
    180e:	18 2f       	mov	r17, r24
    1810:	81 11       	cpse	r24, r1
    1812:	52 c0       	rjmp	.+164    	; 0x18b8 <put_fat+0x1d4>
    1814:	cc 0c       	add	r12, r12
    1816:	dd 1c       	adc	r13, r13
    1818:	ee 1c       	adc	r14, r14
    181a:	ff 1c       	adc	r15, r15
    181c:	e8 94       	clt
    181e:	c0 f8       	bld	r12, 0
    1820:	81 e0       	ldi	r24, 0x01	; 1
    1822:	d8 22       	and	r13, r24
    1824:	ee 24       	eor	r14, r14
    1826:	ff 24       	eor	r15, r15
    1828:	32 e3       	ldi	r19, 0x32	; 50
    182a:	c3 0e       	add	r12, r19
    182c:	d1 1c       	adc	r13, r1
    182e:	fe 01       	movw	r30, r28
    1830:	ec 0d       	add	r30, r12
    1832:	fd 1d       	adc	r31, r13
    1834:	51 82       	std	Z+1, r5	; 0x01
    1836:	40 82       	st	Z, r4
    1838:	3f c0       	rjmp	.+126    	; 0x18b8 <put_fat+0x1d4>
    183a:	8a a1       	ldd	r24, Y+34	; 0x22
    183c:	9b a1       	ldd	r25, Y+35	; 0x23
    183e:	ac a1       	ldd	r26, Y+36	; 0x24
    1840:	bd a1       	ldd	r27, Y+37	; 0x25
    1842:	68 94       	set
    1844:	16 f8       	bld	r1, 6
    1846:	76 95       	lsr	r23
    1848:	67 95       	ror	r22
    184a:	57 95       	ror	r21
    184c:	47 95       	ror	r20
    184e:	16 94       	lsr	r1
    1850:	d1 f7       	brne	.-12     	; 0x1846 <put_fat+0x162>
    1852:	48 0f       	add	r20, r24
    1854:	59 1f       	adc	r21, r25
    1856:	6a 1f       	adc	r22, r26
    1858:	7b 1f       	adc	r23, r27
    185a:	ce 01       	movw	r24, r28
    185c:	43 da       	rcall	.-2938   	; 0xce4 <move_window>
    185e:	18 2f       	mov	r17, r24
    1860:	81 11       	cpse	r24, r1
    1862:	2a c0       	rjmp	.+84     	; 0x18b8 <put_fat+0x1d4>
    1864:	cc 0c       	add	r12, r12
    1866:	dd 1c       	adc	r13, r13
    1868:	ee 1c       	adc	r14, r14
    186a:	ff 1c       	adc	r15, r15
    186c:	cc 0c       	add	r12, r12
    186e:	dd 1c       	adc	r13, r13
    1870:	ee 1c       	adc	r14, r14
    1872:	ff 1c       	adc	r15, r15
    1874:	8c ef       	ldi	r24, 0xFC	; 252
    1876:	c8 22       	and	r12, r24
    1878:	81 e0       	ldi	r24, 0x01	; 1
    187a:	d8 22       	and	r13, r24
    187c:	ee 24       	eor	r14, r14
    187e:	ff 24       	eor	r15, r15
    1880:	32 e3       	ldi	r19, 0x32	; 50
    1882:	c3 0e       	add	r12, r19
    1884:	d1 1c       	adc	r13, r1
    1886:	fe 01       	movw	r30, r28
    1888:	ec 0d       	add	r30, r12
    188a:	fd 1d       	adc	r31, r13
    188c:	80 81       	ld	r24, Z
    188e:	91 81       	ldd	r25, Z+1	; 0x01
    1890:	a2 81       	ldd	r26, Z+2	; 0x02
    1892:	b3 81       	ldd	r27, Z+3	; 0x03
    1894:	88 27       	eor	r24, r24
    1896:	99 27       	eor	r25, r25
    1898:	aa 27       	eor	r26, r26
    189a:	b0 7f       	andi	r27, 0xF0	; 240
    189c:	48 2a       	or	r4, r24
    189e:	59 2a       	or	r5, r25
    18a0:	6a 2a       	or	r6, r26
    18a2:	7b 2a       	or	r7, r27
    18a4:	40 82       	st	Z, r4
    18a6:	51 82       	std	Z+1, r5	; 0x01
    18a8:	62 82       	std	Z+2, r6	; 0x02
    18aa:	73 82       	std	Z+3, r7	; 0x03
    18ac:	05 c0       	rjmp	.+10     	; 0x18b8 <put_fat+0x1d4>
    18ae:	12 e0       	ldi	r17, 0x02	; 2
    18b0:	03 c0       	rjmp	.+6      	; 0x18b8 <put_fat+0x1d4>
    18b2:	18 2f       	mov	r17, r24
    18b4:	01 c0       	rjmp	.+2      	; 0x18b8 <put_fat+0x1d4>
    18b6:	18 2f       	mov	r17, r24
    18b8:	81 e0       	ldi	r24, 0x01	; 1
    18ba:	8c 83       	std	Y+4, r24	; 0x04
    18bc:	1c c0       	rjmp	.+56     	; 0x18f6 <put_fat+0x212>
    18be:	12 e0       	ldi	r17, 0x02	; 2
    18c0:	1a c0       	rjmp	.+52     	; 0x18f6 <put_fat+0x212>
    18c2:	12 e0       	ldi	r17, 0x02	; 2
    18c4:	18 c0       	rjmp	.+48     	; 0x18f6 <put_fat+0x212>
    18c6:	f5 01       	movw	r30, r10
    18c8:	f1 70       	andi	r31, 0x01	; 1
    18ca:	68 94       	set
    18cc:	13 f8       	bld	r1, 3
    18ce:	76 94       	lsr	r7
    18d0:	67 94       	ror	r6
    18d2:	57 94       	ror	r5
    18d4:	47 94       	ror	r4
    18d6:	16 94       	lsr	r1
    18d8:	d1 f7       	brne	.-12     	; 0x18ce <put_fat+0x1ea>
    18da:	87 cf       	rjmp	.-242    	; 0x17ea <put_fat+0x106>
    18dc:	f5 01       	movw	r30, r10
    18de:	f1 70       	andi	r31, 0x01	; 1
    18e0:	de 01       	movw	r26, r28
    18e2:	ae 0f       	add	r26, r30
    18e4:	bf 1f       	adc	r27, r31
    18e6:	d2 96       	adiw	r26, 0x32	; 50
    18e8:	9c 91       	ld	r25, X
    18ea:	90 7f       	andi	r25, 0xF0	; 240
    18ec:	85 2d       	mov	r24, r5
    18ee:	8f 70       	andi	r24, 0x0F	; 15
    18f0:	49 2e       	mov	r4, r25
    18f2:	48 2a       	or	r4, r24
    18f4:	7a cf       	rjmp	.-268    	; 0x17ea <put_fat+0x106>
    18f6:	81 2f       	mov	r24, r17
    18f8:	df 91       	pop	r29
    18fa:	cf 91       	pop	r28
    18fc:	1f 91       	pop	r17
    18fe:	0f 91       	pop	r16
    1900:	ff 90       	pop	r15
    1902:	ef 90       	pop	r14
    1904:	df 90       	pop	r13
    1906:	cf 90       	pop	r12
    1908:	bf 90       	pop	r11
    190a:	af 90       	pop	r10
    190c:	7f 90       	pop	r7
    190e:	6f 90       	pop	r6
    1910:	5f 90       	pop	r5
    1912:	4f 90       	pop	r4
    1914:	08 95       	ret

00001916 <create_chain>:
    1916:	2f 92       	push	r2
    1918:	3f 92       	push	r3
    191a:	4f 92       	push	r4
    191c:	5f 92       	push	r5
    191e:	6f 92       	push	r6
    1920:	7f 92       	push	r7
    1922:	8f 92       	push	r8
    1924:	9f 92       	push	r9
    1926:	af 92       	push	r10
    1928:	bf 92       	push	r11
    192a:	cf 92       	push	r12
    192c:	df 92       	push	r13
    192e:	ef 92       	push	r14
    1930:	ff 92       	push	r15
    1932:	0f 93       	push	r16
    1934:	1f 93       	push	r17
    1936:	cf 93       	push	r28
    1938:	df 93       	push	r29
    193a:	ec 01       	movw	r28, r24
    193c:	2a 01       	movw	r4, r20
    193e:	3b 01       	movw	r6, r22
    1940:	41 15       	cp	r20, r1
    1942:	51 05       	cpc	r21, r1
    1944:	61 05       	cpc	r22, r1
    1946:	71 05       	cpc	r23, r1
    1948:	b9 f4       	brne	.+46     	; 0x1978 <create_chain+0x62>
    194a:	8a 84       	ldd	r8, Y+10	; 0x0a
    194c:	9b 84       	ldd	r9, Y+11	; 0x0b
    194e:	ac 84       	ldd	r10, Y+12	; 0x0c
    1950:	bd 84       	ldd	r11, Y+13	; 0x0d
    1952:	81 14       	cp	r8, r1
    1954:	91 04       	cpc	r9, r1
    1956:	a1 04       	cpc	r10, r1
    1958:	b1 04       	cpc	r11, r1
    195a:	21 f1       	breq	.+72     	; 0x19a4 <create_chain+0x8e>
    195c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    195e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1960:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1962:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1964:	88 16       	cp	r8, r24
    1966:	99 06       	cpc	r9, r25
    1968:	aa 06       	cpc	r10, r26
    196a:	bb 06       	cpc	r11, r27
    196c:	f8 f0       	brcs	.+62     	; 0x19ac <create_chain+0x96>
    196e:	81 2c       	mov	r8, r1
    1970:	91 2c       	mov	r9, r1
    1972:	54 01       	movw	r10, r8
    1974:	83 94       	inc	r8
    1976:	1a c0       	rjmp	.+52     	; 0x19ac <create_chain+0x96>
    1978:	d6 dd       	rcall	.-1108   	; 0x1526 <get_fat>
    197a:	6b 01       	movw	r12, r22
    197c:	7c 01       	movw	r14, r24
    197e:	62 30       	cpi	r22, 0x02	; 2
    1980:	71 05       	cpc	r23, r1
    1982:	81 05       	cpc	r24, r1
    1984:	91 05       	cpc	r25, r1
    1986:	08 f4       	brcc	.+2      	; 0x198a <create_chain+0x74>
    1988:	87 c0       	rjmp	.+270    	; 0x1a98 <create_chain+0x182>
    198a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    198c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    198e:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1990:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1992:	c8 16       	cp	r12, r24
    1994:	d9 06       	cpc	r13, r25
    1996:	ea 06       	cpc	r14, r26
    1998:	fb 06       	cpc	r15, r27
    199a:	08 f4       	brcc	.+2      	; 0x199e <create_chain+0x88>
    199c:	82 c0       	rjmp	.+260    	; 0x1aa2 <create_chain+0x18c>
    199e:	53 01       	movw	r10, r6
    19a0:	42 01       	movw	r8, r4
    19a2:	04 c0       	rjmp	.+8      	; 0x19ac <create_chain+0x96>
    19a4:	81 2c       	mov	r8, r1
    19a6:	91 2c       	mov	r9, r1
    19a8:	54 01       	movw	r10, r8
    19aa:	83 94       	inc	r8
    19ac:	75 01       	movw	r14, r10
    19ae:	64 01       	movw	r12, r8
    19b0:	68 94       	set
    19b2:	22 24       	eor	r2, r2
    19b4:	21 f8       	bld	r2, 1
    19b6:	31 2c       	mov	r3, r1
    19b8:	00 e0       	ldi	r16, 0x00	; 0
    19ba:	10 e0       	ldi	r17, 0x00	; 0
    19bc:	8f ef       	ldi	r24, 0xFF	; 255
    19be:	c8 1a       	sub	r12, r24
    19c0:	d8 0a       	sbc	r13, r24
    19c2:	e8 0a       	sbc	r14, r24
    19c4:	f8 0a       	sbc	r15, r24
    19c6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    19c8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    19ca:	ac 8d       	ldd	r26, Y+28	; 0x1c
    19cc:	bd 8d       	ldd	r27, Y+29	; 0x1d
    19ce:	c8 16       	cp	r12, r24
    19d0:	d9 06       	cpc	r13, r25
    19d2:	ea 06       	cpc	r14, r26
    19d4:	fb 06       	cpc	r15, r27
    19d6:	58 f0       	brcs	.+22     	; 0x19ee <create_chain+0xd8>
    19d8:	22 e0       	ldi	r18, 0x02	; 2
    19da:	82 16       	cp	r8, r18
    19dc:	91 04       	cpc	r9, r1
    19de:	a1 04       	cpc	r10, r1
    19e0:	b1 04       	cpc	r11, r1
    19e2:	08 f4       	brcc	.+2      	; 0x19e6 <create_chain+0xd0>
    19e4:	63 c0       	rjmp	.+198    	; 0x1aac <create_chain+0x196>
    19e6:	c2 2c       	mov	r12, r2
    19e8:	d3 2c       	mov	r13, r3
    19ea:	e0 2e       	mov	r14, r16
    19ec:	f1 2e       	mov	r15, r17
    19ee:	b7 01       	movw	r22, r14
    19f0:	a6 01       	movw	r20, r12
    19f2:	ce 01       	movw	r24, r28
    19f4:	98 dd       	rcall	.-1232   	; 0x1526 <get_fat>
    19f6:	61 15       	cp	r22, r1
    19f8:	71 05       	cpc	r23, r1
    19fa:	81 05       	cpc	r24, r1
    19fc:	91 05       	cpc	r25, r1
    19fe:	99 f0       	breq	.+38     	; 0x1a26 <create_chain+0x110>
    1a00:	6f 3f       	cpi	r22, 0xFF	; 255
    1a02:	2f ef       	ldi	r18, 0xFF	; 255
    1a04:	72 07       	cpc	r23, r18
    1a06:	82 07       	cpc	r24, r18
    1a08:	92 07       	cpc	r25, r18
    1a0a:	09 f4       	brne	.+2      	; 0x1a0e <create_chain+0xf8>
    1a0c:	54 c0       	rjmp	.+168    	; 0x1ab6 <create_chain+0x1a0>
    1a0e:	61 30       	cpi	r22, 0x01	; 1
    1a10:	71 05       	cpc	r23, r1
    1a12:	81 05       	cpc	r24, r1
    1a14:	91 05       	cpc	r25, r1
    1a16:	09 f4       	brne	.+2      	; 0x1a1a <create_chain+0x104>
    1a18:	53 c0       	rjmp	.+166    	; 0x1ac0 <create_chain+0x1aa>
    1a1a:	c8 14       	cp	r12, r8
    1a1c:	d9 04       	cpc	r13, r9
    1a1e:	ea 04       	cpc	r14, r10
    1a20:	fb 04       	cpc	r15, r11
    1a22:	61 f6       	brne	.-104    	; 0x19bc <create_chain+0xa6>
    1a24:	52 c0       	rjmp	.+164    	; 0x1aca <create_chain+0x1b4>
    1a26:	8c 2c       	mov	r8, r12
    1a28:	9d 2c       	mov	r9, r13
    1a2a:	ae 2c       	mov	r10, r14
    1a2c:	bf 2c       	mov	r11, r15
    1a2e:	0f ef       	ldi	r16, 0xFF	; 255
    1a30:	1f ef       	ldi	r17, 0xFF	; 255
    1a32:	2f ef       	ldi	r18, 0xFF	; 255
    1a34:	3f e0       	ldi	r19, 0x0F	; 15
    1a36:	b7 01       	movw	r22, r14
    1a38:	a6 01       	movw	r20, r12
    1a3a:	ce 01       	movw	r24, r28
    1a3c:	53 de       	rcall	.-858    	; 0x16e4 <put_fat>
    1a3e:	81 11       	cpse	r24, r1
    1a40:	49 c0       	rjmp	.+146    	; 0x1ad4 <create_chain+0x1be>
    1a42:	41 14       	cp	r4, r1
    1a44:	51 04       	cpc	r5, r1
    1a46:	61 04       	cpc	r6, r1
    1a48:	71 04       	cpc	r7, r1
    1a4a:	51 f0       	breq	.+20     	; 0x1a60 <create_chain+0x14a>
    1a4c:	0c 2d       	mov	r16, r12
    1a4e:	1d 2d       	mov	r17, r13
    1a50:	2e 2d       	mov	r18, r14
    1a52:	3f 2d       	mov	r19, r15
    1a54:	b3 01       	movw	r22, r6
    1a56:	a2 01       	movw	r20, r4
    1a58:	ce 01       	movw	r24, r28
    1a5a:	44 de       	rcall	.-888    	; 0x16e4 <put_fat>
    1a5c:	81 11       	cpse	r24, r1
    1a5e:	3f c0       	rjmp	.+126    	; 0x1ade <create_chain+0x1c8>
    1a60:	8a 86       	std	Y+10, r8	; 0x0a
    1a62:	9b 86       	std	Y+11, r9	; 0x0b
    1a64:	ac 86       	std	Y+12, r10	; 0x0c
    1a66:	bd 86       	std	Y+13, r11	; 0x0d
    1a68:	8e 85       	ldd	r24, Y+14	; 0x0e
    1a6a:	9f 85       	ldd	r25, Y+15	; 0x0f
    1a6c:	a8 89       	ldd	r26, Y+16	; 0x10
    1a6e:	b9 89       	ldd	r27, Y+17	; 0x11
    1a70:	8f 3f       	cpi	r24, 0xFF	; 255
    1a72:	2f ef       	ldi	r18, 0xFF	; 255
    1a74:	92 07       	cpc	r25, r18
    1a76:	a2 07       	cpc	r26, r18
    1a78:	b2 07       	cpc	r27, r18
    1a7a:	49 f0       	breq	.+18     	; 0x1a8e <create_chain+0x178>
    1a7c:	01 97       	sbiw	r24, 0x01	; 1
    1a7e:	a1 09       	sbc	r26, r1
    1a80:	b1 09       	sbc	r27, r1
    1a82:	8e 87       	std	Y+14, r24	; 0x0e
    1a84:	9f 87       	std	Y+15, r25	; 0x0f
    1a86:	a8 8b       	std	Y+16, r26	; 0x10
    1a88:	b9 8b       	std	Y+17, r27	; 0x11
    1a8a:	81 e0       	ldi	r24, 0x01	; 1
    1a8c:	8d 83       	std	Y+5, r24	; 0x05
    1a8e:	6c 2d       	mov	r22, r12
    1a90:	7d 2d       	mov	r23, r13
    1a92:	8e 2d       	mov	r24, r14
    1a94:	9f 2d       	mov	r25, r15
    1a96:	27 c0       	rjmp	.+78     	; 0x1ae6 <create_chain+0x1d0>
    1a98:	61 e0       	ldi	r22, 0x01	; 1
    1a9a:	70 e0       	ldi	r23, 0x00	; 0
    1a9c:	80 e0       	ldi	r24, 0x00	; 0
    1a9e:	90 e0       	ldi	r25, 0x00	; 0
    1aa0:	22 c0       	rjmp	.+68     	; 0x1ae6 <create_chain+0x1d0>
    1aa2:	6c 2d       	mov	r22, r12
    1aa4:	7d 2d       	mov	r23, r13
    1aa6:	8e 2d       	mov	r24, r14
    1aa8:	9f 2d       	mov	r25, r15
    1aaa:	1d c0       	rjmp	.+58     	; 0x1ae6 <create_chain+0x1d0>
    1aac:	60 e0       	ldi	r22, 0x00	; 0
    1aae:	70 e0       	ldi	r23, 0x00	; 0
    1ab0:	80 e0       	ldi	r24, 0x00	; 0
    1ab2:	90 e0       	ldi	r25, 0x00	; 0
    1ab4:	18 c0       	rjmp	.+48     	; 0x1ae6 <create_chain+0x1d0>
    1ab6:	6f ef       	ldi	r22, 0xFF	; 255
    1ab8:	7f ef       	ldi	r23, 0xFF	; 255
    1aba:	8f ef       	ldi	r24, 0xFF	; 255
    1abc:	9f ef       	ldi	r25, 0xFF	; 255
    1abe:	13 c0       	rjmp	.+38     	; 0x1ae6 <create_chain+0x1d0>
    1ac0:	61 e0       	ldi	r22, 0x01	; 1
    1ac2:	70 e0       	ldi	r23, 0x00	; 0
    1ac4:	80 e0       	ldi	r24, 0x00	; 0
    1ac6:	90 e0       	ldi	r25, 0x00	; 0
    1ac8:	0e c0       	rjmp	.+28     	; 0x1ae6 <create_chain+0x1d0>
    1aca:	60 e0       	ldi	r22, 0x00	; 0
    1acc:	70 e0       	ldi	r23, 0x00	; 0
    1ace:	80 e0       	ldi	r24, 0x00	; 0
    1ad0:	90 e0       	ldi	r25, 0x00	; 0
    1ad2:	09 c0       	rjmp	.+18     	; 0x1ae6 <create_chain+0x1d0>
    1ad4:	6f ef       	ldi	r22, 0xFF	; 255
    1ad6:	7f ef       	ldi	r23, 0xFF	; 255
    1ad8:	8f ef       	ldi	r24, 0xFF	; 255
    1ada:	9f ef       	ldi	r25, 0xFF	; 255
    1adc:	04 c0       	rjmp	.+8      	; 0x1ae6 <create_chain+0x1d0>
    1ade:	6f ef       	ldi	r22, 0xFF	; 255
    1ae0:	7f ef       	ldi	r23, 0xFF	; 255
    1ae2:	8f ef       	ldi	r24, 0xFF	; 255
    1ae4:	9f ef       	ldi	r25, 0xFF	; 255
    1ae6:	df 91       	pop	r29
    1ae8:	cf 91       	pop	r28
    1aea:	1f 91       	pop	r17
    1aec:	0f 91       	pop	r16
    1aee:	ff 90       	pop	r15
    1af0:	ef 90       	pop	r14
    1af2:	df 90       	pop	r13
    1af4:	cf 90       	pop	r12
    1af6:	bf 90       	pop	r11
    1af8:	af 90       	pop	r10
    1afa:	9f 90       	pop	r9
    1afc:	8f 90       	pop	r8
    1afe:	7f 90       	pop	r7
    1b00:	6f 90       	pop	r6
    1b02:	5f 90       	pop	r5
    1b04:	4f 90       	pop	r4
    1b06:	3f 90       	pop	r3
    1b08:	2f 90       	pop	r2
    1b0a:	08 95       	ret

00001b0c <remove_chain>:
    1b0c:	7f 92       	push	r7
    1b0e:	8f 92       	push	r8
    1b10:	9f 92       	push	r9
    1b12:	af 92       	push	r10
    1b14:	bf 92       	push	r11
    1b16:	cf 92       	push	r12
    1b18:	df 92       	push	r13
    1b1a:	ef 92       	push	r14
    1b1c:	ff 92       	push	r15
    1b1e:	0f 93       	push	r16
    1b20:	1f 93       	push	r17
    1b22:	cf 93       	push	r28
    1b24:	df 93       	push	r29
    1b26:	ec 01       	movw	r28, r24
    1b28:	6a 01       	movw	r12, r20
    1b2a:	7b 01       	movw	r14, r22
    1b2c:	42 30       	cpi	r20, 0x02	; 2
    1b2e:	51 05       	cpc	r21, r1
    1b30:	61 05       	cpc	r22, r1
    1b32:	71 05       	cpc	r23, r1
    1b34:	08 f4       	brcc	.+2      	; 0x1b38 <remove_chain+0x2c>
    1b36:	4b c0       	rjmp	.+150    	; 0x1bce <remove_chain+0xc2>
    1b38:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1b3a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1b3c:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1b3e:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1b40:	48 17       	cp	r20, r24
    1b42:	59 07       	cpc	r21, r25
    1b44:	6a 07       	cpc	r22, r26
    1b46:	7b 07       	cpc	r23, r27
    1b48:	08 f0       	brcs	.+2      	; 0x1b4c <remove_chain+0x40>
    1b4a:	43 c0       	rjmp	.+134    	; 0x1bd2 <remove_chain+0xc6>
    1b4c:	77 24       	eor	r7, r7
    1b4e:	73 94       	inc	r7
    1b50:	33 c0       	rjmp	.+102    	; 0x1bb8 <remove_chain+0xac>
    1b52:	b7 01       	movw	r22, r14
    1b54:	a6 01       	movw	r20, r12
    1b56:	ce 01       	movw	r24, r28
    1b58:	e6 dc       	rcall	.-1588   	; 0x1526 <get_fat>
    1b5a:	4b 01       	movw	r8, r22
    1b5c:	5c 01       	movw	r10, r24
    1b5e:	67 2b       	or	r22, r23
    1b60:	68 2b       	or	r22, r24
    1b62:	69 2b       	or	r22, r25
    1b64:	c1 f1       	breq	.+112    	; 0x1bd6 <remove_chain+0xca>
    1b66:	81 e0       	ldi	r24, 0x01	; 1
    1b68:	88 16       	cp	r8, r24
    1b6a:	91 04       	cpc	r9, r1
    1b6c:	a1 04       	cpc	r10, r1
    1b6e:	b1 04       	cpc	r11, r1
    1b70:	a1 f1       	breq	.+104    	; 0x1bda <remove_chain+0xce>
    1b72:	2f ef       	ldi	r18, 0xFF	; 255
    1b74:	82 16       	cp	r8, r18
    1b76:	92 06       	cpc	r9, r18
    1b78:	a2 06       	cpc	r10, r18
    1b7a:	b2 06       	cpc	r11, r18
    1b7c:	81 f1       	breq	.+96     	; 0x1bde <remove_chain+0xd2>
    1b7e:	00 e0       	ldi	r16, 0x00	; 0
    1b80:	10 e0       	ldi	r17, 0x00	; 0
    1b82:	98 01       	movw	r18, r16
    1b84:	b7 01       	movw	r22, r14
    1b86:	a6 01       	movw	r20, r12
    1b88:	ce 01       	movw	r24, r28
    1b8a:	ac dd       	rcall	.-1192   	; 0x16e4 <put_fat>
    1b8c:	81 11       	cpse	r24, r1
    1b8e:	28 c0       	rjmp	.+80     	; 0x1be0 <remove_chain+0xd4>
    1b90:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b92:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b94:	a8 89       	ldd	r26, Y+16	; 0x10
    1b96:	b9 89       	ldd	r27, Y+17	; 0x11
    1b98:	8f 3f       	cpi	r24, 0xFF	; 255
    1b9a:	2f ef       	ldi	r18, 0xFF	; 255
    1b9c:	92 07       	cpc	r25, r18
    1b9e:	a2 07       	cpc	r26, r18
    1ba0:	b2 07       	cpc	r27, r18
    1ba2:	41 f0       	breq	.+16     	; 0x1bb4 <remove_chain+0xa8>
    1ba4:	01 96       	adiw	r24, 0x01	; 1
    1ba6:	a1 1d       	adc	r26, r1
    1ba8:	b1 1d       	adc	r27, r1
    1baa:	8e 87       	std	Y+14, r24	; 0x0e
    1bac:	9f 87       	std	Y+15, r25	; 0x0f
    1bae:	a8 8b       	std	Y+16, r26	; 0x10
    1bb0:	b9 8b       	std	Y+17, r27	; 0x11
    1bb2:	7d 82       	std	Y+5, r7	; 0x05
    1bb4:	75 01       	movw	r14, r10
    1bb6:	64 01       	movw	r12, r8
    1bb8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1bba:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1bbc:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1bbe:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1bc0:	c8 16       	cp	r12, r24
    1bc2:	d9 06       	cpc	r13, r25
    1bc4:	ea 06       	cpc	r14, r26
    1bc6:	fb 06       	cpc	r15, r27
    1bc8:	20 f2       	brcs	.-120    	; 0x1b52 <remove_chain+0x46>
    1bca:	80 e0       	ldi	r24, 0x00	; 0
    1bcc:	09 c0       	rjmp	.+18     	; 0x1be0 <remove_chain+0xd4>
    1bce:	82 e0       	ldi	r24, 0x02	; 2
    1bd0:	07 c0       	rjmp	.+14     	; 0x1be0 <remove_chain+0xd4>
    1bd2:	82 e0       	ldi	r24, 0x02	; 2
    1bd4:	05 c0       	rjmp	.+10     	; 0x1be0 <remove_chain+0xd4>
    1bd6:	80 e0       	ldi	r24, 0x00	; 0
    1bd8:	03 c0       	rjmp	.+6      	; 0x1be0 <remove_chain+0xd4>
    1bda:	82 e0       	ldi	r24, 0x02	; 2
    1bdc:	01 c0       	rjmp	.+2      	; 0x1be0 <remove_chain+0xd4>
    1bde:	81 e0       	ldi	r24, 0x01	; 1
    1be0:	df 91       	pop	r29
    1be2:	cf 91       	pop	r28
    1be4:	1f 91       	pop	r17
    1be6:	0f 91       	pop	r16
    1be8:	ff 90       	pop	r15
    1bea:	ef 90       	pop	r14
    1bec:	df 90       	pop	r13
    1bee:	cf 90       	pop	r12
    1bf0:	bf 90       	pop	r11
    1bf2:	af 90       	pop	r10
    1bf4:	9f 90       	pop	r9
    1bf6:	8f 90       	pop	r8
    1bf8:	7f 90       	pop	r7
    1bfa:	08 95       	ret

00001bfc <clust2sect>:
    1bfc:	cf 92       	push	r12
    1bfe:	df 92       	push	r13
    1c00:	ef 92       	push	r14
    1c02:	ff 92       	push	r15
    1c04:	fc 01       	movw	r30, r24
    1c06:	9a 01       	movw	r18, r20
    1c08:	ab 01       	movw	r20, r22
    1c0a:	22 50       	subi	r18, 0x02	; 2
    1c0c:	31 09       	sbc	r19, r1
    1c0e:	41 09       	sbc	r20, r1
    1c10:	51 09       	sbc	r21, r1
    1c12:	c2 8c       	ldd	r12, Z+26	; 0x1a
    1c14:	d3 8c       	ldd	r13, Z+27	; 0x1b
    1c16:	e4 8c       	ldd	r14, Z+28	; 0x1c
    1c18:	f5 8c       	ldd	r15, Z+29	; 0x1d
    1c1a:	82 e0       	ldi	r24, 0x02	; 2
    1c1c:	c8 1a       	sub	r12, r24
    1c1e:	d1 08       	sbc	r13, r1
    1c20:	e1 08       	sbc	r14, r1
    1c22:	f1 08       	sbc	r15, r1
    1c24:	2c 15       	cp	r18, r12
    1c26:	3d 05       	cpc	r19, r13
    1c28:	4e 05       	cpc	r20, r14
    1c2a:	5f 05       	cpc	r21, r15
    1c2c:	68 f4       	brcc	.+26     	; 0x1c48 <clust2sect+0x4c>
    1c2e:	a2 81       	ldd	r26, Z+2	; 0x02
    1c30:	b0 e0       	ldi	r27, 0x00	; 0
    1c32:	0e 94 24 1a 	call	0x3448	; 0x3448 <__muluhisi3>
    1c36:	c2 a4       	ldd	r12, Z+42	; 0x2a
    1c38:	d3 a4       	ldd	r13, Z+43	; 0x2b
    1c3a:	e4 a4       	ldd	r14, Z+44	; 0x2c
    1c3c:	f5 a4       	ldd	r15, Z+45	; 0x2d
    1c3e:	6c 0d       	add	r22, r12
    1c40:	7d 1d       	adc	r23, r13
    1c42:	8e 1d       	adc	r24, r14
    1c44:	9f 1d       	adc	r25, r15
    1c46:	03 c0       	rjmp	.+6      	; 0x1c4e <clust2sect+0x52>
    1c48:	60 e0       	ldi	r22, 0x00	; 0
    1c4a:	70 e0       	ldi	r23, 0x00	; 0
    1c4c:	cb 01       	movw	r24, r22
    1c4e:	ff 90       	pop	r15
    1c50:	ef 90       	pop	r14
    1c52:	df 90       	pop	r13
    1c54:	cf 90       	pop	r12
    1c56:	08 95       	ret

00001c58 <dir_sdi>:
    1c58:	ef 92       	push	r14
    1c5a:	ff 92       	push	r15
    1c5c:	0f 93       	push	r16
    1c5e:	1f 93       	push	r17
    1c60:	cf 93       	push	r28
    1c62:	df 93       	push	r29
    1c64:	ec 01       	movw	r28, r24
    1c66:	8b 01       	movw	r16, r22
    1c68:	7d 83       	std	Y+5, r23	; 0x05
    1c6a:	6c 83       	std	Y+4, r22	; 0x04
    1c6c:	4e 81       	ldd	r20, Y+6	; 0x06
    1c6e:	5f 81       	ldd	r21, Y+7	; 0x07
    1c70:	68 85       	ldd	r22, Y+8	; 0x08
    1c72:	79 85       	ldd	r23, Y+9	; 0x09
    1c74:	41 30       	cpi	r20, 0x01	; 1
    1c76:	51 05       	cpc	r21, r1
    1c78:	61 05       	cpc	r22, r1
    1c7a:	71 05       	cpc	r23, r1
    1c7c:	09 f4       	brne	.+2      	; 0x1c80 <dir_sdi+0x28>
    1c7e:	91 c0       	rjmp	.+290    	; 0x1da2 <dir_sdi+0x14a>
    1c80:	e8 81       	ld	r30, Y
    1c82:	f9 81       	ldd	r31, Y+1	; 0x01
    1c84:	82 8d       	ldd	r24, Z+26	; 0x1a
    1c86:	93 8d       	ldd	r25, Z+27	; 0x1b
    1c88:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1c8a:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1c8c:	48 17       	cp	r20, r24
    1c8e:	59 07       	cpc	r21, r25
    1c90:	6a 07       	cpc	r22, r26
    1c92:	7b 07       	cpc	r23, r27
    1c94:	08 f0       	brcs	.+2      	; 0x1c98 <dir_sdi+0x40>
    1c96:	87 c0       	rjmp	.+270    	; 0x1da6 <dir_sdi+0x14e>
    1c98:	41 15       	cp	r20, r1
    1c9a:	51 05       	cpc	r21, r1
    1c9c:	61 05       	cpc	r22, r1
    1c9e:	71 05       	cpc	r23, r1
    1ca0:	51 f5       	brne	.+84     	; 0x1cf6 <dir_sdi+0x9e>
    1ca2:	80 81       	ld	r24, Z
    1ca4:	83 30       	cpi	r24, 0x03	; 3
    1ca6:	49 f4       	brne	.+18     	; 0x1cba <dir_sdi+0x62>
    1ca8:	46 a1       	ldd	r20, Z+38	; 0x26
    1caa:	57 a1       	ldd	r21, Z+39	; 0x27
    1cac:	60 a5       	ldd	r22, Z+40	; 0x28
    1cae:	71 a5       	ldd	r23, Z+41	; 0x29
    1cb0:	41 15       	cp	r20, r1
    1cb2:	51 05       	cpc	r21, r1
    1cb4:	61 05       	cpc	r22, r1
    1cb6:	71 05       	cpc	r23, r1
    1cb8:	f1 f4       	brne	.+60     	; 0x1cf6 <dir_sdi+0x9e>
    1cba:	1a 86       	std	Y+10, r1	; 0x0a
    1cbc:	1b 86       	std	Y+11, r1	; 0x0b
    1cbe:	1c 86       	std	Y+12, r1	; 0x0c
    1cc0:	1d 86       	std	Y+13, r1	; 0x0d
    1cc2:	80 85       	ldd	r24, Z+8	; 0x08
    1cc4:	91 85       	ldd	r25, Z+9	; 0x09
    1cc6:	08 17       	cp	r16, r24
    1cc8:	19 07       	cpc	r17, r25
    1cca:	08 f0       	brcs	.+2      	; 0x1cce <dir_sdi+0x76>
    1ccc:	6e c0       	rjmp	.+220    	; 0x1daa <dir_sdi+0x152>
    1cce:	86 a1       	ldd	r24, Z+38	; 0x26
    1cd0:	97 a1       	ldd	r25, Z+39	; 0x27
    1cd2:	a0 a5       	ldd	r26, Z+40	; 0x28
    1cd4:	b1 a5       	ldd	r27, Z+41	; 0x29
    1cd6:	98 01       	movw	r18, r16
    1cd8:	32 95       	swap	r19
    1cda:	22 95       	swap	r18
    1cdc:	2f 70       	andi	r18, 0x0F	; 15
    1cde:	23 27       	eor	r18, r19
    1ce0:	3f 70       	andi	r19, 0x0F	; 15
    1ce2:	23 27       	eor	r18, r19
    1ce4:	82 0f       	add	r24, r18
    1ce6:	93 1f       	adc	r25, r19
    1ce8:	a1 1d       	adc	r26, r1
    1cea:	b1 1d       	adc	r27, r1
    1cec:	8e 87       	std	Y+14, r24	; 0x0e
    1cee:	9f 87       	std	Y+15, r25	; 0x0f
    1cf0:	a8 8b       	std	Y+16, r26	; 0x10
    1cf2:	b9 8b       	std	Y+17, r27	; 0x11
    1cf4:	42 c0       	rjmp	.+132    	; 0x1d7a <dir_sdi+0x122>
    1cf6:	e2 80       	ldd	r14, Z+2	; 0x02
    1cf8:	80 e1       	ldi	r24, 0x10	; 16
    1cfa:	e8 9e       	mul	r14, r24
    1cfc:	70 01       	movw	r14, r0
    1cfe:	11 24       	eor	r1, r1
    1d00:	0e 15       	cp	r16, r14
    1d02:	1f 05       	cpc	r17, r15
    1d04:	10 f1       	brcs	.+68     	; 0x1d4a <dir_sdi+0xf2>
    1d06:	88 81       	ld	r24, Y
    1d08:	99 81       	ldd	r25, Y+1	; 0x01
    1d0a:	0d dc       	rcall	.-2022   	; 0x1526 <get_fat>
    1d0c:	ab 01       	movw	r20, r22
    1d0e:	bc 01       	movw	r22, r24
    1d10:	4f 3f       	cpi	r20, 0xFF	; 255
    1d12:	8f ef       	ldi	r24, 0xFF	; 255
    1d14:	58 07       	cpc	r21, r24
    1d16:	68 07       	cpc	r22, r24
    1d18:	78 07       	cpc	r23, r24
    1d1a:	09 f4       	brne	.+2      	; 0x1d1e <dir_sdi+0xc6>
    1d1c:	48 c0       	rjmp	.+144    	; 0x1dae <dir_sdi+0x156>
    1d1e:	42 30       	cpi	r20, 0x02	; 2
    1d20:	51 05       	cpc	r21, r1
    1d22:	61 05       	cpc	r22, r1
    1d24:	71 05       	cpc	r23, r1
    1d26:	08 f4       	brcc	.+2      	; 0x1d2a <dir_sdi+0xd2>
    1d28:	44 c0       	rjmp	.+136    	; 0x1db2 <dir_sdi+0x15a>
    1d2a:	e8 81       	ld	r30, Y
    1d2c:	f9 81       	ldd	r31, Y+1	; 0x01
    1d2e:	82 8d       	ldd	r24, Z+26	; 0x1a
    1d30:	93 8d       	ldd	r25, Z+27	; 0x1b
    1d32:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1d34:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1d36:	48 17       	cp	r20, r24
    1d38:	59 07       	cpc	r21, r25
    1d3a:	6a 07       	cpc	r22, r26
    1d3c:	7b 07       	cpc	r23, r27
    1d3e:	d8 f5       	brcc	.+118    	; 0x1db6 <dir_sdi+0x15e>
    1d40:	0e 19       	sub	r16, r14
    1d42:	1f 09       	sbc	r17, r15
    1d44:	0e 15       	cp	r16, r14
    1d46:	1f 05       	cpc	r17, r15
    1d48:	f0 f6       	brcc	.-68     	; 0x1d06 <dir_sdi+0xae>
    1d4a:	4a 87       	std	Y+10, r20	; 0x0a
    1d4c:	5b 87       	std	Y+11, r21	; 0x0b
    1d4e:	6c 87       	std	Y+12, r22	; 0x0c
    1d50:	7d 87       	std	Y+13, r23	; 0x0d
    1d52:	88 81       	ld	r24, Y
    1d54:	99 81       	ldd	r25, Y+1	; 0x01
    1d56:	52 df       	rcall	.-348    	; 0x1bfc <clust2sect>
    1d58:	98 01       	movw	r18, r16
    1d5a:	32 95       	swap	r19
    1d5c:	22 95       	swap	r18
    1d5e:	2f 70       	andi	r18, 0x0F	; 15
    1d60:	23 27       	eor	r18, r19
    1d62:	3f 70       	andi	r19, 0x0F	; 15
    1d64:	23 27       	eor	r18, r19
    1d66:	dc 01       	movw	r26, r24
    1d68:	cb 01       	movw	r24, r22
    1d6a:	82 0f       	add	r24, r18
    1d6c:	93 1f       	adc	r25, r19
    1d6e:	a1 1d       	adc	r26, r1
    1d70:	b1 1d       	adc	r27, r1
    1d72:	8e 87       	std	Y+14, r24	; 0x0e
    1d74:	9f 87       	std	Y+15, r25	; 0x0f
    1d76:	a8 8b       	std	Y+16, r26	; 0x10
    1d78:	b9 8b       	std	Y+17, r27	; 0x11
    1d7a:	0f 70       	andi	r16, 0x0F	; 15
    1d7c:	11 27       	eor	r17, r17
    1d7e:	00 0f       	add	r16, r16
    1d80:	11 1f       	adc	r17, r17
    1d82:	02 95       	swap	r16
    1d84:	12 95       	swap	r17
    1d86:	10 7f       	andi	r17, 0xF0	; 240
    1d88:	10 27       	eor	r17, r16
    1d8a:	00 7f       	andi	r16, 0xF0	; 240
    1d8c:	10 27       	eor	r17, r16
    1d8e:	0e 5c       	subi	r16, 0xCE	; 206
    1d90:	1f 4f       	sbci	r17, 0xFF	; 255
    1d92:	88 81       	ld	r24, Y
    1d94:	99 81       	ldd	r25, Y+1	; 0x01
    1d96:	08 0f       	add	r16, r24
    1d98:	19 1f       	adc	r17, r25
    1d9a:	1b 8b       	std	Y+19, r17	; 0x13
    1d9c:	0a 8b       	std	Y+18, r16	; 0x12
    1d9e:	80 e0       	ldi	r24, 0x00	; 0
    1da0:	0b c0       	rjmp	.+22     	; 0x1db8 <dir_sdi+0x160>
    1da2:	82 e0       	ldi	r24, 0x02	; 2
    1da4:	09 c0       	rjmp	.+18     	; 0x1db8 <dir_sdi+0x160>
    1da6:	82 e0       	ldi	r24, 0x02	; 2
    1da8:	07 c0       	rjmp	.+14     	; 0x1db8 <dir_sdi+0x160>
    1daa:	82 e0       	ldi	r24, 0x02	; 2
    1dac:	05 c0       	rjmp	.+10     	; 0x1db8 <dir_sdi+0x160>
    1dae:	81 e0       	ldi	r24, 0x01	; 1
    1db0:	03 c0       	rjmp	.+6      	; 0x1db8 <dir_sdi+0x160>
    1db2:	82 e0       	ldi	r24, 0x02	; 2
    1db4:	01 c0       	rjmp	.+2      	; 0x1db8 <dir_sdi+0x160>
    1db6:	82 e0       	ldi	r24, 0x02	; 2
    1db8:	df 91       	pop	r29
    1dba:	cf 91       	pop	r28
    1dbc:	1f 91       	pop	r17
    1dbe:	0f 91       	pop	r16
    1dc0:	ff 90       	pop	r15
    1dc2:	ef 90       	pop	r14
    1dc4:	08 95       	ret

00001dc6 <dir_next>:
    1dc6:	8f 92       	push	r8
    1dc8:	9f 92       	push	r9
    1dca:	af 92       	push	r10
    1dcc:	bf 92       	push	r11
    1dce:	cf 92       	push	r12
    1dd0:	df 92       	push	r13
    1dd2:	ef 92       	push	r14
    1dd4:	ff 92       	push	r15
    1dd6:	0f 93       	push	r16
    1dd8:	1f 93       	push	r17
    1dda:	cf 93       	push	r28
    1ddc:	df 93       	push	r29
    1dde:	dc 01       	movw	r26, r24
    1de0:	14 96       	adiw	r26, 0x04	; 4
    1de2:	cd 91       	ld	r28, X+
    1de4:	dc 91       	ld	r29, X
    1de6:	15 97       	sbiw	r26, 0x05	; 5
    1de8:	21 96       	adiw	r28, 0x01	; 1
    1dea:	09 f4       	brne	.+2      	; 0x1dee <dir_next+0x28>
    1dec:	03 c1       	rjmp	.+518    	; 0x1ff4 <dir_next+0x22e>
    1dee:	1e 96       	adiw	r26, 0x0e	; 14
    1df0:	8d 90       	ld	r8, X+
    1df2:	9d 90       	ld	r9, X+
    1df4:	ad 90       	ld	r10, X+
    1df6:	bc 90       	ld	r11, X
    1df8:	51 97       	sbiw	r26, 0x11	; 17
    1dfa:	81 14       	cp	r8, r1
    1dfc:	91 04       	cpc	r9, r1
    1dfe:	a1 04       	cpc	r10, r1
    1e00:	b1 04       	cpc	r11, r1
    1e02:	09 f4       	brne	.+2      	; 0x1e06 <dir_next+0x40>
    1e04:	f9 c0       	rjmp	.+498    	; 0x1ff8 <dir_next+0x232>
    1e06:	7b 01       	movw	r14, r22
    1e08:	8c 01       	movw	r16, r24
    1e0a:	6e 01       	movw	r12, r28
    1e0c:	bf e0       	ldi	r27, 0x0F	; 15
    1e0e:	cb 22       	and	r12, r27
    1e10:	dd 24       	eor	r13, r13
    1e12:	c1 14       	cp	r12, r1
    1e14:	d1 04       	cpc	r13, r1
    1e16:	09 f0       	breq	.+2      	; 0x1e1a <dir_next+0x54>
    1e18:	d1 c0       	rjmp	.+418    	; 0x1fbc <dir_next+0x1f6>
    1e1a:	ef ef       	ldi	r30, 0xFF	; 255
    1e1c:	8e 1a       	sub	r8, r30
    1e1e:	9e 0a       	sbc	r9, r30
    1e20:	ae 0a       	sbc	r10, r30
    1e22:	be 0a       	sbc	r11, r30
    1e24:	dc 01       	movw	r26, r24
    1e26:	1e 96       	adiw	r26, 0x0e	; 14
    1e28:	8d 92       	st	X+, r8
    1e2a:	9d 92       	st	X+, r9
    1e2c:	ad 92       	st	X+, r10
    1e2e:	bc 92       	st	X, r11
    1e30:	51 97       	sbiw	r26, 0x11	; 17
    1e32:	1a 96       	adiw	r26, 0x0a	; 10
    1e34:	4d 91       	ld	r20, X+
    1e36:	5d 91       	ld	r21, X+
    1e38:	6d 91       	ld	r22, X+
    1e3a:	7c 91       	ld	r23, X
    1e3c:	1d 97       	sbiw	r26, 0x0d	; 13
    1e3e:	41 15       	cp	r20, r1
    1e40:	51 05       	cpc	r21, r1
    1e42:	61 05       	cpc	r22, r1
    1e44:	71 05       	cpc	r23, r1
    1e46:	49 f4       	brne	.+18     	; 0x1e5a <dir_next+0x94>
    1e48:	ed 91       	ld	r30, X+
    1e4a:	fc 91       	ld	r31, X
    1e4c:	80 85       	ldd	r24, Z+8	; 0x08
    1e4e:	91 85       	ldd	r25, Z+9	; 0x09
    1e50:	c8 17       	cp	r28, r24
    1e52:	d9 07       	cpc	r29, r25
    1e54:	08 f0       	brcs	.+2      	; 0x1e58 <dir_next+0x92>
    1e56:	d2 c0       	rjmp	.+420    	; 0x1ffc <dir_next+0x236>
    1e58:	b1 c0       	rjmp	.+354    	; 0x1fbc <dir_next+0x1f6>
    1e5a:	dc 01       	movw	r26, r24
    1e5c:	ed 91       	ld	r30, X+
    1e5e:	fc 91       	ld	r31, X
    1e60:	22 81       	ldd	r18, Z+2	; 0x02
    1e62:	30 e0       	ldi	r19, 0x00	; 0
    1e64:	21 50       	subi	r18, 0x01	; 1
    1e66:	31 09       	sbc	r19, r1
    1e68:	ce 01       	movw	r24, r28
    1e6a:	92 95       	swap	r25
    1e6c:	82 95       	swap	r24
    1e6e:	8f 70       	andi	r24, 0x0F	; 15
    1e70:	89 27       	eor	r24, r25
    1e72:	9f 70       	andi	r25, 0x0F	; 15
    1e74:	89 27       	eor	r24, r25
    1e76:	28 23       	and	r18, r24
    1e78:	39 23       	and	r19, r25
    1e7a:	23 2b       	or	r18, r19
    1e7c:	09 f0       	breq	.+2      	; 0x1e80 <dir_next+0xba>
    1e7e:	9e c0       	rjmp	.+316    	; 0x1fbc <dir_next+0x1f6>
    1e80:	cf 01       	movw	r24, r30
    1e82:	51 db       	rcall	.-2398   	; 0x1526 <get_fat>
    1e84:	4b 01       	movw	r8, r22
    1e86:	5c 01       	movw	r10, r24
    1e88:	62 30       	cpi	r22, 0x02	; 2
    1e8a:	71 05       	cpc	r23, r1
    1e8c:	81 05       	cpc	r24, r1
    1e8e:	91 05       	cpc	r25, r1
    1e90:	08 f4       	brcc	.+2      	; 0x1e94 <dir_next+0xce>
    1e92:	b6 c0       	rjmp	.+364    	; 0x2000 <dir_next+0x23a>
    1e94:	6f 3f       	cpi	r22, 0xFF	; 255
    1e96:	7f 4f       	sbci	r23, 0xFF	; 255
    1e98:	8f 4f       	sbci	r24, 0xFF	; 255
    1e9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e9c:	09 f4       	brne	.+2      	; 0x1ea0 <dir_next+0xda>
    1e9e:	b2 c0       	rjmp	.+356    	; 0x2004 <dir_next+0x23e>
    1ea0:	d8 01       	movw	r26, r16
    1ea2:	ed 91       	ld	r30, X+
    1ea4:	fc 91       	ld	r31, X
    1ea6:	82 8d       	ldd	r24, Z+26	; 0x1a
    1ea8:	93 8d       	ldd	r25, Z+27	; 0x1b
    1eaa:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1eac:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1eae:	88 16       	cp	r8, r24
    1eb0:	99 06       	cpc	r9, r25
    1eb2:	aa 06       	cpc	r10, r26
    1eb4:	bb 06       	cpc	r11, r27
    1eb6:	08 f4       	brcc	.+2      	; 0x1eba <dir_next+0xf4>
    1eb8:	70 c0       	rjmp	.+224    	; 0x1f9a <dir_next+0x1d4>
    1eba:	ef 28       	or	r14, r15
    1ebc:	09 f4       	brne	.+2      	; 0x1ec0 <dir_next+0xfa>
    1ebe:	a4 c0       	rjmp	.+328    	; 0x2008 <dir_next+0x242>
    1ec0:	d8 01       	movw	r26, r16
    1ec2:	1a 96       	adiw	r26, 0x0a	; 10
    1ec4:	4d 91       	ld	r20, X+
    1ec6:	5d 91       	ld	r21, X+
    1ec8:	6d 91       	ld	r22, X+
    1eca:	7c 91       	ld	r23, X
    1ecc:	1d 97       	sbiw	r26, 0x0d	; 13
    1ece:	cf 01       	movw	r24, r30
    1ed0:	22 dd       	rcall	.-1468   	; 0x1916 <create_chain>
    1ed2:	4b 01       	movw	r8, r22
    1ed4:	5c 01       	movw	r10, r24
    1ed6:	61 15       	cp	r22, r1
    1ed8:	71 05       	cpc	r23, r1
    1eda:	81 05       	cpc	r24, r1
    1edc:	91 05       	cpc	r25, r1
    1ede:	09 f4       	brne	.+2      	; 0x1ee2 <dir_next+0x11c>
    1ee0:	95 c0       	rjmp	.+298    	; 0x200c <dir_next+0x246>
    1ee2:	61 30       	cpi	r22, 0x01	; 1
    1ee4:	71 05       	cpc	r23, r1
    1ee6:	81 05       	cpc	r24, r1
    1ee8:	91 05       	cpc	r25, r1
    1eea:	09 f4       	brne	.+2      	; 0x1eee <dir_next+0x128>
    1eec:	91 c0       	rjmp	.+290    	; 0x2010 <dir_next+0x24a>
    1eee:	6f 3f       	cpi	r22, 0xFF	; 255
    1ef0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ef2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ef4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ef6:	09 f4       	brne	.+2      	; 0x1efa <dir_next+0x134>
    1ef8:	8d c0       	rjmp	.+282    	; 0x2014 <dir_next+0x24e>
    1efa:	40 e0       	ldi	r20, 0x00	; 0
    1efc:	50 e0       	ldi	r21, 0x00	; 0
    1efe:	ba 01       	movw	r22, r20
    1f00:	d8 01       	movw	r26, r16
    1f02:	8d 91       	ld	r24, X+
    1f04:	9c 91       	ld	r25, X
    1f06:	0e 94 72 06 	call	0xce4	; 0xce4 <move_window>
    1f0a:	81 11       	cpse	r24, r1
    1f0c:	85 c0       	rjmp	.+266    	; 0x2018 <dir_next+0x252>
    1f0e:	f8 01       	movw	r30, r16
    1f10:	80 81       	ld	r24, Z
    1f12:	91 81       	ldd	r25, Z+1	; 0x01
    1f14:	40 e0       	ldi	r20, 0x00	; 0
    1f16:	52 e0       	ldi	r21, 0x02	; 2
    1f18:	60 e0       	ldi	r22, 0x00	; 0
    1f1a:	70 e0       	ldi	r23, 0x00	; 0
    1f1c:	c2 96       	adiw	r24, 0x32	; 50
    1f1e:	0e 94 67 06 	call	0xcce	; 0xcce <mem_set>
    1f22:	d8 01       	movw	r26, r16
    1f24:	ed 90       	ld	r14, X+
    1f26:	fc 90       	ld	r15, X
    1f28:	b5 01       	movw	r22, r10
    1f2a:	a4 01       	movw	r20, r8
    1f2c:	c7 01       	movw	r24, r14
    1f2e:	66 de       	rcall	.-820    	; 0x1bfc <clust2sect>
    1f30:	f7 01       	movw	r30, r14
    1f32:	66 a7       	std	Z+46, r22	; 0x2e
    1f34:	77 a7       	std	Z+47, r23	; 0x2f
    1f36:	80 ab       	std	Z+48, r24	; 0x30
    1f38:	91 ab       	std	Z+49, r25	; 0x31
    1f3a:	f1 2c       	mov	r15, r1
    1f3c:	ee 24       	eor	r14, r14
    1f3e:	e3 94       	inc	r14
    1f40:	1a c0       	rjmp	.+52     	; 0x1f76 <dir_next+0x1b0>
    1f42:	e4 82       	std	Z+4, r14	; 0x04
    1f44:	40 e0       	ldi	r20, 0x00	; 0
    1f46:	50 e0       	ldi	r21, 0x00	; 0
    1f48:	ba 01       	movw	r22, r20
    1f4a:	d8 01       	movw	r26, r16
    1f4c:	8d 91       	ld	r24, X+
    1f4e:	9c 91       	ld	r25, X
    1f50:	0e 94 72 06 	call	0xce4	; 0xce4 <move_window>
    1f54:	81 11       	cpse	r24, r1
    1f56:	62 c0       	rjmp	.+196    	; 0x201c <dir_next+0x256>
    1f58:	d8 01       	movw	r26, r16
    1f5a:	ed 91       	ld	r30, X+
    1f5c:	fc 91       	ld	r31, X
    1f5e:	86 a5       	ldd	r24, Z+46	; 0x2e
    1f60:	97 a5       	ldd	r25, Z+47	; 0x2f
    1f62:	a0 a9       	ldd	r26, Z+48	; 0x30
    1f64:	b1 a9       	ldd	r27, Z+49	; 0x31
    1f66:	01 96       	adiw	r24, 0x01	; 1
    1f68:	a1 1d       	adc	r26, r1
    1f6a:	b1 1d       	adc	r27, r1
    1f6c:	86 a7       	std	Z+46, r24	; 0x2e
    1f6e:	97 a7       	std	Z+47, r25	; 0x2f
    1f70:	a0 ab       	std	Z+48, r26	; 0x30
    1f72:	b1 ab       	std	Z+49, r27	; 0x31
    1f74:	f3 94       	inc	r15
    1f76:	d8 01       	movw	r26, r16
    1f78:	ed 91       	ld	r30, X+
    1f7a:	fc 91       	ld	r31, X
    1f7c:	82 81       	ldd	r24, Z+2	; 0x02
    1f7e:	f8 16       	cp	r15, r24
    1f80:	00 f3       	brcs	.-64     	; 0x1f42 <dir_next+0x17c>
    1f82:	86 a5       	ldd	r24, Z+46	; 0x2e
    1f84:	97 a5       	ldd	r25, Z+47	; 0x2f
    1f86:	a0 a9       	ldd	r26, Z+48	; 0x30
    1f88:	b1 a9       	ldd	r27, Z+49	; 0x31
    1f8a:	8f 19       	sub	r24, r15
    1f8c:	91 09       	sbc	r25, r1
    1f8e:	a1 09       	sbc	r26, r1
    1f90:	b1 09       	sbc	r27, r1
    1f92:	86 a7       	std	Z+46, r24	; 0x2e
    1f94:	97 a7       	std	Z+47, r25	; 0x2f
    1f96:	a0 ab       	std	Z+48, r26	; 0x30
    1f98:	b1 ab       	std	Z+49, r27	; 0x31
    1f9a:	f8 01       	movw	r30, r16
    1f9c:	82 86       	std	Z+10, r8	; 0x0a
    1f9e:	93 86       	std	Z+11, r9	; 0x0b
    1fa0:	a4 86       	std	Z+12, r10	; 0x0c
    1fa2:	b5 86       	std	Z+13, r11	; 0x0d
    1fa4:	b5 01       	movw	r22, r10
    1fa6:	a4 01       	movw	r20, r8
    1fa8:	80 81       	ld	r24, Z
    1faa:	91 81       	ldd	r25, Z+1	; 0x01
    1fac:	27 de       	rcall	.-946    	; 0x1bfc <clust2sect>
    1fae:	d8 01       	movw	r26, r16
    1fb0:	1e 96       	adiw	r26, 0x0e	; 14
    1fb2:	6d 93       	st	X+, r22
    1fb4:	7d 93       	st	X+, r23
    1fb6:	8d 93       	st	X+, r24
    1fb8:	9c 93       	st	X, r25
    1fba:	51 97       	sbiw	r26, 0x11	; 17
    1fbc:	f8 01       	movw	r30, r16
    1fbe:	d5 83       	std	Z+5, r29	; 0x05
    1fc0:	c4 83       	std	Z+4, r28	; 0x04
    1fc2:	cc 0c       	add	r12, r12
    1fc4:	dd 1c       	adc	r13, r13
    1fc6:	cc 0c       	add	r12, r12
    1fc8:	dd 1c       	adc	r13, r13
    1fca:	cc 0c       	add	r12, r12
    1fcc:	dd 1c       	adc	r13, r13
    1fce:	cc 0c       	add	r12, r12
    1fd0:	dd 1c       	adc	r13, r13
    1fd2:	cc 0c       	add	r12, r12
    1fd4:	dd 1c       	adc	r13, r13
    1fd6:	f2 e3       	ldi	r31, 0x32	; 50
    1fd8:	cf 0e       	add	r12, r31
    1fda:	d1 1c       	adc	r13, r1
    1fdc:	d8 01       	movw	r26, r16
    1fde:	8d 91       	ld	r24, X+
    1fe0:	9c 91       	ld	r25, X
    1fe2:	11 97       	sbiw	r26, 0x01	; 1
    1fe4:	c8 0e       	add	r12, r24
    1fe6:	d9 1e       	adc	r13, r25
    1fe8:	53 96       	adiw	r26, 0x13	; 19
    1fea:	dc 92       	st	X, r13
    1fec:	ce 92       	st	-X, r12
    1fee:	52 97       	sbiw	r26, 0x12	; 18
    1ff0:	80 e0       	ldi	r24, 0x00	; 0
    1ff2:	15 c0       	rjmp	.+42     	; 0x201e <dir_next+0x258>
    1ff4:	84 e0       	ldi	r24, 0x04	; 4
    1ff6:	13 c0       	rjmp	.+38     	; 0x201e <dir_next+0x258>
    1ff8:	84 e0       	ldi	r24, 0x04	; 4
    1ffa:	11 c0       	rjmp	.+34     	; 0x201e <dir_next+0x258>
    1ffc:	84 e0       	ldi	r24, 0x04	; 4
    1ffe:	0f c0       	rjmp	.+30     	; 0x201e <dir_next+0x258>
    2000:	82 e0       	ldi	r24, 0x02	; 2
    2002:	0d c0       	rjmp	.+26     	; 0x201e <dir_next+0x258>
    2004:	81 e0       	ldi	r24, 0x01	; 1
    2006:	0b c0       	rjmp	.+22     	; 0x201e <dir_next+0x258>
    2008:	84 e0       	ldi	r24, 0x04	; 4
    200a:	09 c0       	rjmp	.+18     	; 0x201e <dir_next+0x258>
    200c:	87 e0       	ldi	r24, 0x07	; 7
    200e:	07 c0       	rjmp	.+14     	; 0x201e <dir_next+0x258>
    2010:	82 e0       	ldi	r24, 0x02	; 2
    2012:	05 c0       	rjmp	.+10     	; 0x201e <dir_next+0x258>
    2014:	81 e0       	ldi	r24, 0x01	; 1
    2016:	03 c0       	rjmp	.+6      	; 0x201e <dir_next+0x258>
    2018:	81 e0       	ldi	r24, 0x01	; 1
    201a:	01 c0       	rjmp	.+2      	; 0x201e <dir_next+0x258>
    201c:	81 e0       	ldi	r24, 0x01	; 1
    201e:	df 91       	pop	r29
    2020:	cf 91       	pop	r28
    2022:	1f 91       	pop	r17
    2024:	0f 91       	pop	r16
    2026:	ff 90       	pop	r15
    2028:	ef 90       	pop	r14
    202a:	df 90       	pop	r13
    202c:	cf 90       	pop	r12
    202e:	bf 90       	pop	r11
    2030:	af 90       	pop	r10
    2032:	9f 90       	pop	r9
    2034:	8f 90       	pop	r8
    2036:	08 95       	ret

00002038 <follow_path>:
    2038:	2f 92       	push	r2
    203a:	3f 92       	push	r3
    203c:	4f 92       	push	r4
    203e:	5f 92       	push	r5
    2040:	6f 92       	push	r6
    2042:	7f 92       	push	r7
    2044:	8f 92       	push	r8
    2046:	9f 92       	push	r9
    2048:	af 92       	push	r10
    204a:	bf 92       	push	r11
    204c:	cf 92       	push	r12
    204e:	df 92       	push	r13
    2050:	ef 92       	push	r14
    2052:	ff 92       	push	r15
    2054:	0f 93       	push	r16
    2056:	1f 93       	push	r17
    2058:	cf 93       	push	r28
    205a:	df 93       	push	r29
    205c:	cd b7       	in	r28, 0x3d	; 61
    205e:	de b7       	in	r29, 0x3e	; 62
    2060:	27 97       	sbiw	r28, 0x07	; 7
    2062:	0f b6       	in	r0, 0x3f	; 63
    2064:	f8 94       	cli
    2066:	de bf       	out	0x3e, r29	; 62
    2068:	0f be       	out	0x3f, r0	; 63
    206a:	cd bf       	out	0x3d, r28	; 61
    206c:	7c 01       	movw	r14, r24
    206e:	8b 01       	movw	r16, r22
    2070:	db 01       	movw	r26, r22
    2072:	8c 91       	ld	r24, X
    2074:	8f 32       	cpi	r24, 0x2F	; 47
    2076:	11 f0       	breq	.+4      	; 0x207c <follow_path+0x44>
    2078:	8c 35       	cpi	r24, 0x5C	; 92
    207a:	41 f4       	brne	.+16     	; 0x208c <follow_path+0x54>
    207c:	0f 5f       	subi	r16, 0xFF	; 255
    207e:	1f 4f       	sbci	r17, 0xFF	; 255
    2080:	f7 01       	movw	r30, r14
    2082:	16 82       	std	Z+6, r1	; 0x06
    2084:	17 82       	std	Z+7, r1	; 0x07
    2086:	10 86       	std	Z+8, r1	; 0x08
    2088:	11 86       	std	Z+9, r1	; 0x09
    208a:	0c c0       	rjmp	.+24     	; 0x20a4 <follow_path+0x6c>
    208c:	d7 01       	movw	r26, r14
    208e:	ed 91       	ld	r30, X+
    2090:	fc 91       	ld	r31, X
    2092:	86 89       	ldd	r24, Z+22	; 0x16
    2094:	97 89       	ldd	r25, Z+23	; 0x17
    2096:	a0 8d       	ldd	r26, Z+24	; 0x18
    2098:	b1 8d       	ldd	r27, Z+25	; 0x19
    209a:	f7 01       	movw	r30, r14
    209c:	86 83       	std	Z+6, r24	; 0x06
    209e:	97 83       	std	Z+7, r25	; 0x07
    20a0:	a0 87       	std	Z+8, r26	; 0x08
    20a2:	b1 87       	std	Z+9, r27	; 0x09
    20a4:	d8 01       	movw	r26, r16
    20a6:	8c 91       	ld	r24, X
    20a8:	80 32       	cpi	r24, 0x20	; 32
    20aa:	40 f4       	brcc	.+16     	; 0x20bc <follow_path+0x84>
    20ac:	60 e0       	ldi	r22, 0x00	; 0
    20ae:	70 e0       	ldi	r23, 0x00	; 0
    20b0:	c7 01       	movw	r24, r14
    20b2:	d2 dd       	rcall	.-1116   	; 0x1c58 <dir_sdi>
    20b4:	f7 01       	movw	r30, r14
    20b6:	13 8a       	std	Z+19, r1	; 0x13
    20b8:	12 8a       	std	Z+18, r1	; 0x12
    20ba:	67 c1       	rjmp	.+718    	; 0x238a <follow_path+0x352>
    20bc:	0f 2e       	mov	r0, r31
    20be:	fb e0       	ldi	r31, 0x0B	; 11
    20c0:	9f 2e       	mov	r9, r31
    20c2:	f0 2d       	mov	r31, r0
    20c4:	81 2c       	mov	r8, r1
    20c6:	b1 2c       	mov	r11, r1
    20c8:	a1 2c       	mov	r10, r1
    20ca:	68 94       	set
    20cc:	77 24       	eor	r7, r7
    20ce:	73 f8       	bld	r7, 3
    20d0:	31 2c       	mov	r3, r1
    20d2:	21 2c       	mov	r2, r1
    20d4:	0f 2e       	mov	r0, r31
    20d6:	f5 e0       	ldi	r31, 0x05	; 5
    20d8:	df 2e       	mov	r13, r31
    20da:	f0 2d       	mov	r31, r0
    20dc:	3b 82       	std	Y+3, r3	; 0x03
    20de:	9c 82       	std	Y+4, r9	; 0x04
    20e0:	8d 82       	std	Y+5, r8	; 0x05
    20e2:	0f 2e       	mov	r0, r31
    20e4:	fe e2       	ldi	r31, 0x2E	; 46
    20e6:	6f 2e       	mov	r6, r31
    20e8:	f0 2d       	mov	r31, r0
    20ea:	ff 82       	std	Y+7, r15	; 0x07
    20ec:	ee 82       	std	Y+6, r14	; 0x06
    20ee:	c7 2c       	mov	r12, r7
    20f0:	ae 81       	ldd	r26, Y+6	; 0x06
    20f2:	bf 81       	ldd	r27, Y+7	; 0x07
    20f4:	54 96       	adiw	r26, 0x14	; 20
    20f6:	ed 90       	ld	r14, X+
    20f8:	fc 90       	ld	r15, X
    20fa:	55 97       	sbiw	r26, 0x15	; 21
    20fc:	49 2d       	mov	r20, r9
    20fe:	58 2d       	mov	r21, r8
    2100:	60 e2       	ldi	r22, 0x20	; 32
    2102:	70 e0       	ldi	r23, 0x00	; 0
    2104:	c7 01       	movw	r24, r14
    2106:	0e 94 67 06 	call	0xcce	; 0xcce <mem_set>
    210a:	f8 01       	movw	r30, r16
    210c:	80 81       	ld	r24, Z
    210e:	8e 32       	cpi	r24, 0x2E	; 46
    2110:	49 f0       	breq	.+18     	; 0x2124 <follow_path+0xec>
    2112:	d8 01       	movw	r26, r16
    2114:	b9 82       	std	Y+1, r11	; 0x01
    2116:	aa 82       	std	Y+2, r10	; 0x02
    2118:	4b 2d       	mov	r20, r11
    211a:	5a 2d       	mov	r21, r10
    211c:	47 2c       	mov	r4, r7
    211e:	53 2c       	mov	r5, r3
    2120:	72 2d       	mov	r23, r2
    2122:	1f c0       	rjmp	.+62     	; 0x2162 <follow_path+0x12a>
    2124:	d7 01       	movw	r26, r14
    2126:	6c 92       	st	X, r6
    2128:	f8 01       	movw	r30, r16
    212a:	81 81       	ldd	r24, Z+1	; 0x01
    212c:	8e 32       	cpi	r24, 0x2E	; 46
    212e:	49 f4       	brne	.+18     	; 0x2142 <follow_path+0x10a>
    2130:	11 96       	adiw	r26, 0x01	; 1
    2132:	6c 92       	st	X, r6
    2134:	82 81       	ldd	r24, Z+2	; 0x02
    2136:	8e 32       	cpi	r24, 0x2E	; 46
    2138:	09 f4       	brne	.+2      	; 0x213c <follow_path+0x104>
    213a:	77 c0       	rjmp	.+238    	; 0x222a <follow_path+0x1f2>
    213c:	23 e0       	ldi	r18, 0x03	; 3
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	02 c0       	rjmp	.+4      	; 0x2146 <follow_path+0x10e>
    2142:	22 e0       	ldi	r18, 0x02	; 2
    2144:	30 e0       	ldi	r19, 0x00	; 0
    2146:	8f 32       	cpi	r24, 0x2F	; 47
    2148:	09 f4       	brne	.+2      	; 0x214c <follow_path+0x114>
    214a:	db c0       	rjmp	.+438    	; 0x2302 <follow_path+0x2ca>
    214c:	8c 35       	cpi	r24, 0x5C	; 92
    214e:	09 f4       	brne	.+2      	; 0x2152 <follow_path+0x11a>
    2150:	d8 c0       	rjmp	.+432    	; 0x2302 <follow_path+0x2ca>
    2152:	81 32       	cpi	r24, 0x21	; 33
    2154:	08 f0       	brcs	.+2      	; 0x2158 <follow_path+0x120>
    2156:	f1 c0       	rjmp	.+482    	; 0x233a <follow_path+0x302>
    2158:	d8 c0       	rjmp	.+432    	; 0x230a <follow_path+0x2d2>
    215a:	d7 01       	movw	r26, r14
    215c:	1b 96       	adiw	r26, 0x0b	; 11
    215e:	8c 93       	st	X, r24
    2160:	ee c0       	rjmp	.+476    	; 0x233e <follow_path+0x306>
    2162:	4f 5f       	subi	r20, 0xFF	; 255
    2164:	5f 4f       	sbci	r21, 0xFF	; 255
    2166:	6d 91       	ld	r22, X+
    2168:	61 32       	cpi	r22, 0x21	; 33
    216a:	08 f4       	brcc	.+2      	; 0x216e <follow_path+0x136>
    216c:	e2 c0       	rjmp	.+452    	; 0x2332 <follow_path+0x2fa>
    216e:	6f 32       	cpi	r22, 0x2F	; 47
    2170:	09 f4       	brne	.+2      	; 0x2174 <follow_path+0x13c>
    2172:	db c0       	rjmp	.+438    	; 0x232a <follow_path+0x2f2>
    2174:	6c 35       	cpi	r22, 0x5C	; 92
    2176:	09 f4       	brne	.+2      	; 0x217a <follow_path+0x142>
    2178:	d8 c0       	rjmp	.+432    	; 0x232a <follow_path+0x2f2>
    217a:	6e 32       	cpi	r22, 0x2E	; 46
    217c:	09 f4       	brne	.+2      	; 0x2180 <follow_path+0x148>
    217e:	c9 c0       	rjmp	.+402    	; 0x2312 <follow_path+0x2da>
    2180:	e9 81       	ldd	r30, Y+1	; 0x01
    2182:	fa 81       	ldd	r31, Y+2	; 0x02
    2184:	e4 15       	cp	r30, r4
    2186:	f5 05       	cpc	r31, r5
    2188:	0c f0       	brlt	.+2      	; 0x218c <follow_path+0x154>
    218a:	d7 c0       	rjmp	.+430    	; 0x233a <follow_path+0x302>
    218c:	08 c0       	rjmp	.+16     	; 0x219e <follow_path+0x166>
    218e:	77 0f       	add	r23, r23
    2190:	77 0f       	add	r23, r23
    2192:	c9 82       	std	Y+1, r12	; 0x01
    2194:	fb 81       	ldd	r31, Y+3	; 0x03
    2196:	fa 83       	std	Y+2, r31	; 0x02
    2198:	4c 80       	ldd	r4, Y+4	; 0x04
    219a:	5d 80       	ldd	r5, Y+5	; 0x05
    219c:	e2 cf       	rjmp	.-60     	; 0x2162 <follow_path+0x12a>
    219e:	66 23       	and	r22, r22
    21a0:	0c f4       	brge	.+2      	; 0x21a4 <follow_path+0x16c>
    21a2:	cb c0       	rjmp	.+406    	; 0x233a <follow_path+0x302>
    21a4:	26 2f       	mov	r18, r22
    21a6:	30 e0       	ldi	r19, 0x00	; 0
    21a8:	22 32       	cpi	r18, 0x22	; 34
    21aa:	31 05       	cpc	r19, r1
    21ac:	f1 f1       	breq	.+124    	; 0x222a <follow_path+0x1f2>
    21ae:	ec e0       	ldi	r30, 0x0C	; 12
    21b0:	f1 e0       	ldi	r31, 0x01	; 1
    21b2:	81 91       	ld	r24, Z+
    21b4:	88 23       	and	r24, r24
    21b6:	09 f4       	brne	.+2      	; 0x21ba <follow_path+0x182>
    21b8:	b2 c0       	rjmp	.+356    	; 0x231e <follow_path+0x2e6>
    21ba:	90 e0       	ldi	r25, 0x00	; 0
    21bc:	28 17       	cp	r18, r24
    21be:	39 07       	cpc	r19, r25
    21c0:	c1 f7       	brne	.-16     	; 0x21b2 <follow_path+0x17a>
    21c2:	33 c0       	rjmp	.+102    	; 0x222a <follow_path+0x1f2>
    21c4:	72 60       	ori	r23, 0x02	; 2
    21c6:	06 c0       	rjmp	.+12     	; 0x21d4 <follow_path+0x19c>
    21c8:	8f e9       	ldi	r24, 0x9F	; 159
    21ca:	86 0f       	add	r24, r22
    21cc:	8a 31       	cpi	r24, 0x1A	; 26
    21ce:	10 f4       	brcc	.+4      	; 0x21d4 <follow_path+0x19c>
    21d0:	71 60       	ori	r23, 0x01	; 1
    21d2:	60 52       	subi	r22, 0x20	; 32
    21d4:	89 81       	ldd	r24, Y+1	; 0x01
    21d6:	9a 81       	ldd	r25, Y+2	; 0x02
    21d8:	8e 0d       	add	r24, r14
    21da:	9f 1d       	adc	r25, r15
    21dc:	fc 01       	movw	r30, r24
    21de:	60 83       	st	Z, r22
    21e0:	29 81       	ldd	r18, Y+1	; 0x01
    21e2:	3a 81       	ldd	r19, Y+2	; 0x02
    21e4:	2f 5f       	subi	r18, 0xFF	; 255
    21e6:	3f 4f       	sbci	r19, 0xFF	; 255
    21e8:	3a 83       	std	Y+2, r19	; 0x02
    21ea:	29 83       	std	Y+1, r18	; 0x01
    21ec:	ba cf       	rjmp	.-140    	; 0x2162 <follow_path+0x12a>
    21ee:	a9 81       	ldd	r26, Y+1	; 0x01
    21f0:	ba 81       	ldd	r27, Y+2	; 0x02
    21f2:	ab 2b       	or	r26, r27
    21f4:	09 f4       	brne	.+2      	; 0x21f8 <follow_path+0x1c0>
    21f6:	a1 c0       	rjmp	.+322    	; 0x233a <follow_path+0x302>
    21f8:	f7 01       	movw	r30, r14
    21fa:	90 81       	ld	r25, Z
    21fc:	95 3e       	cpi	r25, 0xE5	; 229
    21fe:	09 f4       	brne	.+2      	; 0x2202 <follow_path+0x1ca>
    2200:	d0 82       	st	Z, r13
    2202:	f8 e0       	ldi	r31, 0x08	; 8
    2204:	4f 16       	cp	r4, r31
    2206:	51 04       	cpc	r5, r1
    2208:	11 f4       	brne	.+4      	; 0x220e <follow_path+0x1d6>
    220a:	77 0f       	add	r23, r23
    220c:	77 0f       	add	r23, r23
    220e:	97 2f       	mov	r25, r23
    2210:	93 70       	andi	r25, 0x03	; 3
    2212:	91 30       	cpi	r25, 0x01	; 1
    2214:	09 f4       	brne	.+2      	; 0x2218 <follow_path+0x1e0>
    2216:	80 61       	ori	r24, 0x10	; 16
    2218:	97 2f       	mov	r25, r23
    221a:	9c 70       	andi	r25, 0x0C	; 12
    221c:	94 30       	cpi	r25, 0x04	; 4
    221e:	09 f4       	brne	.+2      	; 0x2222 <follow_path+0x1ea>
    2220:	88 60       	ori	r24, 0x08	; 8
    2222:	d7 01       	movw	r26, r14
    2224:	1b 96       	adiw	r26, 0x0b	; 11
    2226:	8c 93       	st	X, r24
    2228:	8a c0       	rjmp	.+276    	; 0x233e <follow_path+0x306>
    222a:	86 e0       	ldi	r24, 0x06	; 6
    222c:	ae c0       	rjmp	.+348    	; 0x238a <follow_path+0x352>
    222e:	ee 80       	ldd	r14, Y+6	; 0x06
    2230:	ff 80       	ldd	r15, Y+7	; 0x07
    2232:	f7 01       	movw	r30, r14
    2234:	46 85       	ldd	r20, Z+14	; 0x0e
    2236:	57 85       	ldd	r21, Z+15	; 0x0f
    2238:	60 89       	ldd	r22, Z+16	; 0x10
    223a:	71 89       	ldd	r23, Z+17	; 0x11
    223c:	80 81       	ld	r24, Z
    223e:	91 81       	ldd	r25, Z+1	; 0x01
    2240:	0e 94 72 06 	call	0xce4	; 0xce4 <move_window>
    2244:	81 11       	cpse	r24, r1
    2246:	8b c0       	rjmp	.+278    	; 0x235e <follow_path+0x326>
    2248:	d7 01       	movw	r26, r14
    224a:	52 96       	adiw	r26, 0x12	; 18
    224c:	4d 91       	ld	r20, X+
    224e:	5c 91       	ld	r21, X
    2250:	53 97       	sbiw	r26, 0x13	; 19
    2252:	fa 01       	movw	r30, r20
    2254:	90 81       	ld	r25, Z
    2256:	99 23       	and	r25, r25
    2258:	09 f4       	brne	.+2      	; 0x225c <follow_path+0x224>
    225a:	8e c0       	rjmp	.+284    	; 0x2378 <follow_path+0x340>
    225c:	93 85       	ldd	r25, Z+11	; 0x0b
    225e:	93 fd       	sbrc	r25, 3
    2260:	13 c0       	rjmp	.+38     	; 0x2288 <follow_path+0x250>
    2262:	54 96       	adiw	r26, 0x14	; 20
    2264:	6d 91       	ld	r22, X+
    2266:	7c 91       	ld	r23, X
    2268:	55 97       	sbiw	r26, 0x15	; 21
    226a:	db 01       	movw	r26, r22
    226c:	9a 01       	movw	r18, r20
    226e:	25 5f       	subi	r18, 0xF5	; 245
    2270:	3f 4f       	sbci	r19, 0xFF	; 255
    2272:	27 01       	movw	r4, r14
    2274:	04 c0       	rjmp	.+8      	; 0x227e <follow_path+0x246>
    2276:	e2 17       	cp	r30, r18
    2278:	f3 07       	cpc	r31, r19
    227a:	09 f4       	brne	.+2      	; 0x227e <follow_path+0x246>
    227c:	69 c0       	rjmp	.+210    	; 0x2350 <follow_path+0x318>
    227e:	f1 90       	ld	r15, Z+
    2280:	9d 91       	ld	r25, X+
    2282:	f9 16       	cp	r15, r25
    2284:	c1 f3       	breq	.-16     	; 0x2276 <follow_path+0x23e>
    2286:	72 01       	movw	r14, r4
    2288:	6b 2d       	mov	r22, r11
    228a:	7a 2d       	mov	r23, r10
    228c:	c7 01       	movw	r24, r14
    228e:	9b dd       	rcall	.-1226   	; 0x1dc6 <dir_next>
    2290:	88 23       	and	r24, r24
    2292:	79 f2       	breq	.-98     	; 0x2232 <follow_path+0x1fa>
    2294:	ff 82       	std	Y+7, r15	; 0x07
    2296:	ee 82       	std	Y+6, r14	; 0x06
    2298:	64 c0       	rjmp	.+200    	; 0x2362 <follow_path+0x32a>
    229a:	95 ff       	sbrs	r25, 5
    229c:	10 c0       	rjmp	.+32     	; 0x22be <follow_path+0x286>
    229e:	ae 81       	ldd	r26, Y+6	; 0x06
    22a0:	bf 81       	ldd	r27, Y+7	; 0x07
    22a2:	16 96       	adiw	r26, 0x06	; 6
    22a4:	1d 92       	st	X+, r1
    22a6:	1d 92       	st	X+, r1
    22a8:	1d 92       	st	X+, r1
    22aa:	1c 92       	st	X, r1
    22ac:	19 97       	sbiw	r26, 0x09	; 9
    22ae:	53 96       	adiw	r26, 0x13	; 19
    22b0:	1c 92       	st	X, r1
    22b2:	1e 92       	st	-X, r1
    22b4:	52 97       	sbiw	r26, 0x12	; 18
    22b6:	92 ff       	sbrs	r25, 2
    22b8:	1b cf       	rjmp	.-458    	; 0x20f0 <follow_path+0xb8>
    22ba:	80 e0       	ldi	r24, 0x00	; 0
    22bc:	66 c0       	rjmp	.+204    	; 0x238a <follow_path+0x352>
    22be:	92 fd       	sbrc	r25, 2
    22c0:	1c c0       	rjmp	.+56     	; 0x22fa <follow_path+0x2c2>
    22c2:	85 e0       	ldi	r24, 0x05	; 5
    22c4:	62 c0       	rjmp	.+196    	; 0x238a <follow_path+0x352>
    22c6:	fa 01       	movw	r30, r20
    22c8:	83 85       	ldd	r24, Z+11	; 0x0b
    22ca:	84 ff       	sbrs	r24, 4
    22cc:	18 c0       	rjmp	.+48     	; 0x22fe <follow_path+0x2c6>
    22ce:	84 89       	ldd	r24, Z+20	; 0x14
    22d0:	95 89       	ldd	r25, Z+21	; 0x15
    22d2:	a0 e0       	ldi	r26, 0x00	; 0
    22d4:	b0 e0       	ldi	r27, 0x00	; 0
    22d6:	dc 01       	movw	r26, r24
    22d8:	99 27       	eor	r25, r25
    22da:	88 27       	eor	r24, r24
    22dc:	42 8d       	ldd	r20, Z+26	; 0x1a
    22de:	53 8d       	ldd	r21, Z+27	; 0x1b
    22e0:	60 e0       	ldi	r22, 0x00	; 0
    22e2:	70 e0       	ldi	r23, 0x00	; 0
    22e4:	84 2b       	or	r24, r20
    22e6:	95 2b       	or	r25, r21
    22e8:	a6 2b       	or	r26, r22
    22ea:	b7 2b       	or	r27, r23
    22ec:	ee 81       	ldd	r30, Y+6	; 0x06
    22ee:	ff 81       	ldd	r31, Y+7	; 0x07
    22f0:	86 83       	std	Z+6, r24	; 0x06
    22f2:	97 83       	std	Z+7, r25	; 0x07
    22f4:	a0 87       	std	Z+8, r26	; 0x08
    22f6:	b1 87       	std	Z+9, r27	; 0x09
    22f8:	fb ce       	rjmp	.-522    	; 0x20f0 <follow_path+0xb8>
    22fa:	84 e0       	ldi	r24, 0x04	; 4
    22fc:	46 c0       	rjmp	.+140    	; 0x238a <follow_path+0x352>
    22fe:	85 e0       	ldi	r24, 0x05	; 5
    2300:	44 c0       	rjmp	.+136    	; 0x238a <follow_path+0x352>
    2302:	02 0f       	add	r16, r18
    2304:	13 1f       	adc	r17, r19
    2306:	80 e2       	ldi	r24, 0x20	; 32
    2308:	28 cf       	rjmp	.-432    	; 0x215a <follow_path+0x122>
    230a:	02 0f       	add	r16, r18
    230c:	13 1f       	adc	r17, r19
    230e:	84 e2       	ldi	r24, 0x24	; 36
    2310:	24 cf       	rjmp	.-440    	; 0x215a <follow_path+0x122>
    2312:	f8 e0       	ldi	r31, 0x08	; 8
    2314:	4f 16       	cp	r4, r31
    2316:	51 04       	cpc	r5, r1
    2318:	09 f4       	brne	.+2      	; 0x231c <follow_path+0x2e4>
    231a:	39 cf       	rjmp	.-398    	; 0x218e <follow_path+0x156>
    231c:	86 cf       	rjmp	.-244    	; 0x222a <follow_path+0x1f2>
    231e:	8f eb       	ldi	r24, 0xBF	; 191
    2320:	86 0f       	add	r24, r22
    2322:	8a 31       	cpi	r24, 0x1A	; 26
    2324:	08 f4       	brcc	.+2      	; 0x2328 <follow_path+0x2f0>
    2326:	4e cf       	rjmp	.-356    	; 0x21c4 <follow_path+0x18c>
    2328:	4f cf       	rjmp	.-354    	; 0x21c8 <follow_path+0x190>
    232a:	04 0f       	add	r16, r20
    232c:	15 1f       	adc	r17, r21
    232e:	82 2d       	mov	r24, r2
    2330:	5e cf       	rjmp	.-324    	; 0x21ee <follow_path+0x1b6>
    2332:	04 0f       	add	r16, r20
    2334:	15 1f       	adc	r17, r21
    2336:	84 e0       	ldi	r24, 0x04	; 4
    2338:	5a cf       	rjmp	.-332    	; 0x21ee <follow_path+0x1b6>
    233a:	86 e0       	ldi	r24, 0x06	; 6
    233c:	26 c0       	rjmp	.+76     	; 0x238a <follow_path+0x352>
    233e:	6b 2d       	mov	r22, r11
    2340:	7a 2d       	mov	r23, r10
    2342:	8e 81       	ldd	r24, Y+6	; 0x06
    2344:	9f 81       	ldd	r25, Y+7	; 0x07
    2346:	88 dc       	rcall	.-1776   	; 0x1c58 <dir_sdi>
    2348:	88 23       	and	r24, r24
    234a:	09 f4       	brne	.+2      	; 0x234e <follow_path+0x316>
    234c:	70 cf       	rjmp	.-288    	; 0x222e <follow_path+0x1f6>
    234e:	09 c0       	rjmp	.+18     	; 0x2362 <follow_path+0x32a>
    2350:	5f 82       	std	Y+7, r5	; 0x07
    2352:	4e 82       	std	Y+6, r4	; 0x06
    2354:	fb 01       	movw	r30, r22
    2356:	93 85       	ldd	r25, Z+11	; 0x0b
    2358:	92 ff       	sbrs	r25, 2
    235a:	b5 cf       	rjmp	.-150    	; 0x22c6 <follow_path+0x28e>
    235c:	16 c0       	rjmp	.+44     	; 0x238a <follow_path+0x352>
    235e:	ff 82       	std	Y+7, r15	; 0x07
    2360:	ee 82       	std	Y+6, r14	; 0x06
    2362:	ae 81       	ldd	r26, Y+6	; 0x06
    2364:	bf 81       	ldd	r27, Y+7	; 0x07
    2366:	54 96       	adiw	r26, 0x14	; 20
    2368:	ed 91       	ld	r30, X+
    236a:	fc 91       	ld	r31, X
    236c:	55 97       	sbiw	r26, 0x15	; 21
    236e:	93 85       	ldd	r25, Z+11	; 0x0b
    2370:	84 30       	cpi	r24, 0x04	; 4
    2372:	09 f4       	brne	.+2      	; 0x2376 <follow_path+0x33e>
    2374:	92 cf       	rjmp	.-220    	; 0x229a <follow_path+0x262>
    2376:	09 c0       	rjmp	.+18     	; 0x238a <follow_path+0x352>
    2378:	ff 82       	std	Y+7, r15	; 0x07
    237a:	ee 82       	std	Y+6, r14	; 0x06
    237c:	d7 01       	movw	r26, r14
    237e:	54 96       	adiw	r26, 0x14	; 20
    2380:	ed 91       	ld	r30, X+
    2382:	fc 91       	ld	r31, X
    2384:	55 97       	sbiw	r26, 0x15	; 21
    2386:	93 85       	ldd	r25, Z+11	; 0x0b
    2388:	88 cf       	rjmp	.-240    	; 0x229a <follow_path+0x262>
    238a:	27 96       	adiw	r28, 0x07	; 7
    238c:	0f b6       	in	r0, 0x3f	; 63
    238e:	f8 94       	cli
    2390:	de bf       	out	0x3e, r29	; 62
    2392:	0f be       	out	0x3f, r0	; 63
    2394:	cd bf       	out	0x3d, r28	; 61
    2396:	df 91       	pop	r29
    2398:	cf 91       	pop	r28
    239a:	1f 91       	pop	r17
    239c:	0f 91       	pop	r16
    239e:	ff 90       	pop	r15
    23a0:	ef 90       	pop	r14
    23a2:	df 90       	pop	r13
    23a4:	cf 90       	pop	r12
    23a6:	bf 90       	pop	r11
    23a8:	af 90       	pop	r10
    23aa:	9f 90       	pop	r9
    23ac:	8f 90       	pop	r8
    23ae:	7f 90       	pop	r7
    23b0:	6f 90       	pop	r6
    23b2:	5f 90       	pop	r5
    23b4:	4f 90       	pop	r4
    23b6:	3f 90       	pop	r3
    23b8:	2f 90       	pop	r2
    23ba:	08 95       	ret

000023bc <dir_register>:
    23bc:	ef 92       	push	r14
    23be:	ff 92       	push	r15
    23c0:	0f 93       	push	r16
    23c2:	1f 93       	push	r17
    23c4:	cf 93       	push	r28
    23c6:	8c 01       	movw	r16, r24
    23c8:	60 e0       	ldi	r22, 0x00	; 0
    23ca:	70 e0       	ldi	r23, 0x00	; 0
    23cc:	45 dc       	rcall	.-1910   	; 0x1c58 <dir_sdi>
    23ce:	c8 2f       	mov	r28, r24
    23d0:	81 11       	cpse	r24, r1
    23d2:	46 c0       	rjmp	.+140    	; 0x2460 <dir_register+0xa4>
    23d4:	d8 01       	movw	r26, r16
    23d6:	1e 96       	adiw	r26, 0x0e	; 14
    23d8:	4d 91       	ld	r20, X+
    23da:	5d 91       	ld	r21, X+
    23dc:	6d 91       	ld	r22, X+
    23de:	7c 91       	ld	r23, X
    23e0:	51 97       	sbiw	r26, 0x11	; 17
    23e2:	8d 91       	ld	r24, X+
    23e4:	9c 91       	ld	r25, X
    23e6:	0e 94 72 06 	call	0xce4	; 0xce4 <move_window>
    23ea:	c8 2f       	mov	r28, r24
    23ec:	81 11       	cpse	r24, r1
    23ee:	38 c0       	rjmp	.+112    	; 0x2460 <dir_register+0xa4>
    23f0:	d8 01       	movw	r26, r16
    23f2:	52 96       	adiw	r26, 0x12	; 18
    23f4:	ed 91       	ld	r30, X+
    23f6:	fc 91       	ld	r31, X
    23f8:	53 97       	sbiw	r26, 0x13	; 19
    23fa:	80 81       	ld	r24, Z
    23fc:	85 3e       	cpi	r24, 0xE5	; 229
    23fe:	21 f1       	breq	.+72     	; 0x2448 <dir_register+0x8c>
    2400:	88 23       	and	r24, r24
    2402:	11 f1       	breq	.+68     	; 0x2448 <dir_register+0x8c>
    2404:	61 e0       	ldi	r22, 0x01	; 1
    2406:	70 e0       	ldi	r23, 0x00	; 0
    2408:	c8 01       	movw	r24, r16
    240a:	dd dc       	rcall	.-1606   	; 0x1dc6 <dir_next>
    240c:	c8 2f       	mov	r28, r24
    240e:	88 23       	and	r24, r24
    2410:	09 f3       	breq	.-62     	; 0x23d4 <dir_register+0x18>
    2412:	26 c0       	rjmp	.+76     	; 0x2460 <dir_register+0xa4>
    2414:	f8 01       	movw	r30, r16
    2416:	e2 88       	ldd	r14, Z+18	; 0x12
    2418:	f3 88       	ldd	r15, Z+19	; 0x13
    241a:	40 e2       	ldi	r20, 0x20	; 32
    241c:	50 e0       	ldi	r21, 0x00	; 0
    241e:	60 e0       	ldi	r22, 0x00	; 0
    2420:	70 e0       	ldi	r23, 0x00	; 0
    2422:	c7 01       	movw	r24, r14
    2424:	0e 94 67 06 	call	0xcce	; 0xcce <mem_set>
    2428:	d8 01       	movw	r26, r16
    242a:	54 96       	adiw	r26, 0x14	; 20
    242c:	6d 91       	ld	r22, X+
    242e:	7c 91       	ld	r23, X
    2430:	55 97       	sbiw	r26, 0x15	; 21
    2432:	4b e0       	ldi	r20, 0x0B	; 11
    2434:	50 e0       	ldi	r21, 0x00	; 0
    2436:	c7 01       	movw	r24, r14
    2438:	0e 94 35 06 	call	0xc6a	; 0xc6a <mem_cpy>
    243c:	d8 01       	movw	r26, r16
    243e:	ed 91       	ld	r30, X+
    2440:	fc 91       	ld	r31, X
    2442:	81 e0       	ldi	r24, 0x01	; 1
    2444:	84 83       	std	Z+4, r24	; 0x04
    2446:	0c c0       	rjmp	.+24     	; 0x2460 <dir_register+0xa4>
    2448:	f8 01       	movw	r30, r16
    244a:	46 85       	ldd	r20, Z+14	; 0x0e
    244c:	57 85       	ldd	r21, Z+15	; 0x0f
    244e:	60 89       	ldd	r22, Z+16	; 0x10
    2450:	71 89       	ldd	r23, Z+17	; 0x11
    2452:	80 81       	ld	r24, Z
    2454:	91 81       	ldd	r25, Z+1	; 0x01
    2456:	0e 94 72 06 	call	0xce4	; 0xce4 <move_window>
    245a:	c8 2f       	mov	r28, r24
    245c:	88 23       	and	r24, r24
    245e:	d1 f2       	breq	.-76     	; 0x2414 <dir_register+0x58>
    2460:	8c 2f       	mov	r24, r28
    2462:	cf 91       	pop	r28
    2464:	1f 91       	pop	r17
    2466:	0f 91       	pop	r16
    2468:	ff 90       	pop	r15
    246a:	ef 90       	pop	r14
    246c:	08 95       	ret

0000246e <f_mount>:
    246e:	82 30       	cpi	r24, 0x02	; 2
    2470:	d0 f4       	brcc	.+52     	; 0x24a6 <f_mount+0x38>
    2472:	90 e0       	ldi	r25, 0x00	; 0
    2474:	fc 01       	movw	r30, r24
    2476:	ee 0f       	add	r30, r30
    2478:	ff 1f       	adc	r31, r31
    247a:	eb 53       	subi	r30, 0x3B	; 59
    247c:	fd 4f       	sbci	r31, 0xFD	; 253
    247e:	01 90       	ld	r0, Z+
    2480:	f0 81       	ld	r31, Z
    2482:	e0 2d       	mov	r30, r0
    2484:	30 97       	sbiw	r30, 0x00	; 0
    2486:	09 f0       	breq	.+2      	; 0x248a <f_mount+0x1c>
    2488:	10 82       	st	Z, r1
    248a:	61 15       	cp	r22, r1
    248c:	71 05       	cpc	r23, r1
    248e:	11 f0       	breq	.+4      	; 0x2494 <f_mount+0x26>
    2490:	fb 01       	movw	r30, r22
    2492:	10 82       	st	Z, r1
    2494:	88 0f       	add	r24, r24
    2496:	99 1f       	adc	r25, r25
    2498:	fc 01       	movw	r30, r24
    249a:	eb 53       	subi	r30, 0x3B	; 59
    249c:	fd 4f       	sbci	r31, 0xFD	; 253
    249e:	71 83       	std	Z+1, r23	; 0x01
    24a0:	60 83       	st	Z, r22
    24a2:	80 e0       	ldi	r24, 0x00	; 0
    24a4:	08 95       	ret
    24a6:	8b e0       	ldi	r24, 0x0B	; 11
    24a8:	08 95       	ret

000024aa <f_open>:
    24aa:	4f 92       	push	r4
    24ac:	5f 92       	push	r5
    24ae:	6f 92       	push	r6
    24b0:	7f 92       	push	r7
    24b2:	8f 92       	push	r8
    24b4:	9f 92       	push	r9
    24b6:	af 92       	push	r10
    24b8:	bf 92       	push	r11
    24ba:	cf 92       	push	r12
    24bc:	df 92       	push	r13
    24be:	ef 92       	push	r14
    24c0:	ff 92       	push	r15
    24c2:	0f 93       	push	r16
    24c4:	1f 93       	push	r17
    24c6:	cf 93       	push	r28
    24c8:	df 93       	push	r29
    24ca:	cd b7       	in	r28, 0x3d	; 61
    24cc:	de b7       	in	r29, 0x3e	; 62
    24ce:	a4 97       	sbiw	r28, 0x24	; 36
    24d0:	0f b6       	in	r0, 0x3f	; 63
    24d2:	f8 94       	cli
    24d4:	de bf       	out	0x3e, r29	; 62
    24d6:	0f be       	out	0x3f, r0	; 63
    24d8:	cd bf       	out	0x3d, r28	; 61
    24da:	8c 01       	movw	r16, r24
    24dc:	7c a3       	std	Y+36, r23	; 0x24
    24de:	6b a3       	std	Y+35, r22	; 0x23
    24e0:	f4 2e       	mov	r15, r20
    24e2:	dc 01       	movw	r26, r24
    24e4:	1d 92       	st	X+, r1
    24e6:	1c 92       	st	X, r1
    24e8:	b4 2f       	mov	r27, r20
    24ea:	bf 71       	andi	r27, 0x1F	; 31
    24ec:	eb 2e       	mov	r14, r27
    24ee:	4e 71       	andi	r20, 0x1E	; 30
    24f0:	be 01       	movw	r22, r28
    24f2:	6f 5f       	subi	r22, 0xFF	; 255
    24f4:	7f 4f       	sbci	r23, 0xFF	; 255
    24f6:	ce 01       	movw	r24, r28
    24f8:	83 96       	adiw	r24, 0x23	; 35
    24fa:	0e 94 40 07 	call	0xe80	; 0xe80 <chk_mounted>
    24fe:	9e 01       	movw	r18, r28
    2500:	29 5e       	subi	r18, 0xE9	; 233
    2502:	3f 4f       	sbci	r19, 0xFF	; 255
    2504:	3e 8b       	std	Y+22, r19	; 0x16
    2506:	2d 8b       	std	Y+21, r18	; 0x15
    2508:	81 11       	cpse	r24, r1
    250a:	bc c0       	rjmp	.+376    	; 0x2684 <f_open+0x1da>
    250c:	6b a1       	ldd	r22, Y+35	; 0x23
    250e:	7c a1       	ldd	r23, Y+36	; 0x24
    2510:	ce 01       	movw	r24, r28
    2512:	01 96       	adiw	r24, 0x01	; 1
    2514:	91 dd       	rcall	.-1246   	; 0x2038 <follow_path>
    2516:	cb 88       	ldd	r12, Y+19	; 0x13
    2518:	dc 88       	ldd	r13, Y+20	; 0x14
    251a:	81 11       	cpse	r24, r1
    251c:	ba c0       	rjmp	.+372    	; 0x2692 <f_open+0x1e8>
    251e:	c1 14       	cp	r12, r1
    2520:	d1 04       	cpc	r13, r1
    2522:	09 f0       	breq	.+2      	; 0x2526 <f_open+0x7c>
    2524:	c0 c0       	rjmp	.+384    	; 0x26a6 <f_open+0x1fc>
    2526:	ba c0       	rjmp	.+372    	; 0x269c <f_open+0x1f2>
    2528:	84 30       	cpi	r24, 0x04	; 4
    252a:	19 f4       	brne	.+6      	; 0x2532 <f_open+0x88>
    252c:	ce 01       	movw	r24, r28
    252e:	01 96       	adiw	r24, 0x01	; 1
    2530:	45 df       	rcall	.-374    	; 0x23bc <dir_register>
    2532:	ee 2d       	mov	r30, r14
    2534:	e8 60       	ori	r30, 0x08	; 8
    2536:	ee 2e       	mov	r14, r30
    2538:	cb 88       	ldd	r12, Y+19	; 0x13
    253a:	dc 88       	ldd	r13, Y+20	; 0x14
    253c:	88 23       	and	r24, r24
    253e:	49 f0       	breq	.+18     	; 0x2552 <f_open+0xa8>
    2540:	cc c0       	rjmp	.+408    	; 0x26da <f_open+0x230>
    2542:	f2 fc       	sbrc	r15, 2
    2544:	b5 c0       	rjmp	.+362    	; 0x26b0 <f_open+0x206>
    2546:	d6 01       	movw	r26, r12
    2548:	1b 96       	adiw	r26, 0x0b	; 11
    254a:	8c 91       	ld	r24, X
    254c:	81 71       	andi	r24, 0x11	; 17
    254e:	09 f0       	breq	.+2      	; 0x2552 <f_open+0xa8>
    2550:	b1 c0       	rjmp	.+354    	; 0x26b4 <f_open+0x20a>
    2552:	e3 fe       	sbrs	r14, 3
    2554:	4c c0       	rjmp	.+152    	; 0x25ee <f_open+0x144>
    2556:	0e 94 31 06 	call	0xc62	; 0xc62 <get_fattime>
    255a:	f6 01       	movw	r30, r12
    255c:	66 87       	std	Z+14, r22	; 0x0e
    255e:	77 87       	std	Z+15, r23	; 0x0f
    2560:	80 8b       	std	Z+16, r24	; 0x10
    2562:	91 8b       	std	Z+17, r25	; 0x11
    2564:	13 86       	std	Z+11, r1	; 0x0b
    2566:	14 8e       	std	Z+28, r1	; 0x1c
    2568:	15 8e       	std	Z+29, r1	; 0x1d
    256a:	16 8e       	std	Z+30, r1	; 0x1e
    256c:	17 8e       	std	Z+31, r1	; 0x1f
    256e:	84 88       	ldd	r8, Z+20	; 0x14
    2570:	95 88       	ldd	r9, Z+21	; 0x15
    2572:	a1 2c       	mov	r10, r1
    2574:	b1 2c       	mov	r11, r1
    2576:	d4 01       	movw	r26, r8
    2578:	99 27       	eor	r25, r25
    257a:	88 27       	eor	r24, r24
    257c:	82 8c       	ldd	r8, Z+26	; 0x1a
    257e:	93 8c       	ldd	r9, Z+27	; 0x1b
    2580:	a1 2c       	mov	r10, r1
    2582:	b1 2c       	mov	r11, r1
    2584:	88 2a       	or	r8, r24
    2586:	99 2a       	or	r9, r25
    2588:	aa 2a       	or	r10, r26
    258a:	bb 2a       	or	r11, r27
    258c:	15 8a       	std	Z+21, r1	; 0x15
    258e:	14 8a       	std	Z+20, r1	; 0x14
    2590:	13 8e       	std	Z+27, r1	; 0x1b
    2592:	12 8e       	std	Z+26, r1	; 0x1a
    2594:	e9 81       	ldd	r30, Y+1	; 0x01
    2596:	fa 81       	ldd	r31, Y+2	; 0x02
    2598:	81 e0       	ldi	r24, 0x01	; 1
    259a:	84 83       	std	Z+4, r24	; 0x04
    259c:	81 14       	cp	r8, r1
    259e:	91 04       	cpc	r9, r1
    25a0:	a1 04       	cpc	r10, r1
    25a2:	b1 04       	cpc	r11, r1
    25a4:	21 f1       	breq	.+72     	; 0x25ee <f_open+0x144>
    25a6:	46 a4       	ldd	r4, Z+46	; 0x2e
    25a8:	57 a4       	ldd	r5, Z+47	; 0x2f
    25aa:	60 a8       	ldd	r6, Z+48	; 0x30
    25ac:	71 a8       	ldd	r7, Z+49	; 0x31
    25ae:	b5 01       	movw	r22, r10
    25b0:	a4 01       	movw	r20, r8
    25b2:	cf 01       	movw	r24, r30
    25b4:	ab da       	rcall	.-2730   	; 0x1b0c <remove_chain>
    25b6:	81 11       	cpse	r24, r1
    25b8:	90 c0       	rjmp	.+288    	; 0x26da <f_open+0x230>
    25ba:	89 81       	ldd	r24, Y+1	; 0x01
    25bc:	9a 81       	ldd	r25, Y+2	; 0x02
    25be:	f1 e0       	ldi	r31, 0x01	; 1
    25c0:	8f 1a       	sub	r8, r31
    25c2:	91 08       	sbc	r9, r1
    25c4:	a1 08       	sbc	r10, r1
    25c6:	b1 08       	sbc	r11, r1
    25c8:	dc 01       	movw	r26, r24
    25ca:	1a 96       	adiw	r26, 0x0a	; 10
    25cc:	8d 92       	st	X+, r8
    25ce:	9d 92       	st	X+, r9
    25d0:	ad 92       	st	X+, r10
    25d2:	bc 92       	st	X, r11
    25d4:	1d 97       	sbiw	r26, 0x0d	; 13
    25d6:	b3 01       	movw	r22, r6
    25d8:	a2 01       	movw	r20, r4
    25da:	0e 94 72 06 	call	0xce4	; 0xce4 <move_window>
    25de:	05 c0       	rjmp	.+10     	; 0x25ea <f_open+0x140>
    25e0:	f1 fe       	sbrs	r15, 1
    25e2:	05 c0       	rjmp	.+10     	; 0x25ee <f_open+0x144>
    25e4:	80 fd       	sbrc	r24, 0
    25e6:	78 c0       	rjmp	.+240    	; 0x26d8 <f_open+0x22e>
    25e8:	02 c0       	rjmp	.+4      	; 0x25ee <f_open+0x144>
    25ea:	81 11       	cpse	r24, r1
    25ec:	76 c0       	rjmp	.+236    	; 0x26da <f_open+0x230>
    25ee:	8e 2d       	mov	r24, r14
    25f0:	8e 71       	andi	r24, 0x1E	; 30
    25f2:	19 f0       	breq	.+6      	; 0x25fa <f_open+0x150>
    25f4:	be 2d       	mov	r27, r14
    25f6:	b0 62       	ori	r27, 0x20	; 32
    25f8:	eb 2e       	mov	r14, r27
    25fa:	e9 81       	ldd	r30, Y+1	; 0x01
    25fc:	fa 81       	ldd	r31, Y+2	; 0x02
    25fe:	86 a5       	ldd	r24, Z+46	; 0x2e
    2600:	97 a5       	ldd	r25, Z+47	; 0x2f
    2602:	a0 a9       	ldd	r26, Z+48	; 0x30
    2604:	b1 a9       	ldd	r27, Z+49	; 0x31
    2606:	f8 01       	movw	r30, r16
    2608:	82 8f       	std	Z+26, r24	; 0x1a
    260a:	93 8f       	std	Z+27, r25	; 0x1b
    260c:	a4 8f       	std	Z+28, r26	; 0x1c
    260e:	b5 8f       	std	Z+29, r27	; 0x1d
    2610:	d7 8e       	std	Z+31, r13	; 0x1f
    2612:	c6 8e       	std	Z+30, r12	; 0x1e
    2614:	d8 01       	movw	r26, r16
    2616:	14 96       	adiw	r26, 0x04	; 4
    2618:	ec 92       	st	X, r14
    261a:	f6 01       	movw	r30, r12
    261c:	84 89       	ldd	r24, Z+20	; 0x14
    261e:	95 89       	ldd	r25, Z+21	; 0x15
    2620:	a0 e0       	ldi	r26, 0x00	; 0
    2622:	b0 e0       	ldi	r27, 0x00	; 0
    2624:	dc 01       	movw	r26, r24
    2626:	99 27       	eor	r25, r25
    2628:	88 27       	eor	r24, r24
    262a:	42 8d       	ldd	r20, Z+26	; 0x1a
    262c:	53 8d       	ldd	r21, Z+27	; 0x1b
    262e:	60 e0       	ldi	r22, 0x00	; 0
    2630:	70 e0       	ldi	r23, 0x00	; 0
    2632:	84 2b       	or	r24, r20
    2634:	95 2b       	or	r25, r21
    2636:	a6 2b       	or	r26, r22
    2638:	b7 2b       	or	r27, r23
    263a:	f8 01       	movw	r30, r16
    263c:	86 87       	std	Z+14, r24	; 0x0e
    263e:	97 87       	std	Z+15, r25	; 0x0f
    2640:	a0 8b       	std	Z+16, r26	; 0x10
    2642:	b1 8b       	std	Z+17, r27	; 0x11
    2644:	f6 01       	movw	r30, r12
    2646:	84 8d       	ldd	r24, Z+28	; 0x1c
    2648:	95 8d       	ldd	r25, Z+29	; 0x1d
    264a:	a6 8d       	ldd	r26, Z+30	; 0x1e
    264c:	b7 8d       	ldd	r27, Z+31	; 0x1f
    264e:	f8 01       	movw	r30, r16
    2650:	82 87       	std	Z+10, r24	; 0x0a
    2652:	93 87       	std	Z+11, r25	; 0x0b
    2654:	a4 87       	std	Z+12, r26	; 0x0c
    2656:	b5 87       	std	Z+13, r27	; 0x0d
    2658:	d8 01       	movw	r26, r16
    265a:	16 82       	std	Z+6, r1	; 0x06
    265c:	17 82       	std	Z+7, r1	; 0x07
    265e:	10 86       	std	Z+8, r1	; 0x08
    2660:	11 86       	std	Z+9, r1	; 0x09
    2662:	16 8a       	std	Z+22, r1	; 0x16
    2664:	17 8a       	std	Z+23, r1	; 0x17
    2666:	10 8e       	std	Z+24, r1	; 0x18
    2668:	11 8e       	std	Z+25, r1	; 0x19
    266a:	e9 81       	ldd	r30, Y+1	; 0x01
    266c:	fa 81       	ldd	r31, Y+2	; 0x02
    266e:	11 96       	adiw	r26, 0x01	; 1
    2670:	fc 93       	st	X, r31
    2672:	ee 93       	st	-X, r30
    2674:	86 81       	ldd	r24, Z+6	; 0x06
    2676:	97 81       	ldd	r25, Z+7	; 0x07
    2678:	13 96       	adiw	r26, 0x03	; 3
    267a:	9c 93       	st	X, r25
    267c:	8e 93       	st	-X, r24
    267e:	12 97       	sbiw	r26, 0x02	; 2
    2680:	80 e0       	ldi	r24, 0x00	; 0
    2682:	2b c0       	rjmp	.+86     	; 0x26da <f_open+0x230>
    2684:	cb 88       	ldd	r12, Y+19	; 0x13
    2686:	dc 88       	ldd	r13, Y+20	; 0x14
    2688:	9f 2d       	mov	r25, r15
    268a:	9c 71       	andi	r25, 0x1C	; 28
    268c:	09 f0       	breq	.+2      	; 0x2690 <f_open+0x1e6>
    268e:	4c cf       	rjmp	.-360    	; 0x2528 <f_open+0x7e>
    2690:	13 c0       	rjmp	.+38     	; 0x26b8 <f_open+0x20e>
    2692:	9f 2d       	mov	r25, r15
    2694:	9c 71       	andi	r25, 0x1C	; 28
    2696:	09 f0       	breq	.+2      	; 0x269a <f_open+0x1f0>
    2698:	47 cf       	rjmp	.-370    	; 0x2528 <f_open+0x7e>
    269a:	0e c0       	rjmp	.+28     	; 0x26b8 <f_open+0x20e>
    269c:	8f 2d       	mov	r24, r15
    269e:	8c 71       	andi	r24, 0x1C	; 28
    26a0:	71 f4       	brne	.+28     	; 0x26be <f_open+0x214>
    26a2:	86 e0       	ldi	r24, 0x06	; 6
    26a4:	09 c0       	rjmp	.+18     	; 0x26b8 <f_open+0x20e>
    26a6:	8f 2d       	mov	r24, r15
    26a8:	8c 71       	andi	r24, 0x1C	; 28
    26aa:	09 f0       	breq	.+2      	; 0x26ae <f_open+0x204>
    26ac:	4a cf       	rjmp	.-364    	; 0x2542 <f_open+0x98>
    26ae:	0e c0       	rjmp	.+28     	; 0x26cc <f_open+0x222>
    26b0:	88 e0       	ldi	r24, 0x08	; 8
    26b2:	9b cf       	rjmp	.-202    	; 0x25ea <f_open+0x140>
    26b4:	87 e0       	ldi	r24, 0x07	; 7
    26b6:	99 cf       	rjmp	.-206    	; 0x25ea <f_open+0x140>
    26b8:	81 11       	cpse	r24, r1
    26ba:	0f c0       	rjmp	.+30     	; 0x26da <f_open+0x230>
    26bc:	ab cf       	rjmp	.-170    	; 0x2614 <f_open+0x16a>
    26be:	be 2d       	mov	r27, r14
    26c0:	b8 60       	ori	r27, 0x08	; 8
    26c2:	eb 2e       	mov	r14, r27
    26c4:	cb 88       	ldd	r12, Y+19	; 0x13
    26c6:	dc 88       	ldd	r13, Y+20	; 0x14
    26c8:	86 e0       	ldi	r24, 0x06	; 6
    26ca:	f6 cf       	rjmp	.-20     	; 0x26b8 <f_open+0x20e>
    26cc:	f6 01       	movw	r30, r12
    26ce:	83 85       	ldd	r24, Z+11	; 0x0b
    26d0:	84 ff       	sbrs	r24, 4
    26d2:	86 cf       	rjmp	.-244    	; 0x25e0 <f_open+0x136>
    26d4:	84 e0       	ldi	r24, 0x04	; 4
    26d6:	01 c0       	rjmp	.+2      	; 0x26da <f_open+0x230>
    26d8:	87 e0       	ldi	r24, 0x07	; 7
    26da:	a4 96       	adiw	r28, 0x24	; 36
    26dc:	0f b6       	in	r0, 0x3f	; 63
    26de:	f8 94       	cli
    26e0:	de bf       	out	0x3e, r29	; 62
    26e2:	0f be       	out	0x3f, r0	; 63
    26e4:	cd bf       	out	0x3d, r28	; 61
    26e6:	df 91       	pop	r29
    26e8:	cf 91       	pop	r28
    26ea:	1f 91       	pop	r17
    26ec:	0f 91       	pop	r16
    26ee:	ff 90       	pop	r15
    26f0:	ef 90       	pop	r14
    26f2:	df 90       	pop	r13
    26f4:	cf 90       	pop	r12
    26f6:	bf 90       	pop	r11
    26f8:	af 90       	pop	r10
    26fa:	9f 90       	pop	r9
    26fc:	8f 90       	pop	r8
    26fe:	7f 90       	pop	r7
    2700:	6f 90       	pop	r6
    2702:	5f 90       	pop	r5
    2704:	4f 90       	pop	r4
    2706:	08 95       	ret

00002708 <f_write>:
	FIL *fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT *bw			/* Pointer to number of bytes written */
)
{
    2708:	2f 92       	push	r2
    270a:	3f 92       	push	r3
    270c:	4f 92       	push	r4
    270e:	5f 92       	push	r5
    2710:	6f 92       	push	r6
    2712:	7f 92       	push	r7
    2714:	8f 92       	push	r8
    2716:	9f 92       	push	r9
    2718:	af 92       	push	r10
    271a:	bf 92       	push	r11
    271c:	cf 92       	push	r12
    271e:	df 92       	push	r13
    2720:	ef 92       	push	r14
    2722:	ff 92       	push	r15
    2724:	0f 93       	push	r16
    2726:	1f 93       	push	r17
    2728:	cf 93       	push	r28
    272a:	df 93       	push	r29
    272c:	ec 01       	movw	r28, r24
    272e:	4b 01       	movw	r8, r22
    2730:	6a 01       	movw	r12, r20
    2732:	59 01       	movw	r10, r18
	UINT wcnt, cc;
	const BYTE *wbuff = buff;
	BYTE csect;


	*bw = 0;	/* Initialize byte counter */
    2734:	f9 01       	movw	r30, r18
    2736:	11 82       	std	Z+1, r1	; 0x01
    2738:	10 82       	st	Z, r1

	res = validate(fp->fs, fp->id);					/* Check validity of the object */
    273a:	6a 81       	ldd	r22, Y+2	; 0x02
    273c:	7b 81       	ldd	r23, Y+3	; 0x03
    273e:	88 81       	ld	r24, Y
    2740:	99 81       	ldd	r25, Y+1	; 0x01
    2742:	0e 94 27 07 	call	0xe4e	; 0xe4e <validate>
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
    2746:	81 11       	cpse	r24, r1
    2748:	77 c1       	rjmp	.+750    	; 0x2a38 <f_write+0x330>
	if (fp->flag & FA__ERROR)						/* Check abort flag */
    274a:	8c 81       	ldd	r24, Y+4	; 0x04
    274c:	88 23       	and	r24, r24
    274e:	0c f4       	brge	.+2      	; 0x2752 <f_write+0x4a>
    2750:	70 c1       	rjmp	.+736    	; 0x2a32 <f_write+0x32a>
		LEAVE_FF(fp->fs, FR_INT_ERR);
	if (!(fp->flag & FA_WRITE))						/* Check access mode */
    2752:	81 ff       	sbrs	r24, 1
    2754:	70 c1       	rjmp	.+736    	; 0x2a36 <f_write+0x32e>
		LEAVE_FF(fp->fs, FR_DENIED);
	if (fp->fsize + btw < fp->fsize) btw = 0;		/* File size cannot reach 4GB */
    2756:	8a 85       	ldd	r24, Y+10	; 0x0a
    2758:	9b 85       	ldd	r25, Y+11	; 0x0b
    275a:	ac 85       	ldd	r26, Y+12	; 0x0c
    275c:	bd 85       	ldd	r27, Y+13	; 0x0d
    275e:	ac 01       	movw	r20, r24
    2760:	bd 01       	movw	r22, r26
    2762:	4c 0d       	add	r20, r12
    2764:	5d 1d       	adc	r21, r13
    2766:	61 1d       	adc	r22, r1
    2768:	71 1d       	adc	r23, r1
    276a:	48 17       	cp	r20, r24
    276c:	59 07       	cpc	r21, r25
    276e:	6a 07       	cpc	r22, r26
    2770:	7b 07       	cpc	r23, r27
    2772:	08 f4       	brcc	.+2      	; 0x2776 <f_write+0x6e>
    2774:	48 c1       	rjmp	.+656    	; 0x2a06 <f_write+0x2fe>

	for ( ;  btw;									/* Repeat until all data transferred */
    2776:	c1 14       	cp	r12, r1
    2778:	d1 04       	cpc	r13, r1
    277a:	09 f4       	brne	.+2      	; 0x277e <f_write+0x76>
    277c:	44 c1       	rjmp	.+648    	; 0x2a06 <f_write+0x2fe>
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
		if ((fp->fptr % SS(fp->fs)) == 0) {			/* On the sector boundary? */
    277e:	4e 81       	ldd	r20, Y+6	; 0x06
    2780:	5f 81       	ldd	r21, Y+7	; 0x07
    2782:	68 85       	ldd	r22, Y+8	; 0x08
    2784:	79 85       	ldd	r23, Y+9	; 0x09
    2786:	db 01       	movw	r26, r22
    2788:	ca 01       	movw	r24, r20
    278a:	91 70       	andi	r25, 0x01	; 1
    278c:	aa 27       	eor	r26, r26
    278e:	bb 27       	eor	r27, r27
    2790:	89 2b       	or	r24, r25
    2792:	8a 2b       	or	r24, r26
    2794:	8b 2b       	or	r24, r27
    2796:	09 f0       	breq	.+2      	; 0x279a <f_write+0x92>
    2798:	ee c0       	rjmp	.+476    	; 0x2976 <f_write+0x26e>
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
    279a:	e8 81       	ld	r30, Y
    279c:	f9 81       	ldd	r31, Y+1	; 0x01
    279e:	12 81       	ldd	r17, Z+2	; 0x02
    27a0:	11 50       	subi	r17, 0x01	; 1
    27a2:	db 01       	movw	r26, r22
    27a4:	ca 01       	movw	r24, r20
    27a6:	07 2e       	mov	r0, r23
    27a8:	79 e0       	ldi	r23, 0x09	; 9
    27aa:	b6 95       	lsr	r27
    27ac:	a7 95       	ror	r26
    27ae:	97 95       	ror	r25
    27b0:	87 95       	ror	r24
    27b2:	7a 95       	dec	r23
    27b4:	d1 f7       	brne	.-12     	; 0x27aa <f_write+0xa2>
    27b6:	70 2d       	mov	r23, r0
    27b8:	18 23       	and	r17, r24
			if (!csect) {							/* On the cluster boundary? */
    27ba:	e1 f5       	brne	.+120    	; 0x2834 <f_write+0x12c>
				if (fp->fptr == 0) {				/* On the top of the file? */
    27bc:	45 2b       	or	r20, r21
    27be:	46 2b       	or	r20, r22
    27c0:	47 2b       	or	r20, r23
    27c2:	99 f4       	brne	.+38     	; 0x27ea <f_write+0xe2>
					clst = fp->org_clust;			/* Follow from the origin */
    27c4:	6e 85       	ldd	r22, Y+14	; 0x0e
    27c6:	7f 85       	ldd	r23, Y+15	; 0x0f
    27c8:	88 89       	ldd	r24, Y+16	; 0x10
    27ca:	99 89       	ldd	r25, Y+17	; 0x11
					if (clst == 0)					/* When there is no cluster chain, */
    27cc:	61 15       	cp	r22, r1
    27ce:	71 05       	cpc	r23, r1
    27d0:	81 05       	cpc	r24, r1
    27d2:	91 05       	cpc	r25, r1
    27d4:	b1 f4       	brne	.+44     	; 0x2802 <f_write+0xfa>
						fp->org_clust = clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
    27d6:	40 e0       	ldi	r20, 0x00	; 0
    27d8:	50 e0       	ldi	r21, 0x00	; 0
    27da:	ba 01       	movw	r22, r20
    27dc:	cf 01       	movw	r24, r30
    27de:	9b d8       	rcall	.-3786   	; 0x1916 <create_chain>
    27e0:	6e 87       	std	Y+14, r22	; 0x0e
    27e2:	7f 87       	std	Y+15, r23	; 0x0f
    27e4:	88 8b       	std	Y+16, r24	; 0x10
    27e6:	99 8b       	std	Y+17, r25	; 0x11
    27e8:	06 c0       	rjmp	.+12     	; 0x27f6 <f_write+0xee>
				} else {							/* Middle or end of the file */
					clst = create_chain(fp->fs, fp->curr_clust);			/* Follow or stretch cluster chain */
    27ea:	4a 89       	ldd	r20, Y+18	; 0x12
    27ec:	5b 89       	ldd	r21, Y+19	; 0x13
    27ee:	6c 89       	ldd	r22, Y+20	; 0x14
    27f0:	7d 89       	ldd	r23, Y+21	; 0x15
    27f2:	cf 01       	movw	r24, r30
    27f4:	90 d8       	rcall	.-3808   	; 0x1916 <create_chain>
				}
				if (clst == 0) break;				/* Could not allocate a new cluster (disk full) */
    27f6:	61 15       	cp	r22, r1
    27f8:	71 05       	cpc	r23, r1
    27fa:	81 05       	cpc	r24, r1
    27fc:	91 05       	cpc	r25, r1
    27fe:	09 f4       	brne	.+2      	; 0x2802 <f_write+0xfa>
    2800:	02 c1       	rjmp	.+516    	; 0x2a06 <f_write+0x2fe>
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
    2802:	61 30       	cpi	r22, 0x01	; 1
    2804:	71 05       	cpc	r23, r1
    2806:	81 05       	cpc	r24, r1
    2808:	91 05       	cpc	r25, r1
    280a:	29 f4       	brne	.+10     	; 0x2816 <f_write+0x10e>
    280c:	8c 81       	ldd	r24, Y+4	; 0x04
    280e:	80 68       	ori	r24, 0x80	; 128
    2810:	8c 83       	std	Y+4, r24	; 0x04
    2812:	82 e0       	ldi	r24, 0x02	; 2
    2814:	11 c1       	rjmp	.+546    	; 0x2a38 <f_write+0x330>
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    2816:	6f 3f       	cpi	r22, 0xFF	; 255
    2818:	ff ef       	ldi	r31, 0xFF	; 255
    281a:	7f 07       	cpc	r23, r31
    281c:	8f 07       	cpc	r24, r31
    281e:	9f 07       	cpc	r25, r31
    2820:	29 f4       	brne	.+10     	; 0x282c <f_write+0x124>
    2822:	8c 81       	ldd	r24, Y+4	; 0x04
    2824:	80 68       	ori	r24, 0x80	; 128
    2826:	8c 83       	std	Y+4, r24	; 0x04
    2828:	81 e0       	ldi	r24, 0x01	; 1
    282a:	06 c1       	rjmp	.+524    	; 0x2a38 <f_write+0x330>
				fp->curr_clust = clst;				/* Update current cluster */
    282c:	6a 8b       	std	Y+18, r22	; 0x12
    282e:	7b 8b       	std	Y+19, r23	; 0x13
    2830:	8c 8b       	std	Y+20, r24	; 0x14
    2832:	9d 8b       	std	Y+21, r25	; 0x15
			}
#if _FS_TINY
			if (fp->fs->winsect == fp->dsect && move_window(fp->fs, 0))	/* Write back data buffer prior to following direct transfer */
    2834:	e8 81       	ld	r30, Y
    2836:	f9 81       	ldd	r31, Y+1	; 0x01
    2838:	46 a5       	ldd	r20, Z+46	; 0x2e
    283a:	57 a5       	ldd	r21, Z+47	; 0x2f
    283c:	60 a9       	ldd	r22, Z+48	; 0x30
    283e:	71 a9       	ldd	r23, Z+49	; 0x31
    2840:	8e 89       	ldd	r24, Y+22	; 0x16
    2842:	9f 89       	ldd	r25, Y+23	; 0x17
    2844:	a8 8d       	ldd	r26, Y+24	; 0x18
    2846:	b9 8d       	ldd	r27, Y+25	; 0x19
    2848:	48 17       	cp	r20, r24
    284a:	59 07       	cpc	r21, r25
    284c:	6a 07       	cpc	r22, r26
    284e:	7b 07       	cpc	r23, r27
    2850:	69 f4       	brne	.+26     	; 0x286c <f_write+0x164>
    2852:	40 e0       	ldi	r20, 0x00	; 0
    2854:	50 e0       	ldi	r21, 0x00	; 0
    2856:	ba 01       	movw	r22, r20
    2858:	cf 01       	movw	r24, r30
    285a:	0e 94 72 06 	call	0xce4	; 0xce4 <move_window>
    285e:	88 23       	and	r24, r24
    2860:	29 f0       	breq	.+10     	; 0x286c <f_write+0x164>
				ABORT(fp->fs, FR_DISK_ERR);
    2862:	8c 81       	ldd	r24, Y+4	; 0x04
    2864:	80 68       	ori	r24, 0x80	; 128
    2866:	8c 83       	std	Y+4, r24	; 0x04
    2868:	81 e0       	ldi	r24, 0x01	; 1
    286a:	e6 c0       	rjmp	.+460    	; 0x2a38 <f_write+0x330>
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			sect = clust2sect(fp->fs, fp->curr_clust);	/* Get current sector */
    286c:	28 80       	ld	r2, Y
    286e:	39 80       	ldd	r3, Y+1	; 0x01
    2870:	4a 89       	ldd	r20, Y+18	; 0x12
    2872:	5b 89       	ldd	r21, Y+19	; 0x13
    2874:	6c 89       	ldd	r22, Y+20	; 0x14
    2876:	7d 89       	ldd	r23, Y+21	; 0x15
    2878:	c1 01       	movw	r24, r2
    287a:	c0 d9       	rcall	.-3200   	; 0x1bfc <clust2sect>
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
    287c:	61 15       	cp	r22, r1
    287e:	71 05       	cpc	r23, r1
    2880:	81 05       	cpc	r24, r1
    2882:	91 05       	cpc	r25, r1
    2884:	29 f4       	brne	.+10     	; 0x2890 <f_write+0x188>
    2886:	8c 81       	ldd	r24, Y+4	; 0x04
    2888:	80 68       	ori	r24, 0x80	; 128
    288a:	8c 83       	std	Y+4, r24	; 0x04
    288c:	82 e0       	ldi	r24, 0x02	; 2
    288e:	d4 c0       	rjmp	.+424    	; 0x2a38 <f_write+0x330>
			sect += csect;
    2890:	2b 01       	movw	r4, r22
    2892:	3c 01       	movw	r6, r24
    2894:	41 0e       	add	r4, r17
    2896:	51 1c       	adc	r5, r1
    2898:	61 1c       	adc	r6, r1
    289a:	71 1c       	adc	r7, r1
			cc = btw / SS(fp->fs);					/* When remaining bytes >= sector size, */
    289c:	76 01       	movw	r14, r12
    289e:	ef 2c       	mov	r14, r15
    28a0:	ff 24       	eor	r15, r15
    28a2:	e6 94       	lsr	r14
			if (cc) {								/* Write maximum contiguous sectors directly */
    28a4:	e1 14       	cp	r14, r1
    28a6:	f1 04       	cpc	r15, r1
    28a8:	09 f4       	brne	.+2      	; 0x28ac <f_write+0x1a4>
    28aa:	41 c0       	rjmp	.+130    	; 0x292e <f_write+0x226>
				if (csect + cc > fp->fs->csize)		/* Clip at cluster boundary */
    28ac:	f1 01       	movw	r30, r2
    28ae:	42 81       	ldd	r20, Z+2	; 0x02
    28b0:	24 2f       	mov	r18, r20
    28b2:	30 e0       	ldi	r19, 0x00	; 0
    28b4:	c7 01       	movw	r24, r14
    28b6:	81 0f       	add	r24, r17
    28b8:	91 1d       	adc	r25, r1
    28ba:	28 17       	cp	r18, r24
    28bc:	39 07       	cpc	r19, r25
    28be:	18 f4       	brcc	.+6      	; 0x28c6 <f_write+0x1be>
					cc = fp->fs->csize - csect;
    28c0:	79 01       	movw	r14, r18
    28c2:	e1 1a       	sub	r14, r17
    28c4:	f1 08       	sbc	r15, r1
				if (disk_write(fp->fs->drv, wbuff, sect, (BYTE)cc) != RES_OK)
    28c6:	0e 2d       	mov	r16, r14
    28c8:	a3 01       	movw	r20, r6
    28ca:	92 01       	movw	r18, r4
    28cc:	b4 01       	movw	r22, r8
    28ce:	f1 01       	movw	r30, r2
    28d0:	81 81       	ldd	r24, Z+1	; 0x01
    28d2:	0e 94 2a 04 	call	0x854	; 0x854 <disk_write>
    28d6:	88 23       	and	r24, r24
    28d8:	29 f0       	breq	.+10     	; 0x28e4 <f_write+0x1dc>
					ABORT(fp->fs, FR_DISK_ERR);
    28da:	8c 81       	ldd	r24, Y+4	; 0x04
    28dc:	80 68       	ori	r24, 0x80	; 128
    28de:	8c 83       	std	Y+4, r24	; 0x04
    28e0:	81 e0       	ldi	r24, 0x01	; 1
    28e2:	aa c0       	rjmp	.+340    	; 0x2a38 <f_write+0x330>
#if _FS_TINY
				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets dirty by the direct write */
    28e4:	e8 81       	ld	r30, Y
    28e6:	f9 81       	ldd	r31, Y+1	; 0x01
    28e8:	86 a5       	ldd	r24, Z+46	; 0x2e
    28ea:	97 a5       	ldd	r25, Z+47	; 0x2f
    28ec:	a0 a9       	ldd	r26, Z+48	; 0x30
    28ee:	b1 a9       	ldd	r27, Z+49	; 0x31
    28f0:	84 19       	sub	r24, r4
    28f2:	95 09       	sbc	r25, r5
    28f4:	a6 09       	sbc	r26, r6
    28f6:	b7 09       	sbc	r27, r7
    28f8:	a7 01       	movw	r20, r14
    28fa:	60 e0       	ldi	r22, 0x00	; 0
    28fc:	70 e0       	ldi	r23, 0x00	; 0
    28fe:	84 17       	cp	r24, r20
    2900:	95 07       	cpc	r25, r21
    2902:	a6 07       	cpc	r26, r22
    2904:	b7 07       	cpc	r27, r23
    2906:	78 f4       	brcc	.+30     	; 0x2926 <f_write+0x21e>
					mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
    2908:	98 2f       	mov	r25, r24
    290a:	88 27       	eor	r24, r24
    290c:	99 0f       	add	r25, r25
    290e:	b4 01       	movw	r22, r8
    2910:	68 0f       	add	r22, r24
    2912:	79 1f       	adc	r23, r25
    2914:	40 e0       	ldi	r20, 0x00	; 0
    2916:	52 e0       	ldi	r21, 0x02	; 2
    2918:	cf 01       	movw	r24, r30
    291a:	c2 96       	adiw	r24, 0x32	; 50
    291c:	0e 94 35 06 	call	0xc6a	; 0xc6a <mem_cpy>
					fp->fs->wflag = 0;
    2920:	e8 81       	ld	r30, Y
    2922:	f9 81       	ldd	r31, Y+1	; 0x01
    2924:	14 82       	std	Z+4, r1	; 0x04
				if (fp->dsect - sect < cc) {		/* Refill sector cache if it gets dirty by the direct write */
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
					fp->flag &= ~FA__DIRTY;
				}
#endif
				wcnt = SS(fp->fs) * cc;				/* Number of bytes transferred */
    2926:	fe 2c       	mov	r15, r14
    2928:	ee 24       	eor	r14, r14
    292a:	ff 0c       	add	r15, r15
				continue;
    292c:	53 c0       	rjmp	.+166    	; 0x29d4 <f_write+0x2cc>
			}
#if _FS_TINY
			if (fp->fptr >= fp->fsize) {			/* Avoid silly buffer filling at growing edge */
    292e:	4e 81       	ldd	r20, Y+6	; 0x06
    2930:	5f 81       	ldd	r21, Y+7	; 0x07
    2932:	68 85       	ldd	r22, Y+8	; 0x08
    2934:	79 85       	ldd	r23, Y+9	; 0x09
    2936:	8a 85       	ldd	r24, Y+10	; 0x0a
    2938:	9b 85       	ldd	r25, Y+11	; 0x0b
    293a:	ac 85       	ldd	r26, Y+12	; 0x0c
    293c:	bd 85       	ldd	r27, Y+13	; 0x0d
    293e:	48 17       	cp	r20, r24
    2940:	59 07       	cpc	r21, r25
    2942:	6a 07       	cpc	r22, r26
    2944:	7b 07       	cpc	r23, r27
    2946:	98 f0       	brcs	.+38     	; 0x296e <f_write+0x266>
				if (move_window(fp->fs, 0)) ABORT(fp->fs, FR_DISK_ERR);
    2948:	40 e0       	ldi	r20, 0x00	; 0
    294a:	50 e0       	ldi	r21, 0x00	; 0
    294c:	ba 01       	movw	r22, r20
    294e:	c1 01       	movw	r24, r2
    2950:	0e 94 72 06 	call	0xce4	; 0xce4 <move_window>
    2954:	88 23       	and	r24, r24
    2956:	29 f0       	breq	.+10     	; 0x2962 <f_write+0x25a>
    2958:	8c 81       	ldd	r24, Y+4	; 0x04
    295a:	80 68       	ori	r24, 0x80	; 128
    295c:	8c 83       	std	Y+4, r24	; 0x04
    295e:	81 e0       	ldi	r24, 0x01	; 1
    2960:	6b c0       	rjmp	.+214    	; 0x2a38 <f_write+0x330>
				fp->fs->winsect = sect;
    2962:	e8 81       	ld	r30, Y
    2964:	f9 81       	ldd	r31, Y+1	; 0x01
    2966:	46 a6       	std	Z+46, r4	; 0x2e
    2968:	57 a6       	std	Z+47, r5	; 0x2f
    296a:	60 aa       	std	Z+48, r6	; 0x30
    296c:	71 aa       	std	Z+49, r7	; 0x31
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)
						ABORT(fp->fs, FR_DISK_ERR);
			}
#endif
			fp->dsect = sect;
    296e:	4e 8a       	std	Y+22, r4	; 0x16
    2970:	5f 8a       	std	Y+23, r5	; 0x17
    2972:	68 8e       	std	Y+24, r6	; 0x18
    2974:	79 8e       	std	Y+25, r7	; 0x19
		}
		wcnt = SS(fp->fs) - (fp->fptr % SS(fp->fs));	/* Put partial sector into file I/O buffer */
    2976:	2e 81       	ldd	r18, Y+6	; 0x06
    2978:	3f 81       	ldd	r19, Y+7	; 0x07
    297a:	31 70       	andi	r19, 0x01	; 1
    297c:	80 e0       	ldi	r24, 0x00	; 0
    297e:	92 e0       	ldi	r25, 0x02	; 2
    2980:	82 1b       	sub	r24, r18
    2982:	93 0b       	sbc	r25, r19
    2984:	76 01       	movw	r14, r12
    2986:	8c 15       	cp	r24, r12
    2988:	9d 05       	cpc	r25, r13
    298a:	08 f4       	brcc	.+2      	; 0x298e <f_write+0x286>
    298c:	7c 01       	movw	r14, r24
		if (wcnt > btw) wcnt = btw;
#if _FS_TINY
		if (move_window(fp->fs, fp->dsect))			/* Move sector window */
    298e:	4e 89       	ldd	r20, Y+22	; 0x16
    2990:	5f 89       	ldd	r21, Y+23	; 0x17
    2992:	68 8d       	ldd	r22, Y+24	; 0x18
    2994:	79 8d       	ldd	r23, Y+25	; 0x19
    2996:	88 81       	ld	r24, Y
    2998:	99 81       	ldd	r25, Y+1	; 0x01
    299a:	0e 94 72 06 	call	0xce4	; 0xce4 <move_window>
    299e:	88 23       	and	r24, r24
    29a0:	29 f0       	breq	.+10     	; 0x29ac <f_write+0x2a4>
			ABORT(fp->fs, FR_DISK_ERR);
    29a2:	8c 81       	ldd	r24, Y+4	; 0x04
    29a4:	80 68       	ori	r24, 0x80	; 128
    29a6:	8c 83       	std	Y+4, r24	; 0x04
    29a8:	81 e0       	ldi	r24, 0x01	; 1
    29aa:	46 c0       	rjmp	.+140    	; 0x2a38 <f_write+0x330>
		mem_cpy(&fp->fs->win[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
    29ac:	8e 81       	ldd	r24, Y+6	; 0x06
    29ae:	9f 81       	ldd	r25, Y+7	; 0x07
    29b0:	a8 85       	ldd	r26, Y+8	; 0x08
    29b2:	b9 85       	ldd	r27, Y+9	; 0x09
    29b4:	91 70       	andi	r25, 0x01	; 1
    29b6:	aa 27       	eor	r26, r26
    29b8:	bb 27       	eor	r27, r27
    29ba:	c2 96       	adiw	r24, 0x32	; 50
    29bc:	28 81       	ld	r18, Y
    29be:	39 81       	ldd	r19, Y+1	; 0x01
    29c0:	a7 01       	movw	r20, r14
    29c2:	b4 01       	movw	r22, r8
    29c4:	82 0f       	add	r24, r18
    29c6:	93 1f       	adc	r25, r19
    29c8:	0e 94 35 06 	call	0xc6a	; 0xc6a <mem_cpy>
		fp->fs->wflag = 1;
    29cc:	e8 81       	ld	r30, Y
    29ce:	f9 81       	ldd	r31, Y+1	; 0x01
    29d0:	21 e0       	ldi	r18, 0x01	; 1
    29d2:	24 83       	std	Z+4, r18	; 0x04
	if (!(fp->flag & FA_WRITE))						/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
	if (fp->fsize + btw < fp->fsize) btw = 0;		/* File size cannot reach 4GB */

	for ( ;  btw;									/* Repeat until all data transferred */
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
    29d4:	8e 0c       	add	r8, r14
    29d6:	9f 1c       	adc	r9, r15
    29d8:	8e 81       	ldd	r24, Y+6	; 0x06
    29da:	9f 81       	ldd	r25, Y+7	; 0x07
    29dc:	a8 85       	ldd	r26, Y+8	; 0x08
    29de:	b9 85       	ldd	r27, Y+9	; 0x09
    29e0:	8e 0d       	add	r24, r14
    29e2:	9f 1d       	adc	r25, r15
    29e4:	a1 1d       	adc	r26, r1
    29e6:	b1 1d       	adc	r27, r1
    29e8:	8e 83       	std	Y+6, r24	; 0x06
    29ea:	9f 83       	std	Y+7, r25	; 0x07
    29ec:	a8 87       	std	Y+8, r26	; 0x08
    29ee:	b9 87       	std	Y+9, r27	; 0x09
    29f0:	f5 01       	movw	r30, r10
    29f2:	80 81       	ld	r24, Z
    29f4:	91 81       	ldd	r25, Z+1	; 0x01
    29f6:	8e 0d       	add	r24, r14
    29f8:	9f 1d       	adc	r25, r15
    29fa:	91 83       	std	Z+1, r25	; 0x01
    29fc:	80 83       	st	Z, r24
    29fe:	ce 18       	sub	r12, r14
    2a00:	df 08       	sbc	r13, r15
		LEAVE_FF(fp->fs, FR_INT_ERR);
	if (!(fp->flag & FA_WRITE))						/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
	if (fp->fsize + btw < fp->fsize) btw = 0;		/* File size cannot reach 4GB */

	for ( ;  btw;									/* Repeat until all data transferred */
    2a02:	09 f0       	breq	.+2      	; 0x2a06 <f_write+0x2fe>
    2a04:	bc ce       	rjmp	.-648    	; 0x277e <f_write+0x76>
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
		fp->flag |= FA__DIRTY;
#endif
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
    2a06:	8e 81       	ldd	r24, Y+6	; 0x06
    2a08:	9f 81       	ldd	r25, Y+7	; 0x07
    2a0a:	a8 85       	ldd	r26, Y+8	; 0x08
    2a0c:	b9 85       	ldd	r27, Y+9	; 0x09
    2a0e:	4a 85       	ldd	r20, Y+10	; 0x0a
    2a10:	5b 85       	ldd	r21, Y+11	; 0x0b
    2a12:	6c 85       	ldd	r22, Y+12	; 0x0c
    2a14:	7d 85       	ldd	r23, Y+13	; 0x0d
    2a16:	48 17       	cp	r20, r24
    2a18:	59 07       	cpc	r21, r25
    2a1a:	6a 07       	cpc	r22, r26
    2a1c:	7b 07       	cpc	r23, r27
    2a1e:	20 f4       	brcc	.+8      	; 0x2a28 <f_write+0x320>
    2a20:	8a 87       	std	Y+10, r24	; 0x0a
    2a22:	9b 87       	std	Y+11, r25	; 0x0b
    2a24:	ac 87       	std	Y+12, r26	; 0x0c
    2a26:	bd 87       	std	Y+13, r27	; 0x0d
	fp->flag |= FA__WRITTEN;						/* Set file changed flag */
    2a28:	8c 81       	ldd	r24, Y+4	; 0x04
    2a2a:	80 62       	ori	r24, 0x20	; 32
    2a2c:	8c 83       	std	Y+4, r24	; 0x04

	LEAVE_FF(fp->fs, FR_OK);
    2a2e:	80 e0       	ldi	r24, 0x00	; 0
    2a30:	03 c0       	rjmp	.+6      	; 0x2a38 <f_write+0x330>
	*bw = 0;	/* Initialize byte counter */

	res = validate(fp->fs, fp->id);					/* Check validity of the object */
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
	if (fp->flag & FA__ERROR)						/* Check abort flag */
		LEAVE_FF(fp->fs, FR_INT_ERR);
    2a32:	82 e0       	ldi	r24, 0x02	; 2
    2a34:	01 c0       	rjmp	.+2      	; 0x2a38 <f_write+0x330>
	if (!(fp->flag & FA_WRITE))						/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
    2a36:	87 e0       	ldi	r24, 0x07	; 7

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file changed flag */

	LEAVE_FF(fp->fs, FR_OK);
}
    2a38:	df 91       	pop	r29
    2a3a:	cf 91       	pop	r28
    2a3c:	1f 91       	pop	r17
    2a3e:	0f 91       	pop	r16
    2a40:	ff 90       	pop	r15
    2a42:	ef 90       	pop	r14
    2a44:	df 90       	pop	r13
    2a46:	cf 90       	pop	r12
    2a48:	bf 90       	pop	r11
    2a4a:	af 90       	pop	r10
    2a4c:	9f 90       	pop	r9
    2a4e:	8f 90       	pop	r8
    2a50:	7f 90       	pop	r7
    2a52:	6f 90       	pop	r6
    2a54:	5f 90       	pop	r5
    2a56:	4f 90       	pop	r4
    2a58:	3f 90       	pop	r3
    2a5a:	2f 90       	pop	r2
    2a5c:	08 95       	ret

00002a5e <f_sync>:
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL *fp		/* Pointer to the file object */
)
{
    2a5e:	0f 93       	push	r16
    2a60:	1f 93       	push	r17
    2a62:	cf 93       	push	r28
    2a64:	df 93       	push	r29
    2a66:	ec 01       	movw	r28, r24
	FRESULT res;
	DWORD tim;
	BYTE *dir;


	res = validate(fp->fs, fp->id);		/* Check validity of the object */
    2a68:	6a 81       	ldd	r22, Y+2	; 0x02
    2a6a:	7b 81       	ldd	r23, Y+3	; 0x03
    2a6c:	88 81       	ld	r24, Y
    2a6e:	99 81       	ldd	r25, Y+1	; 0x01
    2a70:	0e 94 27 07 	call	0xe4e	; 0xe4e <validate>
	if (res == FR_OK) {
    2a74:	81 11       	cpse	r24, r1
    2a76:	37 c0       	rjmp	.+110    	; 0x2ae6 <f_sync+0x88>
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
    2a78:	9c 81       	ldd	r25, Y+4	; 0x04
    2a7a:	95 ff       	sbrs	r25, 5
    2a7c:	34 c0       	rjmp	.+104    	; 0x2ae6 <f_sync+0x88>
					LEAVE_FF(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			/* Update the directory entry */
			res = move_window(fp->fs, fp->dir_sect);
    2a7e:	4a 8d       	ldd	r20, Y+26	; 0x1a
    2a80:	5b 8d       	ldd	r21, Y+27	; 0x1b
    2a82:	6c 8d       	ldd	r22, Y+28	; 0x1c
    2a84:	7d 8d       	ldd	r23, Y+29	; 0x1d
    2a86:	88 81       	ld	r24, Y
    2a88:	99 81       	ldd	r25, Y+1	; 0x01
    2a8a:	0e 94 72 06 	call	0xce4	; 0xce4 <move_window>
			if (res == FR_OK) {
    2a8e:	81 11       	cpse	r24, r1
    2a90:	2a c0       	rjmp	.+84     	; 0x2ae6 <f_sync+0x88>
				dir = fp->dir_ptr;
    2a92:	0e 8d       	ldd	r16, Y+30	; 0x1e
    2a94:	1f 8d       	ldd	r17, Y+31	; 0x1f
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
    2a96:	f8 01       	movw	r30, r16
    2a98:	83 85       	ldd	r24, Z+11	; 0x0b
    2a9a:	80 62       	ori	r24, 0x20	; 32
    2a9c:	83 87       	std	Z+11, r24	; 0x0b
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
    2a9e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2aa0:	9b 85       	ldd	r25, Y+11	; 0x0b
    2aa2:	ac 85       	ldd	r26, Y+12	; 0x0c
    2aa4:	bd 85       	ldd	r27, Y+13	; 0x0d
    2aa6:	84 8f       	std	Z+28, r24	; 0x1c
    2aa8:	95 8f       	std	Z+29, r25	; 0x1d
    2aaa:	a6 8f       	std	Z+30, r26	; 0x1e
    2aac:	b7 8f       	std	Z+31, r27	; 0x1f
				ST_WORD(dir+DIR_FstClusLO, fp->org_clust);	/* Update start cluster */
    2aae:	8e 85       	ldd	r24, Y+14	; 0x0e
    2ab0:	9f 85       	ldd	r25, Y+15	; 0x0f
    2ab2:	93 8f       	std	Z+27, r25	; 0x1b
    2ab4:	82 8f       	std	Z+26, r24	; 0x1a
				ST_WORD(dir+DIR_FstClusHI, fp->org_clust >> 16);
    2ab6:	8e 85       	ldd	r24, Y+14	; 0x0e
    2ab8:	9f 85       	ldd	r25, Y+15	; 0x0f
    2aba:	a8 89       	ldd	r26, Y+16	; 0x10
    2abc:	b9 89       	ldd	r27, Y+17	; 0x11
    2abe:	b5 8b       	std	Z+21, r27	; 0x15
    2ac0:	a4 8b       	std	Z+20, r26	; 0x14
				tim = get_fattime();						/* Update updated time */
    2ac2:	0e 94 31 06 	call	0xc62	; 0xc62 <get_fattime>
				ST_DWORD(dir+DIR_WrtTime, tim);
    2ac6:	f8 01       	movw	r30, r16
    2ac8:	66 8b       	std	Z+22, r22	; 0x16
    2aca:	77 8b       	std	Z+23, r23	; 0x17
    2acc:	80 8f       	std	Z+24, r24	; 0x18
    2ace:	91 8f       	std	Z+25, r25	; 0x19
				fp->flag &= ~FA__WRITTEN;
    2ad0:	8c 81       	ldd	r24, Y+4	; 0x04
    2ad2:	8f 7d       	andi	r24, 0xDF	; 223
    2ad4:	8c 83       	std	Y+4, r24	; 0x04
				fp->fs->wflag = 1;
    2ad6:	e8 81       	ld	r30, Y
    2ad8:	f9 81       	ldd	r31, Y+1	; 0x01
    2ada:	81 e0       	ldi	r24, 0x01	; 1
    2adc:	84 83       	std	Z+4, r24	; 0x04
				res = sync(fp->fs);
    2ade:	88 81       	ld	r24, Y
    2ae0:	99 81       	ldd	r25, Y+1	; 0x01
    2ae2:	0e 94 2d 0a 	call	0x145a	; 0x145a <sync>
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
    2ae6:	df 91       	pop	r29
    2ae8:	cf 91       	pop	r28
    2aea:	1f 91       	pop	r17
    2aec:	0f 91       	pop	r16
    2aee:	08 95       	ret

00002af0 <f_close>:
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
    2af0:	cf 93       	push	r28
    2af2:	df 93       	push	r29
    2af4:	ec 01       	movw	r28, r24
	res = validate(fs, fp->id);
	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
	LEAVE_FF(fs, res);

#else
	res = f_sync(fp);		/* Flush cached data */
    2af6:	b3 df       	rcall	.-154    	; 0x2a5e <f_sync>
#else
		res = dec_lock(fp->fs, fp->lockid);
#endif
	}
#endif
	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
    2af8:	81 11       	cpse	r24, r1
    2afa:	02 c0       	rjmp	.+4      	; 0x2b00 <f_close+0x10>
    2afc:	19 82       	std	Y+1, r1	; 0x01
    2afe:	18 82       	st	Y, r1
	return res;
#endif
}
    2b00:	df 91       	pop	r29
    2b02:	cf 91       	pop	r28
    2b04:	08 95       	ret

00002b06 <inits>:
BOOL FINISHED_WRITING_ESC = TRUE;
BOOL FINISHED_WRITING_POWER = TRUE;
BOOL FINISHED_WRITING_SW = TRUE;

void inits( void) {
	USART0_Init(MYUBRR0);
    2b06:	8c e0       	ldi	r24, 0x0C	; 12
    2b08:	90 e0       	ldi	r25, 0x00	; 0
    2b0a:	50 d4       	rcall	.+2208   	; 0x33ac <USART0_Init>
	USART1_Init(MYUBRR1);
    2b0c:	87 e6       	ldi	r24, 0x67	; 103
    2b0e:	90 e0       	ldi	r25, 0x00	; 0
    2b10:	5d d4       	rcall	.+2234   	; 0x33cc <USART1_Init>
	can_init();
    2b12:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <can_init>
	timer0_init();
    2b16:	11 d4       	rcall	.+2082   	; 0x333a <timer0_init>
	SDCard_init();
    2b18:	83 d2       	rcall	.+1286   	; 0x3020 <SDCard_init>
	//PORTF |= (1<<PF3); // GPS CS HIGH
	
	//LEDS on UM
	DDRB |= (1<<LED_RED) | (1<<LED_GREEN) | (1<<LED_BLUE);
    2b1a:	84 b1       	in	r24, 0x04	; 4
    2b1c:	80 6e       	ori	r24, 0xE0	; 224
    2b1e:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1<<LED_BLUE) | (1<<LED_GREEN);
    2b20:	85 b1       	in	r24, 0x05	; 5
    2b22:	80 6c       	ori	r24, 0xC0	; 192
    2b24:	85 b9       	out	0x05, r24	; 5
	PORTB &= ~(1<<LED_RED);
    2b26:	2d 98       	cbi	0x05, 5	; 5
    2b28:	08 95       	ret

00002b2a <main>:
}

int main(void)
{	
    2b2a:	cf 93       	push	r28
    2b2c:	df 93       	push	r29
    2b2e:	cd b7       	in	r28, 0x3d	; 61
    2b30:	de b7       	in	r29, 0x3e	; 62
    2b32:	c9 56       	subi	r28, 0x69	; 105
    2b34:	d2 40       	sbci	r29, 0x02	; 2
    2b36:	0f b6       	in	r0, 0x3f	; 63
    2b38:	f8 94       	cli
    2b3a:	de bf       	out	0x3e, r29	; 62
    2b3c:	0f be       	out	0x3f, r0	; 63
    2b3e:	cd bf       	out	0x3d, r28	; 61
	CAN_packet can_time;
	can_time.id = GPS_TIME_ID;
    2b40:	85 e1       	ldi	r24, 0x15	; 21
    2b42:	90 e0       	ldi	r25, 0x00	; 0
    2b44:	9a 83       	std	Y+2, r25	; 0x02
    2b46:	89 83       	std	Y+1, r24	; 0x01
	can_time.length = 8;
    2b48:	88 e0       	ldi	r24, 0x08	; 8
    2b4a:	8b 83       	std	Y+3, r24	; 0x03
	
	CAN_packet can_lat1;
	can_lat1.id = GPS_LAT1_ID;
    2b4c:	26 e1       	ldi	r18, 0x16	; 22
    2b4e:	30 e0       	ldi	r19, 0x00	; 0
    2b50:	3d 87       	std	Y+13, r19	; 0x0d
    2b52:	2c 87       	std	Y+12, r18	; 0x0c
	can_lat1.length = 2;
    2b54:	92 e0       	ldi	r25, 0x02	; 2
    2b56:	9e 87       	std	Y+14, r25	; 0x0e
	
	CAN_packet can_lat2;
	can_lat2.id = GPS_LAT2_ID;
    2b58:	27 e1       	ldi	r18, 0x17	; 23
    2b5a:	30 e0       	ldi	r19, 0x00	; 0
    2b5c:	38 8f       	std	Y+24, r19	; 0x18
    2b5e:	2f 8b       	std	Y+23, r18	; 0x17
	can_lat2.length = 8;
    2b60:	89 8f       	std	Y+25, r24	; 0x19
	
	CAN_packet can_long1;
	can_long1.id = GPS_LONG1_ID;
    2b62:	28 e1       	ldi	r18, 0x18	; 24
    2b64:	30 e0       	ldi	r19, 0x00	; 0
    2b66:	3b a3       	std	Y+35, r19	; 0x23
    2b68:	2a a3       	std	Y+34, r18	; 0x22
	can_long1.length = 3;
    2b6a:	93 e0       	ldi	r25, 0x03	; 3
    2b6c:	9c a3       	std	Y+36, r25	; 0x24
	
	CAN_packet can_long2;
	can_long2.id = GPS_LONG2_ID;
    2b6e:	29 e1       	ldi	r18, 0x19	; 25
    2b70:	30 e0       	ldi	r19, 0x00	; 0
    2b72:	3e a7       	std	Y+46, r19	; 0x2e
    2b74:	2d a7       	std	Y+45, r18	; 0x2d
	can_long2.length = 8;
    2b76:	8f a7       	std	Y+47, r24	; 0x2f
	
	uint8_t result;
	BOOL SDCard_closed = FALSE;
	
	/* Initialize module */
	inits();
    2b78:	c6 df       	rcall	.-116    	; 0x2b06 <inits>
	result = initializeFAT(&fs);
    2b7a:	ce 01       	movw	r24, r28
    2b7c:	c8 96       	adiw	r24, 0x38	; 56
    2b7e:	69 d2       	rcall	.+1234   	; 0x3052 <initializeFAT>
	
	if (result != 0)
    2b80:	88 23       	and	r24, r24
    2b82:	11 f0       	breq	.+4      	; 0x2b88 <main+0x5e>
		while(1)
			errorLED();
    2b84:	74 d2       	rcall	.+1256   	; 0x306e <errorLED>
    2b86:	fe cf       	rjmp	.-4      	; 0x2b84 <main+0x5a>
			
	printf("\r\nGPS initialized");
    2b88:	81 e4       	ldi	r24, 0x41	; 65
    2b8a:	91 e0       	ldi	r25, 0x01	; 1
    2b8c:	9f 93       	push	r25
    2b8e:	8f 93       	push	r24
    2b90:	ce d4       	rcall	.+2460   	; 0x352e <printf>
	
	//Open a text file on the SD Card
	if(f_open(&file_sw, "/SW.txt", FA_WRITE | FA_CREATE_ALWAYS) != FR_OK){
    2b92:	4a e0       	ldi	r20, 0x0A	; 10
    2b94:	63 e5       	ldi	r22, 0x53	; 83
    2b96:	71 e0       	ldi	r23, 0x01	; 1
    2b98:	85 e6       	ldi	r24, 0x65	; 101
    2b9a:	93 e0       	ldi	r25, 0x03	; 3
    2b9c:	86 dc       	rcall	.-1780   	; 0x24aa <f_open>
    2b9e:	0f 90       	pop	r0
    2ba0:	0f 90       	pop	r0
    2ba2:	88 23       	and	r24, r24
    2ba4:	11 f0       	breq	.+4      	; 0x2baa <main+0x80>
		while (1)
		errorLED();
    2ba6:	63 d2       	rcall	.+1222   	; 0x306e <errorLED>
    2ba8:	fe cf       	rjmp	.-4      	; 0x2ba6 <main+0x7c>
	}
	if(f_open(&file_power, "/POWER.txt", FA_WRITE | FA_CREATE_ALWAYS) != FR_OK){
    2baa:	4a e0       	ldi	r20, 0x0A	; 10
    2bac:	6b e5       	ldi	r22, 0x5B	; 91
    2bae:	71 e0       	ldi	r23, 0x01	; 1
    2bb0:	87 e8       	ldi	r24, 0x87	; 135
    2bb2:	93 e0       	ldi	r25, 0x03	; 3
    2bb4:	7a dc       	rcall	.-1804   	; 0x24aa <f_open>
    2bb6:	88 23       	and	r24, r24
    2bb8:	11 f0       	breq	.+4      	; 0x2bbe <main+0x94>
		while (1)
		errorLED();
    2bba:	59 d2       	rcall	.+1202   	; 0x306e <errorLED>
    2bbc:	fe cf       	rjmp	.-4      	; 0x2bba <main+0x90>
	}
	if(f_open(&file_esc, "/ESC.txt", FA_WRITE | FA_CREATE_ALWAYS) != FR_OK){
    2bbe:	4a e0       	ldi	r20, 0x0A	; 10
    2bc0:	66 e6       	ldi	r22, 0x66	; 102
    2bc2:	71 e0       	ldi	r23, 0x01	; 1
    2bc4:	8e ef       	ldi	r24, 0xFE	; 254
    2bc6:	92 e0       	ldi	r25, 0x02	; 2
    2bc8:	70 dc       	rcall	.-1824   	; 0x24aa <f_open>
    2bca:	88 23       	and	r24, r24
    2bcc:	11 f0       	breq	.+4      	; 0x2bd2 <main+0xa8>
		while (1)
		errorLED();
    2bce:	4f d2       	rcall	.+1182   	; 0x306e <errorLED>
    2bd0:	fe cf       	rjmp	.-4      	; 0x2bce <main+0xa4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2bd2:	2f ef       	ldi	r18, 0xFF	; 255
    2bd4:	84 e3       	ldi	r24, 0x34	; 52
    2bd6:	9c e0       	ldi	r25, 0x0C	; 12
    2bd8:	21 50       	subi	r18, 0x01	; 1
    2bda:	80 40       	sbci	r24, 0x00	; 0
    2bdc:	90 40       	sbci	r25, 0x00	; 0
    2bde:	e1 f7       	brne	.-8      	; 0x2bd8 <main+0xae>
    2be0:	00 c0       	rjmp	.+0      	; 0x2be2 <main+0xb8>
    2be2:	00 00       	nop
	}
	//Delay to ensure things are all set up and SD card is ready to receive more commands
	_delay_ms(500);
	
	prepare_rx(0, ID_steeringWheel, MASK_GPS, SDCard_callback);
    2be4:	2e e5       	ldi	r18, 0x5E	; 94
    2be6:	39 e1       	ldi	r19, 0x19	; 25
    2be8:	4c e0       	ldi	r20, 0x0C	; 12
    2bea:	50 e0       	ldi	r21, 0x00	; 0
    2bec:	6d e0       	ldi	r22, 0x0D	; 13
    2bee:	70 e0       	ldi	r23, 0x00	; 0
    2bf0:	80 e0       	ldi	r24, 0x00	; 0
    2bf2:	0e 94 68 01 	call	0x2d0	; 0x2d0 <prepare_rx>
	UCSR1B |= (1<<RXCIE1);
    2bf6:	e9 ec       	ldi	r30, 0xC9	; 201
    2bf8:	f0 e0       	ldi	r31, 0x00	; 0
    2bfa:	80 81       	ld	r24, Z
    2bfc:	80 68       	ori	r24, 0x80	; 128
    2bfe:	80 83       	st	Z, r24
	sei();
    2c00:	78 94       	sei
	can_long2.length = 8;
	
	FATFS fs;
	
	uint8_t result;
	BOOL SDCard_closed = FALSE;
    2c02:	10 e0       	ldi	r17, 0x00	; 0
			
			for (unsigned char i = 0; i < can_lat2.length-1; i++) {
				can_lat2.data[i] = gps_lat[i+can_lat1.length];
				//uart_putc0(can_lat2.data[i]);
			}
			can_lat2.data[can_lat2.length-1] = gps_lat_ind[0];
    2c04:	0f 2e       	mov	r0, r31
    2c06:	f0 ef       	ldi	r31, 0xF0	; 240
    2c08:	ef 2e       	mov	r14, r31
    2c0a:	f2 e0       	ldi	r31, 0x02	; 2
    2c0c:	ff 2e       	mov	r15, r31
    2c0e:	f0 2d       	mov	r31, r0
	prepare_rx(0, ID_steeringWheel, MASK_GPS, SDCard_callback);
	UCSR1B |= (1<<RXCIE1);
	sei();
	
    for(;;) {
		if (msg_done) {	
    2c10:	80 91 cb 02 	lds	r24, 0x02CB
    2c14:	88 23       	and	r24, r24
    2c16:	09 f4       	brne	.+2      	; 0x2c1a <main+0xf0>
    2c18:	b1 c0       	rjmp	.+354    	; 0x2d7c <main+0x252>
			for (unsigned char i = 0; i < can_time.length; i++) {
    2c1a:	9b 81       	ldd	r25, Y+3	; 0x03
    2c1c:	99 23       	and	r25, r25
    2c1e:	59 f0       	breq	.+22     	; 0x2c36 <main+0x10c>
    2c20:	2e e1       	ldi	r18, 0x1E	; 30
    2c22:	33 e0       	ldi	r19, 0x03	; 3
    2c24:	de 01       	movw	r26, r28
    2c26:	14 96       	adiw	r26, 0x04	; 4
    2c28:	f9 01       	movw	r30, r18
				can_time.data[i] = gps_time[i];
    2c2a:	81 91       	ld	r24, Z+
    2c2c:	8d 93       	st	X+, r24
    2c2e:	8e 2f       	mov	r24, r30
    2c30:	82 1b       	sub	r24, r18
	UCSR1B |= (1<<RXCIE1);
	sei();
	
    for(;;) {
		if (msg_done) {	
			for (unsigned char i = 0; i < can_time.length; i++) {
    2c32:	89 17       	cp	r24, r25
    2c34:	d0 f3       	brcs	.-12     	; 0x2c2a <main+0x100>
				can_time.data[i] = gps_time[i];
				//uart_putc0(can_time.data[i]);
			}
			can_tx(14, &can_time);
    2c36:	be 01       	movw	r22, r28
    2c38:	6f 5f       	subi	r22, 0xFF	; 255
    2c3a:	7f 4f       	sbci	r23, 0xFF	; 255
    2c3c:	8e e0       	ldi	r24, 0x0E	; 14
    2c3e:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <can_tx>
			//uart_putc0('\n');
			
			for (unsigned char i = 0; i < can_lat1.length; i++) {
    2c42:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c44:	99 23       	and	r25, r25
    2c46:	59 f0       	breq	.+22     	; 0x2c5e <main+0x134>
    2c48:	22 ef       	ldi	r18, 0xF2	; 242
    2c4a:	32 e0       	ldi	r19, 0x02	; 2
    2c4c:	de 01       	movw	r26, r28
    2c4e:	1f 96       	adiw	r26, 0x0f	; 15
    2c50:	f9 01       	movw	r30, r18
				can_lat1.data[i] = gps_lat[i];
    2c52:	81 91       	ld	r24, Z+
    2c54:	8d 93       	st	X+, r24
    2c56:	8e 2f       	mov	r24, r30
    2c58:	82 1b       	sub	r24, r18
				//uart_putc0(can_time.data[i]);
			}
			can_tx(14, &can_time);
			//uart_putc0('\n');
			
			for (unsigned char i = 0; i < can_lat1.length; i++) {
    2c5a:	89 17       	cp	r24, r25
    2c5c:	d0 f3       	brcs	.-12     	; 0x2c52 <main+0x128>
				can_lat1.data[i] = gps_lat[i];
				//uart_putc0(can_lat1.data[i]);
			}
			can_tx(13, &can_lat1);
    2c5e:	be 01       	movw	r22, r28
    2c60:	64 5f       	subi	r22, 0xF4	; 244
    2c62:	7f 4f       	sbci	r23, 0xFF	; 255
    2c64:	8d e0       	ldi	r24, 0x0D	; 13
    2c66:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <can_tx>
			//uart_putc0(' ');
			
			for (unsigned char i = 0; i < can_lat2.length-1; i++) {
    2c6a:	49 8d       	ldd	r20, Y+25	; 0x19
    2c6c:	50 e0       	ldi	r21, 0x00	; 0
    2c6e:	41 50       	subi	r20, 0x01	; 1
    2c70:	51 09       	sbc	r21, r1
    2c72:	14 16       	cp	r1, r20
    2c74:	15 06       	cpc	r1, r21
    2c76:	c4 f4       	brge	.+48     	; 0x2ca8 <main+0x17e>
				can_lat2.data[i] = gps_lat[i+can_lat1.length];
    2c78:	6e 85       	ldd	r22, Y+14	; 0x0e
    2c7a:	70 e0       	ldi	r23, 0x00	; 0
    2c7c:	80 e0       	ldi	r24, 0x00	; 0
    2c7e:	90 e0       	ldi	r25, 0x00	; 0
    2c80:	20 e0       	ldi	r18, 0x00	; 0
    2c82:	aa e1       	ldi	r26, 0x1A	; 26
    2c84:	b0 e0       	ldi	r27, 0x00	; 0
    2c86:	ac 0f       	add	r26, r28
    2c88:	bd 1f       	adc	r27, r29
    2c8a:	a8 0f       	add	r26, r24
    2c8c:	b9 1f       	adc	r27, r25
    2c8e:	8e 50       	subi	r24, 0x0E	; 14
    2c90:	9d 4f       	sbci	r25, 0xFD	; 253
    2c92:	fc 01       	movw	r30, r24
    2c94:	e6 0f       	add	r30, r22
    2c96:	f7 1f       	adc	r31, r23
    2c98:	80 81       	ld	r24, Z
    2c9a:	8c 93       	st	X, r24
				//uart_putc0(can_lat1.data[i]);
			}
			can_tx(13, &can_lat1);
			//uart_putc0(' ');
			
			for (unsigned char i = 0; i < can_lat2.length-1; i++) {
    2c9c:	2f 5f       	subi	r18, 0xFF	; 255
    2c9e:	82 2f       	mov	r24, r18
    2ca0:	90 e0       	ldi	r25, 0x00	; 0
    2ca2:	84 17       	cp	r24, r20
    2ca4:	95 07       	cpc	r25, r21
    2ca6:	6c f3       	brlt	.-38     	; 0x2c82 <main+0x158>
				can_lat2.data[i] = gps_lat[i+can_lat1.length];
				//uart_putc0(can_lat2.data[i]);
			}
			can_lat2.data[can_lat2.length-1] = gps_lat_ind[0];
    2ca8:	ea e1       	ldi	r30, 0x1A	; 26
    2caa:	f0 e0       	ldi	r31, 0x00	; 0
    2cac:	ec 0f       	add	r30, r28
    2cae:	fd 1f       	adc	r31, r29
    2cb0:	e4 0f       	add	r30, r20
    2cb2:	f5 1f       	adc	r31, r21
    2cb4:	d7 01       	movw	r26, r14
    2cb6:	8c 91       	ld	r24, X
    2cb8:	80 83       	st	Z, r24
			//uart_putc0(can_lat2.data[can_lat2.length-1]);
			can_tx(12, &can_lat2);
    2cba:	be 01       	movw	r22, r28
    2cbc:	69 5e       	subi	r22, 0xE9	; 233
    2cbe:	7f 4f       	sbci	r23, 0xFF	; 255
    2cc0:	8c e0       	ldi	r24, 0x0C	; 12
    2cc2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <can_tx>
			//uart_putc0(' ');
			
			for (unsigned char i = 0; i < can_long1.length; i++) {
    2cc6:	9c a1       	ldd	r25, Y+36	; 0x24
    2cc8:	99 23       	and	r25, r25
    2cca:	59 f0       	breq	.+22     	; 0x2ce2 <main+0x1b8>
    2ccc:	2b e5       	ldi	r18, 0x5B	; 91
    2cce:	33 e0       	ldi	r19, 0x03	; 3
    2cd0:	de 01       	movw	r26, r28
    2cd2:	95 96       	adiw	r26, 0x25	; 37
    2cd4:	f9 01       	movw	r30, r18
				can_long1.data[i] = gps_long[i];
    2cd6:	81 91       	ld	r24, Z+
    2cd8:	8d 93       	st	X+, r24
    2cda:	8e 2f       	mov	r24, r30
    2cdc:	82 1b       	sub	r24, r18
			can_lat2.data[can_lat2.length-1] = gps_lat_ind[0];
			//uart_putc0(can_lat2.data[can_lat2.length-1]);
			can_tx(12, &can_lat2);
			//uart_putc0(' ');
			
			for (unsigned char i = 0; i < can_long1.length; i++) {
    2cde:	89 17       	cp	r24, r25
    2ce0:	d0 f3       	brcs	.-12     	; 0x2cd6 <main+0x1ac>
				can_long1.data[i] = gps_long[i];
				//uart_putc0(can_long1.data[i]);
			}
			can_tx(11, &can_long1);
    2ce2:	be 01       	movw	r22, r28
    2ce4:	6e 5d       	subi	r22, 0xDE	; 222
    2ce6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ce8:	8b e0       	ldi	r24, 0x0B	; 11
    2cea:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <can_tx>
			//uart_putc0(' ');
			
			for (unsigned char i = 0; i < can_long2.length-1; i++) {
    2cee:	4f a5       	ldd	r20, Y+47	; 0x2f
    2cf0:	50 e0       	ldi	r21, 0x00	; 0
    2cf2:	41 50       	subi	r20, 0x01	; 1
    2cf4:	51 09       	sbc	r21, r1
    2cf6:	14 16       	cp	r1, r20
    2cf8:	15 06       	cpc	r1, r21
    2cfa:	c4 f4       	brge	.+48     	; 0x2d2c <main+0x202>
				can_long2.data[i] = gps_long[i+can_long1.length];
    2cfc:	6c a1       	ldd	r22, Y+36	; 0x24
    2cfe:	70 e0       	ldi	r23, 0x00	; 0
    2d00:	80 e0       	ldi	r24, 0x00	; 0
    2d02:	90 e0       	ldi	r25, 0x00	; 0
    2d04:	20 e0       	ldi	r18, 0x00	; 0
    2d06:	a0 e3       	ldi	r26, 0x30	; 48
    2d08:	b0 e0       	ldi	r27, 0x00	; 0
    2d0a:	ac 0f       	add	r26, r28
    2d0c:	bd 1f       	adc	r27, r29
    2d0e:	a8 0f       	add	r26, r24
    2d10:	b9 1f       	adc	r27, r25
    2d12:	85 5a       	subi	r24, 0xA5	; 165
    2d14:	9c 4f       	sbci	r25, 0xFC	; 252
    2d16:	fc 01       	movw	r30, r24
    2d18:	e6 0f       	add	r30, r22
    2d1a:	f7 1f       	adc	r31, r23
    2d1c:	80 81       	ld	r24, Z
    2d1e:	8c 93       	st	X, r24
				//uart_putc0(can_long1.data[i]);
			}
			can_tx(11, &can_long1);
			//uart_putc0(' ');
			
			for (unsigned char i = 0; i < can_long2.length-1; i++) {
    2d20:	2f 5f       	subi	r18, 0xFF	; 255
    2d22:	82 2f       	mov	r24, r18
    2d24:	90 e0       	ldi	r25, 0x00	; 0
    2d26:	84 17       	cp	r24, r20
    2d28:	95 07       	cpc	r25, r21
    2d2a:	6c f3       	brlt	.-38     	; 0x2d06 <main+0x1dc>
				can_long2.data[i] = gps_long[i+can_long1.length];
				//uart_putc0(can_long2.data[i]);
			}
			can_long2.data[can_long2.length-1] = gps_long_ind[0];
    2d2c:	e0 e3       	ldi	r30, 0x30	; 48
    2d2e:	f0 e0       	ldi	r31, 0x00	; 0
    2d30:	ec 0f       	add	r30, r28
    2d32:	fd 1f       	adc	r31, r29
    2d34:	e4 0f       	add	r30, r20
    2d36:	f5 1f       	adc	r31, r21
    2d38:	80 91 fc 02 	lds	r24, 0x02FC
    2d3c:	80 83       	st	Z, r24
			//uart_putc0(can_long2.data[can_long2.length-1]);
			can_tx(10, &can_long2);
    2d3e:	be 01       	movw	r22, r28
    2d40:	63 5d       	subi	r22, 0xD3	; 211
    2d42:	7f 4f       	sbci	r23, 0xFF	; 255
    2d44:	8a e0       	ldi	r24, 0x0A	; 10
    2d46:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <can_tx>
			//uart_putc0('\n');
			
			if (gps_pos_fix[0] == '1') {
    2d4a:	80 91 85 03 	lds	r24, 0x0385
    2d4e:	81 33       	cpi	r24, 0x31	; 49
    2d50:	51 f4       	brne	.+20     	; 0x2d66 <main+0x23c>
				printf("\r\ngps_pos_fix[0] = '1'");
    2d52:	8f e6       	ldi	r24, 0x6F	; 111
    2d54:	91 e0       	ldi	r25, 0x01	; 1
    2d56:	9f 93       	push	r25
    2d58:	8f 93       	push	r24
    2d5a:	e9 d3       	rcall	.+2002   	; 0x352e <printf>
				PORTB |= (1<<LED_RED);
    2d5c:	2d 9a       	sbi	0x05, 5	; 5
				PORTB &= ~(1<<LED_GREEN);
    2d5e:	2e 98       	cbi	0x05, 6	; 5
    2d60:	0f 90       	pop	r0
    2d62:	0f 90       	pop	r0
    2d64:	09 c0       	rjmp	.+18     	; 0x2d78 <main+0x24e>
			} else {
				printf("\r\ngps_pos_fix[0] unknown");
    2d66:	86 e8       	ldi	r24, 0x86	; 134
    2d68:	91 e0       	ldi	r25, 0x01	; 1
    2d6a:	9f 93       	push	r25
    2d6c:	8f 93       	push	r24
    2d6e:	df d3       	rcall	.+1982   	; 0x352e <printf>
				PORTB |= (1<<LED_GREEN);
    2d70:	2e 9a       	sbi	0x05, 6	; 5
				PORTB &= ~(1<<LED_RED);
    2d72:	2d 98       	cbi	0x05, 5	; 5
    2d74:	0f 90       	pop	r0
    2d76:	0f 90       	pop	r0
			}
			msg_done = false;
    2d78:	10 92 cb 02 	sts	0x02CB, r1
		} // if statement
		if(SDCard_closed){
    2d7c:	11 23       	and	r17, r17
    2d7e:	11 f0       	breq	.+4      	; 0x2d84 <main+0x25a>
			finishedLED();
    2d80:	c7 d2       	rcall	.+1422   	; 0x3310 <finishedLED>
    2d82:	73 c0       	rjmp	.+230    	; 0x2e6a <main+0x340>
		} else if (!test_bit(PINE, PE3)) {
    2d84:	63 99       	sbic	0x0c, 3	; 12
    2d86:	71 c0       	rjmp	.+226    	; 0x2e6a <main+0x340>
			// turn off the timer0
			clear_bit(TIMSK0, TOIE0);
    2d88:	ee e6       	ldi	r30, 0x6E	; 110
    2d8a:	f0 e0       	ldi	r31, 0x00	; 0
    2d8c:	80 81       	ld	r24, Z
    2d8e:	8e 7f       	andi	r24, 0xFE	; 254
    2d90:	80 83       	st	Z, r24
			TIMER0_SW_OVF = FALSE;
    2d92:	10 92 d1 02 	sts	0x02D1, r1
			FINISHED_LISTENING = TRUE;
    2d96:	81 e0       	ldi	r24, 0x01	; 1
    2d98:	80 93 0a 01 	sts	0x010A, r24
			if (FINISHED_WRITING_SW && FINISHED_WRITING_POWER && FINISHED_WRITING_ESC && !SDCard_closed) {
    2d9c:	80 91 07 01 	lds	r24, 0x0107
    2da0:	88 23       	and	r24, r24
    2da2:	09 f4       	brne	.+2      	; 0x2da6 <main+0x27c>
    2da4:	62 c0       	rjmp	.+196    	; 0x2e6a <main+0x340>
    2da6:	80 91 08 01 	lds	r24, 0x0108
    2daa:	88 23       	and	r24, r24
    2dac:	09 f4       	brne	.+2      	; 0x2db0 <main+0x286>
    2dae:	5d c0       	rjmp	.+186    	; 0x2e6a <main+0x340>
    2db0:	80 91 09 01 	lds	r24, 0x0109
    2db4:	88 23       	and	r24, r24
    2db6:	09 f4       	brne	.+2      	; 0x2dba <main+0x290>
    2db8:	58 c0       	rjmp	.+176    	; 0x2e6a <main+0x340>
				printf("\r\nClosing SD Card.");
    2dba:	8f e9       	ldi	r24, 0x9F	; 159
    2dbc:	91 e0       	ldi	r25, 0x01	; 1
    2dbe:	9f 93       	push	r25
    2dc0:	8f 93       	push	r24
    2dc2:	b5 d3       	rcall	.+1898   	; 0x352e <printf>
				if (f_close(&file_sw) != FR_OK){
    2dc4:	85 e6       	ldi	r24, 0x65	; 101
    2dc6:	93 e0       	ldi	r25, 0x03	; 3
    2dc8:	93 de       	rcall	.-730    	; 0x2af0 <f_close>
    2dca:	0f 90       	pop	r0
    2dcc:	0f 90       	pop	r0
    2dce:	88 23       	and	r24, r24
    2dd0:	91 f0       	breq	.+36     	; 0x2df6 <main+0x2cc>
					while (1) {
						printf("\r\nCouldn't close SD Card.");
    2dd2:	02 eb       	ldi	r16, 0xB2	; 178
    2dd4:	11 e0       	ldi	r17, 0x01	; 1
    2dd6:	1f 93       	push	r17
    2dd8:	0f 93       	push	r16
    2dda:	a9 d3       	rcall	.+1874   	; 0x352e <printf>
    2ddc:	bf ef       	ldi	r27, 0xFF	; 255
    2dde:	20 e7       	ldi	r18, 0x70	; 112
    2de0:	82 e0       	ldi	r24, 0x02	; 2
    2de2:	b1 50       	subi	r27, 0x01	; 1
    2de4:	20 40       	sbci	r18, 0x00	; 0
    2de6:	80 40       	sbci	r24, 0x00	; 0
    2de8:	e1 f7       	brne	.-8      	; 0x2de2 <main+0x2b8>
    2dea:	00 c0       	rjmp	.+0      	; 0x2dec <main+0x2c2>
    2dec:	00 00       	nop
    2dee:	0f 90       	pop	r0
    2df0:	0f 90       	pop	r0
						_delay_ms(100);
						errorLED();
    2df2:	3d d1       	rcall	.+634    	; 0x306e <errorLED>
					}
    2df4:	f0 cf       	rjmp	.-32     	; 0x2dd6 <main+0x2ac>
				}
				if (f_close(&file_power) != FR_OK){
    2df6:	87 e8       	ldi	r24, 0x87	; 135
    2df8:	93 e0       	ldi	r25, 0x03	; 3
    2dfa:	7a de       	rcall	.-780    	; 0x2af0 <f_close>
    2dfc:	88 23       	and	r24, r24
    2dfe:	91 f0       	breq	.+36     	; 0x2e24 <main+0x2fa>
					while (1) {
						printf("\r\nCouldn't close SD Card.");
    2e00:	02 eb       	ldi	r16, 0xB2	; 178
    2e02:	11 e0       	ldi	r17, 0x01	; 1
    2e04:	1f 93       	push	r17
    2e06:	0f 93       	push	r16
    2e08:	92 d3       	rcall	.+1828   	; 0x352e <printf>
    2e0a:	9f ef       	ldi	r25, 0xFF	; 255
    2e0c:	a0 e7       	ldi	r26, 0x70	; 112
    2e0e:	b2 e0       	ldi	r27, 0x02	; 2
    2e10:	91 50       	subi	r25, 0x01	; 1
    2e12:	a0 40       	sbci	r26, 0x00	; 0
    2e14:	b0 40       	sbci	r27, 0x00	; 0
    2e16:	e1 f7       	brne	.-8      	; 0x2e10 <main+0x2e6>
    2e18:	00 c0       	rjmp	.+0      	; 0x2e1a <main+0x2f0>
    2e1a:	00 00       	nop
    2e1c:	0f 90       	pop	r0
    2e1e:	0f 90       	pop	r0
						_delay_ms(100);
						errorLED();
    2e20:	26 d1       	rcall	.+588    	; 0x306e <errorLED>
					}
    2e22:	f0 cf       	rjmp	.-32     	; 0x2e04 <main+0x2da>
				}
				if (f_close(&file_esc) != FR_OK){
    2e24:	8e ef       	ldi	r24, 0xFE	; 254
    2e26:	92 e0       	ldi	r25, 0x02	; 2
    2e28:	63 de       	rcall	.-826    	; 0x2af0 <f_close>
    2e2a:	88 23       	and	r24, r24
    2e2c:	91 f0       	breq	.+36     	; 0x2e52 <main+0x328>
					while (1) {
						printf("\r\nCouldn't close SD Card.");
    2e2e:	02 eb       	ldi	r16, 0xB2	; 178
    2e30:	11 e0       	ldi	r17, 0x01	; 1
    2e32:	1f 93       	push	r17
    2e34:	0f 93       	push	r16
    2e36:	7b d3       	rcall	.+1782   	; 0x352e <printf>
    2e38:	2f ef       	ldi	r18, 0xFF	; 255
    2e3a:	80 e7       	ldi	r24, 0x70	; 112
    2e3c:	92 e0       	ldi	r25, 0x02	; 2
    2e3e:	21 50       	subi	r18, 0x01	; 1
    2e40:	80 40       	sbci	r24, 0x00	; 0
    2e42:	90 40       	sbci	r25, 0x00	; 0
    2e44:	e1 f7       	brne	.-8      	; 0x2e3e <main+0x314>
    2e46:	00 c0       	rjmp	.+0      	; 0x2e48 <main+0x31e>
    2e48:	00 00       	nop
    2e4a:	0f 90       	pop	r0
    2e4c:	0f 90       	pop	r0
						_delay_ms(100);
						errorLED();
    2e4e:	0f d1       	rcall	.+542    	; 0x306e <errorLED>
					}
    2e50:	f0 cf       	rjmp	.-32     	; 0x2e32 <main+0x308>
				}
				f_mount(0,0);
    2e52:	60 e0       	ldi	r22, 0x00	; 0
    2e54:	70 e0       	ldi	r23, 0x00	; 0
    2e56:	80 e0       	ldi	r24, 0x00	; 0
    2e58:	0a db       	rcall	.-2540   	; 0x246e <f_mount>
				printf("\r\nSD Card closed.");
    2e5a:	8c ec       	ldi	r24, 0xCC	; 204
    2e5c:	91 e0       	ldi	r25, 0x01	; 1
    2e5e:	9f 93       	push	r25
    2e60:	8f 93       	push	r24
    2e62:	65 d3       	rcall	.+1738   	; 0x352e <printf>
    2e64:	0f 90       	pop	r0
    2e66:	0f 90       	pop	r0
				
				SDCard_closed = TRUE;
    2e68:	11 e0       	ldi	r17, 0x01	; 1
			}
		}
		asm("sleep");
    2e6a:	88 95       	sleep
    }
    2e6c:	d1 ce       	rjmp	.-606    	; 0x2c10 <main+0xe6>

00002e6e <__vector_32>:
}

ISR(USART1_RX_vect) {
    2e6e:	1f 92       	push	r1
    2e70:	0f 92       	push	r0
    2e72:	0f b6       	in	r0, 0x3f	; 63
    2e74:	0f 92       	push	r0
    2e76:	11 24       	eor	r1, r1
    2e78:	0b b6       	in	r0, 0x3b	; 59
    2e7a:	0f 92       	push	r0
    2e7c:	2f 93       	push	r18
    2e7e:	3f 93       	push	r19
    2e80:	4f 93       	push	r20
    2e82:	5f 93       	push	r21
    2e84:	6f 93       	push	r22
    2e86:	7f 93       	push	r23
    2e88:	8f 93       	push	r24
    2e8a:	9f 93       	push	r25
    2e8c:	af 93       	push	r26
    2e8e:	bf 93       	push	r27
    2e90:	cf 93       	push	r28
    2e92:	ef 93       	push	r30
    2e94:	ff 93       	push	r31
	unsigned char c = USART1_Receive();
    2e96:	a5 d2       	rcall	.+1354   	; 0x33e2 <USART1_Receive>
    2e98:	c8 2f       	mov	r28, r24
	printf("\r\n%c", c);
    2e9a:	1f 92       	push	r1
    2e9c:	8f 93       	push	r24
    2e9e:	8e ed       	ldi	r24, 0xDE	; 222
    2ea0:	91 e0       	ldi	r25, 0x01	; 1
    2ea2:	9f 93       	push	r25
    2ea4:	8f 93       	push	r24
    2ea6:	43 d3       	rcall	.+1670   	; 0x352e <printf>
	switch(gps_index){
    2ea8:	0f 90       	pop	r0
    2eaa:	0f 90       	pop	r0
    2eac:	0f 90       	pop	r0
    2eae:	0f 90       	pop	r0
    2eb0:	90 91 cc 02 	lds	r25, 0x02CC
    2eb4:	91 30       	cpi	r25, 0x01	; 1
    2eb6:	99 f0       	breq	.+38     	; 0x2ede <__vector_32+0x70>
    2eb8:	20 f0       	brcs	.+8      	; 0x2ec2 <__vector_32+0x54>
    2eba:	92 30       	cpi	r25, 0x02	; 2
    2ebc:	09 f4       	brne	.+2      	; 0x2ec0 <__vector_32+0x52>
    2ebe:	43 c0       	rjmp	.+134    	; 0x2f46 <__vector_32+0xd8>
    2ec0:	9b c0       	rjmp	.+310    	; 0x2ff8 <__vector_32+0x18a>
		case ID:
			if(c == '$')
    2ec2:	c4 32       	cpi	r28, 0x24	; 36
    2ec4:	09 f0       	breq	.+2      	; 0x2ec8 <__vector_32+0x5a>
    2ec6:	98 c0       	rjmp	.+304    	; 0x2ff8 <__vector_32+0x18a>
			{
				gps_index = GPGGA;
    2ec8:	81 e0       	ldi	r24, 0x01	; 1
    2eca:	80 93 cc 02 	sts	0x02CC, r24
				printf("\r\ngps_index = GPGGA");
    2ece:	83 ee       	ldi	r24, 0xE3	; 227
    2ed0:	91 e0       	ldi	r25, 0x01	; 1
    2ed2:	9f 93       	push	r25
    2ed4:	8f 93       	push	r24
    2ed6:	2b d3       	rcall	.+1622   	; 0x352e <printf>
    2ed8:	0f 90       	pop	r0
    2eda:	0f 90       	pop	r0
    2edc:	8d c0       	rjmp	.+282    	; 0x2ff8 <__vector_32+0x18a>
			}
			break;
		case GPGGA:
			if (c == ',')
    2ede:	cc 32       	cpi	r28, 0x2C	; 44
    2ee0:	39 f5       	brne	.+78     	; 0x2f30 <__vector_32+0xc2>
			{
				if (strcmp(bufferIn, "GPGGA") == 0)
    2ee2:	61 ef       	ldi	r22, 0xF1	; 241
    2ee4:	71 e0       	ldi	r23, 0x01	; 1
    2ee6:	86 e2       	ldi	r24, 0x26	; 38
    2ee8:	93 e0       	ldi	r25, 0x03	; 3
    2eea:	c7 d2       	rcall	.+1422   	; 0x347a <strcmp>
    2eec:	89 2b       	or	r24, r25
    2eee:	69 f4       	brne	.+26     	; 0x2f0a <__vector_32+0x9c>
				{
					gps_index = MESSAGE;
    2ef0:	82 e0       	ldi	r24, 0x02	; 2
    2ef2:	80 93 cc 02 	sts	0x02CC, r24
					msg_done = false;
    2ef6:	10 92 cb 02 	sts	0x02CB, r1
					printf("\r\ngps_index = MESSAGE");
    2efa:	87 ef       	ldi	r24, 0xF7	; 247
    2efc:	91 e0       	ldi	r25, 0x01	; 1
    2efe:	9f 93       	push	r25
    2f00:	8f 93       	push	r24
    2f02:	15 d3       	rcall	.+1578   	; 0x352e <printf>
    2f04:	0f 90       	pop	r0
    2f06:	0f 90       	pop	r0
    2f08:	09 c0       	rjmp	.+18     	; 0x2f1c <__vector_32+0xae>
				}
				else
				{
					gps_index = ID;
    2f0a:	10 92 cc 02 	sts	0x02CC, r1
					printf("\r\ngps_index = ID");
    2f0e:	8d e0       	ldi	r24, 0x0D	; 13
    2f10:	92 e0       	ldi	r25, 0x02	; 2
    2f12:	9f 93       	push	r25
    2f14:	8f 93       	push	r24
    2f16:	0b d3       	rcall	.+1558   	; 0x352e <printf>
    2f18:	0f 90       	pop	r0
    2f1a:	0f 90       	pop	r0
				}
				memset(bufferIn, 0, sizeof bufferIn);
    2f1c:	82 e3       	ldi	r24, 0x32	; 50
    2f1e:	e6 e2       	ldi	r30, 0x26	; 38
    2f20:	f3 e0       	ldi	r31, 0x03	; 3
    2f22:	df 01       	movw	r26, r30
    2f24:	1d 92       	st	X+, r1
    2f26:	8a 95       	dec	r24
    2f28:	e9 f7       	brne	.-6      	; 0x2f24 <__vector_32+0xb6>
				counter = 0;
    2f2a:	10 92 ce 02 	sts	0x02CE, r1
    2f2e:	64 c0       	rjmp	.+200    	; 0x2ff8 <__vector_32+0x18a>
			} 
			else
			{
				bufferIn[counter] = c;
    2f30:	80 91 ce 02 	lds	r24, 0x02CE
    2f34:	e8 2f       	mov	r30, r24
    2f36:	f0 e0       	ldi	r31, 0x00	; 0
    2f38:	ea 5d       	subi	r30, 0xDA	; 218
    2f3a:	fc 4f       	sbci	r31, 0xFC	; 252
    2f3c:	c0 83       	st	Z, r28
				counter++;
    2f3e:	8f 5f       	subi	r24, 0xFF	; 255
    2f40:	80 93 ce 02 	sts	0x02CE, r24
    2f44:	59 c0       	rjmp	.+178    	; 0x2ff8 <__vector_32+0x18a>
			}
			break;
		case MESSAGE:
			if (c == ',')
    2f46:	cc 32       	cpi	r28, 0x2C	; 44
    2f48:	09 f0       	breq	.+2      	; 0x2f4c <__vector_32+0xde>
    2f4a:	4c c0       	rjmp	.+152    	; 0x2fe4 <__vector_32+0x176>
			{
				//uart_puts0(bufferIn);
				//uart_putc0('\n');
				switch(gps_msg_index){
    2f4c:	c0 91 cd 02 	lds	r28, 0x02CD
    2f50:	8c 2f       	mov	r24, r28
    2f52:	90 e0       	ldi	r25, 0x00	; 0
    2f54:	87 30       	cpi	r24, 0x07	; 7
    2f56:	91 05       	cpc	r25, r1
    2f58:	80 f5       	brcc	.+96     	; 0x2fba <__vector_32+0x14c>
    2f5a:	fc 01       	movw	r30, r24
    2f5c:	e7 5a       	subi	r30, 0xA7	; 167
    2f5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f60:	6a c2       	rjmp	.+1236   	; 0x3436 <__tablejump2__>
					case TIME:
						strcpy(gps_time, bufferIn);
    2f62:	66 e2       	ldi	r22, 0x26	; 38
    2f64:	73 e0       	ldi	r23, 0x03	; 3
    2f66:	8e e1       	ldi	r24, 0x1E	; 30
    2f68:	93 e0       	ldi	r25, 0x03	; 3
    2f6a:	90 d2       	rcall	.+1312   	; 0x348c <strcpy>
						break;
    2f6c:	26 c0       	rjmp	.+76     	; 0x2fba <__vector_32+0x14c>
					case LAT:
						strcpy(gps_lat, bufferIn);
    2f6e:	66 e2       	ldi	r22, 0x26	; 38
    2f70:	73 e0       	ldi	r23, 0x03	; 3
    2f72:	82 ef       	ldi	r24, 0xF2	; 242
    2f74:	92 e0       	ldi	r25, 0x02	; 2
    2f76:	8a d2       	rcall	.+1300   	; 0x348c <strcpy>
						break;
    2f78:	20 c0       	rjmp	.+64     	; 0x2fba <__vector_32+0x14c>
					case LAT_IND:
						strcpy(gps_lat_ind, bufferIn);
    2f7a:	66 e2       	ldi	r22, 0x26	; 38
    2f7c:	73 e0       	ldi	r23, 0x03	; 3
    2f7e:	80 ef       	ldi	r24, 0xF0	; 240
    2f80:	92 e0       	ldi	r25, 0x02	; 2
    2f82:	84 d2       	rcall	.+1288   	; 0x348c <strcpy>
						break;
    2f84:	1a c0       	rjmp	.+52     	; 0x2fba <__vector_32+0x14c>
					case LONGT:
						strcpy(gps_long, bufferIn);
    2f86:	66 e2       	ldi	r22, 0x26	; 38
    2f88:	73 e0       	ldi	r23, 0x03	; 3
    2f8a:	8b e5       	ldi	r24, 0x5B	; 91
    2f8c:	93 e0       	ldi	r25, 0x03	; 3
    2f8e:	7e d2       	rcall	.+1276   	; 0x348c <strcpy>
						break;
    2f90:	14 c0       	rjmp	.+40     	; 0x2fba <__vector_32+0x14c>
					case LONG_IND:
						strcpy(gps_long_ind, bufferIn);
    2f92:	66 e2       	ldi	r22, 0x26	; 38
    2f94:	73 e0       	ldi	r23, 0x03	; 3
    2f96:	8c ef       	ldi	r24, 0xFC	; 252
    2f98:	92 e0       	ldi	r25, 0x02	; 2
    2f9a:	78 d2       	rcall	.+1264   	; 0x348c <strcpy>
						break;
    2f9c:	0e c0       	rjmp	.+28     	; 0x2fba <__vector_32+0x14c>
					case POSFIX:
						strcpy(gps_pos_fix, bufferIn);
    2f9e:	66 e2       	ldi	r22, 0x26	; 38
    2fa0:	73 e0       	ldi	r23, 0x03	; 3
    2fa2:	85 e8       	ldi	r24, 0x85	; 133
    2fa4:	93 e0       	ldi	r25, 0x03	; 3
    2fa6:	72 d2       	rcall	.+1252   	; 0x348c <strcpy>
						break;
    2fa8:	08 c0       	rjmp	.+16     	; 0x2fba <__vector_32+0x14c>
					case NRSAT:
						strcpy(gps_nr_sat, bufferIn);
    2faa:	66 e2       	ldi	r22, 0x26	; 38
    2fac:	73 e0       	ldi	r23, 0x03	; 3
    2fae:	88 e5       	ldi	r24, 0x58	; 88
    2fb0:	93 e0       	ldi	r25, 0x03	; 3
    2fb2:	6c d2       	rcall	.+1240   	; 0x348c <strcpy>
						msg_done = true;
    2fb4:	81 e0       	ldi	r24, 0x01	; 1
    2fb6:	80 93 cb 02 	sts	0x02CB, r24
						break;
				}
				memset(bufferIn, 0, sizeof bufferIn);
    2fba:	82 e3       	ldi	r24, 0x32	; 50
    2fbc:	e6 e2       	ldi	r30, 0x26	; 38
    2fbe:	f3 e0       	ldi	r31, 0x03	; 3
    2fc0:	df 01       	movw	r26, r30
    2fc2:	1d 92       	st	X+, r1
    2fc4:	8a 95       	dec	r24
    2fc6:	e9 f7       	brne	.-6      	; 0x2fc2 <__vector_32+0x154>
				counter = 0;
    2fc8:	10 92 ce 02 	sts	0x02CE, r1
				gps_msg_index++;
    2fcc:	cf 5f       	subi	r28, 0xFF	; 255
    2fce:	c0 93 cd 02 	sts	0x02CD, r28
				if (msg_done)
    2fd2:	80 91 cb 02 	lds	r24, 0x02CB
    2fd6:	88 23       	and	r24, r24
    2fd8:	79 f0       	breq	.+30     	; 0x2ff8 <__vector_32+0x18a>
				{
					gps_index = ID;
    2fda:	10 92 cc 02 	sts	0x02CC, r1
					gps_msg_index = TIME;
    2fde:	10 92 cd 02 	sts	0x02CD, r1
    2fe2:	0a c0       	rjmp	.+20     	; 0x2ff8 <__vector_32+0x18a>
				}
			}
			else
			{
				bufferIn[counter] = c;
    2fe4:	80 91 ce 02 	lds	r24, 0x02CE
    2fe8:	e8 2f       	mov	r30, r24
    2fea:	f0 e0       	ldi	r31, 0x00	; 0
    2fec:	ea 5d       	subi	r30, 0xDA	; 218
    2fee:	fc 4f       	sbci	r31, 0xFC	; 252
    2ff0:	c0 83       	st	Z, r28
				counter++;
    2ff2:	8f 5f       	subi	r24, 0xFF	; 255
    2ff4:	80 93 ce 02 	sts	0x02CE, r24
			}
			break;
	}	
}
    2ff8:	ff 91       	pop	r31
    2ffa:	ef 91       	pop	r30
    2ffc:	cf 91       	pop	r28
    2ffe:	bf 91       	pop	r27
    3000:	af 91       	pop	r26
    3002:	9f 91       	pop	r25
    3004:	8f 91       	pop	r24
    3006:	7f 91       	pop	r23
    3008:	6f 91       	pop	r22
    300a:	5f 91       	pop	r21
    300c:	4f 91       	pop	r20
    300e:	3f 91       	pop	r19
    3010:	2f 91       	pop	r18
    3012:	0f 90       	pop	r0
    3014:	0b be       	out	0x3b, r0	; 59
    3016:	0f 90       	pop	r0
    3018:	0f be       	out	0x3f, r0	; 63
    301a:	0f 90       	pop	r0
    301c:	1f 90       	pop	r1
    301e:	18 95       	reti

00003020 <SDCard_init>:
}

void SDCard_init(){
	//0 --> Input
	//1 --> Output
	DDRB = 0b11100111;
    3020:	87 ee       	ldi	r24, 0xE7	; 231
    3022:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1<<5)|(1<<6)|(1<<7);
    3024:	85 b1       	in	r24, 0x05	; 5
    3026:	80 6e       	ori	r24, 0xE0	; 224
    3028:	85 b9       	out	0x05, r24	; 5
	DDRD = 0b00000000;
    302a:	1a b8       	out	0x0a, r1	; 10
	DDRF = 0b00000000;
    302c:	10 ba       	out	0x10, r1	; 16
	DDRE = 0b00000000;
    302e:	1d b8       	out	0x0d, r1	; 13
	set_bit(PORTE, PE3);
    3030:	73 9a       	sbi	0x0e, 3	; 14
	
	//Set Up the SPI in Master Mode
	DDRB |= (1<<2)|(1<<1)|(1<<0);
    3032:	84 b1       	in	r24, 0x04	; 4
    3034:	87 60       	ori	r24, 0x07	; 7
    3036:	84 b9       	out	0x04, r24	; 4
	SPCR |= (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    3038:	8c b5       	in	r24, 0x2c	; 44
    303a:	81 65       	ori	r24, 0x51	; 81
    303c:	8c bd       	out	0x2c, r24	; 44
	
	USART0_Init(MYUBRR0);
    303e:	8c e0       	ldi	r24, 0x0C	; 12
    3040:	90 e0       	ldi	r25, 0x00	; 0
    3042:	b4 d1       	rcall	.+872    	; 0x33ac <USART0_Init>
	USART1_Init(MYUBRR1);
    3044:	87 e6       	ldi	r24, 0x67	; 103
    3046:	90 e0       	ldi	r25, 0x00	; 0
    3048:	c1 d1       	rcall	.+898    	; 0x33cc <USART1_Init>
	can_init();
    304a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <can_init>
	sei();
    304e:	78 94       	sei
    3050:	08 95       	ret

00003052 <initializeFAT>:

uint8_t initializeFAT(FATFS* fs){
	DSTATUS driveStatus;
	
	// Mount and verify disk type
	if (f_mount(0, fs) != FR_OK){
    3052:	bc 01       	movw	r22, r24
    3054:	80 e0       	ldi	r24, 0x00	; 0
    3056:	0b da       	rcall	.-3050   	; 0x246e <f_mount>
    3058:	81 11       	cpse	r24, r1
    305a:	05 c0       	rjmp	.+10     	; 0x3066 <initializeFAT+0x14>
		// Report error
		return 2;
	}
	
	driveStatus = disk_initialize(0);
    305c:	0e 94 1f 03 	call	0x63e	; 0x63e <disk_initialize>
    3060:	87 70       	andi	r24, 0x07	; 7
		// Report error
		return 2;
	}
	
	// Verify that disk is not write protected
	if (driveStatus & STA_PROTECT){
    3062:	19 f4       	brne	.+6      	; 0x306a <initializeFAT+0x18>
    3064:	08 95       	ret
	DSTATUS driveStatus;
	
	// Mount and verify disk type
	if (f_mount(0, fs) != FR_OK){
		// Report error
		return 2;
    3066:	82 e0       	ldi	r24, 0x02	; 2
    3068:	08 95       	ret
	}
	
	// Verify that disk is not write protected
	if (driveStatus & STA_PROTECT){
		// Report error
		return 2;
    306a:	82 e0       	ldi	r24, 0x02	; 2
	}
	
	return 0;
}
    306c:	08 95       	ret

0000306e <errorLED>:
	
//Turns on the error signal
void errorLED( void){
	REDLEDON;
    306e:	2d 98       	cbi	0x05, 5	; 5
    3070:	2f eb       	ldi	r18, 0xBF	; 191
    3072:	84 ed       	ldi	r24, 0xD4	; 212
    3074:	91 e0       	ldi	r25, 0x01	; 1
    3076:	21 50       	subi	r18, 0x01	; 1
    3078:	80 40       	sbci	r24, 0x00	; 0
    307a:	90 40       	sbci	r25, 0x00	; 0
    307c:	e1 f7       	brne	.-8      	; 0x3076 <errorLED+0x8>
    307e:	00 c0       	rjmp	.+0      	; 0x3080 <errorLED+0x12>
    3080:	00 00       	nop
	_delay_ms(75);
	REDLEDOFF;
    3082:	2d 9a       	sbi	0x05, 5	; 5
    3084:	2f eb       	ldi	r18, 0xBF	; 191
    3086:	84 ed       	ldi	r24, 0xD4	; 212
    3088:	91 e0       	ldi	r25, 0x01	; 1
    308a:	21 50       	subi	r18, 0x01	; 1
    308c:	80 40       	sbci	r24, 0x00	; 0
    308e:	90 40       	sbci	r25, 0x00	; 0
    3090:	e1 f7       	brne	.-8      	; 0x308a <errorLED+0x1c>
    3092:	00 c0       	rjmp	.+0      	; 0x3094 <errorLED+0x26>
    3094:	00 00       	nop
    3096:	08 95       	ret

00003098 <SDCard_esc>:
				SDCard_esc(p);
			break;
	}
}

void SDCard_esc(CAN_packet *p) {
    3098:	cf 93       	push	r28
    309a:	df 93       	push	r29
	if (FINISHED_LISTENING) {
    309c:	20 91 0a 01 	lds	r18, 0x010A
    30a0:	21 11       	cpse	r18, r1
    30a2:	56 c0       	rjmp	.+172    	; 0x3150 <SDCard_esc+0xb8>
		//do nothing
	} else if (FINISHED_WRITING_ESC && !FINISHED_LISTENING) {
    30a4:	20 91 09 01 	lds	r18, 0x0109
    30a8:	22 23       	and	r18, r18
    30aa:	09 f4       	brne	.+2      	; 0x30ae <SDCard_esc+0x16>
    30ac:	51 c0       	rjmp	.+162    	; 0x3150 <SDCard_esc+0xb8>
    30ae:	fc 01       	movw	r30, r24
		cli();
    30b0:	f8 94       	cli
		FINISHED_WRITING_ESC = FALSE;
    30b2:	10 92 09 01 	sts	0x0109, r1
		// write stuff
		BLUELEDON;
    30b6:	2f 98       	cbi	0x05, 7	; 5
		GREENLEDOFF;
    30b8:	2e 9a       	sbi	0x05, 6	; 5
		int numBytes = 20;
		uint16_t rpm;
		rpm = ((p->data[3])<<8);
    30ba:	86 81       	ldd	r24, Z+6	; 0x06
    30bc:	90 e0       	ldi	r25, 0x00	; 0
    30be:	98 2f       	mov	r25, r24
    30c0:	88 27       	eor	r24, r24
		rpm |= (p->data[4]);
    30c2:	27 81       	ldd	r18, Z+7	; 0x07
    30c4:	82 2b       	or	r24, r18
		sprintf(buf_esc,"%d %d %d %d\r\n", p->data[0], p->data[1], p->data[2], rpm);
    30c6:	9f 93       	push	r25
    30c8:	8f 93       	push	r24
    30ca:	85 81       	ldd	r24, Z+5	; 0x05
    30cc:	1f 92       	push	r1
    30ce:	8f 93       	push	r24
    30d0:	84 81       	ldd	r24, Z+4	; 0x04
    30d2:	1f 92       	push	r1
    30d4:	8f 93       	push	r24
    30d6:	83 81       	ldd	r24, Z+3	; 0x03
    30d8:	1f 92       	push	r1
    30da:	8f 93       	push	r24
    30dc:	8e e1       	ldi	r24, 0x1E	; 30
    30de:	92 e0       	ldi	r25, 0x02	; 2
    30e0:	9f 93       	push	r25
    30e2:	8f 93       	push	r24
    30e4:	c7 ea       	ldi	r28, 0xA7	; 167
    30e6:	d3 e0       	ldi	r29, 0x03	; 3
    30e8:	df 93       	push	r29
    30ea:	cf 93       	push	r28
    30ec:	33 d2       	rcall	.+1126   	; 0x3554 <sprintf>
		
		printf("\r\nWriting %s", buf_esc);
    30ee:	df 93       	push	r29
    30f0:	cf 93       	push	r28
    30f2:	8c e2       	ldi	r24, 0x2C	; 44
    30f4:	92 e0       	ldi	r25, 0x02	; 2
    30f6:	9f 93       	push	r25
    30f8:	8f 93       	push	r24
    30fa:	19 d2       	rcall	.+1074   	; 0x352e <printf>
		if (f_write(&file_esc, &buf_esc, numBytes, &bytesWritten_esc) != FR_OK) {
    30fc:	20 ed       	ldi	r18, 0xD0	; 208
    30fe:	33 e0       	ldi	r19, 0x03	; 3
    3100:	44 e1       	ldi	r20, 0x14	; 20
    3102:	50 e0       	ldi	r21, 0x00	; 0
    3104:	be 01       	movw	r22, r28
    3106:	8e ef       	ldi	r24, 0xFE	; 254
    3108:	92 e0       	ldi	r25, 0x02	; 2
    310a:	fe da       	rcall	.-2564   	; 0x2708 <f_write>
    310c:	2d b7       	in	r18, 0x3d	; 61
    310e:	3e b7       	in	r19, 0x3e	; 62
    3110:	20 5f       	subi	r18, 0xF0	; 240
    3112:	3f 4f       	sbci	r19, 0xFF	; 255
    3114:	0f b6       	in	r0, 0x3f	; 63
    3116:	f8 94       	cli
    3118:	3e bf       	out	0x3e, r19	; 62
    311a:	0f be       	out	0x3f, r0	; 63
    311c:	2d bf       	out	0x3d, r18	; 61
    311e:	88 23       	and	r24, r24
    3120:	91 f0       	breq	.+36     	; 0x3146 <SDCard_esc+0xae>
			while(1) {
				printf("\r\nCouldnt write esc buffer");
    3122:	c9 e3       	ldi	r28, 0x39	; 57
    3124:	d2 e0       	ldi	r29, 0x02	; 2
    3126:	df 93       	push	r29
    3128:	cf 93       	push	r28
    312a:	01 d2       	rcall	.+1026   	; 0x352e <printf>
    312c:	9f e7       	ldi	r25, 0x7F	; 127
    312e:	28 e3       	ldi	r18, 0x38	; 56
    3130:	31 e0       	ldi	r19, 0x01	; 1
    3132:	91 50       	subi	r25, 0x01	; 1
    3134:	20 40       	sbci	r18, 0x00	; 0
    3136:	30 40       	sbci	r19, 0x00	; 0
    3138:	e1 f7       	brne	.-8      	; 0x3132 <SDCard_esc+0x9a>
    313a:	00 c0       	rjmp	.+0      	; 0x313c <SDCard_esc+0xa4>
    313c:	00 00       	nop
    313e:	0f 90       	pop	r0
    3140:	0f 90       	pop	r0
				_delay_ms(50);
				errorLED();
    3142:	95 df       	rcall	.-214    	; 0x306e <errorLED>
			}
    3144:	f0 cf       	rjmp	.-32     	; 0x3126 <SDCard_esc+0x8e>
		}
		BLUELEDOFF;
    3146:	2f 9a       	sbi	0x05, 7	; 5
		FINISHED_WRITING_ESC = TRUE;
    3148:	81 e0       	ldi	r24, 0x01	; 1
    314a:	80 93 09 01 	sts	0x0109, r24
		sei();
    314e:	78 94       	sei
	}
}
    3150:	df 91       	pop	r29
    3152:	cf 91       	pop	r28
    3154:	08 95       	ret

00003156 <SDCard_power>:

void SDCard_power(CAN_packet *p) {
    3156:	0f 93       	push	r16
    3158:	1f 93       	push	r17
    315a:	cf 93       	push	r28
    315c:	df 93       	push	r29
    315e:	fc 01       	movw	r30, r24
	cli();
    3160:	f8 94       	cli
	FINISHED_WRITING_POWER = FALSE;
    3162:	10 92 08 01 	sts	0x0108, r1
	// write stuff
	BLUELEDON;
    3166:	2f 98       	cbi	0x05, 7	; 5
	GREENLEDOFF;
    3168:	2e 9a       	sbi	0x05, 6	; 5
	int numBytes = 13;
	uint16_t voltage;
	voltage = ((p->data[0])<<8);
    316a:	03 81       	ldd	r16, Z+3	; 0x03
    316c:	10 e0       	ldi	r17, 0x00	; 0
    316e:	10 2f       	mov	r17, r16
    3170:	00 27       	eor	r16, r16
	voltage |= (p->data[1]);
    3172:	84 81       	ldd	r24, Z+4	; 0x04
    3174:	08 2b       	or	r16, r24
	uint16_t current;
	current = ((p->data[2])<<8);
    3176:	c5 81       	ldd	r28, Z+5	; 0x05
    3178:	d0 e0       	ldi	r29, 0x00	; 0
    317a:	dc 2f       	mov	r29, r28
    317c:	cc 27       	eor	r28, r28
	current |= (p->data[3]);	
    317e:	86 81       	ldd	r24, Z+6	; 0x06
    3180:	c8 2b       	or	r28, r24
	printf("\r\nVoltage %d current %d", voltage, current);
    3182:	df 93       	push	r29
    3184:	cf 93       	push	r28
    3186:	1f 93       	push	r17
    3188:	0f 93       	push	r16
    318a:	84 e5       	ldi	r24, 0x54	; 84
    318c:	92 e0       	ldi	r25, 0x02	; 2
    318e:	9f 93       	push	r25
    3190:	8f 93       	push	r24
    3192:	cd d1       	rcall	.+922    	; 0x352e <printf>
	sprintf(buf_power,"%d %d\r\n", current, voltage);
    3194:	1f 93       	push	r17
    3196:	0f 93       	push	r16
    3198:	df 93       	push	r29
    319a:	cf 93       	push	r28
    319c:	84 e2       	ldi	r24, 0x24	; 36
    319e:	92 e0       	ldi	r25, 0x02	; 2
    31a0:	9f 93       	push	r25
    31a2:	8f 93       	push	r24
    31a4:	8a eb       	ldi	r24, 0xBA	; 186
    31a6:	93 e0       	ldi	r25, 0x03	; 3
    31a8:	9f 93       	push	r25
    31aa:	8f 93       	push	r24
    31ac:	d3 d1       	rcall	.+934    	; 0x3554 <sprintf>

	if (f_write(&file_power, &buf_power, numBytes, &bytesWritten_power) != FR_OK) {
    31ae:	29 ec       	ldi	r18, 0xC9	; 201
    31b0:	33 e0       	ldi	r19, 0x03	; 3
    31b2:	4d e0       	ldi	r20, 0x0D	; 13
    31b4:	50 e0       	ldi	r21, 0x00	; 0
    31b6:	6a eb       	ldi	r22, 0xBA	; 186
    31b8:	73 e0       	ldi	r23, 0x03	; 3
    31ba:	87 e8       	ldi	r24, 0x87	; 135
    31bc:	93 e0       	ldi	r25, 0x03	; 3
    31be:	a4 da       	rcall	.-2744   	; 0x2708 <f_write>
    31c0:	2d b7       	in	r18, 0x3d	; 61
    31c2:	3e b7       	in	r19, 0x3e	; 62
    31c4:	22 5f       	subi	r18, 0xF2	; 242
    31c6:	3f 4f       	sbci	r19, 0xFF	; 255
    31c8:	0f b6       	in	r0, 0x3f	; 63
    31ca:	f8 94       	cli
    31cc:	3e bf       	out	0x3e, r19	; 62
    31ce:	0f be       	out	0x3f, r0	; 63
    31d0:	2d bf       	out	0x3d, r18	; 61
    31d2:	88 23       	and	r24, r24
    31d4:	91 f0       	breq	.+36     	; 0x31fa <SDCard_power+0xa4>
		while(1) {
			printf("\r\nCouldnt write power buffer");
    31d6:	cc e6       	ldi	r28, 0x6C	; 108
    31d8:	d2 e0       	ldi	r29, 0x02	; 2
    31da:	df 93       	push	r29
    31dc:	cf 93       	push	r28
    31de:	a7 d1       	rcall	.+846    	; 0x352e <printf>
    31e0:	9f e7       	ldi	r25, 0x7F	; 127
    31e2:	28 e3       	ldi	r18, 0x38	; 56
    31e4:	31 e0       	ldi	r19, 0x01	; 1
    31e6:	91 50       	subi	r25, 0x01	; 1
    31e8:	20 40       	sbci	r18, 0x00	; 0
    31ea:	30 40       	sbci	r19, 0x00	; 0
    31ec:	e1 f7       	brne	.-8      	; 0x31e6 <SDCard_power+0x90>
    31ee:	00 c0       	rjmp	.+0      	; 0x31f0 <SDCard_power+0x9a>
    31f0:	00 00       	nop
    31f2:	0f 90       	pop	r0
    31f4:	0f 90       	pop	r0
			_delay_ms(50);
			errorLED();
    31f6:	3b df       	rcall	.-394    	; 0x306e <errorLED>
		}
    31f8:	f0 cf       	rjmp	.-32     	; 0x31da <SDCard_power+0x84>
	}
	BLUELEDOFF;
    31fa:	2f 9a       	sbi	0x05, 7	; 5
	FINISHED_WRITING_POWER = TRUE;
    31fc:	81 e0       	ldi	r24, 0x01	; 1
    31fe:	80 93 08 01 	sts	0x0108, r24
	sei();
    3202:	78 94       	sei
}
    3204:	df 91       	pop	r29
    3206:	cf 91       	pop	r28
    3208:	1f 91       	pop	r17
    320a:	0f 91       	pop	r16
    320c:	08 95       	ret

0000320e <SDCard_sw>:

void SDCard_sw(CAN_packet *p) {
    320e:	0f 93       	push	r16
    3210:	1f 93       	push	r17
    3212:	cf 93       	push	r28
    3214:	df 93       	push	r29
	if(FINISHED_WRITING_SW) {
    3216:	20 91 07 01 	lds	r18, 0x0107
    321a:	22 23       	and	r18, r18
    321c:	09 f4       	brne	.+2      	; 0x3220 <SDCard_sw+0x12>
    321e:	49 c0       	rjmp	.+146    	; 0x32b2 <SDCard_sw+0xa4>
    3220:	fc 01       	movw	r30, r24
		cli();
    3222:	f8 94       	cli
		FINISHED_WRITING_SW = FALSE;
    3224:	10 92 07 01 	sts	0x0107, r1
		// write stuff
		BLUELEDON;
    3228:	2f 98       	cbi	0x05, 7	; 5
		GREENLEDOFF;
    322a:	2e 9a       	sbi	0x05, 6	; 5
		int numBytes = 5;
		
		sprintf(buf_sw,"%d\r\n", p->data[1]);
    322c:	84 81       	ldd	r24, Z+4	; 0x04
    322e:	1f 92       	push	r1
    3230:	8f 93       	push	r24
    3232:	87 e2       	ldi	r24, 0x27	; 39
    3234:	92 e0       	ldi	r25, 0x02	; 2
    3236:	9f 93       	push	r25
    3238:	8f 93       	push	r24
    323a:	8b ec       	ldi	r24, 0xCB	; 203
    323c:	93 e0       	ldi	r25, 0x03	; 3
    323e:	9f 93       	push	r25
    3240:	8f 93       	push	r24
    3242:	88 d1       	rcall	.+784    	; 0x3554 <sprintf>
		
		if (f_write(&file_sw, &buf_sw, numBytes, &bytesWritten_sw) != FR_OK) {
    3244:	27 ec       	ldi	r18, 0xC7	; 199
    3246:	33 e0       	ldi	r19, 0x03	; 3
    3248:	45 e0       	ldi	r20, 0x05	; 5
    324a:	50 e0       	ldi	r21, 0x00	; 0
    324c:	6b ec       	ldi	r22, 0xCB	; 203
    324e:	73 e0       	ldi	r23, 0x03	; 3
    3250:	85 e6       	ldi	r24, 0x65	; 101
    3252:	93 e0       	ldi	r25, 0x03	; 3
    3254:	59 da       	rcall	.-2894   	; 0x2708 <f_write>
    3256:	0f 90       	pop	r0
    3258:	0f 90       	pop	r0
    325a:	0f 90       	pop	r0
    325c:	0f 90       	pop	r0
    325e:	0f 90       	pop	r0
    3260:	0f 90       	pop	r0
    3262:	88 23       	and	r24, r24
    3264:	f9 f0       	breq	.+62     	; 0x32a4 <SDCard_sw+0x96>
			while(1) {
				printf("\r\nCouldnt write sw buffer");
    3266:	09 e8       	ldi	r16, 0x89	; 137
    3268:	12 e0       	ldi	r17, 0x02	; 2
				printf("\r\nTIMER0_SW_OVF %d", TIMER0_SW_OVF);
    326a:	c3 ea       	ldi	r28, 0xA3	; 163
    326c:	d2 e0       	ldi	r29, 0x02	; 2
		
		sprintf(buf_sw,"%d\r\n", p->data[1]);
		
		if (f_write(&file_sw, &buf_sw, numBytes, &bytesWritten_sw) != FR_OK) {
			while(1) {
				printf("\r\nCouldnt write sw buffer");
    326e:	1f 93       	push	r17
    3270:	0f 93       	push	r16
    3272:	5d d1       	rcall	.+698    	; 0x352e <printf>
				printf("\r\nTIMER0_SW_OVF %d", TIMER0_SW_OVF);
    3274:	80 91 d1 02 	lds	r24, 0x02D1
    3278:	1f 92       	push	r1
    327a:	8f 93       	push	r24
    327c:	df 93       	push	r29
    327e:	cf 93       	push	r28
    3280:	56 d1       	rcall	.+684    	; 0x352e <printf>
    3282:	9f e7       	ldi	r25, 0x7F	; 127
    3284:	28 e3       	ldi	r18, 0x38	; 56
    3286:	81 e0       	ldi	r24, 0x01	; 1
    3288:	91 50       	subi	r25, 0x01	; 1
    328a:	20 40       	sbci	r18, 0x00	; 0
    328c:	80 40       	sbci	r24, 0x00	; 0
    328e:	e1 f7       	brne	.-8      	; 0x3288 <SDCard_sw+0x7a>
    3290:	00 c0       	rjmp	.+0      	; 0x3292 <SDCard_sw+0x84>
    3292:	00 00       	nop
    3294:	0f 90       	pop	r0
    3296:	0f 90       	pop	r0
    3298:	0f 90       	pop	r0
    329a:	0f 90       	pop	r0
    329c:	0f 90       	pop	r0
    329e:	0f 90       	pop	r0
				_delay_ms(50);
				errorLED();
    32a0:	e6 de       	rcall	.-564    	; 0x306e <errorLED>
			}
    32a2:	e5 cf       	rjmp	.-54     	; 0x326e <SDCard_sw+0x60>
		}
		BLUELEDOFF;
    32a4:	2f 9a       	sbi	0x05, 7	; 5
		TIMER0_SW_OVF = FALSE;
    32a6:	10 92 d1 02 	sts	0x02D1, r1
		FINISHED_WRITING_SW = TRUE;
    32aa:	81 e0       	ldi	r24, 0x01	; 1
    32ac:	80 93 07 01 	sts	0x0107, r24
		sei();
    32b0:	78 94       	sei
	}
}
    32b2:	df 91       	pop	r29
    32b4:	cf 91       	pop	r28
    32b6:	1f 91       	pop	r17
    32b8:	0f 91       	pop	r16
    32ba:	08 95       	ret

000032bc <SDCard_callback>:
UINT bytesWritten_power;
UINT bytesWritten_esc;

void SDCard_callback(CAN_packet *p, unsigned char mob) {
	(void)mob;
	switch(p->id) {
    32bc:	fc 01       	movw	r30, r24
    32be:	20 81       	ld	r18, Z
    32c0:	31 81       	ldd	r19, Z+1	; 0x01
    32c2:	2d 30       	cpi	r18, 0x0D	; 13
    32c4:	31 05       	cpc	r19, r1
    32c6:	39 f0       	breq	.+14     	; 0x32d6 <SDCard_callback+0x1a>
    32c8:	2e 30       	cpi	r18, 0x0E	; 14
    32ca:	31 05       	cpc	r19, r1
    32cc:	c1 f0       	breq	.+48     	; 0x32fe <SDCard_callback+0x42>
    32ce:	2c 30       	cpi	r18, 0x0C	; 12
    32d0:	31 05       	cpc	r19, r1
    32d2:	e9 f4       	brne	.+58     	; 0x330e <SDCard_callback+0x52>
    32d4:	0a c0       	rjmp	.+20     	; 0x32ea <SDCard_callback+0x2e>
		case ID_steeringWheel:
			if(FINISHED_WRITING_SW && TIMER0_SW_OVF)
    32d6:	20 91 07 01 	lds	r18, 0x0107
    32da:	22 23       	and	r18, r18
    32dc:	c1 f0       	breq	.+48     	; 0x330e <SDCard_callback+0x52>
    32de:	20 91 d1 02 	lds	r18, 0x02D1
    32e2:	22 23       	and	r18, r18
    32e4:	a1 f0       	breq	.+40     	; 0x330e <SDCard_callback+0x52>
				SDCard_sw(p);
    32e6:	93 cf       	rjmp	.-218    	; 0x320e <SDCard_sw>
    32e8:	08 95       	ret
			break;
		case ID_power:
			if(FINISHED_WRITING_POWER && TIMER0_POWER_OVF)
    32ea:	20 91 08 01 	lds	r18, 0x0108
    32ee:	22 23       	and	r18, r18
    32f0:	71 f0       	breq	.+28     	; 0x330e <SDCard_callback+0x52>
    32f2:	20 91 d0 02 	lds	r18, 0x02D0
    32f6:	22 23       	and	r18, r18
    32f8:	51 f0       	breq	.+20     	; 0x330e <SDCard_callback+0x52>
				SDCard_power(p);
    32fa:	2d cf       	rjmp	.-422    	; 0x3156 <SDCard_power>
    32fc:	08 95       	ret
			break;
		case ID_esc_telemetry:
			if(FINISHED_WRITING_ESC && TIMER0_ESC_OVF)
    32fe:	20 91 09 01 	lds	r18, 0x0109
    3302:	22 23       	and	r18, r18
    3304:	21 f0       	breq	.+8      	; 0x330e <SDCard_callback+0x52>
    3306:	20 91 cf 02 	lds	r18, 0x02CF
    330a:	21 11       	cpse	r18, r1
				SDCard_esc(p);
    330c:	c5 ce       	rjmp	.-630    	; 0x3098 <SDCard_esc>
    330e:	08 95       	ret

00003310 <finishedLED>:
	REDLEDOFF;
	_delay_ms(75);
}

void finishedLED( void){
	GREENLEDON;
    3310:	2e 98       	cbi	0x05, 6	; 5
    3312:	2f ef       	ldi	r18, 0xFF	; 255
    3314:	83 ec       	ldi	r24, 0xC3	; 195
    3316:	99 e0       	ldi	r25, 0x09	; 9
    3318:	21 50       	subi	r18, 0x01	; 1
    331a:	80 40       	sbci	r24, 0x00	; 0
    331c:	90 40       	sbci	r25, 0x00	; 0
    331e:	e1 f7       	brne	.-8      	; 0x3318 <finishedLED+0x8>
    3320:	00 c0       	rjmp	.+0      	; 0x3322 <finishedLED+0x12>
    3322:	00 00       	nop
	_delay_ms(400);
	GREENLEDOFF;
    3324:	2e 9a       	sbi	0x05, 6	; 5
    3326:	2f ef       	ldi	r18, 0xFF	; 255
    3328:	83 ec       	ldi	r24, 0xC3	; 195
    332a:	99 e0       	ldi	r25, 0x09	; 9
    332c:	21 50       	subi	r18, 0x01	; 1
    332e:	80 40       	sbci	r24, 0x00	; 0
    3330:	90 40       	sbci	r25, 0x00	; 0
    3332:	e1 f7       	brne	.-8      	; 0x332c <finishedLED+0x1c>
    3334:	00 c0       	rjmp	.+0      	; 0x3336 <finishedLED+0x26>
    3336:	00 00       	nop
    3338:	08 95       	ret

0000333a <timer0_init>:
		1		1		0		clkIO/External clk on T0. Clk on falling edge
		1		1		1		clkIO/External clk on T0. Clk on rising edge
	*/
	
	/* clk/1024 */  //--> 32.768 ms
	set_bit(TCCR0A, CS02);
    333a:	84 b5       	in	r24, 0x24	; 36
    333c:	84 60       	ori	r24, 0x04	; 4
    333e:	84 bd       	out	0x24, r24	; 36
	set_bit(TCCR0A, CS00);
    3340:	84 b5       	in	r24, 0x24	; 36
    3342:	81 60       	ori	r24, 0x01	; 1
    3344:	84 bd       	out	0x24, r24	; 36
	/* Enable timer overflow */
	set_bit(TIMSK0, TOIE0);
    3346:	ee e6       	ldi	r30, 0x6E	; 110
    3348:	f0 e0       	ldi	r31, 0x00	; 0
    334a:	80 81       	ld	r24, Z
    334c:	81 60       	ori	r24, 0x01	; 1
    334e:	80 83       	st	Z, r24
    3350:	08 95       	ret

00003352 <__vector_17>:
}

ISR(TIMER0_OVF_vect) {
    3352:	1f 92       	push	r1
    3354:	0f 92       	push	r0
    3356:	0f b6       	in	r0, 0x3f	; 63
    3358:	0f 92       	push	r0
    335a:	11 24       	eor	r1, r1
    335c:	8f 93       	push	r24
	cli();
    335e:	f8 94       	cli
	TIMER0_SW_OVF = TIMER0_SW_OVF + 1;
    3360:	80 91 d1 02 	lds	r24, 0x02D1
    3364:	8f 5f       	subi	r24, 0xFF	; 255
    3366:	80 93 d1 02 	sts	0x02D1, r24
	TIMER0_POWER_OVF = TIMER0_POWER_OVF + 1;
    336a:	80 91 d0 02 	lds	r24, 0x02D0
    336e:	8f 5f       	subi	r24, 0xFF	; 255
    3370:	80 93 d0 02 	sts	0x02D0, r24
	TIMER0_ESC_OVF = TIMER0_ESC_OVF + 1;
    3374:	80 91 cf 02 	lds	r24, 0x02CF
    3378:	8f 5f       	subi	r24, 0xFF	; 255
    337a:	80 93 cf 02 	sts	0x02CF, r24
	sei();
    337e:	78 94       	sei
    3380:	8f 91       	pop	r24
    3382:	0f 90       	pop	r0
    3384:	0f be       	out	0x3f, r0	; 63
    3386:	0f 90       	pop	r0
    3388:	1f 90       	pop	r1
    338a:	18 95       	reti

0000338c <uart_putc0>:
void uart_puts1(const char *s )
{
	while (*s)
	uart_putc1(*s++);

}
    338c:	e0 ec       	ldi	r30, 0xC0	; 192
    338e:	f0 e0       	ldi	r31, 0x00	; 0
    3390:	90 81       	ld	r25, Z
    3392:	95 ff       	sbrs	r25, 5
    3394:	fd cf       	rjmp	.-6      	; 0x3390 <uart_putc0+0x4>
    3396:	80 93 c6 00 	sts	0x00C6, r24
    339a:	08 95       	ret

0000339c <USART0_Receive>:
    339c:	e0 ec       	ldi	r30, 0xC0	; 192
    339e:	f0 e0       	ldi	r31, 0x00	; 0
    33a0:	80 81       	ld	r24, Z
    33a2:	88 23       	and	r24, r24
    33a4:	ec f7       	brge	.-6      	; 0x33a0 <USART0_Receive+0x4>
    33a6:	80 91 c6 00 	lds	r24, 0x00C6
    33aa:	08 95       	ret

000033ac <USART0_Init>:
    33ac:	90 93 c5 00 	sts	0x00C5, r25
    33b0:	80 93 c4 00 	sts	0x00C4, r24
    33b4:	86 e0       	ldi	r24, 0x06	; 6
    33b6:	80 93 c2 00 	sts	0x00C2, r24
    33ba:	88 e1       	ldi	r24, 0x18	; 24
    33bc:	80 93 c1 00 	sts	0x00C1, r24
    33c0:	6e ec       	ldi	r22, 0xCE	; 206
    33c2:	79 e1       	ldi	r23, 0x19	; 25
    33c4:	86 ec       	ldi	r24, 0xC6	; 198
    33c6:	99 e1       	ldi	r25, 0x19	; 25
    33c8:	68 c0       	rjmp	.+208    	; 0x349a <fdevopen>
    33ca:	08 95       	ret

000033cc <USART1_Init>:
    33cc:	90 93 cd 00 	sts	0x00CD, r25
    33d0:	80 93 cc 00 	sts	0x00CC, r24
    33d4:	86 e0       	ldi	r24, 0x06	; 6
    33d6:	80 93 ca 00 	sts	0x00CA, r24
    33da:	88 e1       	ldi	r24, 0x18	; 24
    33dc:	80 93 c9 00 	sts	0x00C9, r24
    33e0:	08 95       	ret

000033e2 <USART1_Receive>:
unsigned char USART1_Receive (void)
{
	/*
	Wait for data to be received
	*/
	while	( ! (UCSR1A & (1<<RXC1)));
    33e2:	e8 ec       	ldi	r30, 0xC8	; 200
    33e4:	f0 e0       	ldi	r31, 0x00	; 0
    33e6:	80 81       	ld	r24, Z
    33e8:	88 23       	and	r24, r24
    33ea:	ec f7       	brge	.-6      	; 0x33e6 <USART1_Receive+0x4>
	/*
	Get and return received data from buffer
	*/
	return UDR1;
    33ec:	80 91 ce 00 	lds	r24, 0x00CE
}
    33f0:	08 95       	ret

000033f2 <__udivmodsi4>:
    33f2:	a1 e2       	ldi	r26, 0x21	; 33
    33f4:	1a 2e       	mov	r1, r26
    33f6:	aa 1b       	sub	r26, r26
    33f8:	bb 1b       	sub	r27, r27
    33fa:	fd 01       	movw	r30, r26
    33fc:	0d c0       	rjmp	.+26     	; 0x3418 <__udivmodsi4_ep>

000033fe <__udivmodsi4_loop>:
    33fe:	aa 1f       	adc	r26, r26
    3400:	bb 1f       	adc	r27, r27
    3402:	ee 1f       	adc	r30, r30
    3404:	ff 1f       	adc	r31, r31
    3406:	a2 17       	cp	r26, r18
    3408:	b3 07       	cpc	r27, r19
    340a:	e4 07       	cpc	r30, r20
    340c:	f5 07       	cpc	r31, r21
    340e:	20 f0       	brcs	.+8      	; 0x3418 <__udivmodsi4_ep>
    3410:	a2 1b       	sub	r26, r18
    3412:	b3 0b       	sbc	r27, r19
    3414:	e4 0b       	sbc	r30, r20
    3416:	f5 0b       	sbc	r31, r21

00003418 <__udivmodsi4_ep>:
    3418:	66 1f       	adc	r22, r22
    341a:	77 1f       	adc	r23, r23
    341c:	88 1f       	adc	r24, r24
    341e:	99 1f       	adc	r25, r25
    3420:	1a 94       	dec	r1
    3422:	69 f7       	brne	.-38     	; 0x33fe <__udivmodsi4_loop>
    3424:	60 95       	com	r22
    3426:	70 95       	com	r23
    3428:	80 95       	com	r24
    342a:	90 95       	com	r25
    342c:	9b 01       	movw	r18, r22
    342e:	ac 01       	movw	r20, r24
    3430:	bd 01       	movw	r22, r26
    3432:	cf 01       	movw	r24, r30
    3434:	08 95       	ret

00003436 <__tablejump2__>:
    3436:	ee 0f       	add	r30, r30
    3438:	ff 1f       	adc	r31, r31
    343a:	00 24       	eor	r0, r0
    343c:	00 1c       	adc	r0, r0
    343e:	0b be       	out	0x3b, r0	; 59
    3440:	07 90       	elpm	r0, Z+
    3442:	f6 91       	elpm	r31, Z
    3444:	e0 2d       	mov	r30, r0
    3446:	09 94       	ijmp

00003448 <__muluhisi3>:
    3448:	09 d0       	rcall	.+18     	; 0x345c <__umulhisi3>
    344a:	a5 9f       	mul	r26, r21
    344c:	90 0d       	add	r25, r0
    344e:	b4 9f       	mul	r27, r20
    3450:	90 0d       	add	r25, r0
    3452:	a4 9f       	mul	r26, r20
    3454:	80 0d       	add	r24, r0
    3456:	91 1d       	adc	r25, r1
    3458:	11 24       	eor	r1, r1
    345a:	08 95       	ret

0000345c <__umulhisi3>:
    345c:	a2 9f       	mul	r26, r18
    345e:	b0 01       	movw	r22, r0
    3460:	b3 9f       	mul	r27, r19
    3462:	c0 01       	movw	r24, r0
    3464:	a3 9f       	mul	r26, r19
    3466:	70 0d       	add	r23, r0
    3468:	81 1d       	adc	r24, r1
    346a:	11 24       	eor	r1, r1
    346c:	91 1d       	adc	r25, r1
    346e:	b2 9f       	mul	r27, r18
    3470:	70 0d       	add	r23, r0
    3472:	81 1d       	adc	r24, r1
    3474:	11 24       	eor	r1, r1
    3476:	91 1d       	adc	r25, r1
    3478:	08 95       	ret

0000347a <strcmp>:
    347a:	fb 01       	movw	r30, r22
    347c:	dc 01       	movw	r26, r24
    347e:	8d 91       	ld	r24, X+
    3480:	01 90       	ld	r0, Z+
    3482:	80 19       	sub	r24, r0
    3484:	01 10       	cpse	r0, r1
    3486:	d9 f3       	breq	.-10     	; 0x347e <strcmp+0x4>
    3488:	99 0b       	sbc	r25, r25
    348a:	08 95       	ret

0000348c <strcpy>:
    348c:	fb 01       	movw	r30, r22
    348e:	dc 01       	movw	r26, r24
    3490:	01 90       	ld	r0, Z+
    3492:	0d 92       	st	X+, r0
    3494:	00 20       	and	r0, r0
    3496:	e1 f7       	brne	.-8      	; 0x3490 <strcpy+0x4>
    3498:	08 95       	ret

0000349a <fdevopen>:
    349a:	0f 93       	push	r16
    349c:	1f 93       	push	r17
    349e:	cf 93       	push	r28
    34a0:	df 93       	push	r29
    34a2:	00 97       	sbiw	r24, 0x00	; 0
    34a4:	31 f4       	brne	.+12     	; 0x34b2 <fdevopen+0x18>
    34a6:	61 15       	cp	r22, r1
    34a8:	71 05       	cpc	r23, r1
    34aa:	19 f4       	brne	.+6      	; 0x34b2 <fdevopen+0x18>
    34ac:	80 e0       	ldi	r24, 0x00	; 0
    34ae:	90 e0       	ldi	r25, 0x00	; 0
    34b0:	39 c0       	rjmp	.+114    	; 0x3524 <fdevopen+0x8a>
    34b2:	8b 01       	movw	r16, r22
    34b4:	ec 01       	movw	r28, r24
    34b6:	6e e0       	ldi	r22, 0x0E	; 14
    34b8:	70 e0       	ldi	r23, 0x00	; 0
    34ba:	81 e0       	ldi	r24, 0x01	; 1
    34bc:	90 e0       	ldi	r25, 0x00	; 0
    34be:	67 d2       	rcall	.+1230   	; 0x398e <calloc>
    34c0:	fc 01       	movw	r30, r24
    34c2:	89 2b       	or	r24, r25
    34c4:	99 f3       	breq	.-26     	; 0x34ac <fdevopen+0x12>
    34c6:	80 e8       	ldi	r24, 0x80	; 128
    34c8:	83 83       	std	Z+3, r24	; 0x03
    34ca:	01 15       	cp	r16, r1
    34cc:	11 05       	cpc	r17, r1
    34ce:	71 f0       	breq	.+28     	; 0x34ec <fdevopen+0x52>
    34d0:	13 87       	std	Z+11, r17	; 0x0b
    34d2:	02 87       	std	Z+10, r16	; 0x0a
    34d4:	81 e8       	ldi	r24, 0x81	; 129
    34d6:	83 83       	std	Z+3, r24	; 0x03
    34d8:	80 91 d2 03 	lds	r24, 0x03D2
    34dc:	90 91 d3 03 	lds	r25, 0x03D3
    34e0:	89 2b       	or	r24, r25
    34e2:	21 f4       	brne	.+8      	; 0x34ec <fdevopen+0x52>
    34e4:	f0 93 d3 03 	sts	0x03D3, r31
    34e8:	e0 93 d2 03 	sts	0x03D2, r30
    34ec:	20 97       	sbiw	r28, 0x00	; 0
    34ee:	c9 f0       	breq	.+50     	; 0x3522 <fdevopen+0x88>
    34f0:	d1 87       	std	Z+9, r29	; 0x09
    34f2:	c0 87       	std	Z+8, r28	; 0x08
    34f4:	83 81       	ldd	r24, Z+3	; 0x03
    34f6:	82 60       	ori	r24, 0x02	; 2
    34f8:	83 83       	std	Z+3, r24	; 0x03
    34fa:	80 91 d4 03 	lds	r24, 0x03D4
    34fe:	90 91 d5 03 	lds	r25, 0x03D5
    3502:	89 2b       	or	r24, r25
    3504:	71 f4       	brne	.+28     	; 0x3522 <fdevopen+0x88>
    3506:	f0 93 d5 03 	sts	0x03D5, r31
    350a:	e0 93 d4 03 	sts	0x03D4, r30
    350e:	80 91 d6 03 	lds	r24, 0x03D6
    3512:	90 91 d7 03 	lds	r25, 0x03D7
    3516:	89 2b       	or	r24, r25
    3518:	21 f4       	brne	.+8      	; 0x3522 <fdevopen+0x88>
    351a:	f0 93 d7 03 	sts	0x03D7, r31
    351e:	e0 93 d6 03 	sts	0x03D6, r30
    3522:	cf 01       	movw	r24, r30
    3524:	df 91       	pop	r29
    3526:	cf 91       	pop	r28
    3528:	1f 91       	pop	r17
    352a:	0f 91       	pop	r16
    352c:	08 95       	ret

0000352e <printf>:
    352e:	cf 93       	push	r28
    3530:	df 93       	push	r29
    3532:	cd b7       	in	r28, 0x3d	; 61
    3534:	de b7       	in	r29, 0x3e	; 62
    3536:	ae 01       	movw	r20, r28
    3538:	4b 5f       	subi	r20, 0xFB	; 251
    353a:	5f 4f       	sbci	r21, 0xFF	; 255
    353c:	fa 01       	movw	r30, r20
    353e:	61 91       	ld	r22, Z+
    3540:	71 91       	ld	r23, Z+
    3542:	af 01       	movw	r20, r30
    3544:	80 91 d4 03 	lds	r24, 0x03D4
    3548:	90 91 d5 03 	lds	r25, 0x03D5
    354c:	32 d0       	rcall	.+100    	; 0x35b2 <vfprintf>
    354e:	df 91       	pop	r29
    3550:	cf 91       	pop	r28
    3552:	08 95       	ret

00003554 <sprintf>:
    3554:	0f 93       	push	r16
    3556:	1f 93       	push	r17
    3558:	cf 93       	push	r28
    355a:	df 93       	push	r29
    355c:	cd b7       	in	r28, 0x3d	; 61
    355e:	de b7       	in	r29, 0x3e	; 62
    3560:	2e 97       	sbiw	r28, 0x0e	; 14
    3562:	0f b6       	in	r0, 0x3f	; 63
    3564:	f8 94       	cli
    3566:	de bf       	out	0x3e, r29	; 62
    3568:	0f be       	out	0x3f, r0	; 63
    356a:	cd bf       	out	0x3d, r28	; 61
    356c:	0d 89       	ldd	r16, Y+21	; 0x15
    356e:	1e 89       	ldd	r17, Y+22	; 0x16
    3570:	86 e0       	ldi	r24, 0x06	; 6
    3572:	8c 83       	std	Y+4, r24	; 0x04
    3574:	1a 83       	std	Y+2, r17	; 0x02
    3576:	09 83       	std	Y+1, r16	; 0x01
    3578:	8f ef       	ldi	r24, 0xFF	; 255
    357a:	9f e7       	ldi	r25, 0x7F	; 127
    357c:	9e 83       	std	Y+6, r25	; 0x06
    357e:	8d 83       	std	Y+5, r24	; 0x05
    3580:	ae 01       	movw	r20, r28
    3582:	47 5e       	subi	r20, 0xE7	; 231
    3584:	5f 4f       	sbci	r21, 0xFF	; 255
    3586:	6f 89       	ldd	r22, Y+23	; 0x17
    3588:	78 8d       	ldd	r23, Y+24	; 0x18
    358a:	ce 01       	movw	r24, r28
    358c:	01 96       	adiw	r24, 0x01	; 1
    358e:	11 d0       	rcall	.+34     	; 0x35b2 <vfprintf>
    3590:	2f 81       	ldd	r18, Y+7	; 0x07
    3592:	38 85       	ldd	r19, Y+8	; 0x08
    3594:	f8 01       	movw	r30, r16
    3596:	e2 0f       	add	r30, r18
    3598:	f3 1f       	adc	r31, r19
    359a:	10 82       	st	Z, r1
    359c:	2e 96       	adiw	r28, 0x0e	; 14
    359e:	0f b6       	in	r0, 0x3f	; 63
    35a0:	f8 94       	cli
    35a2:	de bf       	out	0x3e, r29	; 62
    35a4:	0f be       	out	0x3f, r0	; 63
    35a6:	cd bf       	out	0x3d, r28	; 61
    35a8:	df 91       	pop	r29
    35aa:	cf 91       	pop	r28
    35ac:	1f 91       	pop	r17
    35ae:	0f 91       	pop	r16
    35b0:	08 95       	ret

000035b2 <vfprintf>:
    35b2:	2f 92       	push	r2
    35b4:	3f 92       	push	r3
    35b6:	4f 92       	push	r4
    35b8:	5f 92       	push	r5
    35ba:	6f 92       	push	r6
    35bc:	7f 92       	push	r7
    35be:	8f 92       	push	r8
    35c0:	9f 92       	push	r9
    35c2:	af 92       	push	r10
    35c4:	bf 92       	push	r11
    35c6:	cf 92       	push	r12
    35c8:	df 92       	push	r13
    35ca:	ef 92       	push	r14
    35cc:	ff 92       	push	r15
    35ce:	0f 93       	push	r16
    35d0:	1f 93       	push	r17
    35d2:	cf 93       	push	r28
    35d4:	df 93       	push	r29
    35d6:	cd b7       	in	r28, 0x3d	; 61
    35d8:	de b7       	in	r29, 0x3e	; 62
    35da:	2c 97       	sbiw	r28, 0x0c	; 12
    35dc:	0f b6       	in	r0, 0x3f	; 63
    35de:	f8 94       	cli
    35e0:	de bf       	out	0x3e, r29	; 62
    35e2:	0f be       	out	0x3f, r0	; 63
    35e4:	cd bf       	out	0x3d, r28	; 61
    35e6:	7c 01       	movw	r14, r24
    35e8:	6b 01       	movw	r12, r22
    35ea:	8a 01       	movw	r16, r20
    35ec:	fc 01       	movw	r30, r24
    35ee:	17 82       	std	Z+7, r1	; 0x07
    35f0:	16 82       	std	Z+6, r1	; 0x06
    35f2:	83 81       	ldd	r24, Z+3	; 0x03
    35f4:	81 ff       	sbrs	r24, 1
    35f6:	b0 c1       	rjmp	.+864    	; 0x3958 <vfprintf+0x3a6>
    35f8:	ce 01       	movw	r24, r28
    35fa:	01 96       	adiw	r24, 0x01	; 1
    35fc:	4c 01       	movw	r8, r24
    35fe:	f7 01       	movw	r30, r14
    3600:	93 81       	ldd	r25, Z+3	; 0x03
    3602:	f6 01       	movw	r30, r12
    3604:	93 fd       	sbrc	r25, 3
    3606:	85 91       	lpm	r24, Z+
    3608:	93 ff       	sbrs	r25, 3
    360a:	81 91       	ld	r24, Z+
    360c:	6f 01       	movw	r12, r30
    360e:	88 23       	and	r24, r24
    3610:	09 f4       	brne	.+2      	; 0x3614 <vfprintf+0x62>
    3612:	9e c1       	rjmp	.+828    	; 0x3950 <vfprintf+0x39e>
    3614:	85 32       	cpi	r24, 0x25	; 37
    3616:	39 f4       	brne	.+14     	; 0x3626 <vfprintf+0x74>
    3618:	93 fd       	sbrc	r25, 3
    361a:	85 91       	lpm	r24, Z+
    361c:	93 ff       	sbrs	r25, 3
    361e:	81 91       	ld	r24, Z+
    3620:	6f 01       	movw	r12, r30
    3622:	85 32       	cpi	r24, 0x25	; 37
    3624:	21 f4       	brne	.+8      	; 0x362e <vfprintf+0x7c>
    3626:	b7 01       	movw	r22, r14
    3628:	90 e0       	ldi	r25, 0x00	; 0
    362a:	15 d3       	rcall	.+1578   	; 0x3c56 <fputc>
    362c:	e8 cf       	rjmp	.-48     	; 0x35fe <vfprintf+0x4c>
    362e:	51 2c       	mov	r5, r1
    3630:	31 2c       	mov	r3, r1
    3632:	20 e0       	ldi	r18, 0x00	; 0
    3634:	20 32       	cpi	r18, 0x20	; 32
    3636:	a0 f4       	brcc	.+40     	; 0x3660 <vfprintf+0xae>
    3638:	8b 32       	cpi	r24, 0x2B	; 43
    363a:	69 f0       	breq	.+26     	; 0x3656 <vfprintf+0xa4>
    363c:	30 f4       	brcc	.+12     	; 0x364a <vfprintf+0x98>
    363e:	80 32       	cpi	r24, 0x20	; 32
    3640:	59 f0       	breq	.+22     	; 0x3658 <vfprintf+0xa6>
    3642:	83 32       	cpi	r24, 0x23	; 35
    3644:	69 f4       	brne	.+26     	; 0x3660 <vfprintf+0xae>
    3646:	20 61       	ori	r18, 0x10	; 16
    3648:	2c c0       	rjmp	.+88     	; 0x36a2 <vfprintf+0xf0>
    364a:	8d 32       	cpi	r24, 0x2D	; 45
    364c:	39 f0       	breq	.+14     	; 0x365c <vfprintf+0xaa>
    364e:	80 33       	cpi	r24, 0x30	; 48
    3650:	39 f4       	brne	.+14     	; 0x3660 <vfprintf+0xae>
    3652:	21 60       	ori	r18, 0x01	; 1
    3654:	26 c0       	rjmp	.+76     	; 0x36a2 <vfprintf+0xf0>
    3656:	22 60       	ori	r18, 0x02	; 2
    3658:	24 60       	ori	r18, 0x04	; 4
    365a:	23 c0       	rjmp	.+70     	; 0x36a2 <vfprintf+0xf0>
    365c:	28 60       	ori	r18, 0x08	; 8
    365e:	21 c0       	rjmp	.+66     	; 0x36a2 <vfprintf+0xf0>
    3660:	27 fd       	sbrc	r18, 7
    3662:	27 c0       	rjmp	.+78     	; 0x36b2 <vfprintf+0x100>
    3664:	30 ed       	ldi	r19, 0xD0	; 208
    3666:	38 0f       	add	r19, r24
    3668:	3a 30       	cpi	r19, 0x0A	; 10
    366a:	78 f4       	brcc	.+30     	; 0x368a <vfprintf+0xd8>
    366c:	26 ff       	sbrs	r18, 6
    366e:	06 c0       	rjmp	.+12     	; 0x367c <vfprintf+0xca>
    3670:	fa e0       	ldi	r31, 0x0A	; 10
    3672:	5f 9e       	mul	r5, r31
    3674:	30 0d       	add	r19, r0
    3676:	11 24       	eor	r1, r1
    3678:	53 2e       	mov	r5, r19
    367a:	13 c0       	rjmp	.+38     	; 0x36a2 <vfprintf+0xf0>
    367c:	8a e0       	ldi	r24, 0x0A	; 10
    367e:	38 9e       	mul	r3, r24
    3680:	30 0d       	add	r19, r0
    3682:	11 24       	eor	r1, r1
    3684:	33 2e       	mov	r3, r19
    3686:	20 62       	ori	r18, 0x20	; 32
    3688:	0c c0       	rjmp	.+24     	; 0x36a2 <vfprintf+0xf0>
    368a:	8e 32       	cpi	r24, 0x2E	; 46
    368c:	21 f4       	brne	.+8      	; 0x3696 <vfprintf+0xe4>
    368e:	26 fd       	sbrc	r18, 6
    3690:	5f c1       	rjmp	.+702    	; 0x3950 <vfprintf+0x39e>
    3692:	20 64       	ori	r18, 0x40	; 64
    3694:	06 c0       	rjmp	.+12     	; 0x36a2 <vfprintf+0xf0>
    3696:	8c 36       	cpi	r24, 0x6C	; 108
    3698:	11 f4       	brne	.+4      	; 0x369e <vfprintf+0xec>
    369a:	20 68       	ori	r18, 0x80	; 128
    369c:	02 c0       	rjmp	.+4      	; 0x36a2 <vfprintf+0xf0>
    369e:	88 36       	cpi	r24, 0x68	; 104
    36a0:	41 f4       	brne	.+16     	; 0x36b2 <vfprintf+0x100>
    36a2:	f6 01       	movw	r30, r12
    36a4:	93 fd       	sbrc	r25, 3
    36a6:	85 91       	lpm	r24, Z+
    36a8:	93 ff       	sbrs	r25, 3
    36aa:	81 91       	ld	r24, Z+
    36ac:	6f 01       	movw	r12, r30
    36ae:	81 11       	cpse	r24, r1
    36b0:	c1 cf       	rjmp	.-126    	; 0x3634 <vfprintf+0x82>
    36b2:	98 2f       	mov	r25, r24
    36b4:	9f 7d       	andi	r25, 0xDF	; 223
    36b6:	95 54       	subi	r25, 0x45	; 69
    36b8:	93 30       	cpi	r25, 0x03	; 3
    36ba:	28 f4       	brcc	.+10     	; 0x36c6 <vfprintf+0x114>
    36bc:	0c 5f       	subi	r16, 0xFC	; 252
    36be:	1f 4f       	sbci	r17, 0xFF	; 255
    36c0:	ff e3       	ldi	r31, 0x3F	; 63
    36c2:	f9 83       	std	Y+1, r31	; 0x01
    36c4:	0d c0       	rjmp	.+26     	; 0x36e0 <vfprintf+0x12e>
    36c6:	83 36       	cpi	r24, 0x63	; 99
    36c8:	31 f0       	breq	.+12     	; 0x36d6 <vfprintf+0x124>
    36ca:	83 37       	cpi	r24, 0x73	; 115
    36cc:	71 f0       	breq	.+28     	; 0x36ea <vfprintf+0x138>
    36ce:	83 35       	cpi	r24, 0x53	; 83
    36d0:	09 f0       	breq	.+2      	; 0x36d4 <vfprintf+0x122>
    36d2:	57 c0       	rjmp	.+174    	; 0x3782 <vfprintf+0x1d0>
    36d4:	21 c0       	rjmp	.+66     	; 0x3718 <vfprintf+0x166>
    36d6:	f8 01       	movw	r30, r16
    36d8:	80 81       	ld	r24, Z
    36da:	89 83       	std	Y+1, r24	; 0x01
    36dc:	0e 5f       	subi	r16, 0xFE	; 254
    36de:	1f 4f       	sbci	r17, 0xFF	; 255
    36e0:	44 24       	eor	r4, r4
    36e2:	43 94       	inc	r4
    36e4:	51 2c       	mov	r5, r1
    36e6:	54 01       	movw	r10, r8
    36e8:	14 c0       	rjmp	.+40     	; 0x3712 <vfprintf+0x160>
    36ea:	38 01       	movw	r6, r16
    36ec:	f2 e0       	ldi	r31, 0x02	; 2
    36ee:	6f 0e       	add	r6, r31
    36f0:	71 1c       	adc	r7, r1
    36f2:	f8 01       	movw	r30, r16
    36f4:	a0 80       	ld	r10, Z
    36f6:	b1 80       	ldd	r11, Z+1	; 0x01
    36f8:	26 ff       	sbrs	r18, 6
    36fa:	03 c0       	rjmp	.+6      	; 0x3702 <vfprintf+0x150>
    36fc:	65 2d       	mov	r22, r5
    36fe:	70 e0       	ldi	r23, 0x00	; 0
    3700:	02 c0       	rjmp	.+4      	; 0x3706 <vfprintf+0x154>
    3702:	6f ef       	ldi	r22, 0xFF	; 255
    3704:	7f ef       	ldi	r23, 0xFF	; 255
    3706:	c5 01       	movw	r24, r10
    3708:	2c 87       	std	Y+12, r18	; 0x0c
    370a:	9a d2       	rcall	.+1332   	; 0x3c40 <strnlen>
    370c:	2c 01       	movw	r4, r24
    370e:	83 01       	movw	r16, r6
    3710:	2c 85       	ldd	r18, Y+12	; 0x0c
    3712:	2f 77       	andi	r18, 0x7F	; 127
    3714:	22 2e       	mov	r2, r18
    3716:	16 c0       	rjmp	.+44     	; 0x3744 <vfprintf+0x192>
    3718:	38 01       	movw	r6, r16
    371a:	f2 e0       	ldi	r31, 0x02	; 2
    371c:	6f 0e       	add	r6, r31
    371e:	71 1c       	adc	r7, r1
    3720:	f8 01       	movw	r30, r16
    3722:	a0 80       	ld	r10, Z
    3724:	b1 80       	ldd	r11, Z+1	; 0x01
    3726:	26 ff       	sbrs	r18, 6
    3728:	03 c0       	rjmp	.+6      	; 0x3730 <vfprintf+0x17e>
    372a:	65 2d       	mov	r22, r5
    372c:	70 e0       	ldi	r23, 0x00	; 0
    372e:	02 c0       	rjmp	.+4      	; 0x3734 <vfprintf+0x182>
    3730:	6f ef       	ldi	r22, 0xFF	; 255
    3732:	7f ef       	ldi	r23, 0xFF	; 255
    3734:	c5 01       	movw	r24, r10
    3736:	2c 87       	std	Y+12, r18	; 0x0c
    3738:	71 d2       	rcall	.+1250   	; 0x3c1c <strnlen_P>
    373a:	2c 01       	movw	r4, r24
    373c:	2c 85       	ldd	r18, Y+12	; 0x0c
    373e:	20 68       	ori	r18, 0x80	; 128
    3740:	22 2e       	mov	r2, r18
    3742:	83 01       	movw	r16, r6
    3744:	23 fc       	sbrc	r2, 3
    3746:	19 c0       	rjmp	.+50     	; 0x377a <vfprintf+0x1c8>
    3748:	83 2d       	mov	r24, r3
    374a:	90 e0       	ldi	r25, 0x00	; 0
    374c:	48 16       	cp	r4, r24
    374e:	59 06       	cpc	r5, r25
    3750:	a0 f4       	brcc	.+40     	; 0x377a <vfprintf+0x1c8>
    3752:	b7 01       	movw	r22, r14
    3754:	80 e2       	ldi	r24, 0x20	; 32
    3756:	90 e0       	ldi	r25, 0x00	; 0
    3758:	7e d2       	rcall	.+1276   	; 0x3c56 <fputc>
    375a:	3a 94       	dec	r3
    375c:	f5 cf       	rjmp	.-22     	; 0x3748 <vfprintf+0x196>
    375e:	f5 01       	movw	r30, r10
    3760:	27 fc       	sbrc	r2, 7
    3762:	85 91       	lpm	r24, Z+
    3764:	27 fe       	sbrs	r2, 7
    3766:	81 91       	ld	r24, Z+
    3768:	5f 01       	movw	r10, r30
    376a:	b7 01       	movw	r22, r14
    376c:	90 e0       	ldi	r25, 0x00	; 0
    376e:	73 d2       	rcall	.+1254   	; 0x3c56 <fputc>
    3770:	31 10       	cpse	r3, r1
    3772:	3a 94       	dec	r3
    3774:	f1 e0       	ldi	r31, 0x01	; 1
    3776:	4f 1a       	sub	r4, r31
    3778:	51 08       	sbc	r5, r1
    377a:	41 14       	cp	r4, r1
    377c:	51 04       	cpc	r5, r1
    377e:	79 f7       	brne	.-34     	; 0x375e <vfprintf+0x1ac>
    3780:	de c0       	rjmp	.+444    	; 0x393e <vfprintf+0x38c>
    3782:	84 36       	cpi	r24, 0x64	; 100
    3784:	11 f0       	breq	.+4      	; 0x378a <vfprintf+0x1d8>
    3786:	89 36       	cpi	r24, 0x69	; 105
    3788:	31 f5       	brne	.+76     	; 0x37d6 <vfprintf+0x224>
    378a:	f8 01       	movw	r30, r16
    378c:	27 ff       	sbrs	r18, 7
    378e:	07 c0       	rjmp	.+14     	; 0x379e <vfprintf+0x1ec>
    3790:	60 81       	ld	r22, Z
    3792:	71 81       	ldd	r23, Z+1	; 0x01
    3794:	82 81       	ldd	r24, Z+2	; 0x02
    3796:	93 81       	ldd	r25, Z+3	; 0x03
    3798:	0c 5f       	subi	r16, 0xFC	; 252
    379a:	1f 4f       	sbci	r17, 0xFF	; 255
    379c:	08 c0       	rjmp	.+16     	; 0x37ae <vfprintf+0x1fc>
    379e:	60 81       	ld	r22, Z
    37a0:	71 81       	ldd	r23, Z+1	; 0x01
    37a2:	07 2e       	mov	r0, r23
    37a4:	00 0c       	add	r0, r0
    37a6:	88 0b       	sbc	r24, r24
    37a8:	99 0b       	sbc	r25, r25
    37aa:	0e 5f       	subi	r16, 0xFE	; 254
    37ac:	1f 4f       	sbci	r17, 0xFF	; 255
    37ae:	2f 76       	andi	r18, 0x6F	; 111
    37b0:	72 2e       	mov	r7, r18
    37b2:	97 ff       	sbrs	r25, 7
    37b4:	09 c0       	rjmp	.+18     	; 0x37c8 <vfprintf+0x216>
    37b6:	90 95       	com	r25
    37b8:	80 95       	com	r24
    37ba:	70 95       	com	r23
    37bc:	61 95       	neg	r22
    37be:	7f 4f       	sbci	r23, 0xFF	; 255
    37c0:	8f 4f       	sbci	r24, 0xFF	; 255
    37c2:	9f 4f       	sbci	r25, 0xFF	; 255
    37c4:	20 68       	ori	r18, 0x80	; 128
    37c6:	72 2e       	mov	r7, r18
    37c8:	2a e0       	ldi	r18, 0x0A	; 10
    37ca:	30 e0       	ldi	r19, 0x00	; 0
    37cc:	a4 01       	movw	r20, r8
    37ce:	7b d2       	rcall	.+1270   	; 0x3cc6 <__ultoa_invert>
    37d0:	a8 2e       	mov	r10, r24
    37d2:	a8 18       	sub	r10, r8
    37d4:	43 c0       	rjmp	.+134    	; 0x385c <vfprintf+0x2aa>
    37d6:	85 37       	cpi	r24, 0x75	; 117
    37d8:	29 f4       	brne	.+10     	; 0x37e4 <vfprintf+0x232>
    37da:	2f 7e       	andi	r18, 0xEF	; 239
    37dc:	b2 2e       	mov	r11, r18
    37de:	2a e0       	ldi	r18, 0x0A	; 10
    37e0:	30 e0       	ldi	r19, 0x00	; 0
    37e2:	25 c0       	rjmp	.+74     	; 0x382e <vfprintf+0x27c>
    37e4:	f2 2f       	mov	r31, r18
    37e6:	f9 7f       	andi	r31, 0xF9	; 249
    37e8:	bf 2e       	mov	r11, r31
    37ea:	8f 36       	cpi	r24, 0x6F	; 111
    37ec:	c1 f0       	breq	.+48     	; 0x381e <vfprintf+0x26c>
    37ee:	18 f4       	brcc	.+6      	; 0x37f6 <vfprintf+0x244>
    37f0:	88 35       	cpi	r24, 0x58	; 88
    37f2:	79 f0       	breq	.+30     	; 0x3812 <vfprintf+0x260>
    37f4:	ad c0       	rjmp	.+346    	; 0x3950 <vfprintf+0x39e>
    37f6:	80 37       	cpi	r24, 0x70	; 112
    37f8:	19 f0       	breq	.+6      	; 0x3800 <vfprintf+0x24e>
    37fa:	88 37       	cpi	r24, 0x78	; 120
    37fc:	21 f0       	breq	.+8      	; 0x3806 <vfprintf+0x254>
    37fe:	a8 c0       	rjmp	.+336    	; 0x3950 <vfprintf+0x39e>
    3800:	2f 2f       	mov	r18, r31
    3802:	20 61       	ori	r18, 0x10	; 16
    3804:	b2 2e       	mov	r11, r18
    3806:	b4 fe       	sbrs	r11, 4
    3808:	0d c0       	rjmp	.+26     	; 0x3824 <vfprintf+0x272>
    380a:	8b 2d       	mov	r24, r11
    380c:	84 60       	ori	r24, 0x04	; 4
    380e:	b8 2e       	mov	r11, r24
    3810:	09 c0       	rjmp	.+18     	; 0x3824 <vfprintf+0x272>
    3812:	24 ff       	sbrs	r18, 4
    3814:	0a c0       	rjmp	.+20     	; 0x382a <vfprintf+0x278>
    3816:	9f 2f       	mov	r25, r31
    3818:	96 60       	ori	r25, 0x06	; 6
    381a:	b9 2e       	mov	r11, r25
    381c:	06 c0       	rjmp	.+12     	; 0x382a <vfprintf+0x278>
    381e:	28 e0       	ldi	r18, 0x08	; 8
    3820:	30 e0       	ldi	r19, 0x00	; 0
    3822:	05 c0       	rjmp	.+10     	; 0x382e <vfprintf+0x27c>
    3824:	20 e1       	ldi	r18, 0x10	; 16
    3826:	30 e0       	ldi	r19, 0x00	; 0
    3828:	02 c0       	rjmp	.+4      	; 0x382e <vfprintf+0x27c>
    382a:	20 e1       	ldi	r18, 0x10	; 16
    382c:	32 e0       	ldi	r19, 0x02	; 2
    382e:	f8 01       	movw	r30, r16
    3830:	b7 fe       	sbrs	r11, 7
    3832:	07 c0       	rjmp	.+14     	; 0x3842 <vfprintf+0x290>
    3834:	60 81       	ld	r22, Z
    3836:	71 81       	ldd	r23, Z+1	; 0x01
    3838:	82 81       	ldd	r24, Z+2	; 0x02
    383a:	93 81       	ldd	r25, Z+3	; 0x03
    383c:	0c 5f       	subi	r16, 0xFC	; 252
    383e:	1f 4f       	sbci	r17, 0xFF	; 255
    3840:	06 c0       	rjmp	.+12     	; 0x384e <vfprintf+0x29c>
    3842:	60 81       	ld	r22, Z
    3844:	71 81       	ldd	r23, Z+1	; 0x01
    3846:	80 e0       	ldi	r24, 0x00	; 0
    3848:	90 e0       	ldi	r25, 0x00	; 0
    384a:	0e 5f       	subi	r16, 0xFE	; 254
    384c:	1f 4f       	sbci	r17, 0xFF	; 255
    384e:	a4 01       	movw	r20, r8
    3850:	3a d2       	rcall	.+1140   	; 0x3cc6 <__ultoa_invert>
    3852:	a8 2e       	mov	r10, r24
    3854:	a8 18       	sub	r10, r8
    3856:	fb 2d       	mov	r31, r11
    3858:	ff 77       	andi	r31, 0x7F	; 127
    385a:	7f 2e       	mov	r7, r31
    385c:	76 fe       	sbrs	r7, 6
    385e:	0b c0       	rjmp	.+22     	; 0x3876 <vfprintf+0x2c4>
    3860:	37 2d       	mov	r19, r7
    3862:	3e 7f       	andi	r19, 0xFE	; 254
    3864:	a5 14       	cp	r10, r5
    3866:	50 f4       	brcc	.+20     	; 0x387c <vfprintf+0x2ca>
    3868:	74 fe       	sbrs	r7, 4
    386a:	0a c0       	rjmp	.+20     	; 0x3880 <vfprintf+0x2ce>
    386c:	72 fc       	sbrc	r7, 2
    386e:	08 c0       	rjmp	.+16     	; 0x3880 <vfprintf+0x2ce>
    3870:	37 2d       	mov	r19, r7
    3872:	3e 7e       	andi	r19, 0xEE	; 238
    3874:	05 c0       	rjmp	.+10     	; 0x3880 <vfprintf+0x2ce>
    3876:	ba 2c       	mov	r11, r10
    3878:	37 2d       	mov	r19, r7
    387a:	03 c0       	rjmp	.+6      	; 0x3882 <vfprintf+0x2d0>
    387c:	ba 2c       	mov	r11, r10
    387e:	01 c0       	rjmp	.+2      	; 0x3882 <vfprintf+0x2d0>
    3880:	b5 2c       	mov	r11, r5
    3882:	34 ff       	sbrs	r19, 4
    3884:	0d c0       	rjmp	.+26     	; 0x38a0 <vfprintf+0x2ee>
    3886:	fe 01       	movw	r30, r28
    3888:	ea 0d       	add	r30, r10
    388a:	f1 1d       	adc	r31, r1
    388c:	80 81       	ld	r24, Z
    388e:	80 33       	cpi	r24, 0x30	; 48
    3890:	11 f4       	brne	.+4      	; 0x3896 <vfprintf+0x2e4>
    3892:	39 7e       	andi	r19, 0xE9	; 233
    3894:	09 c0       	rjmp	.+18     	; 0x38a8 <vfprintf+0x2f6>
    3896:	32 ff       	sbrs	r19, 2
    3898:	06 c0       	rjmp	.+12     	; 0x38a6 <vfprintf+0x2f4>
    389a:	b3 94       	inc	r11
    389c:	b3 94       	inc	r11
    389e:	04 c0       	rjmp	.+8      	; 0x38a8 <vfprintf+0x2f6>
    38a0:	83 2f       	mov	r24, r19
    38a2:	86 78       	andi	r24, 0x86	; 134
    38a4:	09 f0       	breq	.+2      	; 0x38a8 <vfprintf+0x2f6>
    38a6:	b3 94       	inc	r11
    38a8:	33 fd       	sbrc	r19, 3
    38aa:	12 c0       	rjmp	.+36     	; 0x38d0 <vfprintf+0x31e>
    38ac:	30 ff       	sbrs	r19, 0
    38ae:	06 c0       	rjmp	.+12     	; 0x38bc <vfprintf+0x30a>
    38b0:	5a 2c       	mov	r5, r10
    38b2:	b3 14       	cp	r11, r3
    38b4:	18 f4       	brcc	.+6      	; 0x38bc <vfprintf+0x30a>
    38b6:	53 0c       	add	r5, r3
    38b8:	5b 18       	sub	r5, r11
    38ba:	b3 2c       	mov	r11, r3
    38bc:	b3 14       	cp	r11, r3
    38be:	60 f4       	brcc	.+24     	; 0x38d8 <vfprintf+0x326>
    38c0:	b7 01       	movw	r22, r14
    38c2:	80 e2       	ldi	r24, 0x20	; 32
    38c4:	90 e0       	ldi	r25, 0x00	; 0
    38c6:	3c 87       	std	Y+12, r19	; 0x0c
    38c8:	c6 d1       	rcall	.+908    	; 0x3c56 <fputc>
    38ca:	b3 94       	inc	r11
    38cc:	3c 85       	ldd	r19, Y+12	; 0x0c
    38ce:	f6 cf       	rjmp	.-20     	; 0x38bc <vfprintf+0x30a>
    38d0:	b3 14       	cp	r11, r3
    38d2:	10 f4       	brcc	.+4      	; 0x38d8 <vfprintf+0x326>
    38d4:	3b 18       	sub	r3, r11
    38d6:	01 c0       	rjmp	.+2      	; 0x38da <vfprintf+0x328>
    38d8:	31 2c       	mov	r3, r1
    38da:	34 ff       	sbrs	r19, 4
    38dc:	11 c0       	rjmp	.+34     	; 0x3900 <vfprintf+0x34e>
    38de:	b7 01       	movw	r22, r14
    38e0:	80 e3       	ldi	r24, 0x30	; 48
    38e2:	90 e0       	ldi	r25, 0x00	; 0
    38e4:	3c 87       	std	Y+12, r19	; 0x0c
    38e6:	b7 d1       	rcall	.+878    	; 0x3c56 <fputc>
    38e8:	3c 85       	ldd	r19, Y+12	; 0x0c
    38ea:	32 ff       	sbrs	r19, 2
    38ec:	16 c0       	rjmp	.+44     	; 0x391a <vfprintf+0x368>
    38ee:	31 fd       	sbrc	r19, 1
    38f0:	03 c0       	rjmp	.+6      	; 0x38f8 <vfprintf+0x346>
    38f2:	88 e7       	ldi	r24, 0x78	; 120
    38f4:	90 e0       	ldi	r25, 0x00	; 0
    38f6:	02 c0       	rjmp	.+4      	; 0x38fc <vfprintf+0x34a>
    38f8:	88 e5       	ldi	r24, 0x58	; 88
    38fa:	90 e0       	ldi	r25, 0x00	; 0
    38fc:	b7 01       	movw	r22, r14
    38fe:	0c c0       	rjmp	.+24     	; 0x3918 <vfprintf+0x366>
    3900:	83 2f       	mov	r24, r19
    3902:	86 78       	andi	r24, 0x86	; 134
    3904:	51 f0       	breq	.+20     	; 0x391a <vfprintf+0x368>
    3906:	31 ff       	sbrs	r19, 1
    3908:	02 c0       	rjmp	.+4      	; 0x390e <vfprintf+0x35c>
    390a:	8b e2       	ldi	r24, 0x2B	; 43
    390c:	01 c0       	rjmp	.+2      	; 0x3910 <vfprintf+0x35e>
    390e:	80 e2       	ldi	r24, 0x20	; 32
    3910:	37 fd       	sbrc	r19, 7
    3912:	8d e2       	ldi	r24, 0x2D	; 45
    3914:	b7 01       	movw	r22, r14
    3916:	90 e0       	ldi	r25, 0x00	; 0
    3918:	9e d1       	rcall	.+828    	; 0x3c56 <fputc>
    391a:	a5 14       	cp	r10, r5
    391c:	30 f4       	brcc	.+12     	; 0x392a <vfprintf+0x378>
    391e:	b7 01       	movw	r22, r14
    3920:	80 e3       	ldi	r24, 0x30	; 48
    3922:	90 e0       	ldi	r25, 0x00	; 0
    3924:	98 d1       	rcall	.+816    	; 0x3c56 <fputc>
    3926:	5a 94       	dec	r5
    3928:	f8 cf       	rjmp	.-16     	; 0x391a <vfprintf+0x368>
    392a:	aa 94       	dec	r10
    392c:	f4 01       	movw	r30, r8
    392e:	ea 0d       	add	r30, r10
    3930:	f1 1d       	adc	r31, r1
    3932:	80 81       	ld	r24, Z
    3934:	b7 01       	movw	r22, r14
    3936:	90 e0       	ldi	r25, 0x00	; 0
    3938:	8e d1       	rcall	.+796    	; 0x3c56 <fputc>
    393a:	a1 10       	cpse	r10, r1
    393c:	f6 cf       	rjmp	.-20     	; 0x392a <vfprintf+0x378>
    393e:	33 20       	and	r3, r3
    3940:	09 f4       	brne	.+2      	; 0x3944 <vfprintf+0x392>
    3942:	5d ce       	rjmp	.-838    	; 0x35fe <vfprintf+0x4c>
    3944:	b7 01       	movw	r22, r14
    3946:	80 e2       	ldi	r24, 0x20	; 32
    3948:	90 e0       	ldi	r25, 0x00	; 0
    394a:	85 d1       	rcall	.+778    	; 0x3c56 <fputc>
    394c:	3a 94       	dec	r3
    394e:	f7 cf       	rjmp	.-18     	; 0x393e <vfprintf+0x38c>
    3950:	f7 01       	movw	r30, r14
    3952:	86 81       	ldd	r24, Z+6	; 0x06
    3954:	97 81       	ldd	r25, Z+7	; 0x07
    3956:	02 c0       	rjmp	.+4      	; 0x395c <vfprintf+0x3aa>
    3958:	8f ef       	ldi	r24, 0xFF	; 255
    395a:	9f ef       	ldi	r25, 0xFF	; 255
    395c:	2c 96       	adiw	r28, 0x0c	; 12
    395e:	0f b6       	in	r0, 0x3f	; 63
    3960:	f8 94       	cli
    3962:	de bf       	out	0x3e, r29	; 62
    3964:	0f be       	out	0x3f, r0	; 63
    3966:	cd bf       	out	0x3d, r28	; 61
    3968:	df 91       	pop	r29
    396a:	cf 91       	pop	r28
    396c:	1f 91       	pop	r17
    396e:	0f 91       	pop	r16
    3970:	ff 90       	pop	r15
    3972:	ef 90       	pop	r14
    3974:	df 90       	pop	r13
    3976:	cf 90       	pop	r12
    3978:	bf 90       	pop	r11
    397a:	af 90       	pop	r10
    397c:	9f 90       	pop	r9
    397e:	8f 90       	pop	r8
    3980:	7f 90       	pop	r7
    3982:	6f 90       	pop	r6
    3984:	5f 90       	pop	r5
    3986:	4f 90       	pop	r4
    3988:	3f 90       	pop	r3
    398a:	2f 90       	pop	r2
    398c:	08 95       	ret

0000398e <calloc>:
    398e:	0f 93       	push	r16
    3990:	1f 93       	push	r17
    3992:	cf 93       	push	r28
    3994:	df 93       	push	r29
    3996:	86 9f       	mul	r24, r22
    3998:	80 01       	movw	r16, r0
    399a:	87 9f       	mul	r24, r23
    399c:	10 0d       	add	r17, r0
    399e:	96 9f       	mul	r25, r22
    39a0:	10 0d       	add	r17, r0
    39a2:	11 24       	eor	r1, r1
    39a4:	c8 01       	movw	r24, r16
    39a6:	0d d0       	rcall	.+26     	; 0x39c2 <malloc>
    39a8:	ec 01       	movw	r28, r24
    39aa:	00 97       	sbiw	r24, 0x00	; 0
    39ac:	21 f0       	breq	.+8      	; 0x39b6 <calloc+0x28>
    39ae:	a8 01       	movw	r20, r16
    39b0:	60 e0       	ldi	r22, 0x00	; 0
    39b2:	70 e0       	ldi	r23, 0x00	; 0
    39b4:	3e d1       	rcall	.+636    	; 0x3c32 <memset>
    39b6:	ce 01       	movw	r24, r28
    39b8:	df 91       	pop	r29
    39ba:	cf 91       	pop	r28
    39bc:	1f 91       	pop	r17
    39be:	0f 91       	pop	r16
    39c0:	08 95       	ret

000039c2 <malloc>:
    39c2:	cf 93       	push	r28
    39c4:	df 93       	push	r29
    39c6:	82 30       	cpi	r24, 0x02	; 2
    39c8:	91 05       	cpc	r25, r1
    39ca:	10 f4       	brcc	.+4      	; 0x39d0 <malloc+0xe>
    39cc:	82 e0       	ldi	r24, 0x02	; 2
    39ce:	90 e0       	ldi	r25, 0x00	; 0
    39d0:	e0 91 da 03 	lds	r30, 0x03DA
    39d4:	f0 91 db 03 	lds	r31, 0x03DB
    39d8:	20 e0       	ldi	r18, 0x00	; 0
    39da:	30 e0       	ldi	r19, 0x00	; 0
    39dc:	c0 e0       	ldi	r28, 0x00	; 0
    39de:	d0 e0       	ldi	r29, 0x00	; 0
    39e0:	30 97       	sbiw	r30, 0x00	; 0
    39e2:	11 f1       	breq	.+68     	; 0x3a28 <malloc+0x66>
    39e4:	40 81       	ld	r20, Z
    39e6:	51 81       	ldd	r21, Z+1	; 0x01
    39e8:	48 17       	cp	r20, r24
    39ea:	59 07       	cpc	r21, r25
    39ec:	c0 f0       	brcs	.+48     	; 0x3a1e <malloc+0x5c>
    39ee:	48 17       	cp	r20, r24
    39f0:	59 07       	cpc	r21, r25
    39f2:	61 f4       	brne	.+24     	; 0x3a0c <malloc+0x4a>
    39f4:	82 81       	ldd	r24, Z+2	; 0x02
    39f6:	93 81       	ldd	r25, Z+3	; 0x03
    39f8:	20 97       	sbiw	r28, 0x00	; 0
    39fa:	19 f0       	breq	.+6      	; 0x3a02 <malloc+0x40>
    39fc:	9b 83       	std	Y+3, r25	; 0x03
    39fe:	8a 83       	std	Y+2, r24	; 0x02
    3a00:	2b c0       	rjmp	.+86     	; 0x3a58 <malloc+0x96>
    3a02:	90 93 db 03 	sts	0x03DB, r25
    3a06:	80 93 da 03 	sts	0x03DA, r24
    3a0a:	26 c0       	rjmp	.+76     	; 0x3a58 <malloc+0x96>
    3a0c:	21 15       	cp	r18, r1
    3a0e:	31 05       	cpc	r19, r1
    3a10:	19 f0       	breq	.+6      	; 0x3a18 <malloc+0x56>
    3a12:	42 17       	cp	r20, r18
    3a14:	53 07       	cpc	r21, r19
    3a16:	18 f4       	brcc	.+6      	; 0x3a1e <malloc+0x5c>
    3a18:	9a 01       	movw	r18, r20
    3a1a:	be 01       	movw	r22, r28
    3a1c:	df 01       	movw	r26, r30
    3a1e:	ef 01       	movw	r28, r30
    3a20:	02 80       	ldd	r0, Z+2	; 0x02
    3a22:	f3 81       	ldd	r31, Z+3	; 0x03
    3a24:	e0 2d       	mov	r30, r0
    3a26:	dc cf       	rjmp	.-72     	; 0x39e0 <malloc+0x1e>
    3a28:	21 15       	cp	r18, r1
    3a2a:	31 05       	cpc	r19, r1
    3a2c:	09 f1       	breq	.+66     	; 0x3a70 <malloc+0xae>
    3a2e:	28 1b       	sub	r18, r24
    3a30:	39 0b       	sbc	r19, r25
    3a32:	24 30       	cpi	r18, 0x04	; 4
    3a34:	31 05       	cpc	r19, r1
    3a36:	90 f4       	brcc	.+36     	; 0x3a5c <malloc+0x9a>
    3a38:	12 96       	adiw	r26, 0x02	; 2
    3a3a:	8d 91       	ld	r24, X+
    3a3c:	9c 91       	ld	r25, X
    3a3e:	13 97       	sbiw	r26, 0x03	; 3
    3a40:	61 15       	cp	r22, r1
    3a42:	71 05       	cpc	r23, r1
    3a44:	21 f0       	breq	.+8      	; 0x3a4e <malloc+0x8c>
    3a46:	fb 01       	movw	r30, r22
    3a48:	93 83       	std	Z+3, r25	; 0x03
    3a4a:	82 83       	std	Z+2, r24	; 0x02
    3a4c:	04 c0       	rjmp	.+8      	; 0x3a56 <malloc+0x94>
    3a4e:	90 93 db 03 	sts	0x03DB, r25
    3a52:	80 93 da 03 	sts	0x03DA, r24
    3a56:	fd 01       	movw	r30, r26
    3a58:	32 96       	adiw	r30, 0x02	; 2
    3a5a:	44 c0       	rjmp	.+136    	; 0x3ae4 <malloc+0x122>
    3a5c:	fd 01       	movw	r30, r26
    3a5e:	e2 0f       	add	r30, r18
    3a60:	f3 1f       	adc	r31, r19
    3a62:	81 93       	st	Z+, r24
    3a64:	91 93       	st	Z+, r25
    3a66:	22 50       	subi	r18, 0x02	; 2
    3a68:	31 09       	sbc	r19, r1
    3a6a:	2d 93       	st	X+, r18
    3a6c:	3c 93       	st	X, r19
    3a6e:	3a c0       	rjmp	.+116    	; 0x3ae4 <malloc+0x122>
    3a70:	20 91 d8 03 	lds	r18, 0x03D8
    3a74:	30 91 d9 03 	lds	r19, 0x03D9
    3a78:	23 2b       	or	r18, r19
    3a7a:	41 f4       	brne	.+16     	; 0x3a8c <malloc+0xca>
    3a7c:	20 91 02 01 	lds	r18, 0x0102
    3a80:	30 91 03 01 	lds	r19, 0x0103
    3a84:	30 93 d9 03 	sts	0x03D9, r19
    3a88:	20 93 d8 03 	sts	0x03D8, r18
    3a8c:	20 91 00 01 	lds	r18, 0x0100
    3a90:	30 91 01 01 	lds	r19, 0x0101
    3a94:	21 15       	cp	r18, r1
    3a96:	31 05       	cpc	r19, r1
    3a98:	41 f4       	brne	.+16     	; 0x3aaa <malloc+0xe8>
    3a9a:	2d b7       	in	r18, 0x3d	; 61
    3a9c:	3e b7       	in	r19, 0x3e	; 62
    3a9e:	40 91 04 01 	lds	r20, 0x0104
    3aa2:	50 91 05 01 	lds	r21, 0x0105
    3aa6:	24 1b       	sub	r18, r20
    3aa8:	35 0b       	sbc	r19, r21
    3aaa:	e0 91 d8 03 	lds	r30, 0x03D8
    3aae:	f0 91 d9 03 	lds	r31, 0x03D9
    3ab2:	e2 17       	cp	r30, r18
    3ab4:	f3 07       	cpc	r31, r19
    3ab6:	a0 f4       	brcc	.+40     	; 0x3ae0 <malloc+0x11e>
    3ab8:	2e 1b       	sub	r18, r30
    3aba:	3f 0b       	sbc	r19, r31
    3abc:	28 17       	cp	r18, r24
    3abe:	39 07       	cpc	r19, r25
    3ac0:	78 f0       	brcs	.+30     	; 0x3ae0 <malloc+0x11e>
    3ac2:	ac 01       	movw	r20, r24
    3ac4:	4e 5f       	subi	r20, 0xFE	; 254
    3ac6:	5f 4f       	sbci	r21, 0xFF	; 255
    3ac8:	24 17       	cp	r18, r20
    3aca:	35 07       	cpc	r19, r21
    3acc:	48 f0       	brcs	.+18     	; 0x3ae0 <malloc+0x11e>
    3ace:	4e 0f       	add	r20, r30
    3ad0:	5f 1f       	adc	r21, r31
    3ad2:	50 93 d9 03 	sts	0x03D9, r21
    3ad6:	40 93 d8 03 	sts	0x03D8, r20
    3ada:	81 93       	st	Z+, r24
    3adc:	91 93       	st	Z+, r25
    3ade:	02 c0       	rjmp	.+4      	; 0x3ae4 <malloc+0x122>
    3ae0:	e0 e0       	ldi	r30, 0x00	; 0
    3ae2:	f0 e0       	ldi	r31, 0x00	; 0
    3ae4:	cf 01       	movw	r24, r30
    3ae6:	df 91       	pop	r29
    3ae8:	cf 91       	pop	r28
    3aea:	08 95       	ret

00003aec <free>:
    3aec:	0f 93       	push	r16
    3aee:	1f 93       	push	r17
    3af0:	cf 93       	push	r28
    3af2:	df 93       	push	r29
    3af4:	00 97       	sbiw	r24, 0x00	; 0
    3af6:	09 f4       	brne	.+2      	; 0x3afa <free+0xe>
    3af8:	8c c0       	rjmp	.+280    	; 0x3c12 <free+0x126>
    3afa:	fc 01       	movw	r30, r24
    3afc:	32 97       	sbiw	r30, 0x02	; 2
    3afe:	13 82       	std	Z+3, r1	; 0x03
    3b00:	12 82       	std	Z+2, r1	; 0x02
    3b02:	00 91 da 03 	lds	r16, 0x03DA
    3b06:	10 91 db 03 	lds	r17, 0x03DB
    3b0a:	01 15       	cp	r16, r1
    3b0c:	11 05       	cpc	r17, r1
    3b0e:	81 f4       	brne	.+32     	; 0x3b30 <free+0x44>
    3b10:	20 81       	ld	r18, Z
    3b12:	31 81       	ldd	r19, Z+1	; 0x01
    3b14:	82 0f       	add	r24, r18
    3b16:	93 1f       	adc	r25, r19
    3b18:	20 91 d8 03 	lds	r18, 0x03D8
    3b1c:	30 91 d9 03 	lds	r19, 0x03D9
    3b20:	28 17       	cp	r18, r24
    3b22:	39 07       	cpc	r19, r25
    3b24:	79 f5       	brne	.+94     	; 0x3b84 <free+0x98>
    3b26:	f0 93 d9 03 	sts	0x03D9, r31
    3b2a:	e0 93 d8 03 	sts	0x03D8, r30
    3b2e:	71 c0       	rjmp	.+226    	; 0x3c12 <free+0x126>
    3b30:	d8 01       	movw	r26, r16
    3b32:	40 e0       	ldi	r20, 0x00	; 0
    3b34:	50 e0       	ldi	r21, 0x00	; 0
    3b36:	ae 17       	cp	r26, r30
    3b38:	bf 07       	cpc	r27, r31
    3b3a:	50 f4       	brcc	.+20     	; 0x3b50 <free+0x64>
    3b3c:	12 96       	adiw	r26, 0x02	; 2
    3b3e:	2d 91       	ld	r18, X+
    3b40:	3c 91       	ld	r19, X
    3b42:	13 97       	sbiw	r26, 0x03	; 3
    3b44:	ad 01       	movw	r20, r26
    3b46:	21 15       	cp	r18, r1
    3b48:	31 05       	cpc	r19, r1
    3b4a:	09 f1       	breq	.+66     	; 0x3b8e <free+0xa2>
    3b4c:	d9 01       	movw	r26, r18
    3b4e:	f3 cf       	rjmp	.-26     	; 0x3b36 <free+0x4a>
    3b50:	9d 01       	movw	r18, r26
    3b52:	da 01       	movw	r26, r20
    3b54:	33 83       	std	Z+3, r19	; 0x03
    3b56:	22 83       	std	Z+2, r18	; 0x02
    3b58:	60 81       	ld	r22, Z
    3b5a:	71 81       	ldd	r23, Z+1	; 0x01
    3b5c:	86 0f       	add	r24, r22
    3b5e:	97 1f       	adc	r25, r23
    3b60:	82 17       	cp	r24, r18
    3b62:	93 07       	cpc	r25, r19
    3b64:	69 f4       	brne	.+26     	; 0x3b80 <free+0x94>
    3b66:	ec 01       	movw	r28, r24
    3b68:	28 81       	ld	r18, Y
    3b6a:	39 81       	ldd	r19, Y+1	; 0x01
    3b6c:	26 0f       	add	r18, r22
    3b6e:	37 1f       	adc	r19, r23
    3b70:	2e 5f       	subi	r18, 0xFE	; 254
    3b72:	3f 4f       	sbci	r19, 0xFF	; 255
    3b74:	31 83       	std	Z+1, r19	; 0x01
    3b76:	20 83       	st	Z, r18
    3b78:	8a 81       	ldd	r24, Y+2	; 0x02
    3b7a:	9b 81       	ldd	r25, Y+3	; 0x03
    3b7c:	93 83       	std	Z+3, r25	; 0x03
    3b7e:	82 83       	std	Z+2, r24	; 0x02
    3b80:	45 2b       	or	r20, r21
    3b82:	29 f4       	brne	.+10     	; 0x3b8e <free+0xa2>
    3b84:	f0 93 db 03 	sts	0x03DB, r31
    3b88:	e0 93 da 03 	sts	0x03DA, r30
    3b8c:	42 c0       	rjmp	.+132    	; 0x3c12 <free+0x126>
    3b8e:	13 96       	adiw	r26, 0x03	; 3
    3b90:	fc 93       	st	X, r31
    3b92:	ee 93       	st	-X, r30
    3b94:	12 97       	sbiw	r26, 0x02	; 2
    3b96:	ed 01       	movw	r28, r26
    3b98:	49 91       	ld	r20, Y+
    3b9a:	59 91       	ld	r21, Y+
    3b9c:	9e 01       	movw	r18, r28
    3b9e:	24 0f       	add	r18, r20
    3ba0:	35 1f       	adc	r19, r21
    3ba2:	e2 17       	cp	r30, r18
    3ba4:	f3 07       	cpc	r31, r19
    3ba6:	71 f4       	brne	.+28     	; 0x3bc4 <free+0xd8>
    3ba8:	80 81       	ld	r24, Z
    3baa:	91 81       	ldd	r25, Z+1	; 0x01
    3bac:	84 0f       	add	r24, r20
    3bae:	95 1f       	adc	r25, r21
    3bb0:	02 96       	adiw	r24, 0x02	; 2
    3bb2:	11 96       	adiw	r26, 0x01	; 1
    3bb4:	9c 93       	st	X, r25
    3bb6:	8e 93       	st	-X, r24
    3bb8:	82 81       	ldd	r24, Z+2	; 0x02
    3bba:	93 81       	ldd	r25, Z+3	; 0x03
    3bbc:	13 96       	adiw	r26, 0x03	; 3
    3bbe:	9c 93       	st	X, r25
    3bc0:	8e 93       	st	-X, r24
    3bc2:	12 97       	sbiw	r26, 0x02	; 2
    3bc4:	e0 e0       	ldi	r30, 0x00	; 0
    3bc6:	f0 e0       	ldi	r31, 0x00	; 0
    3bc8:	d8 01       	movw	r26, r16
    3bca:	12 96       	adiw	r26, 0x02	; 2
    3bcc:	8d 91       	ld	r24, X+
    3bce:	9c 91       	ld	r25, X
    3bd0:	13 97       	sbiw	r26, 0x03	; 3
    3bd2:	00 97       	sbiw	r24, 0x00	; 0
    3bd4:	19 f0       	breq	.+6      	; 0x3bdc <free+0xf0>
    3bd6:	f8 01       	movw	r30, r16
    3bd8:	8c 01       	movw	r16, r24
    3bda:	f6 cf       	rjmp	.-20     	; 0x3bc8 <free+0xdc>
    3bdc:	8d 91       	ld	r24, X+
    3bde:	9c 91       	ld	r25, X
    3be0:	98 01       	movw	r18, r16
    3be2:	2e 5f       	subi	r18, 0xFE	; 254
    3be4:	3f 4f       	sbci	r19, 0xFF	; 255
    3be6:	82 0f       	add	r24, r18
    3be8:	93 1f       	adc	r25, r19
    3bea:	20 91 d8 03 	lds	r18, 0x03D8
    3bee:	30 91 d9 03 	lds	r19, 0x03D9
    3bf2:	28 17       	cp	r18, r24
    3bf4:	39 07       	cpc	r19, r25
    3bf6:	69 f4       	brne	.+26     	; 0x3c12 <free+0x126>
    3bf8:	30 97       	sbiw	r30, 0x00	; 0
    3bfa:	29 f4       	brne	.+10     	; 0x3c06 <free+0x11a>
    3bfc:	10 92 db 03 	sts	0x03DB, r1
    3c00:	10 92 da 03 	sts	0x03DA, r1
    3c04:	02 c0       	rjmp	.+4      	; 0x3c0a <free+0x11e>
    3c06:	13 82       	std	Z+3, r1	; 0x03
    3c08:	12 82       	std	Z+2, r1	; 0x02
    3c0a:	10 93 d9 03 	sts	0x03D9, r17
    3c0e:	00 93 d8 03 	sts	0x03D8, r16
    3c12:	df 91       	pop	r29
    3c14:	cf 91       	pop	r28
    3c16:	1f 91       	pop	r17
    3c18:	0f 91       	pop	r16
    3c1a:	08 95       	ret

00003c1c <strnlen_P>:
    3c1c:	fc 01       	movw	r30, r24
    3c1e:	05 90       	lpm	r0, Z+
    3c20:	61 50       	subi	r22, 0x01	; 1
    3c22:	70 40       	sbci	r23, 0x00	; 0
    3c24:	01 10       	cpse	r0, r1
    3c26:	d8 f7       	brcc	.-10     	; 0x3c1e <strnlen_P+0x2>
    3c28:	80 95       	com	r24
    3c2a:	90 95       	com	r25
    3c2c:	8e 0f       	add	r24, r30
    3c2e:	9f 1f       	adc	r25, r31
    3c30:	08 95       	ret

00003c32 <memset>:
    3c32:	dc 01       	movw	r26, r24
    3c34:	01 c0       	rjmp	.+2      	; 0x3c38 <memset+0x6>
    3c36:	6d 93       	st	X+, r22
    3c38:	41 50       	subi	r20, 0x01	; 1
    3c3a:	50 40       	sbci	r21, 0x00	; 0
    3c3c:	e0 f7       	brcc	.-8      	; 0x3c36 <memset+0x4>
    3c3e:	08 95       	ret

00003c40 <strnlen>:
    3c40:	fc 01       	movw	r30, r24
    3c42:	61 50       	subi	r22, 0x01	; 1
    3c44:	70 40       	sbci	r23, 0x00	; 0
    3c46:	01 90       	ld	r0, Z+
    3c48:	01 10       	cpse	r0, r1
    3c4a:	d8 f7       	brcc	.-10     	; 0x3c42 <strnlen+0x2>
    3c4c:	80 95       	com	r24
    3c4e:	90 95       	com	r25
    3c50:	8e 0f       	add	r24, r30
    3c52:	9f 1f       	adc	r25, r31
    3c54:	08 95       	ret

00003c56 <fputc>:
    3c56:	0f 93       	push	r16
    3c58:	1f 93       	push	r17
    3c5a:	cf 93       	push	r28
    3c5c:	df 93       	push	r29
    3c5e:	fb 01       	movw	r30, r22
    3c60:	23 81       	ldd	r18, Z+3	; 0x03
    3c62:	21 fd       	sbrc	r18, 1
    3c64:	03 c0       	rjmp	.+6      	; 0x3c6c <fputc+0x16>
    3c66:	8f ef       	ldi	r24, 0xFF	; 255
    3c68:	9f ef       	ldi	r25, 0xFF	; 255
    3c6a:	28 c0       	rjmp	.+80     	; 0x3cbc <fputc+0x66>
    3c6c:	22 ff       	sbrs	r18, 2
    3c6e:	16 c0       	rjmp	.+44     	; 0x3c9c <fputc+0x46>
    3c70:	46 81       	ldd	r20, Z+6	; 0x06
    3c72:	57 81       	ldd	r21, Z+7	; 0x07
    3c74:	24 81       	ldd	r18, Z+4	; 0x04
    3c76:	35 81       	ldd	r19, Z+5	; 0x05
    3c78:	42 17       	cp	r20, r18
    3c7a:	53 07       	cpc	r21, r19
    3c7c:	44 f4       	brge	.+16     	; 0x3c8e <fputc+0x38>
    3c7e:	a0 81       	ld	r26, Z
    3c80:	b1 81       	ldd	r27, Z+1	; 0x01
    3c82:	9d 01       	movw	r18, r26
    3c84:	2f 5f       	subi	r18, 0xFF	; 255
    3c86:	3f 4f       	sbci	r19, 0xFF	; 255
    3c88:	31 83       	std	Z+1, r19	; 0x01
    3c8a:	20 83       	st	Z, r18
    3c8c:	8c 93       	st	X, r24
    3c8e:	26 81       	ldd	r18, Z+6	; 0x06
    3c90:	37 81       	ldd	r19, Z+7	; 0x07
    3c92:	2f 5f       	subi	r18, 0xFF	; 255
    3c94:	3f 4f       	sbci	r19, 0xFF	; 255
    3c96:	37 83       	std	Z+7, r19	; 0x07
    3c98:	26 83       	std	Z+6, r18	; 0x06
    3c9a:	10 c0       	rjmp	.+32     	; 0x3cbc <fputc+0x66>
    3c9c:	eb 01       	movw	r28, r22
    3c9e:	09 2f       	mov	r16, r25
    3ca0:	18 2f       	mov	r17, r24
    3ca2:	00 84       	ldd	r0, Z+8	; 0x08
    3ca4:	f1 85       	ldd	r31, Z+9	; 0x09
    3ca6:	e0 2d       	mov	r30, r0
    3ca8:	09 95       	icall
    3caa:	89 2b       	or	r24, r25
    3cac:	e1 f6       	brne	.-72     	; 0x3c66 <fputc+0x10>
    3cae:	8e 81       	ldd	r24, Y+6	; 0x06
    3cb0:	9f 81       	ldd	r25, Y+7	; 0x07
    3cb2:	01 96       	adiw	r24, 0x01	; 1
    3cb4:	9f 83       	std	Y+7, r25	; 0x07
    3cb6:	8e 83       	std	Y+6, r24	; 0x06
    3cb8:	81 2f       	mov	r24, r17
    3cba:	90 2f       	mov	r25, r16
    3cbc:	df 91       	pop	r29
    3cbe:	cf 91       	pop	r28
    3cc0:	1f 91       	pop	r17
    3cc2:	0f 91       	pop	r16
    3cc4:	08 95       	ret

00003cc6 <__ultoa_invert>:
    3cc6:	fa 01       	movw	r30, r20
    3cc8:	aa 27       	eor	r26, r26
    3cca:	28 30       	cpi	r18, 0x08	; 8
    3ccc:	51 f1       	breq	.+84     	; 0x3d22 <__ultoa_invert+0x5c>
    3cce:	20 31       	cpi	r18, 0x10	; 16
    3cd0:	81 f1       	breq	.+96     	; 0x3d32 <__ultoa_invert+0x6c>
    3cd2:	e8 94       	clt
    3cd4:	6f 93       	push	r22
    3cd6:	6e 7f       	andi	r22, 0xFE	; 254
    3cd8:	6e 5f       	subi	r22, 0xFE	; 254
    3cda:	7f 4f       	sbci	r23, 0xFF	; 255
    3cdc:	8f 4f       	sbci	r24, 0xFF	; 255
    3cde:	9f 4f       	sbci	r25, 0xFF	; 255
    3ce0:	af 4f       	sbci	r26, 0xFF	; 255
    3ce2:	b1 e0       	ldi	r27, 0x01	; 1
    3ce4:	3e d0       	rcall	.+124    	; 0x3d62 <__ultoa_invert+0x9c>
    3ce6:	b4 e0       	ldi	r27, 0x04	; 4
    3ce8:	3c d0       	rcall	.+120    	; 0x3d62 <__ultoa_invert+0x9c>
    3cea:	67 0f       	add	r22, r23
    3cec:	78 1f       	adc	r23, r24
    3cee:	89 1f       	adc	r24, r25
    3cf0:	9a 1f       	adc	r25, r26
    3cf2:	a1 1d       	adc	r26, r1
    3cf4:	68 0f       	add	r22, r24
    3cf6:	79 1f       	adc	r23, r25
    3cf8:	8a 1f       	adc	r24, r26
    3cfa:	91 1d       	adc	r25, r1
    3cfc:	a1 1d       	adc	r26, r1
    3cfe:	6a 0f       	add	r22, r26
    3d00:	71 1d       	adc	r23, r1
    3d02:	81 1d       	adc	r24, r1
    3d04:	91 1d       	adc	r25, r1
    3d06:	a1 1d       	adc	r26, r1
    3d08:	20 d0       	rcall	.+64     	; 0x3d4a <__ultoa_invert+0x84>
    3d0a:	09 f4       	brne	.+2      	; 0x3d0e <__ultoa_invert+0x48>
    3d0c:	68 94       	set
    3d0e:	3f 91       	pop	r19
    3d10:	2a e0       	ldi	r18, 0x0A	; 10
    3d12:	26 9f       	mul	r18, r22
    3d14:	11 24       	eor	r1, r1
    3d16:	30 19       	sub	r19, r0
    3d18:	30 5d       	subi	r19, 0xD0	; 208
    3d1a:	31 93       	st	Z+, r19
    3d1c:	de f6       	brtc	.-74     	; 0x3cd4 <__ultoa_invert+0xe>
    3d1e:	cf 01       	movw	r24, r30
    3d20:	08 95       	ret
    3d22:	46 2f       	mov	r20, r22
    3d24:	47 70       	andi	r20, 0x07	; 7
    3d26:	40 5d       	subi	r20, 0xD0	; 208
    3d28:	41 93       	st	Z+, r20
    3d2a:	b3 e0       	ldi	r27, 0x03	; 3
    3d2c:	0f d0       	rcall	.+30     	; 0x3d4c <__ultoa_invert+0x86>
    3d2e:	c9 f7       	brne	.-14     	; 0x3d22 <__ultoa_invert+0x5c>
    3d30:	f6 cf       	rjmp	.-20     	; 0x3d1e <__ultoa_invert+0x58>
    3d32:	46 2f       	mov	r20, r22
    3d34:	4f 70       	andi	r20, 0x0F	; 15
    3d36:	40 5d       	subi	r20, 0xD0	; 208
    3d38:	4a 33       	cpi	r20, 0x3A	; 58
    3d3a:	18 f0       	brcs	.+6      	; 0x3d42 <__ultoa_invert+0x7c>
    3d3c:	49 5d       	subi	r20, 0xD9	; 217
    3d3e:	31 fd       	sbrc	r19, 1
    3d40:	40 52       	subi	r20, 0x20	; 32
    3d42:	41 93       	st	Z+, r20
    3d44:	02 d0       	rcall	.+4      	; 0x3d4a <__ultoa_invert+0x84>
    3d46:	a9 f7       	brne	.-22     	; 0x3d32 <__ultoa_invert+0x6c>
    3d48:	ea cf       	rjmp	.-44     	; 0x3d1e <__ultoa_invert+0x58>
    3d4a:	b4 e0       	ldi	r27, 0x04	; 4
    3d4c:	a6 95       	lsr	r26
    3d4e:	97 95       	ror	r25
    3d50:	87 95       	ror	r24
    3d52:	77 95       	ror	r23
    3d54:	67 95       	ror	r22
    3d56:	ba 95       	dec	r27
    3d58:	c9 f7       	brne	.-14     	; 0x3d4c <__ultoa_invert+0x86>
    3d5a:	00 97       	sbiw	r24, 0x00	; 0
    3d5c:	61 05       	cpc	r22, r1
    3d5e:	71 05       	cpc	r23, r1
    3d60:	08 95       	ret
    3d62:	9b 01       	movw	r18, r22
    3d64:	ac 01       	movw	r20, r24
    3d66:	0a 2e       	mov	r0, r26
    3d68:	06 94       	lsr	r0
    3d6a:	57 95       	ror	r21
    3d6c:	47 95       	ror	r20
    3d6e:	37 95       	ror	r19
    3d70:	27 95       	ror	r18
    3d72:	ba 95       	dec	r27
    3d74:	c9 f7       	brne	.-14     	; 0x3d68 <__ultoa_invert+0xa2>
    3d76:	62 0f       	add	r22, r18
    3d78:	73 1f       	adc	r23, r19
    3d7a:	84 1f       	adc	r24, r20
    3d7c:	95 1f       	adc	r25, r21
    3d7e:	a0 1d       	adc	r26, r0
    3d80:	08 95       	ret

00003d82 <_exit>:
    3d82:	f8 94       	cli

00003d84 <__stop_program>:
    3d84:	ff cf       	rjmp	.-2      	; 0x3d84 <__stop_program>
