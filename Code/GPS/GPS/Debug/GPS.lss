
GPS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000dc  00800100  00003878  0000390c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003878  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000d0  008001dc  008001dc  000039e8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000039e8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003a44  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002e8  00000000  00000000  00003a84  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004cbf  00000000  00000000  00003d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b84  00000000  00000000  00008a2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000036c4  00000000  00000000  000095af  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000e98  00000000  00000000  0000cc74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009cb  00000000  00000000  0000db0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00007573  00000000  00000000  0000e4d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000328  00000000  00000000  00015a4a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	58 c0       	rjmp	.+176    	; 0xb2 <__ctors_end>
       2:	00 00       	nop
       4:	75 c0       	rjmp	.+234    	; 0xf0 <__bad_interrupt>
       6:	00 00       	nop
       8:	73 c0       	rjmp	.+230    	; 0xf0 <__bad_interrupt>
       a:	00 00       	nop
       c:	71 c0       	rjmp	.+226    	; 0xf0 <__bad_interrupt>
       e:	00 00       	nop
      10:	6f c0       	rjmp	.+222    	; 0xf0 <__bad_interrupt>
      12:	00 00       	nop
      14:	6d c0       	rjmp	.+218    	; 0xf0 <__bad_interrupt>
      16:	00 00       	nop
      18:	6b c0       	rjmp	.+214    	; 0xf0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	69 c0       	rjmp	.+210    	; 0xf0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	67 c0       	rjmp	.+206    	; 0xf0 <__bad_interrupt>
      22:	00 00       	nop
      24:	65 c0       	rjmp	.+202    	; 0xf0 <__bad_interrupt>
      26:	00 00       	nop
      28:	63 c0       	rjmp	.+198    	; 0xf0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	61 c0       	rjmp	.+194    	; 0xf0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	5f c0       	rjmp	.+190    	; 0xf0 <__bad_interrupt>
      32:	00 00       	nop
      34:	5d c0       	rjmp	.+186    	; 0xf0 <__bad_interrupt>
      36:	00 00       	nop
      38:	5b c0       	rjmp	.+182    	; 0xf0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	59 c0       	rjmp	.+178    	; 0xf0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	57 c0       	rjmp	.+174    	; 0xf0 <__bad_interrupt>
      42:	00 00       	nop
      44:	55 c0       	rjmp	.+170    	; 0xf0 <__bad_interrupt>
      46:	00 00       	nop
      48:	54 c0       	rjmp	.+168    	; 0xf2 <__vector_18>
      4a:	00 00       	nop
      4c:	51 c0       	rjmp	.+162    	; 0xf0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	4f c0       	rjmp	.+158    	; 0xf0 <__bad_interrupt>
      52:	00 00       	nop
      54:	4d c0       	rjmp	.+154    	; 0xf0 <__bad_interrupt>
      56:	00 00       	nop
      58:	4b c0       	rjmp	.+150    	; 0xf0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	49 c0       	rjmp	.+146    	; 0xf0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	47 c0       	rjmp	.+142    	; 0xf0 <__bad_interrupt>
      62:	00 00       	nop
      64:	45 c0       	rjmp	.+138    	; 0xf0 <__bad_interrupt>
      66:	00 00       	nop
      68:	43 c0       	rjmp	.+134    	; 0xf0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	41 c0       	rjmp	.+130    	; 0xf0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	3f c0       	rjmp	.+126    	; 0xf0 <__bad_interrupt>
      72:	00 00       	nop
      74:	3d c0       	rjmp	.+122    	; 0xf0 <__bad_interrupt>
      76:	00 00       	nop
      78:	3b c0       	rjmp	.+118    	; 0xf0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	39 c0       	rjmp	.+114    	; 0xf0 <__bad_interrupt>
      7e:	00 00       	nop
      80:	37 c0       	rjmp	.+110    	; 0xf0 <__bad_interrupt>
      82:	00 00       	nop
      84:	35 c0       	rjmp	.+106    	; 0xf0 <__bad_interrupt>
      86:	00 00       	nop
      88:	33 c0       	rjmp	.+102    	; 0xf0 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	31 c0       	rjmp	.+98     	; 0xf0 <__bad_interrupt>
      8e:	00 00       	nop
      90:	2f c0       	rjmp	.+94     	; 0xf0 <__bad_interrupt>
      92:	00 00       	nop
      94:	43 04       	cpc	r4, r3
      96:	4a 04       	cpc	r4, r10
      98:	b1 04       	cpc	r11, r1
      9a:	b8 04       	cpc	r11, r8
      9c:	89 05       	cpc	r24, r9
      9e:	89 05       	cpc	r24, r9
      a0:	89 05       	cpc	r24, r9
      a2:	89 05       	cpc	r24, r9
      a4:	89 05       	cpc	r24, r9
      a6:	89 05       	cpc	r24, r9
      a8:	3c 05       	cpc	r19, r12
      aa:	42 05       	cpc	r20, r2
      ac:	53 05       	cpc	r21, r3
      ae:	64 05       	cpc	r22, r4
      b0:	78 05       	cpc	r23, r8

000000b2 <__ctors_end>:
      b2:	11 24       	eor	r1, r1
      b4:	1f be       	out	0x3f, r1	; 63
      b6:	cf ef       	ldi	r28, 0xFF	; 255
      b8:	d0 e1       	ldi	r29, 0x10	; 16
      ba:	de bf       	out	0x3e, r29	; 62
      bc:	cd bf       	out	0x3d, r28	; 61

000000be <__do_copy_data>:
      be:	11 e0       	ldi	r17, 0x01	; 1
      c0:	a0 e0       	ldi	r26, 0x00	; 0
      c2:	b1 e0       	ldi	r27, 0x01	; 1
      c4:	e8 e7       	ldi	r30, 0x78	; 120
      c6:	f8 e3       	ldi	r31, 0x38	; 56
      c8:	00 e0       	ldi	r16, 0x00	; 0
      ca:	0b bf       	out	0x3b, r16	; 59
      cc:	02 c0       	rjmp	.+4      	; 0xd2 <__do_copy_data+0x14>
      ce:	07 90       	elpm	r0, Z+
      d0:	0d 92       	st	X+, r0
      d2:	ac 3d       	cpi	r26, 0xDC	; 220
      d4:	b1 07       	cpc	r27, r17
      d6:	d9 f7       	brne	.-10     	; 0xce <__do_copy_data+0x10>

000000d8 <__do_clear_bss>:
      d8:	22 e0       	ldi	r18, 0x02	; 2
      da:	ac ed       	ldi	r26, 0xDC	; 220
      dc:	b1 e0       	ldi	r27, 0x01	; 1
      de:	01 c0       	rjmp	.+2      	; 0xe2 <.do_clear_bss_start>

000000e0 <.do_clear_bss_loop>:
      e0:	1d 92       	st	X+, r1

000000e2 <.do_clear_bss_start>:
      e2:	ac 3a       	cpi	r26, 0xAC	; 172
      e4:	b2 07       	cpc	r27, r18
      e6:	e1 f7       	brne	.-8      	; 0xe0 <.do_clear_bss_loop>
      e8:	0e 94 7e 16 	call	0x2cfc	; 0x2cfc <main>
      ec:	0c 94 3a 1c 	jmp	0x3874	; 0x3874 <_exit>

000000f0 <__bad_interrupt>:
      f0:	87 cf       	rjmp	.-242    	; 0x0 <__vectors>

000000f2 <__vector_18>:
        CANIDT4 = 1<<RTRTAG;
		CANCDMOB|=packet->length;
		}
    CANCDMOB|=0x40; //enable TX
	return TRUE;
	}
      f2:	1f 92       	push	r1
      f4:	0f 92       	push	r0
      f6:	0f b6       	in	r0, 0x3f	; 63
      f8:	0f 92       	push	r0
      fa:	11 24       	eor	r1, r1
      fc:	0b b6       	in	r0, 0x3b	; 59
      fe:	0f 92       	push	r0
     100:	2f 93       	push	r18
     102:	3f 93       	push	r19
     104:	4f 93       	push	r20
     106:	5f 93       	push	r21
     108:	6f 93       	push	r22
     10a:	7f 93       	push	r23
     10c:	8f 93       	push	r24
     10e:	9f 93       	push	r25
     110:	af 93       	push	r26
     112:	bf 93       	push	r27
     114:	cf 93       	push	r28
     116:	ef 93       	push	r30
     118:	ff 93       	push	r31
     11a:	ed ee       	ldi	r30, 0xED	; 237
     11c:	f0 e0       	ldi	r31, 0x00	; 0
     11e:	c0 81       	ld	r28, Z
     120:	80 91 ec 00 	lds	r24, 0x00EC
     124:	68 2f       	mov	r22, r24
     126:	70 e0       	ldi	r23, 0x00	; 0
     128:	80 7f       	andi	r24, 0xF0	; 240
     12a:	80 83       	st	Z, r24
     12c:	72 95       	swap	r23
     12e:	62 95       	swap	r22
     130:	6f 70       	andi	r22, 0x0F	; 15
     132:	67 27       	eor	r22, r23
     134:	7f 70       	andi	r23, 0x0F	; 15
     136:	67 27       	eor	r22, r23
     138:	80 91 ee 00 	lds	r24, 0x00EE
     13c:	8f 75       	andi	r24, 0x5F	; 95
     13e:	09 f0       	breq	.+2      	; 0x142 <__vector_18+0x50>
     140:	98 95       	break
     142:	20 91 f2 00 	lds	r18, 0x00F2
     146:	80 91 f3 00 	lds	r24, 0x00F3
     14a:	ec ed       	ldi	r30, 0xDC	; 220
     14c:	f1 e0       	ldi	r31, 0x01	; 1
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	88 0f       	add	r24, r24
     152:	99 1f       	adc	r25, r25
     154:	88 0f       	add	r24, r24
     156:	99 1f       	adc	r25, r25
     158:	88 0f       	add	r24, r24
     15a:	99 1f       	adc	r25, r25
     15c:	22 95       	swap	r18
     15e:	26 95       	lsr	r18
     160:	27 70       	andi	r18, 0x07	; 7
     162:	82 2b       	or	r24, r18
     164:	91 83       	std	Z+1, r25	; 0x01
     166:	80 83       	st	Z, r24
     168:	80 91 ef 00 	lds	r24, 0x00EF
     16c:	8f 70       	andi	r24, 0x0F	; 15
     16e:	82 83       	std	Z+2, r24	; 0x02
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	00 97       	sbiw	r24, 0x00	; 0
     174:	59 f0       	breq	.+22     	; 0x18c <__vector_18+0x9a>
     176:	ef ed       	ldi	r30, 0xDF	; 223
     178:	f1 e0       	ldi	r31, 0x01	; 1
     17a:	81 52       	subi	r24, 0x21	; 33
     17c:	9e 4f       	sbci	r25, 0xFE	; 254
     17e:	aa ef       	ldi	r26, 0xFA	; 250
     180:	b0 e0       	ldi	r27, 0x00	; 0
     182:	2c 91       	ld	r18, X
     184:	21 93       	st	Z+, r18
     186:	e8 17       	cp	r30, r24
     188:	f9 07       	cpc	r31, r25
     18a:	d9 f7       	brne	.-10     	; 0x182 <__vector_18+0x90>
     18c:	10 92 ee 00 	sts	0x00EE, r1
     190:	80 e8       	ldi	r24, 0x80	; 128
     192:	80 93 ef 00 	sts	0x00EF, r24
     196:	fb 01       	movw	r30, r22
     198:	ee 0f       	add	r30, r30
     19a:	ff 1f       	adc	r31, r31
     19c:	ee 50       	subi	r30, 0x0E	; 14
     19e:	fe 4f       	sbci	r31, 0xFE	; 254
     1a0:	01 90       	ld	r0, Z+
     1a2:	f0 81       	ld	r31, Z
     1a4:	e0 2d       	mov	r30, r0
     1a6:	8c ed       	ldi	r24, 0xDC	; 220
     1a8:	91 e0       	ldi	r25, 0x01	; 1
     1aa:	09 95       	icall
     1ac:	c0 93 ed 00 	sts	0x00ED, r28
     1b0:	ff 91       	pop	r31
     1b2:	ef 91       	pop	r30
     1b4:	cf 91       	pop	r28
     1b6:	bf 91       	pop	r27
     1b8:	af 91       	pop	r26
     1ba:	9f 91       	pop	r25
     1bc:	8f 91       	pop	r24
     1be:	7f 91       	pop	r23
     1c0:	6f 91       	pop	r22
     1c2:	5f 91       	pop	r21
     1c4:	4f 91       	pop	r20
     1c6:	3f 91       	pop	r19
     1c8:	2f 91       	pop	r18
     1ca:	0f 90       	pop	r0
     1cc:	0b be       	out	0x3b, r0	; 59
     1ce:	0f 90       	pop	r0
     1d0:	0f be       	out	0x3f, r0	; 63
     1d2:	0f 90       	pop	r0
     1d4:	1f 90       	pop	r1
     1d6:	18 95       	reti

000001d8 <prepare_rx>:

BOOL prepare_rx( char mob, unsigned id, unsigned idmask, CAN_cbf callback)
	{
	if( mob >= 15) 				// illegal MOB number
     1d8:	8f 30       	cpi	r24, 0x0F	; 15
     1da:	08 f0       	brcs	.+2      	; 0x1de <prepare_rx+0x6>
     1dc:	6d c0       	rjmp	.+218    	; 0x2b8 <prepare_rx+0xe0>
		return TRUE;
	canlist[ (unsigned)mob]=callback;
     1de:	e8 2f       	mov	r30, r24
     1e0:	f0 e0       	ldi	r31, 0x00	; 0
     1e2:	ee 0f       	add	r30, r30
     1e4:	ff 1f       	adc	r31, r31
     1e6:	ee 50       	subi	r30, 0x0E	; 14
     1e8:	fe 4f       	sbci	r31, 0xFE	; 254
     1ea:	31 83       	std	Z+1, r19	; 0x01
     1ec:	20 83       	st	Z, r18
    CANPAGE = mob << 4;
     1ee:	98 2f       	mov	r25, r24
     1f0:	92 95       	swap	r25
     1f2:	90 7f       	andi	r25, 0xF0	; 240
     1f4:	90 93 ed 00 	sts	0x00ED, r25
	if( callback==0)			// release this MOB 
     1f8:	23 2b       	or	r18, r19
     1fa:	d9 f4       	brne	.+54     	; 0x232 <prepare_rx+0x5a>
		{
		CANSTMOB = 0x00;    	// cancel pending operation
     1fc:	10 92 ee 00 	sts	0x00EE, r1
		CANCDMOB = 0x00;
     200:	10 92 ef 00 	sts	0x00EF, r1
		unsigned mask=1<<mob;
     204:	21 e0       	ldi	r18, 0x01	; 1
     206:	30 e0       	ldi	r19, 0x00	; 0
     208:	a9 01       	movw	r20, r18
     20a:	02 c0       	rjmp	.+4      	; 0x210 <prepare_rx+0x38>
     20c:	44 0f       	add	r20, r20
     20e:	55 1f       	adc	r21, r21
     210:	8a 95       	dec	r24
     212:	e2 f7       	brpl	.-8      	; 0x20c <prepare_rx+0x34>
     214:	ca 01       	movw	r24, r20
		CANIE2 &=  ~mask;
     216:	ee ed       	ldi	r30, 0xDE	; 222
     218:	f0 e0       	ldi	r31, 0x00	; 0
     21a:	20 81       	ld	r18, Z
     21c:	80 95       	com	r24
     21e:	82 23       	and	r24, r18
     220:	80 83       	st	Z, r24
		CANIE1 &= ~(mask>>8);
     222:	ef ed       	ldi	r30, 0xDF	; 223
     224:	f0 e0       	ldi	r31, 0x00	; 0
     226:	80 81       	ld	r24, Z
     228:	90 95       	com	r25
     22a:	89 23       	and	r24, r25
     22c:	80 83       	st	Z, r24
		return FALSE;
     22e:	80 e0       	ldi	r24, 0x00	; 0
     230:	08 95       	ret
		}
	if( CANCDMOB & 0b11000000) 	// if MOB already in use
     232:	90 91 ef 00 	lds	r25, 0x00EF
     236:	90 7c       	andi	r25, 0xC0	; 192
     238:	09 f0       	breq	.+2      	; 0x23c <prepare_rx+0x64>
     23a:	40 c0       	rjmp	.+128    	; 0x2bc <prepare_rx+0xe4>
		return TRUE;			// no vacancy ...
	CANSTMOB = 0x00;    	// cancel pending operation 
     23c:	10 92 ee 00 	sts	0x00EE, r1
	CANCDMOB = 0x00;		
     240:	ef ee       	ldi	r30, 0xEF	; 239
     242:	f0 e0       	ldi	r31, 0x00	; 0
     244:	10 82       	st	Z, r1
	CANHPMOB = 0x00;		// enable direct mob indexing, see doc
     246:	10 92 ec 00 	sts	0x00EC, r1
	CANIDT1=id >>3;
     24a:	9b 01       	movw	r18, r22
     24c:	36 95       	lsr	r19
     24e:	27 95       	ror	r18
     250:	36 95       	lsr	r19
     252:	27 95       	ror	r18
     254:	36 95       	lsr	r19
     256:	27 95       	ror	r18
     258:	20 93 f3 00 	sts	0x00F3, r18
	CANIDT2=id <<5;
     25c:	62 95       	swap	r22
     25e:	66 0f       	add	r22, r22
     260:	60 7e       	andi	r22, 0xE0	; 224
     262:	60 93 f2 00 	sts	0x00F2, r22
	CANIDM1=idmask >>3;
     266:	9a 01       	movw	r18, r20
     268:	36 95       	lsr	r19
     26a:	27 95       	ror	r18
     26c:	36 95       	lsr	r19
     26e:	27 95       	ror	r18
     270:	36 95       	lsr	r19
     272:	27 95       	ror	r18
     274:	20 93 f7 00 	sts	0x00F7, r18
	CANIDM2=idmask <<5;
     278:	42 95       	swap	r20
     27a:	44 0f       	add	r20, r20
     27c:	40 7e       	andi	r20, 0xE0	; 224
     27e:	40 93 f6 00 	sts	0x00F6, r20
	CANIDM3=0;
     282:	10 92 f5 00 	sts	0x00F5, r1
	CANIDM4=0;
     286:	10 92 f4 00 	sts	0x00F4, r1
	CANCDMOB=0x80; // enable RX
     28a:	90 e8       	ldi	r25, 0x80	; 128
     28c:	90 83       	st	Z, r25
	unsigned mask=1<<mob;
     28e:	21 e0       	ldi	r18, 0x01	; 1
     290:	30 e0       	ldi	r19, 0x00	; 0
     292:	a9 01       	movw	r20, r18
     294:	02 c0       	rjmp	.+4      	; 0x29a <prepare_rx+0xc2>
     296:	44 0f       	add	r20, r20
     298:	55 1f       	adc	r21, r21
     29a:	8a 95       	dec	r24
     29c:	e2 f7       	brpl	.-8      	; 0x296 <prepare_rx+0xbe>
     29e:	ca 01       	movw	r24, r20
	CANIE2 |=  mask;
     2a0:	ee ed       	ldi	r30, 0xDE	; 222
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	20 81       	ld	r18, Z
     2a6:	82 2b       	or	r24, r18
     2a8:	80 83       	st	Z, r24
	CANIE1 |= (mask>>8);
     2aa:	ef ed       	ldi	r30, 0xDF	; 223
     2ac:	f0 e0       	ldi	r31, 0x00	; 0
     2ae:	80 81       	ld	r24, Z
     2b0:	89 2b       	or	r24, r25
     2b2:	80 83       	st	Z, r24
	return FALSE;
     2b4:	80 e0       	ldi	r24, 0x00	; 0
     2b6:	08 95       	ret
	}

BOOL prepare_rx( char mob, unsigned id, unsigned idmask, CAN_cbf callback)
	{
	if( mob >= 15) 				// illegal MOB number
		return TRUE;
     2b8:	81 e0       	ldi	r24, 0x01	; 1
     2ba:	08 95       	ret
		CANIE2 &=  ~mask;
		CANIE1 &= ~(mask>>8);
		return FALSE;
		}
	if( CANCDMOB & 0b11000000) 	// if MOB already in use
		return TRUE;			// no vacancy ...
     2bc:	81 e0       	ldi	r24, 0x01	; 1
	CANCDMOB=0x80; // enable RX
	unsigned mask=1<<mob;
	CANIE2 |=  mask;
	CANIE1 |= (mask>>8);
	return FALSE;
	}
     2be:	08 95       	ret

000002c0 <can_init>:

void can_init( void)
	{
     2c0:	cf 93       	push	r28
     2c2:	df 93       	push	r29
	unsigned mob;
//! \bug different baud rate support not implemented yet 
#if F_CPU == 8000000
	//Old implementation
	CANBT1=0x06;	// 8MHz, 100kbit/s
     2c4:	86 e0       	ldi	r24, 0x06	; 6
     2c6:	80 93 e2 00 	sts	0x00E2, r24
	CANBT2=0x0c;
     2ca:	8c e0       	ldi	r24, 0x0C	; 12
     2cc:	80 93 e3 00 	sts	0x00E3, r24
	CANBT3=0x5a;
     2d0:	8a e5       	ldi	r24, 0x5A	; 90
     2d2:	80 93 e4 00 	sts	0x00E4, r24
     2d6:	80 e0       	ldi	r24, 0x00	; 0
	CANBT2=0x04;
	CANBT3=0x13;
#endif
	for (mob = 0; mob < NO_MOBS; mob++)
		{
		CANPAGE  = (mob << 4);
     2d8:	cd ee       	ldi	r28, 0xED	; 237
     2da:	d0 e0       	ldi	r29, 0x00	; 0
		CANSTMOB = 0;
     2dc:	ae ee       	ldi	r26, 0xEE	; 238
     2de:	b0 e0       	ldi	r27, 0x00	; 0
		CANCDMOB = 0;
     2e0:	ef ee       	ldi	r30, 0xEF	; 239
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
	CANBT2=0x04;
	CANBT3=0x13;
#endif
	for (mob = 0; mob < NO_MOBS; mob++)
		{
		CANPAGE  = (mob << 4);
     2e4:	98 2f       	mov	r25, r24
     2e6:	92 95       	swap	r25
     2e8:	90 7f       	andi	r25, 0xF0	; 240
     2ea:	98 83       	st	Y, r25
		CANSTMOB = 0;
     2ec:	1c 92       	st	X, r1
		CANCDMOB = 0;
     2ee:	10 82       	st	Z, r1
     2f0:	8f 5f       	subi	r24, 0xFF	; 255
#else
	CANBT1=0x26;	// 16 MHz, 100kbit/s
	CANBT2=0x04;
	CANBT3=0x13;
#endif
	for (mob = 0; mob < NO_MOBS; mob++)
     2f2:	8f 30       	cpi	r24, 0x0F	; 15
     2f4:	b9 f7       	brne	.-18     	; 0x2e4 <can_init+0x24>
		{
		CANPAGE  = (mob << 4);
		CANSTMOB = 0;
		CANCDMOB = 0;
		}
	CANGCON |= 0x02;
     2f6:	e8 ed       	ldi	r30, 0xD8	; 216
     2f8:	f0 e0       	ldi	r31, 0x00	; 0
     2fa:	80 81       	ld	r24, Z
     2fc:	82 60       	ori	r24, 0x02	; 2
     2fe:	80 83       	st	Z, r24
	CANGIE=(1<<ENIT) | (1<< ENRX);
     300:	80 ea       	ldi	r24, 0xA0	; 160
     302:	80 93 db 00 	sts	0x00DB, r24
}
     306:	df 91       	pop	r29
     308:	cf 91       	pop	r28
     30a:	08 95       	ret

0000030c <rcvr_spi>:
		if (pv & SOCKINS)			/* INS = H (Socket empty) */
			s |= (STA_NODISK | STA_NOINIT);
		else						/* INS = L (Card inserted) */
			s &= ~STA_NODISK;

		Stat = s;
     30c:	f8 94       	cli
     30e:	8f ef       	ldi	r24, 0xFF	; 255
     310:	8e bd       	out	0x2e, r24	; 46
     312:	0d b4       	in	r0, 0x2d	; 45
     314:	07 fe       	sbrs	r0, 7
     316:	fd cf       	rjmp	.-6      	; 0x312 <rcvr_spi+0x6>
     318:	78 94       	sei
     31a:	8e b5       	in	r24, 0x2e	; 46
     31c:	08 95       	ret

0000031e <wait_ready>:
     31e:	82 e3       	ldi	r24, 0x32	; 50
     320:	80 93 e8 01 	sts	0x01E8, r24
     324:	f3 df       	rcall	.-26     	; 0x30c <rcvr_spi>
     326:	f2 df       	rcall	.-28     	; 0x30c <rcvr_spi>
     328:	8f 3f       	cpi	r24, 0xFF	; 255
     32a:	39 f0       	breq	.+14     	; 0x33a <wait_ready+0x1c>
     32c:	80 91 e8 01 	lds	r24, 0x01E8
     330:	81 11       	cpse	r24, r1
     332:	f9 cf       	rjmp	.-14     	; 0x326 <wait_ready+0x8>
     334:	80 e0       	ldi	r24, 0x00	; 0
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	08 95       	ret
     33a:	81 e0       	ldi	r24, 0x01	; 1
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	08 95       	ret

00000340 <deselect>:
     340:	28 9a       	sbi	0x05, 0	; 5
     342:	e4 cf       	rjmp	.-56     	; 0x30c <rcvr_spi>
     344:	08 95       	ret

00000346 <select>:
     346:	cf 93       	push	r28
     348:	df 93       	push	r29
     34a:	28 98       	cbi	0x05, 0	; 5
     34c:	e8 df       	rcall	.-48     	; 0x31e <wait_ready>
     34e:	ec 01       	movw	r28, r24
     350:	89 2b       	or	r24, r25
     352:	11 f4       	brne	.+4      	; 0x358 <select+0x12>
     354:	f5 df       	rcall	.-22     	; 0x340 <deselect>
     356:	02 c0       	rjmp	.+4      	; 0x35c <select+0x16>
     358:	c1 e0       	ldi	r28, 0x01	; 1
     35a:	d0 e0       	ldi	r29, 0x00	; 0
     35c:	ce 01       	movw	r24, r28
     35e:	df 91       	pop	r29
     360:	cf 91       	pop	r28
     362:	08 95       	ret

00000364 <rcvr_datablock>:
     364:	0f 93       	push	r16
     366:	1f 93       	push	r17
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	ec 01       	movw	r28, r24
     36e:	8b 01       	movw	r16, r22
     370:	84 e1       	ldi	r24, 0x14	; 20
     372:	80 93 e9 01 	sts	0x01E9, r24
     376:	ca df       	rcall	.-108    	; 0x30c <rcvr_spi>
     378:	8f 3f       	cpi	r24, 0xFF	; 255
     37a:	39 f4       	brne	.+14     	; 0x38a <rcvr_datablock+0x26>
     37c:	90 91 e9 01 	lds	r25, 0x01E9
     380:	91 11       	cpse	r25, r1
     382:	f9 cf       	rjmp	.-14     	; 0x376 <rcvr_datablock+0x12>
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	31 c0       	rjmp	.+98     	; 0x3ec <rcvr_datablock+0x88>
     38a:	8e 3f       	cpi	r24, 0xFE	; 254
     38c:	69 f5       	brne	.+90     	; 0x3e8 <rcvr_datablock+0x84>
     38e:	ce 01       	movw	r24, r28
     390:	03 96       	adiw	r24, 0x03	; 3
     392:	2f ef       	ldi	r18, 0xFF	; 255
     394:	2e bd       	out	0x2e, r18	; 46
     396:	0d b4       	in	r0, 0x2d	; 45
     398:	07 fe       	sbrs	r0, 7
     39a:	fd cf       	rjmp	.-6      	; 0x396 <rcvr_datablock+0x32>
     39c:	3e b5       	in	r19, 0x2e	; 46
     39e:	fc 01       	movw	r30, r24
     3a0:	dc 01       	movw	r26, r24
     3a2:	13 97       	sbiw	r26, 0x03	; 3
     3a4:	3c 93       	st	X, r19
     3a6:	2e bd       	out	0x2e, r18	; 46
     3a8:	0d b4       	in	r0, 0x2d	; 45
     3aa:	07 fe       	sbrs	r0, 7
     3ac:	fd cf       	rjmp	.-6      	; 0x3a8 <rcvr_datablock+0x44>
     3ae:	3e b5       	in	r19, 0x2e	; 46
     3b0:	df 01       	movw	r26, r30
     3b2:	12 97       	sbiw	r26, 0x02	; 2
     3b4:	3c 93       	st	X, r19
     3b6:	2e bd       	out	0x2e, r18	; 46
     3b8:	0d b4       	in	r0, 0x2d	; 45
     3ba:	07 fe       	sbrs	r0, 7
     3bc:	fd cf       	rjmp	.-6      	; 0x3b8 <rcvr_datablock+0x54>
     3be:	3e b5       	in	r19, 0x2e	; 46
     3c0:	df 01       	movw	r26, r30
     3c2:	11 97       	sbiw	r26, 0x01	; 1
     3c4:	3c 93       	st	X, r19
     3c6:	2e bd       	out	0x2e, r18	; 46
     3c8:	0d b4       	in	r0, 0x2d	; 45
     3ca:	07 fe       	sbrs	r0, 7
     3cc:	fd cf       	rjmp	.-6      	; 0x3c8 <rcvr_datablock+0x64>
     3ce:	3e b5       	in	r19, 0x2e	; 46
     3d0:	30 83       	st	Z, r19
     3d2:	04 50       	subi	r16, 0x04	; 4
     3d4:	11 09       	sbc	r17, r1
     3d6:	04 96       	adiw	r24, 0x04	; 4
     3d8:	01 15       	cp	r16, r1
     3da:	11 05       	cpc	r17, r1
     3dc:	d9 f6       	brne	.-74     	; 0x394 <rcvr_datablock+0x30>
     3de:	96 df       	rcall	.-212    	; 0x30c <rcvr_spi>
     3e0:	95 df       	rcall	.-214    	; 0x30c <rcvr_spi>
     3e2:	81 e0       	ldi	r24, 0x01	; 1
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	02 c0       	rjmp	.+4      	; 0x3ec <rcvr_datablock+0x88>
     3e8:	80 e0       	ldi	r24, 0x00	; 0
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	df 91       	pop	r29
     3ee:	cf 91       	pop	r28
     3f0:	1f 91       	pop	r17
     3f2:	0f 91       	pop	r16
     3f4:	08 95       	ret

000003f6 <xmit_datablock>:
     3f6:	1f 93       	push	r17
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	ec 01       	movw	r28, r24
     3fe:	16 2f       	mov	r17, r22
     400:	8e df       	rcall	.-228    	; 0x31e <wait_ready>
     402:	00 97       	sbiw	r24, 0x00	; 0
     404:	09 f4       	brne	.+2      	; 0x408 <xmit_datablock+0x12>
     406:	38 c0       	rjmp	.+112    	; 0x478 <xmit_datablock+0x82>
     408:	f8 94       	cli
     40a:	1e bd       	out	0x2e, r17	; 46
     40c:	0d b4       	in	r0, 0x2d	; 45
     40e:	07 fe       	sbrs	r0, 7
     410:	fd cf       	rjmp	.-6      	; 0x40c <xmit_datablock+0x16>
     412:	78 94       	sei
     414:	1d 3f       	cpi	r17, 0xFD	; 253
     416:	71 f1       	breq	.+92     	; 0x474 <xmit_datablock+0x7e>
     418:	9e 01       	movw	r18, r28
     41a:	3e 5f       	subi	r19, 0xFE	; 254
     41c:	f8 94       	cli
     41e:	88 81       	ld	r24, Y
     420:	8e bd       	out	0x2e, r24	; 46
     422:	0d b4       	in	r0, 0x2d	; 45
     424:	07 fe       	sbrs	r0, 7
     426:	fd cf       	rjmp	.-6      	; 0x422 <xmit_datablock+0x2c>
     428:	78 94       	sei
     42a:	f8 94       	cli
     42c:	22 96       	adiw	r28, 0x02	; 2
     42e:	fe 01       	movw	r30, r28
     430:	31 97       	sbiw	r30, 0x01	; 1
     432:	80 81       	ld	r24, Z
     434:	8e bd       	out	0x2e, r24	; 46
     436:	0d b4       	in	r0, 0x2d	; 45
     438:	07 fe       	sbrs	r0, 7
     43a:	fd cf       	rjmp	.-6      	; 0x436 <xmit_datablock+0x40>
     43c:	78 94       	sei
     43e:	2c 17       	cp	r18, r28
     440:	3d 07       	cpc	r19, r29
     442:	61 f7       	brne	.-40     	; 0x41c <xmit_datablock+0x26>
     444:	f8 94       	cli
     446:	8f ef       	ldi	r24, 0xFF	; 255
     448:	8e bd       	out	0x2e, r24	; 46
     44a:	0d b4       	in	r0, 0x2d	; 45
     44c:	07 fe       	sbrs	r0, 7
     44e:	fd cf       	rjmp	.-6      	; 0x44a <xmit_datablock+0x54>
     450:	78 94       	sei
     452:	f8 94       	cli
     454:	8f ef       	ldi	r24, 0xFF	; 255
     456:	8e bd       	out	0x2e, r24	; 46
     458:	0d b4       	in	r0, 0x2d	; 45
     45a:	07 fe       	sbrs	r0, 7
     45c:	fd cf       	rjmp	.-6      	; 0x458 <xmit_datablock+0x62>
     45e:	78 94       	sei
     460:	55 df       	rcall	.-342    	; 0x30c <rcvr_spi>
     462:	8f 71       	andi	r24, 0x1F	; 31
     464:	31 e0       	ldi	r19, 0x01	; 1
     466:	20 e0       	ldi	r18, 0x00	; 0
     468:	85 30       	cpi	r24, 0x05	; 5
     46a:	09 f0       	breq	.+2      	; 0x46e <xmit_datablock+0x78>
     46c:	30 e0       	ldi	r19, 0x00	; 0
     46e:	83 2f       	mov	r24, r19
     470:	92 2f       	mov	r25, r18
     472:	02 c0       	rjmp	.+4      	; 0x478 <xmit_datablock+0x82>
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	08 95       	ret

00000480 <send_cmd>:
     480:	cf 92       	push	r12
     482:	df 92       	push	r13
     484:	ef 92       	push	r14
     486:	ff 92       	push	r15
     488:	cf 93       	push	r28
     48a:	c8 2f       	mov	r28, r24
     48c:	6a 01       	movw	r12, r20
     48e:	7b 01       	movw	r14, r22
     490:	88 23       	and	r24, r24
     492:	4c f4       	brge	.+18     	; 0x4a6 <send_cmd+0x26>
     494:	40 e0       	ldi	r20, 0x00	; 0
     496:	50 e0       	ldi	r21, 0x00	; 0
     498:	ba 01       	movw	r22, r20
     49a:	87 e3       	ldi	r24, 0x37	; 55
     49c:	f1 df       	rcall	.-30     	; 0x480 <send_cmd>
     49e:	82 30       	cpi	r24, 0x02	; 2
     4a0:	08 f0       	brcs	.+2      	; 0x4a4 <send_cmd+0x24>
     4a2:	4b c0       	rjmp	.+150    	; 0x53a <send_cmd+0xba>
     4a4:	cf 77       	andi	r28, 0x7F	; 127
     4a6:	4c df       	rcall	.-360    	; 0x340 <deselect>
     4a8:	4e df       	rcall	.-356    	; 0x346 <select>
     4aa:	89 2b       	or	r24, r25
     4ac:	09 f4       	brne	.+2      	; 0x4b0 <send_cmd+0x30>
     4ae:	44 c0       	rjmp	.+136    	; 0x538 <send_cmd+0xb8>
     4b0:	f8 94       	cli
     4b2:	8c 2f       	mov	r24, r28
     4b4:	80 64       	ori	r24, 0x40	; 64
     4b6:	8e bd       	out	0x2e, r24	; 46
     4b8:	0d b4       	in	r0, 0x2d	; 45
     4ba:	07 fe       	sbrs	r0, 7
     4bc:	fd cf       	rjmp	.-6      	; 0x4b8 <send_cmd+0x38>
     4be:	78 94       	sei
     4c0:	f8 94       	cli
     4c2:	8f 2d       	mov	r24, r15
     4c4:	99 27       	eor	r25, r25
     4c6:	aa 27       	eor	r26, r26
     4c8:	bb 27       	eor	r27, r27
     4ca:	8e bd       	out	0x2e, r24	; 46
     4cc:	0d b4       	in	r0, 0x2d	; 45
     4ce:	07 fe       	sbrs	r0, 7
     4d0:	fd cf       	rjmp	.-6      	; 0x4cc <send_cmd+0x4c>
     4d2:	78 94       	sei
     4d4:	f8 94       	cli
     4d6:	c7 01       	movw	r24, r14
     4d8:	aa 27       	eor	r26, r26
     4da:	bb 27       	eor	r27, r27
     4dc:	8e bd       	out	0x2e, r24	; 46
     4de:	0d b4       	in	r0, 0x2d	; 45
     4e0:	07 fe       	sbrs	r0, 7
     4e2:	fd cf       	rjmp	.-6      	; 0x4de <send_cmd+0x5e>
     4e4:	78 94       	sei
     4e6:	f8 94       	cli
     4e8:	bb 27       	eor	r27, r27
     4ea:	af 2d       	mov	r26, r15
     4ec:	9e 2d       	mov	r25, r14
     4ee:	8d 2d       	mov	r24, r13
     4f0:	8e bd       	out	0x2e, r24	; 46
     4f2:	0d b4       	in	r0, 0x2d	; 45
     4f4:	07 fe       	sbrs	r0, 7
     4f6:	fd cf       	rjmp	.-6      	; 0x4f2 <send_cmd+0x72>
     4f8:	78 94       	sei
     4fa:	f8 94       	cli
     4fc:	ce bc       	out	0x2e, r12	; 46
     4fe:	0d b4       	in	r0, 0x2d	; 45
     500:	07 fe       	sbrs	r0, 7
     502:	fd cf       	rjmp	.-6      	; 0x4fe <send_cmd+0x7e>
     504:	78 94       	sei
     506:	cc 23       	and	r28, r28
     508:	21 f0       	breq	.+8      	; 0x512 <send_cmd+0x92>
     50a:	c8 30       	cpi	r28, 0x08	; 8
     50c:	21 f4       	brne	.+8      	; 0x516 <send_cmd+0x96>
     50e:	87 e8       	ldi	r24, 0x87	; 135
     510:	03 c0       	rjmp	.+6      	; 0x518 <send_cmd+0x98>
     512:	85 e9       	ldi	r24, 0x95	; 149
     514:	01 c0       	rjmp	.+2      	; 0x518 <send_cmd+0x98>
     516:	81 e0       	ldi	r24, 0x01	; 1
     518:	f8 94       	cli
     51a:	8e bd       	out	0x2e, r24	; 46
     51c:	0d b4       	in	r0, 0x2d	; 45
     51e:	07 fe       	sbrs	r0, 7
     520:	fd cf       	rjmp	.-6      	; 0x51c <send_cmd+0x9c>
     522:	78 94       	sei
     524:	cc 30       	cpi	r28, 0x0C	; 12
     526:	09 f4       	brne	.+2      	; 0x52a <send_cmd+0xaa>
     528:	f1 de       	rcall	.-542    	; 0x30c <rcvr_spi>
     52a:	ca e0       	ldi	r28, 0x0A	; 10
     52c:	ef de       	rcall	.-546    	; 0x30c <rcvr_spi>
     52e:	88 23       	and	r24, r24
     530:	24 f4       	brge	.+8      	; 0x53a <send_cmd+0xba>
     532:	c1 50       	subi	r28, 0x01	; 1
     534:	d9 f7       	brne	.-10     	; 0x52c <send_cmd+0xac>
     536:	01 c0       	rjmp	.+2      	; 0x53a <send_cmd+0xba>
     538:	8f ef       	ldi	r24, 0xFF	; 255
     53a:	cf 91       	pop	r28
     53c:	ff 90       	pop	r15
     53e:	ef 90       	pop	r14
     540:	df 90       	pop	r13
     542:	cf 90       	pop	r12
     544:	08 95       	ret

00000546 <disk_initialize>:
     546:	cf 92       	push	r12
     548:	df 92       	push	r13
     54a:	ef 92       	push	r14
     54c:	ff 92       	push	r15
     54e:	0f 93       	push	r16
     550:	1f 93       	push	r17
     552:	cf 93       	push	r28
     554:	df 93       	push	r29
     556:	00 d0       	rcall	.+0      	; 0x558 <disk_initialize+0x12>
     558:	00 d0       	rcall	.+0      	; 0x55a <disk_initialize+0x14>
     55a:	cd b7       	in	r28, 0x3d	; 61
     55c:	de b7       	in	r29, 0x3e	; 62
     55e:	81 11       	cpse	r24, r1
     560:	91 c0       	rjmp	.+290    	; 0x684 <disk_initialize+0x13e>
     562:	80 91 06 01 	lds	r24, 0x0106
     566:	81 ff       	sbrs	r24, 1
     568:	03 c0       	rjmp	.+6      	; 0x570 <disk_initialize+0x2a>
     56a:	80 91 06 01 	lds	r24, 0x0106
     56e:	95 c0       	rjmp	.+298    	; 0x69a <disk_initialize+0x154>
     570:	85 b1       	in	r24, 0x05	; 5
     572:	80 6c       	ori	r24, 0xC0	; 192
     574:	85 b9       	out	0x05, r24	; 5
     576:	82 e5       	ldi	r24, 0x52	; 82
     578:	8c bd       	out	0x2c, r24	; 44
     57a:	1a e0       	ldi	r17, 0x0A	; 10
     57c:	c7 de       	rcall	.-626    	; 0x30c <rcvr_spi>
     57e:	11 50       	subi	r17, 0x01	; 1
     580:	e9 f7       	brne	.-6      	; 0x57c <disk_initialize+0x36>
     582:	40 e0       	ldi	r20, 0x00	; 0
     584:	50 e0       	ldi	r21, 0x00	; 0
     586:	ba 01       	movw	r22, r20
     588:	80 e0       	ldi	r24, 0x00	; 0
     58a:	7a df       	rcall	.-268    	; 0x480 <send_cmd>
     58c:	81 30       	cpi	r24, 0x01	; 1
     58e:	09 f0       	breq	.+2      	; 0x592 <disk_initialize+0x4c>
     590:	80 c0       	rjmp	.+256    	; 0x692 <disk_initialize+0x14c>
     592:	88 ec       	ldi	r24, 0xC8	; 200
     594:	80 93 e9 01 	sts	0x01E9, r24
     598:	4a ea       	ldi	r20, 0xAA	; 170
     59a:	51 e0       	ldi	r21, 0x01	; 1
     59c:	60 e0       	ldi	r22, 0x00	; 0
     59e:	70 e0       	ldi	r23, 0x00	; 0
     5a0:	88 e0       	ldi	r24, 0x08	; 8
     5a2:	6e df       	rcall	.-292    	; 0x480 <send_cmd>
     5a4:	81 30       	cpi	r24, 0x01	; 1
     5a6:	09 f0       	breq	.+2      	; 0x5aa <disk_initialize+0x64>
     5a8:	3b c0       	rjmp	.+118    	; 0x620 <disk_initialize+0xda>
     5aa:	ce 01       	movw	r24, r28
     5ac:	01 96       	adiw	r24, 0x01	; 1
     5ae:	6c 01       	movw	r12, r24
     5b0:	7e 01       	movw	r14, r28
     5b2:	95 e0       	ldi	r25, 0x05	; 5
     5b4:	e9 0e       	add	r14, r25
     5b6:	f1 1c       	adc	r15, r1
     5b8:	86 01       	movw	r16, r12
     5ba:	a8 de       	rcall	.-688    	; 0x30c <rcvr_spi>
     5bc:	f8 01       	movw	r30, r16
     5be:	81 93       	st	Z+, r24
     5c0:	8f 01       	movw	r16, r30
     5c2:	ee 15       	cp	r30, r14
     5c4:	ff 05       	cpc	r31, r15
     5c6:	c9 f7       	brne	.-14     	; 0x5ba <disk_initialize+0x74>
     5c8:	8b 81       	ldd	r24, Y+3	; 0x03
     5ca:	81 30       	cpi	r24, 0x01	; 1
     5cc:	09 f0       	breq	.+2      	; 0x5d0 <disk_initialize+0x8a>
     5ce:	61 c0       	rjmp	.+194    	; 0x692 <disk_initialize+0x14c>
     5d0:	8c 81       	ldd	r24, Y+4	; 0x04
     5d2:	8a 3a       	cpi	r24, 0xAA	; 170
     5d4:	09 f0       	breq	.+2      	; 0x5d8 <disk_initialize+0x92>
     5d6:	5d c0       	rjmp	.+186    	; 0x692 <disk_initialize+0x14c>
     5d8:	80 91 e9 01 	lds	r24, 0x01E9
     5dc:	88 23       	and	r24, r24
     5de:	41 f0       	breq	.+16     	; 0x5f0 <disk_initialize+0xaa>
     5e0:	40 e0       	ldi	r20, 0x00	; 0
     5e2:	50 e0       	ldi	r21, 0x00	; 0
     5e4:	60 e0       	ldi	r22, 0x00	; 0
     5e6:	70 e4       	ldi	r23, 0x40	; 64
     5e8:	89 ea       	ldi	r24, 0xA9	; 169
     5ea:	4a df       	rcall	.-364    	; 0x480 <send_cmd>
     5ec:	81 11       	cpse	r24, r1
     5ee:	f4 cf       	rjmp	.-24     	; 0x5d8 <disk_initialize+0x92>
     5f0:	80 91 e9 01 	lds	r24, 0x01E9
     5f4:	88 23       	and	r24, r24
     5f6:	09 f4       	brne	.+2      	; 0x5fa <disk_initialize+0xb4>
     5f8:	4c c0       	rjmp	.+152    	; 0x692 <disk_initialize+0x14c>
     5fa:	40 e0       	ldi	r20, 0x00	; 0
     5fc:	50 e0       	ldi	r21, 0x00	; 0
     5fe:	ba 01       	movw	r22, r20
     600:	8a e3       	ldi	r24, 0x3A	; 58
     602:	3e df       	rcall	.-388    	; 0x480 <send_cmd>
     604:	81 11       	cpse	r24, r1
     606:	45 c0       	rjmp	.+138    	; 0x692 <disk_initialize+0x14c>
     608:	81 de       	rcall	.-766    	; 0x30c <rcvr_spi>
     60a:	f6 01       	movw	r30, r12
     60c:	81 93       	st	Z+, r24
     60e:	6f 01       	movw	r12, r30
     610:	ee 15       	cp	r30, r14
     612:	ff 05       	cpc	r31, r15
     614:	c9 f7       	brne	.-14     	; 0x608 <disk_initialize+0xc2>
     616:	89 81       	ldd	r24, Y+1	; 0x01
     618:	86 fd       	sbrc	r24, 6
     61a:	36 c0       	rjmp	.+108    	; 0x688 <disk_initialize+0x142>
     61c:	84 e0       	ldi	r24, 0x04	; 4
     61e:	35 c0       	rjmp	.+106    	; 0x68a <disk_initialize+0x144>
     620:	40 e0       	ldi	r20, 0x00	; 0
     622:	50 e0       	ldi	r21, 0x00	; 0
     624:	ba 01       	movw	r22, r20
     626:	89 ea       	ldi	r24, 0xA9	; 169
     628:	2b df       	rcall	.-426    	; 0x480 <send_cmd>
     62a:	82 30       	cpi	r24, 0x02	; 2
     62c:	18 f0       	brcs	.+6      	; 0x634 <disk_initialize+0xee>
     62e:	01 e0       	ldi	r16, 0x01	; 1
     630:	11 e0       	ldi	r17, 0x01	; 1
     632:	02 c0       	rjmp	.+4      	; 0x638 <disk_initialize+0xf2>
     634:	02 e0       	ldi	r16, 0x02	; 2
     636:	19 ea       	ldi	r17, 0xA9	; 169
     638:	90 91 e9 01 	lds	r25, 0x01E9
     63c:	99 23       	and	r25, r25
     63e:	39 f0       	breq	.+14     	; 0x64e <disk_initialize+0x108>
     640:	40 e0       	ldi	r20, 0x00	; 0
     642:	50 e0       	ldi	r21, 0x00	; 0
     644:	ba 01       	movw	r22, r20
     646:	81 2f       	mov	r24, r17
     648:	1b df       	rcall	.-458    	; 0x480 <send_cmd>
     64a:	81 11       	cpse	r24, r1
     64c:	f5 cf       	rjmp	.-22     	; 0x638 <disk_initialize+0xf2>
     64e:	80 91 e9 01 	lds	r24, 0x01E9
     652:	88 23       	and	r24, r24
     654:	f1 f0       	breq	.+60     	; 0x692 <disk_initialize+0x14c>
     656:	40 e0       	ldi	r20, 0x00	; 0
     658:	52 e0       	ldi	r21, 0x02	; 2
     65a:	60 e0       	ldi	r22, 0x00	; 0
     65c:	70 e0       	ldi	r23, 0x00	; 0
     65e:	80 e1       	ldi	r24, 0x10	; 16
     660:	0f df       	rcall	.-482    	; 0x480 <send_cmd>
     662:	81 11       	cpse	r24, r1
     664:	16 c0       	rjmp	.+44     	; 0x692 <disk_initialize+0x14c>
     666:	00 93 e7 01 	sts	0x01E7, r16
     66a:	6a de       	rcall	.-812    	; 0x340 <deselect>
     66c:	00 23       	and	r16, r16
     66e:	39 f0       	breq	.+14     	; 0x67e <disk_initialize+0x138>
     670:	80 91 06 01 	lds	r24, 0x0106
     674:	8e 7f       	andi	r24, 0xFE	; 254
     676:	80 93 06 01 	sts	0x0106, r24
     67a:	80 e5       	ldi	r24, 0x50	; 80
     67c:	8c bd       	out	0x2c, r24	; 44
     67e:	80 91 06 01 	lds	r24, 0x0106
     682:	0b c0       	rjmp	.+22     	; 0x69a <disk_initialize+0x154>
     684:	81 e0       	ldi	r24, 0x01	; 1
     686:	09 c0       	rjmp	.+18     	; 0x69a <disk_initialize+0x154>
     688:	8c e0       	ldi	r24, 0x0C	; 12
     68a:	80 93 e7 01 	sts	0x01E7, r24
     68e:	58 de       	rcall	.-848    	; 0x340 <deselect>
     690:	ef cf       	rjmp	.-34     	; 0x670 <disk_initialize+0x12a>
     692:	10 92 e7 01 	sts	0x01E7, r1
     696:	54 de       	rcall	.-856    	; 0x340 <deselect>
     698:	f2 cf       	rjmp	.-28     	; 0x67e <disk_initialize+0x138>
     69a:	0f 90       	pop	r0
     69c:	0f 90       	pop	r0
     69e:	0f 90       	pop	r0
     6a0:	0f 90       	pop	r0
     6a2:	df 91       	pop	r29
     6a4:	cf 91       	pop	r28
     6a6:	1f 91       	pop	r17
     6a8:	0f 91       	pop	r16
     6aa:	ff 90       	pop	r15
     6ac:	ef 90       	pop	r14
     6ae:	df 90       	pop	r13
     6b0:	cf 90       	pop	r12
     6b2:	08 95       	ret

000006b4 <disk_status>:
     6b4:	81 11       	cpse	r24, r1
     6b6:	03 c0       	rjmp	.+6      	; 0x6be <disk_status+0xa>
     6b8:	80 91 06 01 	lds	r24, 0x0106
     6bc:	08 95       	ret
     6be:	81 e0       	ldi	r24, 0x01	; 1
     6c0:	08 95       	ret

000006c2 <disk_read>:
     6c2:	0f 93       	push	r16
     6c4:	cf 93       	push	r28
     6c6:	df 93       	push	r29
     6c8:	eb 01       	movw	r28, r22
     6ca:	81 11       	cpse	r24, r1
     6cc:	3e c0       	rjmp	.+124    	; 0x74a <disk_read+0x88>
     6ce:	00 23       	and	r16, r16
     6d0:	09 f4       	brne	.+2      	; 0x6d4 <disk_read+0x12>
     6d2:	3d c0       	rjmp	.+122    	; 0x74e <disk_read+0x8c>
     6d4:	80 91 06 01 	lds	r24, 0x0106
     6d8:	80 fd       	sbrc	r24, 0
     6da:	3b c0       	rjmp	.+118    	; 0x752 <disk_read+0x90>
     6dc:	80 91 e7 01 	lds	r24, 0x01E7
     6e0:	83 fd       	sbrc	r24, 3
     6e2:	09 c0       	rjmp	.+18     	; 0x6f6 <disk_read+0x34>
     6e4:	01 2e       	mov	r0, r17
     6e6:	19 e0       	ldi	r17, 0x09	; 9
     6e8:	22 0f       	add	r18, r18
     6ea:	33 1f       	adc	r19, r19
     6ec:	44 1f       	adc	r20, r20
     6ee:	55 1f       	adc	r21, r21
     6f0:	1a 95       	dec	r17
     6f2:	d1 f7       	brne	.-12     	; 0x6e8 <disk_read+0x26>
     6f4:	10 2d       	mov	r17, r0
     6f6:	01 30       	cpi	r16, 0x01	; 1
     6f8:	71 f4       	brne	.+28     	; 0x716 <disk_read+0x54>
     6fa:	ba 01       	movw	r22, r20
     6fc:	a9 01       	movw	r20, r18
     6fe:	81 e1       	ldi	r24, 0x11	; 17
     700:	bf de       	rcall	.-642    	; 0x480 <send_cmd>
     702:	81 11       	cpse	r24, r1
     704:	1c c0       	rjmp	.+56     	; 0x73e <disk_read+0x7c>
     706:	60 e0       	ldi	r22, 0x00	; 0
     708:	72 e0       	ldi	r23, 0x02	; 2
     70a:	ce 01       	movw	r24, r28
     70c:	2b de       	rcall	.-938    	; 0x364 <rcvr_datablock>
     70e:	89 2b       	or	r24, r25
     710:	b1 f0       	breq	.+44     	; 0x73e <disk_read+0x7c>
     712:	00 e0       	ldi	r16, 0x00	; 0
     714:	14 c0       	rjmp	.+40     	; 0x73e <disk_read+0x7c>
     716:	ba 01       	movw	r22, r20
     718:	a9 01       	movw	r20, r18
     71a:	82 e1       	ldi	r24, 0x12	; 18
     71c:	b1 de       	rcall	.-670    	; 0x480 <send_cmd>
     71e:	81 11       	cpse	r24, r1
     720:	0e c0       	rjmp	.+28     	; 0x73e <disk_read+0x7c>
     722:	60 e0       	ldi	r22, 0x00	; 0
     724:	72 e0       	ldi	r23, 0x02	; 2
     726:	ce 01       	movw	r24, r28
     728:	1d de       	rcall	.-966    	; 0x364 <rcvr_datablock>
     72a:	89 2b       	or	r24, r25
     72c:	19 f0       	breq	.+6      	; 0x734 <disk_read+0x72>
     72e:	de 5f       	subi	r29, 0xFE	; 254
     730:	01 50       	subi	r16, 0x01	; 1
     732:	b9 f7       	brne	.-18     	; 0x722 <disk_read+0x60>
     734:	40 e0       	ldi	r20, 0x00	; 0
     736:	50 e0       	ldi	r21, 0x00	; 0
     738:	ba 01       	movw	r22, r20
     73a:	8c e0       	ldi	r24, 0x0C	; 12
     73c:	a1 de       	rcall	.-702    	; 0x480 <send_cmd>
     73e:	00 de       	rcall	.-1024   	; 0x340 <deselect>
     740:	81 e0       	ldi	r24, 0x01	; 1
     742:	01 11       	cpse	r16, r1
     744:	07 c0       	rjmp	.+14     	; 0x754 <disk_read+0x92>
     746:	80 e0       	ldi	r24, 0x00	; 0
     748:	05 c0       	rjmp	.+10     	; 0x754 <disk_read+0x92>
     74a:	84 e0       	ldi	r24, 0x04	; 4
     74c:	03 c0       	rjmp	.+6      	; 0x754 <disk_read+0x92>
     74e:	84 e0       	ldi	r24, 0x04	; 4
     750:	01 c0       	rjmp	.+2      	; 0x754 <disk_read+0x92>
     752:	83 e0       	ldi	r24, 0x03	; 3
     754:	df 91       	pop	r29
     756:	cf 91       	pop	r28
     758:	0f 91       	pop	r16
     75a:	08 95       	ret

0000075c <disk_write>:
     75c:	cf 92       	push	r12
     75e:	df 92       	push	r13
     760:	ef 92       	push	r14
     762:	ff 92       	push	r15
     764:	0f 93       	push	r16
     766:	cf 93       	push	r28
     768:	df 93       	push	r29
     76a:	eb 01       	movw	r28, r22
     76c:	69 01       	movw	r12, r18
     76e:	7a 01       	movw	r14, r20
     770:	81 11       	cpse	r24, r1
     772:	4a c0       	rjmp	.+148    	; 0x808 <disk_write+0xac>
     774:	00 23       	and	r16, r16
     776:	09 f4       	brne	.+2      	; 0x77a <disk_write+0x1e>
     778:	49 c0       	rjmp	.+146    	; 0x80c <disk_write+0xb0>
     77a:	80 91 06 01 	lds	r24, 0x0106
     77e:	80 fd       	sbrc	r24, 0
     780:	47 c0       	rjmp	.+142    	; 0x810 <disk_write+0xb4>
     782:	80 91 06 01 	lds	r24, 0x0106
     786:	82 fd       	sbrc	r24, 2
     788:	45 c0       	rjmp	.+138    	; 0x814 <disk_write+0xb8>
     78a:	80 91 e7 01 	lds	r24, 0x01E7
     78e:	83 fd       	sbrc	r24, 3
     790:	09 c0       	rjmp	.+18     	; 0x7a4 <disk_write+0x48>
     792:	0b 2e       	mov	r0, r27
     794:	b9 e0       	ldi	r27, 0x09	; 9
     796:	cc 0c       	add	r12, r12
     798:	dd 1c       	adc	r13, r13
     79a:	ee 1c       	adc	r14, r14
     79c:	ff 1c       	adc	r15, r15
     79e:	ba 95       	dec	r27
     7a0:	d1 f7       	brne	.-12     	; 0x796 <disk_write+0x3a>
     7a2:	b0 2d       	mov	r27, r0
     7a4:	01 30       	cpi	r16, 0x01	; 1
     7a6:	69 f4       	brne	.+26     	; 0x7c2 <disk_write+0x66>
     7a8:	b7 01       	movw	r22, r14
     7aa:	a6 01       	movw	r20, r12
     7ac:	88 e1       	ldi	r24, 0x18	; 24
     7ae:	68 de       	rcall	.-816    	; 0x480 <send_cmd>
     7b0:	81 11       	cpse	r24, r1
     7b2:	24 c0       	rjmp	.+72     	; 0x7fc <disk_write+0xa0>
     7b4:	6e ef       	ldi	r22, 0xFE	; 254
     7b6:	ce 01       	movw	r24, r28
     7b8:	1e de       	rcall	.-964    	; 0x3f6 <xmit_datablock>
     7ba:	89 2b       	or	r24, r25
     7bc:	f9 f0       	breq	.+62     	; 0x7fc <disk_write+0xa0>
     7be:	00 e0       	ldi	r16, 0x00	; 0
     7c0:	1d c0       	rjmp	.+58     	; 0x7fc <disk_write+0xa0>
     7c2:	86 70       	andi	r24, 0x06	; 6
     7c4:	31 f0       	breq	.+12     	; 0x7d2 <disk_write+0x76>
     7c6:	40 2f       	mov	r20, r16
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	60 e0       	ldi	r22, 0x00	; 0
     7cc:	70 e0       	ldi	r23, 0x00	; 0
     7ce:	87 e9       	ldi	r24, 0x97	; 151
     7d0:	57 de       	rcall	.-850    	; 0x480 <send_cmd>
     7d2:	b7 01       	movw	r22, r14
     7d4:	a6 01       	movw	r20, r12
     7d6:	89 e1       	ldi	r24, 0x19	; 25
     7d8:	53 de       	rcall	.-858    	; 0x480 <send_cmd>
     7da:	81 11       	cpse	r24, r1
     7dc:	0f c0       	rjmp	.+30     	; 0x7fc <disk_write+0xa0>
     7de:	6c ef       	ldi	r22, 0xFC	; 252
     7e0:	ce 01       	movw	r24, r28
     7e2:	09 de       	rcall	.-1006   	; 0x3f6 <xmit_datablock>
     7e4:	89 2b       	or	r24, r25
     7e6:	19 f0       	breq	.+6      	; 0x7ee <disk_write+0x92>
     7e8:	de 5f       	subi	r29, 0xFE	; 254
     7ea:	01 50       	subi	r16, 0x01	; 1
     7ec:	c1 f7       	brne	.-16     	; 0x7de <disk_write+0x82>
     7ee:	6d ef       	ldi	r22, 0xFD	; 253
     7f0:	80 e0       	ldi	r24, 0x00	; 0
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	00 de       	rcall	.-1024   	; 0x3f6 <xmit_datablock>
     7f6:	89 2b       	or	r24, r25
     7f8:	09 f4       	brne	.+2      	; 0x7fc <disk_write+0xa0>
     7fa:	01 e0       	ldi	r16, 0x01	; 1
     7fc:	a1 dd       	rcall	.-1214   	; 0x340 <deselect>
     7fe:	81 e0       	ldi	r24, 0x01	; 1
     800:	01 11       	cpse	r16, r1
     802:	09 c0       	rjmp	.+18     	; 0x816 <disk_write+0xba>
     804:	80 e0       	ldi	r24, 0x00	; 0
     806:	07 c0       	rjmp	.+14     	; 0x816 <disk_write+0xba>
     808:	84 e0       	ldi	r24, 0x04	; 4
     80a:	05 c0       	rjmp	.+10     	; 0x816 <disk_write+0xba>
     80c:	84 e0       	ldi	r24, 0x04	; 4
     80e:	03 c0       	rjmp	.+6      	; 0x816 <disk_write+0xba>
     810:	83 e0       	ldi	r24, 0x03	; 3
     812:	01 c0       	rjmp	.+2      	; 0x816 <disk_write+0xba>
     814:	82 e0       	ldi	r24, 0x02	; 2
     816:	df 91       	pop	r29
     818:	cf 91       	pop	r28
     81a:	0f 91       	pop	r16
     81c:	ff 90       	pop	r15
     81e:	ef 90       	pop	r14
     820:	df 90       	pop	r13
     822:	cf 90       	pop	r12
     824:	08 95       	ret

00000826 <disk_ioctl>:
     826:	ef 92       	push	r14
     828:	ff 92       	push	r15
     82a:	0f 93       	push	r16
     82c:	1f 93       	push	r17
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	cd b7       	in	r28, 0x3d	; 61
     834:	de b7       	in	r29, 0x3e	; 62
     836:	60 97       	sbiw	r28, 0x10	; 16
     838:	0f b6       	in	r0, 0x3f	; 63
     83a:	f8 94       	cli
     83c:	de bf       	out	0x3e, r29	; 62
     83e:	0f be       	out	0x3f, r0	; 63
     840:	cd bf       	out	0x3d, r28	; 61
     842:	81 11       	cpse	r24, r1
     844:	80 c1       	rjmp	.+768    	; 0xb46 <disk_ioctl+0x320>
     846:	64 30       	cpi	r22, 0x04	; 4
     848:	71 f4       	brne	.+28     	; 0x866 <disk_ioctl+0x40>
     84a:	fa 01       	movw	r30, r20
     84c:	80 81       	ld	r24, Z
     84e:	82 30       	cpi	r24, 0x02	; 2
     850:	08 f4       	brcc	.+2      	; 0x854 <disk_ioctl+0x2e>
     852:	7b c1       	rjmp	.+758    	; 0xb4a <disk_ioctl+0x324>
     854:	82 30       	cpi	r24, 0x02	; 2
     856:	11 f0       	breq	.+4      	; 0x85c <disk_ioctl+0x36>
     858:	84 e0       	ldi	r24, 0x04	; 4
     85a:	7a c1       	rjmp	.+756    	; 0xb50 <disk_ioctl+0x32a>
     85c:	81 e0       	ldi	r24, 0x01	; 1
     85e:	fa 01       	movw	r30, r20
     860:	81 83       	std	Z+1, r24	; 0x01
     862:	80 e0       	ldi	r24, 0x00	; 0
     864:	75 c1       	rjmp	.+746    	; 0xb50 <disk_ioctl+0x32a>
     866:	80 91 06 01 	lds	r24, 0x0106
     86a:	80 fd       	sbrc	r24, 0
     86c:	70 c1       	rjmp	.+736    	; 0xb4e <disk_ioctl+0x328>
     86e:	7a 01       	movw	r14, r20
     870:	06 2f       	mov	r16, r22
     872:	10 e0       	ldi	r17, 0x00	; 0
     874:	0f 30       	cpi	r16, 0x0F	; 15
     876:	11 05       	cpc	r17, r1
     878:	08 f0       	brcs	.+2      	; 0x87c <disk_ioctl+0x56>
     87a:	4b c1       	rjmp	.+662    	; 0xb12 <disk_ioctl+0x2ec>
     87c:	f8 01       	movw	r30, r16
     87e:	e6 5b       	subi	r30, 0xB6	; 182
     880:	ff 4f       	sbci	r31, 0xFF	; 255
     882:	0c 94 a4 17 	jmp	0x2f48	; 0x2f48 <__tablejump2__>
     886:	5f dd       	rcall	.-1346   	; 0x346 <select>
     888:	89 2b       	or	r24, r25
     88a:	09 f4       	brne	.+2      	; 0x88e <disk_ioctl+0x68>
     88c:	44 c1       	rjmp	.+648    	; 0xb16 <disk_ioctl+0x2f0>
     88e:	58 dd       	rcall	.-1360   	; 0x340 <deselect>
     890:	10 e0       	ldi	r17, 0x00	; 0
     892:	56 c1       	rjmp	.+684    	; 0xb40 <disk_ioctl+0x31a>
     894:	40 e0       	ldi	r20, 0x00	; 0
     896:	50 e0       	ldi	r21, 0x00	; 0
     898:	ba 01       	movw	r22, r20
     89a:	89 e0       	ldi	r24, 0x09	; 9
     89c:	f1 dd       	rcall	.-1054   	; 0x480 <send_cmd>
     89e:	81 11       	cpse	r24, r1
     8a0:	3c c1       	rjmp	.+632    	; 0xb1a <disk_ioctl+0x2f4>
     8a2:	60 e1       	ldi	r22, 0x10	; 16
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	ce 01       	movw	r24, r28
     8a8:	01 96       	adiw	r24, 0x01	; 1
     8aa:	5c dd       	rcall	.-1352   	; 0x364 <rcvr_datablock>
     8ac:	89 2b       	or	r24, r25
     8ae:	09 f4       	brne	.+2      	; 0x8b2 <disk_ioctl+0x8c>
     8b0:	36 c1       	rjmp	.+620    	; 0xb1e <disk_ioctl+0x2f8>
     8b2:	89 81       	ldd	r24, Y+1	; 0x01
     8b4:	82 95       	swap	r24
     8b6:	86 95       	lsr	r24
     8b8:	86 95       	lsr	r24
     8ba:	83 70       	andi	r24, 0x03	; 3
     8bc:	81 30       	cpi	r24, 0x01	; 1
     8be:	e9 f4       	brne	.+58     	; 0x8fa <disk_ioctl+0xd4>
     8c0:	8a 85       	ldd	r24, Y+10	; 0x0a
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	9c 01       	movw	r18, r24
     8c6:	2f 5f       	subi	r18, 0xFF	; 255
     8c8:	3f 4f       	sbci	r19, 0xFF	; 255
     8ca:	89 85       	ldd	r24, Y+9	; 0x09
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	98 2f       	mov	r25, r24
     8d0:	88 27       	eor	r24, r24
     8d2:	82 0f       	add	r24, r18
     8d4:	93 1f       	adc	r25, r19
     8d6:	a0 e0       	ldi	r26, 0x00	; 0
     8d8:	b0 e0       	ldi	r27, 0x00	; 0
     8da:	07 2e       	mov	r0, r23
     8dc:	7a e0       	ldi	r23, 0x0A	; 10
     8de:	88 0f       	add	r24, r24
     8e0:	99 1f       	adc	r25, r25
     8e2:	aa 1f       	adc	r26, r26
     8e4:	bb 1f       	adc	r27, r27
     8e6:	7a 95       	dec	r23
     8e8:	d1 f7       	brne	.-12     	; 0x8de <disk_ioctl+0xb8>
     8ea:	70 2d       	mov	r23, r0
     8ec:	f7 01       	movw	r30, r14
     8ee:	80 83       	st	Z, r24
     8f0:	91 83       	std	Z+1, r25	; 0x01
     8f2:	a2 83       	std	Z+2, r26	; 0x02
     8f4:	b3 83       	std	Z+3, r27	; 0x03
     8f6:	10 e0       	ldi	r17, 0x00	; 0
     8f8:	23 c1       	rjmp	.+582    	; 0xb40 <disk_ioctl+0x31a>
     8fa:	29 85       	ldd	r18, Y+9	; 0x09
     8fc:	22 95       	swap	r18
     8fe:	26 95       	lsr	r18
     900:	26 95       	lsr	r18
     902:	23 70       	andi	r18, 0x03	; 3
     904:	88 85       	ldd	r24, Y+8	; 0x08
     906:	f4 e0       	ldi	r31, 0x04	; 4
     908:	8f 9f       	mul	r24, r31
     90a:	c0 01       	movw	r24, r0
     90c:	11 24       	eor	r1, r1
     90e:	82 0f       	add	r24, r18
     910:	91 1d       	adc	r25, r1
     912:	9c 01       	movw	r18, r24
     914:	2f 5f       	subi	r18, 0xFF	; 255
     916:	3f 4f       	sbci	r19, 0xFF	; 255
     918:	8f 81       	ldd	r24, Y+7	; 0x07
     91a:	83 70       	andi	r24, 0x03	; 3
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	98 2f       	mov	r25, r24
     920:	88 27       	eor	r24, r24
     922:	99 0f       	add	r25, r25
     924:	99 0f       	add	r25, r25
     926:	82 0f       	add	r24, r18
     928:	93 1f       	adc	r25, r19
     92a:	a0 e0       	ldi	r26, 0x00	; 0
     92c:	b0 e0       	ldi	r27, 0x00	; 0
     92e:	3e 81       	ldd	r19, Y+6	; 0x06
     930:	3f 70       	andi	r19, 0x0F	; 15
     932:	2b 85       	ldd	r18, Y+11	; 0x0b
     934:	22 1f       	adc	r18, r18
     936:	22 27       	eor	r18, r18
     938:	22 1f       	adc	r18, r18
     93a:	32 0f       	add	r19, r18
     93c:	2a 85       	ldd	r18, Y+10	; 0x0a
     93e:	23 70       	andi	r18, 0x03	; 3
     940:	22 0f       	add	r18, r18
     942:	23 0f       	add	r18, r19
     944:	27 50       	subi	r18, 0x07	; 7
     946:	04 c0       	rjmp	.+8      	; 0x950 <disk_ioctl+0x12a>
     948:	88 0f       	add	r24, r24
     94a:	99 1f       	adc	r25, r25
     94c:	aa 1f       	adc	r26, r26
     94e:	bb 1f       	adc	r27, r27
     950:	2a 95       	dec	r18
     952:	d2 f7       	brpl	.-12     	; 0x948 <disk_ioctl+0x122>
     954:	f7 01       	movw	r30, r14
     956:	80 83       	st	Z, r24
     958:	91 83       	std	Z+1, r25	; 0x01
     95a:	a2 83       	std	Z+2, r26	; 0x02
     95c:	b3 83       	std	Z+3, r27	; 0x03
     95e:	10 e0       	ldi	r17, 0x00	; 0
     960:	ef c0       	rjmp	.+478    	; 0xb40 <disk_ioctl+0x31a>
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	92 e0       	ldi	r25, 0x02	; 2
     966:	fa 01       	movw	r30, r20
     968:	91 83       	std	Z+1, r25	; 0x01
     96a:	80 83       	st	Z, r24
     96c:	10 e0       	ldi	r17, 0x00	; 0
     96e:	e8 c0       	rjmp	.+464    	; 0xb40 <disk_ioctl+0x31a>
     970:	10 91 e7 01 	lds	r17, 0x01E7
     974:	12 ff       	sbrs	r17, 2
     976:	28 c0       	rjmp	.+80     	; 0x9c8 <disk_ioctl+0x1a2>
     978:	40 e0       	ldi	r20, 0x00	; 0
     97a:	50 e0       	ldi	r21, 0x00	; 0
     97c:	ba 01       	movw	r22, r20
     97e:	8d e8       	ldi	r24, 0x8D	; 141
     980:	7f dd       	rcall	.-1282   	; 0x480 <send_cmd>
     982:	81 11       	cpse	r24, r1
     984:	ce c0       	rjmp	.+412    	; 0xb22 <disk_ioctl+0x2fc>
     986:	c2 dc       	rcall	.-1660   	; 0x30c <rcvr_spi>
     988:	60 e1       	ldi	r22, 0x10	; 16
     98a:	70 e0       	ldi	r23, 0x00	; 0
     98c:	ce 01       	movw	r24, r28
     98e:	01 96       	adiw	r24, 0x01	; 1
     990:	e9 dc       	rcall	.-1582   	; 0x364 <rcvr_datablock>
     992:	89 2b       	or	r24, r25
     994:	09 f4       	brne	.+2      	; 0x998 <disk_ioctl+0x172>
     996:	c7 c0       	rjmp	.+398    	; 0xb26 <disk_ioctl+0x300>
     998:	10 e3       	ldi	r17, 0x30	; 48
     99a:	b8 dc       	rcall	.-1680   	; 0x30c <rcvr_spi>
     99c:	11 50       	subi	r17, 0x01	; 1
     99e:	e9 f7       	brne	.-6      	; 0x99a <disk_ioctl+0x174>
     9a0:	2b 85       	ldd	r18, Y+11	; 0x0b
     9a2:	22 95       	swap	r18
     9a4:	2f 70       	andi	r18, 0x0F	; 15
     9a6:	80 e1       	ldi	r24, 0x10	; 16
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	a0 e0       	ldi	r26, 0x00	; 0
     9ac:	b0 e0       	ldi	r27, 0x00	; 0
     9ae:	04 c0       	rjmp	.+8      	; 0x9b8 <disk_ioctl+0x192>
     9b0:	88 0f       	add	r24, r24
     9b2:	99 1f       	adc	r25, r25
     9b4:	aa 1f       	adc	r26, r26
     9b6:	bb 1f       	adc	r27, r27
     9b8:	2a 95       	dec	r18
     9ba:	d2 f7       	brpl	.-12     	; 0x9b0 <disk_ioctl+0x18a>
     9bc:	f7 01       	movw	r30, r14
     9be:	80 83       	st	Z, r24
     9c0:	91 83       	std	Z+1, r25	; 0x01
     9c2:	a2 83       	std	Z+2, r26	; 0x02
     9c4:	b3 83       	std	Z+3, r27	; 0x03
     9c6:	bc c0       	rjmp	.+376    	; 0xb40 <disk_ioctl+0x31a>
     9c8:	40 e0       	ldi	r20, 0x00	; 0
     9ca:	50 e0       	ldi	r21, 0x00	; 0
     9cc:	ba 01       	movw	r22, r20
     9ce:	89 e0       	ldi	r24, 0x09	; 9
     9d0:	57 dd       	rcall	.-1362   	; 0x480 <send_cmd>
     9d2:	81 11       	cpse	r24, r1
     9d4:	aa c0       	rjmp	.+340    	; 0xb2a <disk_ioctl+0x304>
     9d6:	60 e1       	ldi	r22, 0x10	; 16
     9d8:	70 e0       	ldi	r23, 0x00	; 0
     9da:	ce 01       	movw	r24, r28
     9dc:	01 96       	adiw	r24, 0x01	; 1
     9de:	c2 dc       	rcall	.-1660   	; 0x364 <rcvr_datablock>
     9e0:	89 2b       	or	r24, r25
     9e2:	09 f4       	brne	.+2      	; 0x9e6 <disk_ioctl+0x1c0>
     9e4:	a4 c0       	rjmp	.+328    	; 0xb2e <disk_ioctl+0x308>
     9e6:	11 ff       	sbrs	r17, 1
     9e8:	20 c0       	rjmp	.+64     	; 0xa2a <disk_ioctl+0x204>
     9ea:	8c 85       	ldd	r24, Y+12	; 0x0c
     9ec:	88 1f       	adc	r24, r24
     9ee:	88 27       	eor	r24, r24
     9f0:	88 1f       	adc	r24, r24
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	01 96       	adiw	r24, 0x01	; 1
     9f6:	2b 85       	ldd	r18, Y+11	; 0x0b
     9f8:	2f 73       	andi	r18, 0x3F	; 63
     9fa:	82 0f       	add	r24, r18
     9fc:	91 1d       	adc	r25, r1
     9fe:	82 0f       	add	r24, r18
     a00:	91 1d       	adc	r25, r1
     a02:	2e 85       	ldd	r18, Y+14	; 0x0e
     a04:	22 95       	swap	r18
     a06:	26 95       	lsr	r18
     a08:	26 95       	lsr	r18
     a0a:	23 70       	andi	r18, 0x03	; 3
     a0c:	21 50       	subi	r18, 0x01	; 1
     a0e:	02 c0       	rjmp	.+4      	; 0xa14 <disk_ioctl+0x1ee>
     a10:	88 0f       	add	r24, r24
     a12:	99 1f       	adc	r25, r25
     a14:	2a 95       	dec	r18
     a16:	e2 f7       	brpl	.-8      	; 0xa10 <disk_ioctl+0x1ea>
     a18:	a0 e0       	ldi	r26, 0x00	; 0
     a1a:	b0 e0       	ldi	r27, 0x00	; 0
     a1c:	f7 01       	movw	r30, r14
     a1e:	80 83       	st	Z, r24
     a20:	91 83       	std	Z+1, r25	; 0x01
     a22:	a2 83       	std	Z+2, r26	; 0x02
     a24:	b3 83       	std	Z+3, r27	; 0x03
     a26:	10 e0       	ldi	r17, 0x00	; 0
     a28:	8b c0       	rjmp	.+278    	; 0xb40 <disk_ioctl+0x31a>
     a2a:	8c 85       	ldd	r24, Y+12	; 0x0c
     a2c:	28 2f       	mov	r18, r24
     a2e:	23 70       	andi	r18, 0x03	; 3
     a30:	82 95       	swap	r24
     a32:	86 95       	lsr	r24
     a34:	87 70       	andi	r24, 0x07	; 7
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	f8 e0       	ldi	r31, 0x08	; 8
     a3a:	2f 9f       	mul	r18, r31
     a3c:	80 0d       	add	r24, r0
     a3e:	91 1d       	adc	r25, r1
     a40:	11 24       	eor	r1, r1
     a42:	01 96       	adiw	r24, 0x01	; 1
     a44:	2b 85       	ldd	r18, Y+11	; 0x0b
     a46:	2c 77       	andi	r18, 0x7C	; 124
     a48:	30 e0       	ldi	r19, 0x00	; 0
     a4a:	35 95       	asr	r19
     a4c:	27 95       	ror	r18
     a4e:	35 95       	asr	r19
     a50:	27 95       	ror	r18
     a52:	2f 5f       	subi	r18, 0xFF	; 255
     a54:	3f 4f       	sbci	r19, 0xFF	; 255
     a56:	82 9f       	mul	r24, r18
     a58:	a0 01       	movw	r20, r0
     a5a:	83 9f       	mul	r24, r19
     a5c:	50 0d       	add	r21, r0
     a5e:	92 9f       	mul	r25, r18
     a60:	50 0d       	add	r21, r0
     a62:	11 24       	eor	r1, r1
     a64:	ca 01       	movw	r24, r20
     a66:	a0 e0       	ldi	r26, 0x00	; 0
     a68:	b0 e0       	ldi	r27, 0x00	; 0
     a6a:	f7 01       	movw	r30, r14
     a6c:	80 83       	st	Z, r24
     a6e:	91 83       	std	Z+1, r25	; 0x01
     a70:	a2 83       	std	Z+2, r26	; 0x02
     a72:	b3 83       	std	Z+3, r27	; 0x03
     a74:	10 e0       	ldi	r17, 0x00	; 0
     a76:	64 c0       	rjmp	.+200    	; 0xb40 <disk_ioctl+0x31a>
     a78:	80 91 e7 01 	lds	r24, 0x01E7
     a7c:	fa 01       	movw	r30, r20
     a7e:	80 83       	st	Z, r24
     a80:	10 e0       	ldi	r17, 0x00	; 0
     a82:	5e c0       	rjmp	.+188    	; 0xb40 <disk_ioctl+0x31a>
     a84:	40 e0       	ldi	r20, 0x00	; 0
     a86:	50 e0       	ldi	r21, 0x00	; 0
     a88:	ba 01       	movw	r22, r20
     a8a:	89 e0       	ldi	r24, 0x09	; 9
     a8c:	f9 dc       	rcall	.-1550   	; 0x480 <send_cmd>
     a8e:	81 11       	cpse	r24, r1
     a90:	50 c0       	rjmp	.+160    	; 0xb32 <disk_ioctl+0x30c>
     a92:	60 e1       	ldi	r22, 0x10	; 16
     a94:	70 e0       	ldi	r23, 0x00	; 0
     a96:	c7 01       	movw	r24, r14
     a98:	65 dc       	rcall	.-1846   	; 0x364 <rcvr_datablock>
     a9a:	11 e0       	ldi	r17, 0x01	; 1
     a9c:	89 2b       	or	r24, r25
     a9e:	09 f4       	brne	.+2      	; 0xaa2 <disk_ioctl+0x27c>
     aa0:	4f c0       	rjmp	.+158    	; 0xb40 <disk_ioctl+0x31a>
     aa2:	10 e0       	ldi	r17, 0x00	; 0
     aa4:	4d c0       	rjmp	.+154    	; 0xb40 <disk_ioctl+0x31a>
     aa6:	40 e0       	ldi	r20, 0x00	; 0
     aa8:	50 e0       	ldi	r21, 0x00	; 0
     aaa:	ba 01       	movw	r22, r20
     aac:	8a e0       	ldi	r24, 0x0A	; 10
     aae:	e8 dc       	rcall	.-1584   	; 0x480 <send_cmd>
     ab0:	81 11       	cpse	r24, r1
     ab2:	41 c0       	rjmp	.+130    	; 0xb36 <disk_ioctl+0x310>
     ab4:	60 e1       	ldi	r22, 0x10	; 16
     ab6:	70 e0       	ldi	r23, 0x00	; 0
     ab8:	c7 01       	movw	r24, r14
     aba:	54 dc       	rcall	.-1880   	; 0x364 <rcvr_datablock>
     abc:	11 e0       	ldi	r17, 0x01	; 1
     abe:	89 2b       	or	r24, r25
     ac0:	09 f4       	brne	.+2      	; 0xac4 <disk_ioctl+0x29e>
     ac2:	3e c0       	rjmp	.+124    	; 0xb40 <disk_ioctl+0x31a>
     ac4:	10 e0       	ldi	r17, 0x00	; 0
     ac6:	3c c0       	rjmp	.+120    	; 0xb40 <disk_ioctl+0x31a>
     ac8:	40 e0       	ldi	r20, 0x00	; 0
     aca:	50 e0       	ldi	r21, 0x00	; 0
     acc:	ba 01       	movw	r22, r20
     ace:	8a e3       	ldi	r24, 0x3A	; 58
     ad0:	d7 dc       	rcall	.-1618   	; 0x480 <send_cmd>
     ad2:	81 11       	cpse	r24, r1
     ad4:	32 c0       	rjmp	.+100    	; 0xb3a <disk_ioctl+0x314>
     ad6:	87 01       	movw	r16, r14
     ad8:	f4 e0       	ldi	r31, 0x04	; 4
     ada:	ef 0e       	add	r14, r31
     adc:	f1 1c       	adc	r15, r1
     ade:	16 dc       	rcall	.-2004   	; 0x30c <rcvr_spi>
     ae0:	f8 01       	movw	r30, r16
     ae2:	81 93       	st	Z+, r24
     ae4:	8f 01       	movw	r16, r30
     ae6:	ee 15       	cp	r30, r14
     ae8:	ff 05       	cpc	r31, r15
     aea:	c9 f7       	brne	.-14     	; 0xade <disk_ioctl+0x2b8>
     aec:	10 e0       	ldi	r17, 0x00	; 0
     aee:	28 c0       	rjmp	.+80     	; 0xb40 <disk_ioctl+0x31a>
     af0:	40 e0       	ldi	r20, 0x00	; 0
     af2:	50 e0       	ldi	r21, 0x00	; 0
     af4:	ba 01       	movw	r22, r20
     af6:	8d e8       	ldi	r24, 0x8D	; 141
     af8:	c3 dc       	rcall	.-1658   	; 0x480 <send_cmd>
     afa:	81 11       	cpse	r24, r1
     afc:	20 c0       	rjmp	.+64     	; 0xb3e <disk_ioctl+0x318>
     afe:	06 dc       	rcall	.-2036   	; 0x30c <rcvr_spi>
     b00:	60 e4       	ldi	r22, 0x40	; 64
     b02:	70 e0       	ldi	r23, 0x00	; 0
     b04:	c7 01       	movw	r24, r14
     b06:	2e dc       	rcall	.-1956   	; 0x364 <rcvr_datablock>
     b08:	11 e0       	ldi	r17, 0x01	; 1
     b0a:	89 2b       	or	r24, r25
     b0c:	c9 f0       	breq	.+50     	; 0xb40 <disk_ioctl+0x31a>
     b0e:	10 e0       	ldi	r17, 0x00	; 0
     b10:	17 c0       	rjmp	.+46     	; 0xb40 <disk_ioctl+0x31a>
     b12:	14 e0       	ldi	r17, 0x04	; 4
     b14:	15 c0       	rjmp	.+42     	; 0xb40 <disk_ioctl+0x31a>
     b16:	11 e0       	ldi	r17, 0x01	; 1
     b18:	13 c0       	rjmp	.+38     	; 0xb40 <disk_ioctl+0x31a>
     b1a:	11 e0       	ldi	r17, 0x01	; 1
     b1c:	11 c0       	rjmp	.+34     	; 0xb40 <disk_ioctl+0x31a>
     b1e:	11 e0       	ldi	r17, 0x01	; 1
     b20:	0f c0       	rjmp	.+30     	; 0xb40 <disk_ioctl+0x31a>
     b22:	11 e0       	ldi	r17, 0x01	; 1
     b24:	0d c0       	rjmp	.+26     	; 0xb40 <disk_ioctl+0x31a>
     b26:	11 e0       	ldi	r17, 0x01	; 1
     b28:	0b c0       	rjmp	.+22     	; 0xb40 <disk_ioctl+0x31a>
     b2a:	11 e0       	ldi	r17, 0x01	; 1
     b2c:	09 c0       	rjmp	.+18     	; 0xb40 <disk_ioctl+0x31a>
     b2e:	11 e0       	ldi	r17, 0x01	; 1
     b30:	07 c0       	rjmp	.+14     	; 0xb40 <disk_ioctl+0x31a>
     b32:	11 e0       	ldi	r17, 0x01	; 1
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <disk_ioctl+0x31a>
     b36:	11 e0       	ldi	r17, 0x01	; 1
     b38:	03 c0       	rjmp	.+6      	; 0xb40 <disk_ioctl+0x31a>
     b3a:	11 e0       	ldi	r17, 0x01	; 1
     b3c:	01 c0       	rjmp	.+2      	; 0xb40 <disk_ioctl+0x31a>
     b3e:	11 e0       	ldi	r17, 0x01	; 1
     b40:	ff db       	rcall	.-2050   	; 0x340 <deselect>
     b42:	81 2f       	mov	r24, r17
     b44:	05 c0       	rjmp	.+10     	; 0xb50 <disk_ioctl+0x32a>
     b46:	84 e0       	ldi	r24, 0x04	; 4
     b48:	03 c0       	rjmp	.+6      	; 0xb50 <disk_ioctl+0x32a>
     b4a:	80 e0       	ldi	r24, 0x00	; 0
     b4c:	01 c0       	rjmp	.+2      	; 0xb50 <disk_ioctl+0x32a>
     b4e:	83 e0       	ldi	r24, 0x03	; 3
     b50:	60 96       	adiw	r28, 0x10	; 16
     b52:	0f b6       	in	r0, 0x3f	; 63
     b54:	f8 94       	cli
     b56:	de bf       	out	0x3e, r29	; 62
     b58:	0f be       	out	0x3f, r0	; 63
     b5a:	cd bf       	out	0x3d, r28	; 61
     b5c:	df 91       	pop	r29
     b5e:	cf 91       	pop	r28
     b60:	1f 91       	pop	r17
     b62:	0f 91       	pop	r16
     b64:	ff 90       	pop	r15
     b66:	ef 90       	pop	r14
     b68:	08 95       	ret

00000b6a <get_fattime>:
}

DWORD get_fattime ()
{
	return 0;
}
     b6a:	60 e0       	ldi	r22, 0x00	; 0
     b6c:	70 e0       	ldi	r23, 0x00	; 0
     b6e:	cb 01       	movw	r24, r22
     b70:	08 95       	ret

00000b72 <mem_cpy>:
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
}
     b72:	cf 93       	push	r28
     b74:	df 93       	push	r29
     b76:	ea 01       	movw	r28, r20
     b78:	42 30       	cpi	r20, 0x02	; 2
     b7a:	51 05       	cpc	r21, r1
     b7c:	e8 f0       	brcs	.+58     	; 0xbb8 <mem_cpy+0x46>
     b7e:	db 01       	movw	r26, r22
     b80:	fc 01       	movw	r30, r24
     b82:	2d 91       	ld	r18, X+
     b84:	3d 91       	ld	r19, X+
     b86:	21 93       	st	Z+, r18
     b88:	31 93       	st	Z+, r19
     b8a:	42 50       	subi	r20, 0x02	; 2
     b8c:	51 09       	sbc	r21, r1
     b8e:	42 30       	cpi	r20, 0x02	; 2
     b90:	51 05       	cpc	r21, r1
     b92:	b8 f7       	brcc	.-18     	; 0xb82 <mem_cpy+0x10>
     b94:	ae 01       	movw	r20, r28
     b96:	42 50       	subi	r20, 0x02	; 2
     b98:	51 09       	sbc	r21, r1
     b9a:	9a 01       	movw	r18, r20
     b9c:	36 95       	lsr	r19
     b9e:	27 95       	ror	r18
     ba0:	f9 01       	movw	r30, r18
     ba2:	31 96       	adiw	r30, 0x01	; 1
     ba4:	ee 0f       	add	r30, r30
     ba6:	ff 1f       	adc	r31, r31
     ba8:	8e 0f       	add	r24, r30
     baa:	9f 1f       	adc	r25, r31
     bac:	6e 0f       	add	r22, r30
     bae:	7f 1f       	adc	r23, r31
     bb0:	22 0f       	add	r18, r18
     bb2:	33 1f       	adc	r19, r19
     bb4:	42 1b       	sub	r20, r18
     bb6:	53 0b       	sbc	r21, r19
     bb8:	41 15       	cp	r20, r1
     bba:	51 05       	cpc	r21, r1
     bbc:	49 f0       	breq	.+18     	; 0xbd0 <mem_cpy+0x5e>
     bbe:	db 01       	movw	r26, r22
     bc0:	fc 01       	movw	r30, r24
     bc2:	48 0f       	add	r20, r24
     bc4:	59 1f       	adc	r21, r25
     bc6:	8d 91       	ld	r24, X+
     bc8:	81 93       	st	Z+, r24
     bca:	e4 17       	cp	r30, r20
     bcc:	f5 07       	cpc	r31, r21
     bce:	d9 f7       	brne	.-10     	; 0xbc6 <mem_cpy+0x54>
     bd0:	df 91       	pop	r29
     bd2:	cf 91       	pop	r28
     bd4:	08 95       	ret

00000bd6 <mem_set>:
     bd6:	41 15       	cp	r20, r1
     bd8:	51 05       	cpc	r21, r1
     bda:	39 f0       	breq	.+14     	; 0xbea <mem_set+0x14>
     bdc:	fc 01       	movw	r30, r24
     bde:	84 0f       	add	r24, r20
     be0:	95 1f       	adc	r25, r21
     be2:	61 93       	st	Z+, r22
     be4:	e8 17       	cp	r30, r24
     be6:	f9 07       	cpc	r31, r25
     be8:	e1 f7       	brne	.-8      	; 0xbe2 <mem_set+0xc>
     bea:	08 95       	ret

00000bec <move_window>:
     bec:	4f 92       	push	r4
     bee:	5f 92       	push	r5
     bf0:	6f 92       	push	r6
     bf2:	7f 92       	push	r7
     bf4:	af 92       	push	r10
     bf6:	bf 92       	push	r11
     bf8:	cf 92       	push	r12
     bfa:	df 92       	push	r13
     bfc:	ef 92       	push	r14
     bfe:	ff 92       	push	r15
     c00:	0f 93       	push	r16
     c02:	1f 93       	push	r17
     c04:	cf 93       	push	r28
     c06:	df 93       	push	r29
     c08:	fc 01       	movw	r30, r24
     c0a:	c6 a4       	ldd	r12, Z+46	; 0x2e
     c0c:	d7 a4       	ldd	r13, Z+47	; 0x2f
     c0e:	e0 a8       	ldd	r14, Z+48	; 0x30
     c10:	f1 a8       	ldd	r15, Z+49	; 0x31
     c12:	c4 16       	cp	r12, r20
     c14:	d5 06       	cpc	r13, r21
     c16:	e6 06       	cpc	r14, r22
     c18:	f7 06       	cpc	r15, r23
     c1a:	09 f4       	brne	.+2      	; 0xc1e <move_window+0x32>
     c1c:	4c c0       	rjmp	.+152    	; 0xcb6 <move_window+0xca>
     c1e:	2a 01       	movw	r4, r20
     c20:	3b 01       	movw	r6, r22
     c22:	ec 01       	movw	r28, r24
     c24:	84 81       	ldd	r24, Z+4	; 0x04
     c26:	88 23       	and	r24, r24
     c28:	91 f1       	breq	.+100    	; 0xc8e <move_window+0xa2>
     c2a:	5f 01       	movw	r10, r30
     c2c:	f2 e3       	ldi	r31, 0x32	; 50
     c2e:	af 0e       	add	r10, r31
     c30:	b1 1c       	adc	r11, r1
     c32:	01 e0       	ldi	r16, 0x01	; 1
     c34:	a7 01       	movw	r20, r14
     c36:	96 01       	movw	r18, r12
     c38:	b5 01       	movw	r22, r10
     c3a:	89 81       	ldd	r24, Y+1	; 0x01
     c3c:	8f dd       	rcall	.-1250   	; 0x75c <disk_write>
     c3e:	81 11       	cpse	r24, r1
     c40:	3c c0       	rjmp	.+120    	; 0xcba <move_window+0xce>
     c42:	1c 82       	std	Y+4, r1	; 0x04
     c44:	4e 8d       	ldd	r20, Y+30	; 0x1e
     c46:	5f 8d       	ldd	r21, Y+31	; 0x1f
     c48:	68 a1       	ldd	r22, Y+32	; 0x20
     c4a:	79 a1       	ldd	r23, Y+33	; 0x21
     c4c:	8a a1       	ldd	r24, Y+34	; 0x22
     c4e:	9b a1       	ldd	r25, Y+35	; 0x23
     c50:	ac a1       	ldd	r26, Y+36	; 0x24
     c52:	bd a1       	ldd	r27, Y+37	; 0x25
     c54:	84 0f       	add	r24, r20
     c56:	95 1f       	adc	r25, r21
     c58:	a6 1f       	adc	r26, r22
     c5a:	b7 1f       	adc	r27, r23
     c5c:	c8 16       	cp	r12, r24
     c5e:	d9 06       	cpc	r13, r25
     c60:	ea 06       	cpc	r14, r26
     c62:	fb 06       	cpc	r15, r27
     c64:	a0 f4       	brcc	.+40     	; 0xc8e <move_window+0xa2>
     c66:	1b 81       	ldd	r17, Y+3	; 0x03
     c68:	12 30       	cpi	r17, 0x02	; 2
     c6a:	88 f0       	brcs	.+34     	; 0xc8e <move_window+0xa2>
     c6c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     c6e:	9f 8d       	ldd	r25, Y+31	; 0x1f
     c70:	a8 a1       	ldd	r26, Y+32	; 0x20
     c72:	b9 a1       	ldd	r27, Y+33	; 0x21
     c74:	c8 0e       	add	r12, r24
     c76:	d9 1e       	adc	r13, r25
     c78:	ea 1e       	adc	r14, r26
     c7a:	fb 1e       	adc	r15, r27
     c7c:	01 e0       	ldi	r16, 0x01	; 1
     c7e:	a7 01       	movw	r20, r14
     c80:	96 01       	movw	r18, r12
     c82:	b5 01       	movw	r22, r10
     c84:	89 81       	ldd	r24, Y+1	; 0x01
     c86:	6a dd       	rcall	.-1324   	; 0x75c <disk_write>
     c88:	11 50       	subi	r17, 0x01	; 1
     c8a:	11 30       	cpi	r17, 0x01	; 1
     c8c:	79 f7       	brne	.-34     	; 0xc6c <move_window+0x80>
     c8e:	41 14       	cp	r4, r1
     c90:	51 04       	cpc	r5, r1
     c92:	61 04       	cpc	r6, r1
     c94:	71 04       	cpc	r7, r1
     c96:	99 f0       	breq	.+38     	; 0xcbe <move_window+0xd2>
     c98:	01 e0       	ldi	r16, 0x01	; 1
     c9a:	a3 01       	movw	r20, r6
     c9c:	92 01       	movw	r18, r4
     c9e:	be 01       	movw	r22, r28
     ca0:	6e 5c       	subi	r22, 0xCE	; 206
     ca2:	7f 4f       	sbci	r23, 0xFF	; 255
     ca4:	89 81       	ldd	r24, Y+1	; 0x01
     ca6:	0d dd       	rcall	.-1510   	; 0x6c2 <disk_read>
     ca8:	81 11       	cpse	r24, r1
     caa:	0b c0       	rjmp	.+22     	; 0xcc2 <move_window+0xd6>
     cac:	4e a6       	std	Y+46, r4	; 0x2e
     cae:	5f a6       	std	Y+47, r5	; 0x2f
     cb0:	68 aa       	std	Y+48, r6	; 0x30
     cb2:	79 aa       	std	Y+49, r7	; 0x31
     cb4:	07 c0       	rjmp	.+14     	; 0xcc4 <move_window+0xd8>
     cb6:	80 e0       	ldi	r24, 0x00	; 0
     cb8:	05 c0       	rjmp	.+10     	; 0xcc4 <move_window+0xd8>
     cba:	81 e0       	ldi	r24, 0x01	; 1
     cbc:	03 c0       	rjmp	.+6      	; 0xcc4 <move_window+0xd8>
     cbe:	80 e0       	ldi	r24, 0x00	; 0
     cc0:	01 c0       	rjmp	.+2      	; 0xcc4 <move_window+0xd8>
     cc2:	81 e0       	ldi	r24, 0x01	; 1
     cc4:	df 91       	pop	r29
     cc6:	cf 91       	pop	r28
     cc8:	1f 91       	pop	r17
     cca:	0f 91       	pop	r16
     ccc:	ff 90       	pop	r15
     cce:	ef 90       	pop	r14
     cd0:	df 90       	pop	r13
     cd2:	cf 90       	pop	r12
     cd4:	bf 90       	pop	r11
     cd6:	af 90       	pop	r10
     cd8:	7f 90       	pop	r7
     cda:	6f 90       	pop	r6
     cdc:	5f 90       	pop	r5
     cde:	4f 90       	pop	r4
     ce0:	08 95       	ret

00000ce2 <check_fs>:
     ce2:	0f 93       	push	r16
     ce4:	cf 93       	push	r28
     ce6:	df 93       	push	r29
     ce8:	ec 01       	movw	r28, r24
     cea:	9a 01       	movw	r18, r20
     cec:	ab 01       	movw	r20, r22
     cee:	bc 01       	movw	r22, r24
     cf0:	6e 5c       	subi	r22, 0xCE	; 206
     cf2:	7f 4f       	sbci	r23, 0xFF	; 255
     cf4:	01 e0       	ldi	r16, 0x01	; 1
     cf6:	89 81       	ldd	r24, Y+1	; 0x01
     cf8:	e4 dc       	rcall	.-1592   	; 0x6c2 <disk_read>
     cfa:	81 11       	cpse	r24, r1
     cfc:	23 c0       	rjmp	.+70     	; 0xd44 <check_fs+0x62>
     cfe:	fe 01       	movw	r30, r28
     d00:	e0 5d       	subi	r30, 0xD0	; 208
     d02:	fd 4f       	sbci	r31, 0xFD	; 253
     d04:	80 81       	ld	r24, Z
     d06:	91 81       	ldd	r25, Z+1	; 0x01
     d08:	85 35       	cpi	r24, 0x55	; 85
     d0a:	9a 4a       	sbci	r25, 0xAA	; 170
     d0c:	e9 f4       	brne	.+58     	; 0xd48 <check_fs+0x66>
     d0e:	e8 5c       	subi	r30, 0xC8	; 200
     d10:	f1 40       	sbci	r31, 0x01	; 1
     d12:	80 81       	ld	r24, Z
     d14:	91 81       	ldd	r25, Z+1	; 0x01
     d16:	a2 81       	ldd	r26, Z+2	; 0x02
     d18:	b3 81       	ldd	r27, Z+3	; 0x03
     d1a:	bb 27       	eor	r27, r27
     d1c:	86 34       	cpi	r24, 0x46	; 70
     d1e:	91 44       	sbci	r25, 0x41	; 65
     d20:	a4 45       	sbci	r26, 0x54	; 84
     d22:	b1 05       	cpc	r27, r1
     d24:	99 f0       	breq	.+38     	; 0xd4c <check_fs+0x6a>
     d26:	cc 57       	subi	r28, 0x7C	; 124
     d28:	df 4f       	sbci	r29, 0xFF	; 255
     d2a:	48 81       	ld	r20, Y
     d2c:	59 81       	ldd	r21, Y+1	; 0x01
     d2e:	6a 81       	ldd	r22, Y+2	; 0x02
     d30:	7b 81       	ldd	r23, Y+3	; 0x03
     d32:	77 27       	eor	r23, r23
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	46 34       	cpi	r20, 0x46	; 70
     d38:	51 44       	sbci	r21, 0x41	; 65
     d3a:	64 45       	sbci	r22, 0x54	; 84
     d3c:	71 05       	cpc	r23, r1
     d3e:	39 f4       	brne	.+14     	; 0xd4e <check_fs+0x6c>
     d40:	80 e0       	ldi	r24, 0x00	; 0
     d42:	05 c0       	rjmp	.+10     	; 0xd4e <check_fs+0x6c>
     d44:	83 e0       	ldi	r24, 0x03	; 3
     d46:	03 c0       	rjmp	.+6      	; 0xd4e <check_fs+0x6c>
     d48:	82 e0       	ldi	r24, 0x02	; 2
     d4a:	01 c0       	rjmp	.+2      	; 0xd4e <check_fs+0x6c>
     d4c:	80 e0       	ldi	r24, 0x00	; 0
     d4e:	df 91       	pop	r29
     d50:	cf 91       	pop	r28
     d52:	0f 91       	pop	r16
     d54:	08 95       	ret

00000d56 <validate>:
     d56:	00 97       	sbiw	r24, 0x00	; 0
     d58:	79 f0       	breq	.+30     	; 0xd78 <validate+0x22>
     d5a:	fc 01       	movw	r30, r24
     d5c:	20 81       	ld	r18, Z
     d5e:	22 23       	and	r18, r18
     d60:	69 f0       	breq	.+26     	; 0xd7c <validate+0x26>
     d62:	26 81       	ldd	r18, Z+6	; 0x06
     d64:	37 81       	ldd	r19, Z+7	; 0x07
     d66:	26 17       	cp	r18, r22
     d68:	37 07       	cpc	r19, r23
     d6a:	51 f4       	brne	.+20     	; 0xd80 <validate+0x2a>
     d6c:	81 81       	ldd	r24, Z+1	; 0x01
     d6e:	a2 dc       	rcall	.-1724   	; 0x6b4 <disk_status>
     d70:	80 fd       	sbrc	r24, 0
     d72:	08 c0       	rjmp	.+16     	; 0xd84 <validate+0x2e>
     d74:	80 e0       	ldi	r24, 0x00	; 0
     d76:	08 95       	ret
     d78:	89 e0       	ldi	r24, 0x09	; 9
     d7a:	08 95       	ret
     d7c:	89 e0       	ldi	r24, 0x09	; 9
     d7e:	08 95       	ret
     d80:	89 e0       	ldi	r24, 0x09	; 9
     d82:	08 95       	ret
     d84:	83 e0       	ldi	r24, 0x03	; 3
     d86:	08 95       	ret

00000d88 <chk_mounted>:
     d88:	2f 92       	push	r2
     d8a:	3f 92       	push	r3
     d8c:	4f 92       	push	r4
     d8e:	5f 92       	push	r5
     d90:	6f 92       	push	r6
     d92:	7f 92       	push	r7
     d94:	8f 92       	push	r8
     d96:	9f 92       	push	r9
     d98:	af 92       	push	r10
     d9a:	bf 92       	push	r11
     d9c:	cf 92       	push	r12
     d9e:	df 92       	push	r13
     da0:	ef 92       	push	r14
     da2:	ff 92       	push	r15
     da4:	0f 93       	push	r16
     da6:	1f 93       	push	r17
     da8:	cf 93       	push	r28
     daa:	df 93       	push	r29
     dac:	cd b7       	in	r28, 0x3d	; 61
     dae:	de b7       	in	r29, 0x3e	; 62
     db0:	2e 97       	sbiw	r28, 0x0e	; 14
     db2:	0f b6       	in	r0, 0x3f	; 63
     db4:	f8 94       	cli
     db6:	de bf       	out	0x3e, r29	; 62
     db8:	0f be       	out	0x3f, r0	; 63
     dba:	cd bf       	out	0x3d, r28	; 61
     dbc:	dc 01       	movw	r26, r24
     dbe:	ed 91       	ld	r30, X+
     dc0:	fc 91       	ld	r31, X
     dc2:	e0 80       	ld	r14, Z
     dc4:	f1 2c       	mov	r15, r1
     dc6:	b0 e3       	ldi	r27, 0x30	; 48
     dc8:	eb 1a       	sub	r14, r27
     dca:	f1 08       	sbc	r15, r1
     dcc:	2a e0       	ldi	r18, 0x0A	; 10
     dce:	e2 16       	cp	r14, r18
     dd0:	f1 04       	cpc	r15, r1
     dd2:	40 f4       	brcc	.+16     	; 0xde4 <chk_mounted+0x5c>
     dd4:	21 81       	ldd	r18, Z+1	; 0x01
     dd6:	2a 33       	cpi	r18, 0x3A	; 58
     dd8:	29 f4       	brne	.+10     	; 0xde4 <chk_mounted+0x5c>
     dda:	32 96       	adiw	r30, 0x02	; 2
     ddc:	dc 01       	movw	r26, r24
     dde:	ed 93       	st	X+, r30
     de0:	fc 93       	st	X, r31
     de2:	03 c0       	rjmp	.+6      	; 0xdea <chk_mounted+0x62>
     de4:	e0 90 ea 01 	lds	r14, 0x01EA
     de8:	f1 2c       	mov	r15, r1
     dea:	b2 e0       	ldi	r27, 0x02	; 2
     dec:	eb 16       	cp	r14, r27
     dee:	f1 04       	cpc	r15, r1
     df0:	08 f0       	brcs	.+2      	; 0xdf4 <chk_mounted+0x6c>
     df2:	ca c1       	rjmp	.+916    	; 0x1188 <__stack+0x89>
     df4:	f7 01       	movw	r30, r14
     df6:	ee 0f       	add	r30, r30
     df8:	ff 1f       	adc	r31, r31
     dfa:	e5 51       	subi	r30, 0x15	; 21
     dfc:	fe 4f       	sbci	r31, 0xFE	; 254
     dfe:	20 81       	ld	r18, Z
     e00:	31 81       	ldd	r19, Z+1	; 0x01
     e02:	3e 87       	std	Y+14, r19	; 0x0e
     e04:	2d 87       	std	Y+13, r18	; 0x0d
     e06:	db 01       	movw	r26, r22
     e08:	2d 93       	st	X+, r18
     e0a:	3c 93       	st	X, r19
     e0c:	21 15       	cp	r18, r1
     e0e:	31 05       	cpc	r19, r1
     e10:	09 f4       	brne	.+2      	; 0xe14 <chk_mounted+0x8c>
     e12:	bc c1       	rjmp	.+888    	; 0x118c <__stack+0x8d>
     e14:	14 2f       	mov	r17, r20
     e16:	f9 01       	movw	r30, r18
     e18:	80 81       	ld	r24, Z
     e1a:	88 23       	and	r24, r24
     e1c:	59 f0       	breq	.+22     	; 0xe34 <chk_mounted+0xac>
     e1e:	81 81       	ldd	r24, Z+1	; 0x01
     e20:	49 dc       	rcall	.-1902   	; 0x6b4 <disk_status>
     e22:	80 fd       	sbrc	r24, 0
     e24:	07 c0       	rjmp	.+14     	; 0xe34 <chk_mounted+0xac>
     e26:	11 23       	and	r17, r17
     e28:	09 f4       	brne	.+2      	; 0xe2c <chk_mounted+0xa4>
     e2a:	b2 c1       	rjmp	.+868    	; 0x1190 <__stack+0x91>
     e2c:	82 ff       	sbrs	r24, 2
     e2e:	b2 c1       	rjmp	.+868    	; 0x1194 <__stack+0x95>
     e30:	8a e0       	ldi	r24, 0x0A	; 10
     e32:	7e c2       	rjmp	.+1276   	; 0x1330 <__stack+0x231>
     e34:	ad 85       	ldd	r26, Y+13	; 0x0d
     e36:	be 85       	ldd	r27, Y+14	; 0x0e
     e38:	1c 92       	st	X, r1
     e3a:	11 96       	adiw	r26, 0x01	; 1
     e3c:	ec 92       	st	X, r14
     e3e:	8e 2d       	mov	r24, r14
     e40:	82 db       	rcall	.-2300   	; 0x546 <disk_initialize>
     e42:	80 fd       	sbrc	r24, 0
     e44:	a9 c1       	rjmp	.+850    	; 0x1198 <__stack+0x99>
     e46:	11 23       	and	r17, r17
     e48:	11 f0       	breq	.+4      	; 0xe4e <chk_mounted+0xc6>
     e4a:	82 fd       	sbrc	r24, 2
     e4c:	a7 c1       	rjmp	.+846    	; 0x119c <__stack+0x9d>
     e4e:	40 e0       	ldi	r20, 0x00	; 0
     e50:	50 e0       	ldi	r21, 0x00	; 0
     e52:	ba 01       	movw	r22, r20
     e54:	8d 85       	ldd	r24, Y+13	; 0x0d
     e56:	9e 85       	ldd	r25, Y+14	; 0x0e
     e58:	44 df       	rcall	.-376    	; 0xce2 <check_fs>
     e5a:	81 30       	cpi	r24, 0x01	; 1
     e5c:	b1 f4       	brne	.+44     	; 0xe8a <chk_mounted+0x102>
     e5e:	ed 85       	ldd	r30, Y+13	; 0x0d
     e60:	fe 85       	ldd	r31, Y+14	; 0x0e
     e62:	ec 50       	subi	r30, 0x0C	; 12
     e64:	fe 4f       	sbci	r31, 0xFE	; 254
     e66:	80 81       	ld	r24, Z
     e68:	88 23       	and	r24, r24
     e6a:	09 f4       	brne	.+2      	; 0xe6e <chk_mounted+0xe6>
     e6c:	99 c1       	rjmp	.+818    	; 0x11a0 <__stack+0xa1>
     e6e:	ed 85       	ldd	r30, Y+13	; 0x0d
     e70:	fe 85       	ldd	r31, Y+14	; 0x0e
     e72:	e8 50       	subi	r30, 0x08	; 8
     e74:	fe 4f       	sbci	r31, 0xFE	; 254
     e76:	40 80       	ld	r4, Z
     e78:	51 80       	ldd	r5, Z+1	; 0x01
     e7a:	62 80       	ldd	r6, Z+2	; 0x02
     e7c:	73 80       	ldd	r7, Z+3	; 0x03
     e7e:	b3 01       	movw	r22, r6
     e80:	a2 01       	movw	r20, r4
     e82:	8d 85       	ldd	r24, Y+13	; 0x0d
     e84:	9e 85       	ldd	r25, Y+14	; 0x0e
     e86:	2d df       	rcall	.-422    	; 0xce2 <check_fs>
     e88:	03 c0       	rjmp	.+6      	; 0xe90 <chk_mounted+0x108>
     e8a:	41 2c       	mov	r4, r1
     e8c:	51 2c       	mov	r5, r1
     e8e:	32 01       	movw	r6, r4
     e90:	83 30       	cpi	r24, 0x03	; 3
     e92:	09 f4       	brne	.+2      	; 0xe96 <chk_mounted+0x10e>
     e94:	87 c1       	rjmp	.+782    	; 0x11a4 <__stack+0xa5>
     e96:	81 11       	cpse	r24, r1
     e98:	87 c1       	rjmp	.+782    	; 0x11a8 <__stack+0xa9>
     e9a:	ed 85       	ldd	r30, Y+13	; 0x0d
     e9c:	fe 85       	ldd	r31, Y+14	; 0x0e
     e9e:	85 ad       	ldd	r24, Z+61	; 0x3d
     ea0:	96 ad       	ldd	r25, Z+62	; 0x3e
     ea2:	81 15       	cp	r24, r1
     ea4:	92 40       	sbci	r25, 0x02	; 2
     ea6:	09 f0       	breq	.+2      	; 0xeaa <chk_mounted+0x122>
     ea8:	81 c1       	rjmp	.+770    	; 0x11ac <__stack+0xad>
     eaa:	ed 85       	ldd	r30, Y+13	; 0x0d
     eac:	fe 85       	ldd	r31, Y+14	; 0x0e
     eae:	e8 5b       	subi	r30, 0xB8	; 184
     eb0:	ff 4f       	sbci	r31, 0xFF	; 255
     eb2:	80 80       	ld	r8, Z
     eb4:	91 80       	ldd	r9, Z+1	; 0x01
     eb6:	a1 2c       	mov	r10, r1
     eb8:	b1 2c       	mov	r11, r1
     eba:	81 14       	cp	r8, r1
     ebc:	91 04       	cpc	r9, r1
     ebe:	a1 04       	cpc	r10, r1
     ec0:	b1 04       	cpc	r11, r1
     ec2:	41 f4       	brne	.+16     	; 0xed4 <chk_mounted+0x14c>
     ec4:	ed 85       	ldd	r30, Y+13	; 0x0d
     ec6:	fe 85       	ldd	r31, Y+14	; 0x0e
     ec8:	ea 5a       	subi	r30, 0xAA	; 170
     eca:	ff 4f       	sbci	r31, 0xFF	; 255
     ecc:	80 80       	ld	r8, Z
     ece:	91 80       	ldd	r9, Z+1	; 0x01
     ed0:	a2 80       	ldd	r10, Z+2	; 0x02
     ed2:	b3 80       	ldd	r11, Z+3	; 0x03
     ed4:	ad 85       	ldd	r26, Y+13	; 0x0d
     ed6:	be 85       	ldd	r27, Y+14	; 0x0e
     ed8:	5e 96       	adiw	r26, 0x1e	; 30
     eda:	8d 92       	st	X+, r8
     edc:	9d 92       	st	X+, r9
     ede:	ad 92       	st	X+, r10
     ee0:	bc 92       	st	X, r11
     ee2:	91 97       	sbiw	r26, 0x21	; 33
     ee4:	fd 01       	movw	r30, r26
     ee6:	ee 5b       	subi	r30, 0xBE	; 190
     ee8:	ff 4f       	sbci	r31, 0xFF	; 255
     eea:	a0 81       	ld	r26, Z
     eec:	ed 85       	ldd	r30, Y+13	; 0x0d
     eee:	fe 85       	ldd	r31, Y+14	; 0x0e
     ef0:	a3 83       	std	Z+3, r26	; 0x03
     ef2:	8f ef       	ldi	r24, 0xFF	; 255
     ef4:	8a 0f       	add	r24, r26
     ef6:	82 30       	cpi	r24, 0x02	; 2
     ef8:	08 f0       	brcs	.+2      	; 0xefc <chk_mounted+0x174>
     efa:	5a c1       	rjmp	.+692    	; 0x11b0 <__stack+0xb1>
     efc:	17 ad       	ldd	r17, Z+63	; 0x3f
     efe:	12 83       	std	Z+2, r17	; 0x02
     f00:	11 23       	and	r17, r17
     f02:	09 f4       	brne	.+2      	; 0xf06 <chk_mounted+0x17e>
     f04:	57 c1       	rjmp	.+686    	; 0x11b4 <__stack+0xb5>
     f06:	81 2f       	mov	r24, r17
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	9c 01       	movw	r18, r24
     f0c:	21 50       	subi	r18, 0x01	; 1
     f0e:	31 09       	sbc	r19, r1
     f10:	82 23       	and	r24, r18
     f12:	93 23       	and	r25, r19
     f14:	89 2b       	or	r24, r25
     f16:	09 f0       	breq	.+2      	; 0xf1a <chk_mounted+0x192>
     f18:	4f c1       	rjmp	.+670    	; 0x11b8 <__stack+0xb9>
     f1a:	ed 5b       	subi	r30, 0xBD	; 189
     f1c:	ff 4f       	sbci	r31, 0xFF	; 255
     f1e:	20 80       	ld	r2, Z
     f20:	31 80       	ldd	r3, Z+1	; 0x01
     f22:	ed 85       	ldd	r30, Y+13	; 0x0d
     f24:	fe 85       	ldd	r31, Y+14	; 0x0e
     f26:	31 86       	std	Z+9, r3	; 0x09
     f28:	20 86       	std	Z+8, r2	; 0x08
     f2a:	c1 01       	movw	r24, r2
     f2c:	8f 70       	andi	r24, 0x0F	; 15
     f2e:	99 27       	eor	r25, r25
     f30:	89 2b       	or	r24, r25
     f32:	09 f0       	breq	.+2      	; 0xf36 <chk_mounted+0x1ae>
     f34:	43 c1       	rjmp	.+646    	; 0x11bc <__stack+0xbd>
     f36:	eb 5b       	subi	r30, 0xBB	; 187
     f38:	ff 4f       	sbci	r31, 0xFF	; 255
     f3a:	c0 80       	ld	r12, Z
     f3c:	d1 80       	ldd	r13, Z+1	; 0x01
     f3e:	e1 2c       	mov	r14, r1
     f40:	f1 2c       	mov	r15, r1
     f42:	c1 14       	cp	r12, r1
     f44:	d1 04       	cpc	r13, r1
     f46:	e1 04       	cpc	r14, r1
     f48:	f1 04       	cpc	r15, r1
     f4a:	41 f4       	brne	.+16     	; 0xf5c <chk_mounted+0x1d4>
     f4c:	ed 85       	ldd	r30, Y+13	; 0x0d
     f4e:	fe 85       	ldd	r31, Y+14	; 0x0e
     f50:	ee 5a       	subi	r30, 0xAE	; 174
     f52:	ff 4f       	sbci	r31, 0xFF	; 255
     f54:	c0 80       	ld	r12, Z
     f56:	d1 80       	ldd	r13, Z+1	; 0x01
     f58:	e2 80       	ldd	r14, Z+2	; 0x02
     f5a:	f3 80       	ldd	r15, Z+3	; 0x03
     f5c:	ed 85       	ldd	r30, Y+13	; 0x0d
     f5e:	fe 85       	ldd	r31, Y+14	; 0x0e
     f60:	e0 5c       	subi	r30, 0xC0	; 192
     f62:	ff 4f       	sbci	r31, 0xFF	; 255
     f64:	20 81       	ld	r18, Z
     f66:	31 81       	ldd	r19, Z+1	; 0x01
     f68:	3a 83       	std	Y+2, r19	; 0x02
     f6a:	29 83       	std	Y+1, r18	; 0x01
     f6c:	23 2b       	or	r18, r19
     f6e:	09 f4       	brne	.+2      	; 0xf72 <chk_mounted+0x1ea>
     f70:	27 c1       	rjmp	.+590    	; 0x11c0 <__stack+0xc1>
     f72:	b0 e0       	ldi	r27, 0x00	; 0
     f74:	a5 01       	movw	r20, r10
     f76:	94 01       	movw	r18, r8
     f78:	0e 94 ad 17 	call	0x2f5a	; 0x2f5a <__muluhisi3>
     f7c:	69 87       	std	Y+9, r22	; 0x09
     f7e:	7a 87       	std	Y+10, r23	; 0x0a
     f80:	8b 87       	std	Y+11, r24	; 0x0b
     f82:	9c 87       	std	Y+12, r25	; 0x0c
     f84:	a9 81       	ldd	r26, Y+1	; 0x01
     f86:	ba 81       	ldd	r27, Y+2	; 0x02
     f88:	cd 01       	movw	r24, r26
     f8a:	a0 e0       	ldi	r26, 0x00	; 0
     f8c:	b0 e0       	ldi	r27, 0x00	; 0
     f8e:	8d 83       	std	Y+5, r24	; 0x05
     f90:	9e 83       	std	Y+6, r25	; 0x06
     f92:	af 83       	std	Y+7, r26	; 0x07
     f94:	b8 87       	std	Y+8, r27	; 0x08
     f96:	c1 01       	movw	r24, r2
     f98:	92 95       	swap	r25
     f9a:	82 95       	swap	r24
     f9c:	8f 70       	andi	r24, 0x0F	; 15
     f9e:	89 27       	eor	r24, r25
     fa0:	9f 70       	andi	r25, 0x0F	; 15
     fa2:	89 27       	eor	r24, r25
     fa4:	2d 81       	ldd	r18, Y+5	; 0x05
     fa6:	3e 81       	ldd	r19, Y+6	; 0x06
     fa8:	4f 81       	ldd	r20, Y+7	; 0x07
     faa:	58 85       	ldd	r21, Y+8	; 0x08
     fac:	28 0f       	add	r18, r24
     fae:	39 1f       	adc	r19, r25
     fb0:	41 1d       	adc	r20, r1
     fb2:	51 1d       	adc	r21, r1
     fb4:	da 01       	movw	r26, r20
     fb6:	c9 01       	movw	r24, r18
     fb8:	29 85       	ldd	r18, Y+9	; 0x09
     fba:	3a 85       	ldd	r19, Y+10	; 0x0a
     fbc:	4b 85       	ldd	r20, Y+11	; 0x0b
     fbe:	5c 85       	ldd	r21, Y+12	; 0x0c
     fc0:	28 0f       	add	r18, r24
     fc2:	39 1f       	adc	r19, r25
     fc4:	4a 1f       	adc	r20, r26
     fc6:	5b 1f       	adc	r21, r27
     fc8:	29 83       	std	Y+1, r18	; 0x01
     fca:	3a 83       	std	Y+2, r19	; 0x02
     fcc:	4b 83       	std	Y+3, r20	; 0x03
     fce:	5c 83       	std	Y+4, r21	; 0x04
     fd0:	c2 16       	cp	r12, r18
     fd2:	d3 06       	cpc	r13, r19
     fd4:	e4 06       	cpc	r14, r20
     fd6:	f5 06       	cpc	r15, r21
     fd8:	08 f4       	brcc	.+2      	; 0xfdc <chk_mounted+0x254>
     fda:	f4 c0       	rjmp	.+488    	; 0x11c4 <__stack+0xc5>
     fdc:	c7 01       	movw	r24, r14
     fde:	b6 01       	movw	r22, r12
     fe0:	62 1b       	sub	r22, r18
     fe2:	73 0b       	sbc	r23, r19
     fe4:	84 0b       	sbc	r24, r20
     fe6:	95 0b       	sbc	r25, r21
     fe8:	21 2f       	mov	r18, r17
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	40 e0       	ldi	r20, 0x00	; 0
     fee:	50 e0       	ldi	r21, 0x00	; 0
     ff0:	0e 94 82 17 	call	0x2f04	; 0x2f04 <__udivmodsi4>
     ff4:	da 01       	movw	r26, r20
     ff6:	c9 01       	movw	r24, r18
     ff8:	21 15       	cp	r18, r1
     ffa:	31 05       	cpc	r19, r1
     ffc:	41 05       	cpc	r20, r1
     ffe:	51 05       	cpc	r21, r1
    1000:	09 f4       	brne	.+2      	; 0x1004 <chk_mounted+0x27c>
    1002:	e2 c0       	rjmp	.+452    	; 0x11c8 <__stack+0xc9>
    1004:	26 3f       	cpi	r18, 0xF6	; 246
    1006:	6f e0       	ldi	r22, 0x0F	; 15
    1008:	36 07       	cpc	r19, r22
    100a:	41 05       	cpc	r20, r1
    100c:	51 05       	cpc	r21, r1
    100e:	08 f0       	brcs	.+2      	; 0x1012 <chk_mounted+0x28a>
    1010:	87 c1       	rjmp	.+782    	; 0x1320 <__stack+0x221>
    1012:	11 e0       	ldi	r17, 0x01	; 1
    1014:	86 c1       	rjmp	.+780    	; 0x1322 <__stack+0x223>
    1016:	ed 85       	ldd	r30, Y+13	; 0x0d
    1018:	fe 85       	ldd	r31, Y+14	; 0x0e
    101a:	e2 5a       	subi	r30, 0xA2	; 162
    101c:	ff 4f       	sbci	r31, 0xFF	; 255
    101e:	80 81       	ld	r24, Z
    1020:	91 81       	ldd	r25, Z+1	; 0x01
    1022:	a2 81       	ldd	r26, Z+2	; 0x02
    1024:	b3 81       	ldd	r27, Z+3	; 0x03
    1026:	ed 85       	ldd	r30, Y+13	; 0x0d
    1028:	fe 85       	ldd	r31, Y+14	; 0x0e
    102a:	86 a3       	std	Z+38, r24	; 0x26
    102c:	97 a3       	std	Z+39, r25	; 0x27
    102e:	a0 a7       	std	Z+40, r26	; 0x28
    1030:	b1 a7       	std	Z+41, r27	; 0x29
    1032:	cc 0c       	add	r12, r12
    1034:	dd 1c       	adc	r13, r13
    1036:	ee 1c       	adc	r14, r14
    1038:	ff 1c       	adc	r15, r15
    103a:	cc 0c       	add	r12, r12
    103c:	dd 1c       	adc	r13, r13
    103e:	ee 1c       	adc	r14, r14
    1040:	ff 1c       	adc	r15, r15
    1042:	ff ef       	ldi	r31, 0xFF	; 255
    1044:	cf 0e       	add	r12, r31
    1046:	f1 e0       	ldi	r31, 0x01	; 1
    1048:	df 1e       	adc	r13, r31
    104a:	e1 1c       	adc	r14, r1
    104c:	f1 1c       	adc	r15, r1
    104e:	0b 2e       	mov	r0, r27
    1050:	b9 e0       	ldi	r27, 0x09	; 9
    1052:	f6 94       	lsr	r15
    1054:	e7 94       	ror	r14
    1056:	d7 94       	ror	r13
    1058:	c7 94       	ror	r12
    105a:	ba 95       	dec	r27
    105c:	d1 f7       	brne	.-12     	; 0x1052 <chk_mounted+0x2ca>
    105e:	b0 2d       	mov	r27, r0
    1060:	8c 14       	cp	r8, r12
    1062:	9d 04       	cpc	r9, r13
    1064:	ae 04       	cpc	r10, r14
    1066:	bf 04       	cpc	r11, r15
    1068:	08 f4       	brcc	.+2      	; 0x106c <chk_mounted+0x2e4>
    106a:	b0 c0       	rjmp	.+352    	; 0x11cc <__stack+0xcd>
    106c:	03 c1       	rjmp	.+518    	; 0x1274 <__stack+0x175>
    106e:	49 84       	ldd	r4, Y+9	; 0x09
    1070:	5a 84       	ldd	r5, Y+10	; 0x0a
    1072:	6b 84       	ldd	r6, Y+11	; 0x0b
    1074:	7c 84       	ldd	r7, Y+12	; 0x0c
    1076:	48 0e       	add	r4, r24
    1078:	59 1e       	adc	r5, r25
    107a:	6a 1e       	adc	r6, r26
    107c:	7b 1e       	adc	r7, r27
    107e:	ad 85       	ldd	r26, Y+13	; 0x0d
    1080:	be 85       	ldd	r27, Y+14	; 0x0e
    1082:	96 96       	adiw	r26, 0x26	; 38
    1084:	4d 92       	st	X+, r4
    1086:	5d 92       	st	X+, r5
    1088:	6d 92       	st	X+, r6
    108a:	7c 92       	st	X, r7
    108c:	99 97       	sbiw	r26, 0x29	; 41
    108e:	12 30       	cpi	r17, 0x02	; 2
    1090:	29 f4       	brne	.+10     	; 0x109c <chk_mounted+0x314>
    1092:	cc 0c       	add	r12, r12
    1094:	dd 1c       	adc	r13, r13
    1096:	ee 1c       	adc	r14, r14
    1098:	ff 1c       	adc	r15, r15
    109a:	d6 c0       	rjmp	.+428    	; 0x1248 <__stack+0x149>
    109c:	a3 e0       	ldi	r26, 0x03	; 3
    109e:	b0 e0       	ldi	r27, 0x00	; 0
    10a0:	a7 01       	movw	r20, r14
    10a2:	96 01       	movw	r18, r12
    10a4:	0e 94 ad 17 	call	0x2f5a	; 0x2f5a <__muluhisi3>
    10a8:	dc 01       	movw	r26, r24
    10aa:	cb 01       	movw	r24, r22
    10ac:	b6 95       	lsr	r27
    10ae:	a7 95       	ror	r26
    10b0:	97 95       	ror	r25
    10b2:	87 95       	ror	r24
    10b4:	e1 e0       	ldi	r30, 0x01	; 1
    10b6:	ce 22       	and	r12, r30
    10b8:	dd 24       	eor	r13, r13
    10ba:	ee 24       	eor	r14, r14
    10bc:	ff 24       	eor	r15, r15
    10be:	c8 0e       	add	r12, r24
    10c0:	d9 1e       	adc	r13, r25
    10c2:	ea 1e       	adc	r14, r26
    10c4:	fb 1e       	adc	r15, r27
    10c6:	c0 c0       	rjmp	.+384    	; 0x1248 <__stack+0x149>
    10c8:	ed 85       	ldd	r30, Y+13	; 0x0d
    10ca:	fe 85       	ldd	r31, Y+14	; 0x0e
    10cc:	e0 5d       	subi	r30, 0xD0	; 208
    10ce:	fd 4f       	sbci	r31, 0xFD	; 253
    10d0:	80 81       	ld	r24, Z
    10d2:	91 81       	ldd	r25, Z+1	; 0x01
    10d4:	85 35       	cpi	r24, 0x55	; 85
    10d6:	9a 4a       	sbci	r25, 0xAA	; 170
    10d8:	a1 f5       	brne	.+104    	; 0x1142 <__stack+0x43>
    10da:	ed 85       	ldd	r30, Y+13	; 0x0d
    10dc:	fe 85       	ldd	r31, Y+14	; 0x0e
    10de:	82 a9       	ldd	r24, Z+50	; 0x32
    10e0:	93 a9       	ldd	r25, Z+51	; 0x33
    10e2:	a4 a9       	ldd	r26, Z+52	; 0x34
    10e4:	b5 a9       	ldd	r27, Z+53	; 0x35
    10e6:	82 35       	cpi	r24, 0x52	; 82
    10e8:	92 45       	sbci	r25, 0x52	; 82
    10ea:	a1 46       	sbci	r26, 0x61	; 97
    10ec:	b1 44       	sbci	r27, 0x41	; 65
    10ee:	59 f5       	brne	.+86     	; 0x1146 <__stack+0x47>
    10f0:	ed 85       	ldd	r30, Y+13	; 0x0d
    10f2:	fe 85       	ldd	r31, Y+14	; 0x0e
    10f4:	ea 5e       	subi	r30, 0xEA	; 234
    10f6:	fd 4f       	sbci	r31, 0xFD	; 253
    10f8:	80 81       	ld	r24, Z
    10fa:	91 81       	ldd	r25, Z+1	; 0x01
    10fc:	a2 81       	ldd	r26, Z+2	; 0x02
    10fe:	b3 81       	ldd	r27, Z+3	; 0x03
    1100:	82 37       	cpi	r24, 0x72	; 114
    1102:	92 47       	sbci	r25, 0x72	; 114
    1104:	a1 44       	sbci	r26, 0x41	; 65
    1106:	b1 46       	sbci	r27, 0x61	; 97
    1108:	01 f5       	brne	.+64     	; 0x114a <__stack+0x4b>
    110a:	ed 85       	ldd	r30, Y+13	; 0x0d
    110c:	fe 85       	ldd	r31, Y+14	; 0x0e
    110e:	e2 5e       	subi	r30, 0xE2	; 226
    1110:	fd 4f       	sbci	r31, 0xFD	; 253
    1112:	80 81       	ld	r24, Z
    1114:	91 81       	ldd	r25, Z+1	; 0x01
    1116:	a2 81       	ldd	r26, Z+2	; 0x02
    1118:	b3 81       	ldd	r27, Z+3	; 0x03
    111a:	ed 85       	ldd	r30, Y+13	; 0x0d
    111c:	fe 85       	ldd	r31, Y+14	; 0x0e
    111e:	82 87       	std	Z+10, r24	; 0x0a
    1120:	93 87       	std	Z+11, r25	; 0x0b
    1122:	a4 87       	std	Z+12, r26	; 0x0c
    1124:	b5 87       	std	Z+13, r27	; 0x0d
    1126:	e6 5e       	subi	r30, 0xE6	; 230
    1128:	fd 4f       	sbci	r31, 0xFD	; 253
    112a:	80 81       	ld	r24, Z
    112c:	91 81       	ldd	r25, Z+1	; 0x01
    112e:	a2 81       	ldd	r26, Z+2	; 0x02
    1130:	b3 81       	ldd	r27, Z+3	; 0x03
    1132:	ed 85       	ldd	r30, Y+13	; 0x0d
    1134:	fe 85       	ldd	r31, Y+14	; 0x0e
    1136:	86 87       	std	Z+14, r24	; 0x0e
    1138:	97 87       	std	Z+15, r25	; 0x0f
    113a:	a0 8b       	std	Z+16, r26	; 0x10
    113c:	b1 8b       	std	Z+17, r27	; 0x11
    113e:	13 e0       	ldi	r17, 0x03	; 3
    1140:	05 c0       	rjmp	.+10     	; 0x114c <__stack+0x4d>
    1142:	13 e0       	ldi	r17, 0x03	; 3
    1144:	03 c0       	rjmp	.+6      	; 0x114c <__stack+0x4d>
    1146:	13 e0       	ldi	r17, 0x03	; 3
    1148:	01 c0       	rjmp	.+2      	; 0x114c <__stack+0x4d>
    114a:	13 e0       	ldi	r17, 0x03	; 3
    114c:	ad 85       	ldd	r26, Y+13	; 0x0d
    114e:	be 85       	ldd	r27, Y+14	; 0x0e
    1150:	1c 93       	st	X, r17
    1152:	80 91 ef 01 	lds	r24, 0x01EF
    1156:	90 91 f0 01 	lds	r25, 0x01F0
    115a:	01 96       	adiw	r24, 0x01	; 1
    115c:	90 93 f0 01 	sts	0x01F0, r25
    1160:	80 93 ef 01 	sts	0x01EF, r24
    1164:	17 96       	adiw	r26, 0x07	; 7
    1166:	9c 93       	st	X, r25
    1168:	8e 93       	st	-X, r24
    116a:	16 97       	sbiw	r26, 0x06	; 6
    116c:	fd 01       	movw	r30, r26
    116e:	16 a6       	std	Z+46, r1	; 0x2e
    1170:	17 a6       	std	Z+47, r1	; 0x2f
    1172:	10 aa       	std	Z+48, r1	; 0x30
    1174:	11 aa       	std	Z+49, r1	; 0x31
    1176:	14 82       	std	Z+4, r1	; 0x04
    1178:	56 96       	adiw	r26, 0x16	; 22
    117a:	1d 92       	st	X+, r1
    117c:	1d 92       	st	X+, r1
    117e:	1d 92       	st	X+, r1
    1180:	1c 92       	st	X, r1
    1182:	59 97       	sbiw	r26, 0x19	; 25
    1184:	80 e0       	ldi	r24, 0x00	; 0
    1186:	d4 c0       	rjmp	.+424    	; 0x1330 <__stack+0x231>
    1188:	8b e0       	ldi	r24, 0x0B	; 11
    118a:	d2 c0       	rjmp	.+420    	; 0x1330 <__stack+0x231>
    118c:	8c e0       	ldi	r24, 0x0C	; 12
    118e:	d0 c0       	rjmp	.+416    	; 0x1330 <__stack+0x231>
    1190:	80 e0       	ldi	r24, 0x00	; 0
    1192:	ce c0       	rjmp	.+412    	; 0x1330 <__stack+0x231>
    1194:	80 e0       	ldi	r24, 0x00	; 0
    1196:	cc c0       	rjmp	.+408    	; 0x1330 <__stack+0x231>
    1198:	83 e0       	ldi	r24, 0x03	; 3
    119a:	ca c0       	rjmp	.+404    	; 0x1330 <__stack+0x231>
    119c:	8a e0       	ldi	r24, 0x0A	; 10
    119e:	c8 c0       	rjmp	.+400    	; 0x1330 <__stack+0x231>
    11a0:	8d e0       	ldi	r24, 0x0D	; 13
    11a2:	c6 c0       	rjmp	.+396    	; 0x1330 <__stack+0x231>
    11a4:	81 e0       	ldi	r24, 0x01	; 1
    11a6:	c4 c0       	rjmp	.+392    	; 0x1330 <__stack+0x231>
    11a8:	8d e0       	ldi	r24, 0x0D	; 13
    11aa:	c2 c0       	rjmp	.+388    	; 0x1330 <__stack+0x231>
    11ac:	8d e0       	ldi	r24, 0x0D	; 13
    11ae:	c0 c0       	rjmp	.+384    	; 0x1330 <__stack+0x231>
    11b0:	8d e0       	ldi	r24, 0x0D	; 13
    11b2:	be c0       	rjmp	.+380    	; 0x1330 <__stack+0x231>
    11b4:	8d e0       	ldi	r24, 0x0D	; 13
    11b6:	bc c0       	rjmp	.+376    	; 0x1330 <__stack+0x231>
    11b8:	8d e0       	ldi	r24, 0x0D	; 13
    11ba:	ba c0       	rjmp	.+372    	; 0x1330 <__stack+0x231>
    11bc:	8d e0       	ldi	r24, 0x0D	; 13
    11be:	b8 c0       	rjmp	.+368    	; 0x1330 <__stack+0x231>
    11c0:	8d e0       	ldi	r24, 0x0D	; 13
    11c2:	b6 c0       	rjmp	.+364    	; 0x1330 <__stack+0x231>
    11c4:	8d e0       	ldi	r24, 0x0D	; 13
    11c6:	b4 c0       	rjmp	.+360    	; 0x1330 <__stack+0x231>
    11c8:	8d e0       	ldi	r24, 0x0D	; 13
    11ca:	b2 c0       	rjmp	.+356    	; 0x1330 <__stack+0x231>
    11cc:	8d e0       	ldi	r24, 0x0D	; 13
    11ce:	b0 c0       	rjmp	.+352    	; 0x1330 <__stack+0x231>
    11d0:	8d e0       	ldi	r24, 0x0D	; 13
    11d2:	ae c0       	rjmp	.+348    	; 0x1330 <__stack+0x231>
    11d4:	8d e0       	ldi	r24, 0x0D	; 13
    11d6:	ac c0       	rjmp	.+344    	; 0x1330 <__stack+0x231>
    11d8:	8d e0       	ldi	r24, 0x0D	; 13
    11da:	aa c0       	rjmp	.+340    	; 0x1330 <__stack+0x231>
    11dc:	69 01       	movw	r12, r18
    11de:	7a 01       	movw	r14, r20
    11e0:	b2 e0       	ldi	r27, 0x02	; 2
    11e2:	cb 0e       	add	r12, r27
    11e4:	d1 1c       	adc	r13, r1
    11e6:	e1 1c       	adc	r14, r1
    11e8:	f1 1c       	adc	r15, r1
    11ea:	ed 85       	ldd	r30, Y+13	; 0x0d
    11ec:	fe 85       	ldd	r31, Y+14	; 0x0e
    11ee:	c2 8e       	std	Z+26, r12	; 0x1a
    11f0:	d3 8e       	std	Z+27, r13	; 0x1b
    11f2:	e4 8e       	std	Z+28, r14	; 0x1c
    11f4:	f5 8e       	std	Z+29, r15	; 0x1d
    11f6:	89 81       	ldd	r24, Y+1	; 0x01
    11f8:	9a 81       	ldd	r25, Y+2	; 0x02
    11fa:	ab 81       	ldd	r26, Y+3	; 0x03
    11fc:	bc 81       	ldd	r27, Y+4	; 0x04
    11fe:	84 0d       	add	r24, r4
    1200:	95 1d       	adc	r25, r5
    1202:	a6 1d       	adc	r26, r6
    1204:	b7 1d       	adc	r27, r7
    1206:	82 a7       	std	Z+42, r24	; 0x2a
    1208:	93 a7       	std	Z+43, r25	; 0x2b
    120a:	a4 a7       	std	Z+44, r26	; 0x2c
    120c:	b5 a7       	std	Z+45, r27	; 0x2d
    120e:	8d 81       	ldd	r24, Y+5	; 0x05
    1210:	9e 81       	ldd	r25, Y+6	; 0x06
    1212:	af 81       	ldd	r26, Y+7	; 0x07
    1214:	b8 85       	ldd	r27, Y+8	; 0x08
    1216:	84 0d       	add	r24, r4
    1218:	95 1d       	adc	r25, r5
    121a:	a6 1d       	adc	r26, r6
    121c:	b7 1d       	adc	r27, r7
    121e:	82 a3       	std	Z+34, r24	; 0x22
    1220:	93 a3       	std	Z+35, r25	; 0x23
    1222:	a4 a3       	std	Z+36, r26	; 0x24
    1224:	b5 a3       	std	Z+37, r27	; 0x25
    1226:	23 28       	or	r2, r3
    1228:	99 f6       	brne	.-90     	; 0x11d0 <__stack+0xd1>
    122a:	f5 ce       	rjmp	.-534    	; 0x1016 <chk_mounted+0x28e>
    122c:	8f ef       	ldi	r24, 0xFF	; 255
    122e:	9f ef       	ldi	r25, 0xFF	; 255
    1230:	dc 01       	movw	r26, r24
    1232:	ed 85       	ldd	r30, Y+13	; 0x0d
    1234:	fe 85       	ldd	r31, Y+14	; 0x0e
    1236:	86 87       	std	Z+14, r24	; 0x0e
    1238:	97 87       	std	Z+15, r25	; 0x0f
    123a:	a0 8b       	std	Z+16, r26	; 0x10
    123c:	b1 8b       	std	Z+17, r27	; 0x11
    123e:	12 86       	std	Z+10, r1	; 0x0a
    1240:	13 86       	std	Z+11, r1	; 0x0b
    1242:	14 86       	std	Z+12, r1	; 0x0c
    1244:	15 86       	std	Z+13, r1	; 0x0d
    1246:	82 cf       	rjmp	.-252    	; 0x114c <__stack+0x4d>
    1248:	bf ef       	ldi	r27, 0xFF	; 255
    124a:	cb 0e       	add	r12, r27
    124c:	b1 e0       	ldi	r27, 0x01	; 1
    124e:	db 1e       	adc	r13, r27
    1250:	e1 1c       	adc	r14, r1
    1252:	f1 1c       	adc	r15, r1
    1254:	0b 2e       	mov	r0, r27
    1256:	b9 e0       	ldi	r27, 0x09	; 9
    1258:	f6 94       	lsr	r15
    125a:	e7 94       	ror	r14
    125c:	d7 94       	ror	r13
    125e:	c7 94       	ror	r12
    1260:	ba 95       	dec	r27
    1262:	d1 f7       	brne	.-12     	; 0x1258 <__stack+0x159>
    1264:	b0 2d       	mov	r27, r0
    1266:	8c 14       	cp	r8, r12
    1268:	9d 04       	cpc	r9, r13
    126a:	ae 04       	cpc	r10, r14
    126c:	bf 04       	cpc	r11, r15
    126e:	08 f4       	brcc	.+2      	; 0x1272 <__stack+0x173>
    1270:	b1 cf       	rjmp	.-158    	; 0x11d4 <__stack+0xd5>
    1272:	dc cf       	rjmp	.-72     	; 0x122c <__stack+0x12d>
    1274:	8f ef       	ldi	r24, 0xFF	; 255
    1276:	9f ef       	ldi	r25, 0xFF	; 255
    1278:	dc 01       	movw	r26, r24
    127a:	ed 85       	ldd	r30, Y+13	; 0x0d
    127c:	fe 85       	ldd	r31, Y+14	; 0x0e
    127e:	86 87       	std	Z+14, r24	; 0x0e
    1280:	97 87       	std	Z+15, r25	; 0x0f
    1282:	a0 8b       	std	Z+16, r26	; 0x10
    1284:	b1 8b       	std	Z+17, r27	; 0x11
    1286:	df 01       	movw	r26, r30
    1288:	12 86       	std	Z+10, r1	; 0x0a
    128a:	13 86       	std	Z+11, r1	; 0x0b
    128c:	14 86       	std	Z+12, r1	; 0x0c
    128e:	15 86       	std	Z+13, r1	; 0x0d
    1290:	15 82       	std	Z+5, r1	; 0x05
    1292:	ee 59       	subi	r30, 0x9E	; 158
    1294:	ff 4f       	sbci	r31, 0xFF	; 255
    1296:	80 81       	ld	r24, Z
    1298:	91 81       	ldd	r25, Z+1	; 0x01
    129a:	a3 01       	movw	r20, r6
    129c:	92 01       	movw	r18, r4
    129e:	28 0f       	add	r18, r24
    12a0:	39 1f       	adc	r19, r25
    12a2:	41 1d       	adc	r20, r1
    12a4:	51 1d       	adc	r21, r1
    12a6:	fd 01       	movw	r30, r26
    12a8:	22 8b       	std	Z+18, r18	; 0x12
    12aa:	33 8b       	std	Z+19, r19	; 0x13
    12ac:	44 8b       	std	Z+20, r20	; 0x14
    12ae:	55 8b       	std	Z+21, r21	; 0x15
    12b0:	01 e0       	ldi	r16, 0x01	; 1
    12b2:	bd 01       	movw	r22, r26
    12b4:	6e 5c       	subi	r22, 0xCE	; 206
    12b6:	7f 4f       	sbci	r23, 0xFF	; 255
    12b8:	81 81       	ldd	r24, Z+1	; 0x01
    12ba:	03 da       	rcall	.-3066   	; 0x6c2 <disk_read>
    12bc:	88 23       	and	r24, r24
    12be:	09 f4       	brne	.+2      	; 0x12c2 <__stack+0x1c3>
    12c0:	03 cf       	rjmp	.-506    	; 0x10c8 <chk_mounted+0x340>
    12c2:	13 e0       	ldi	r17, 0x03	; 3
    12c4:	43 cf       	rjmp	.-378    	; 0x114c <__stack+0x4d>
    12c6:	69 01       	movw	r12, r18
    12c8:	7a 01       	movw	r14, r20
    12ca:	f2 e0       	ldi	r31, 0x02	; 2
    12cc:	cf 0e       	add	r12, r31
    12ce:	d1 1c       	adc	r13, r1
    12d0:	e1 1c       	adc	r14, r1
    12d2:	f1 1c       	adc	r15, r1
    12d4:	ad 85       	ldd	r26, Y+13	; 0x0d
    12d6:	be 85       	ldd	r27, Y+14	; 0x0e
    12d8:	5a 96       	adiw	r26, 0x1a	; 26
    12da:	cd 92       	st	X+, r12
    12dc:	dd 92       	st	X+, r13
    12de:	ed 92       	st	X+, r14
    12e0:	fc 92       	st	X, r15
    12e2:	5d 97       	sbiw	r26, 0x1d	; 29
    12e4:	89 81       	ldd	r24, Y+1	; 0x01
    12e6:	9a 81       	ldd	r25, Y+2	; 0x02
    12e8:	ab 81       	ldd	r26, Y+3	; 0x03
    12ea:	bc 81       	ldd	r27, Y+4	; 0x04
    12ec:	84 0d       	add	r24, r4
    12ee:	95 1d       	adc	r25, r5
    12f0:	a6 1d       	adc	r26, r6
    12f2:	b7 1d       	adc	r27, r7
    12f4:	ed 85       	ldd	r30, Y+13	; 0x0d
    12f6:	fe 85       	ldd	r31, Y+14	; 0x0e
    12f8:	82 a7       	std	Z+42, r24	; 0x2a
    12fa:	93 a7       	std	Z+43, r25	; 0x2b
    12fc:	a4 a7       	std	Z+44, r26	; 0x2c
    12fe:	b5 a7       	std	Z+45, r27	; 0x2d
    1300:	8d 81       	ldd	r24, Y+5	; 0x05
    1302:	9e 81       	ldd	r25, Y+6	; 0x06
    1304:	af 81       	ldd	r26, Y+7	; 0x07
    1306:	b8 85       	ldd	r27, Y+8	; 0x08
    1308:	84 0d       	add	r24, r4
    130a:	95 1d       	adc	r25, r5
    130c:	a6 1d       	adc	r26, r6
    130e:	b7 1d       	adc	r27, r7
    1310:	82 a3       	std	Z+34, r24	; 0x22
    1312:	93 a3       	std	Z+35, r25	; 0x23
    1314:	a4 a3       	std	Z+36, r26	; 0x24
    1316:	b5 a3       	std	Z+37, r27	; 0x25
    1318:	23 28       	or	r2, r3
    131a:	09 f4       	brne	.+2      	; 0x131e <__stack+0x21f>
    131c:	5d cf       	rjmp	.-326    	; 0x11d8 <__stack+0xd9>
    131e:	a7 ce       	rjmp	.-690    	; 0x106e <chk_mounted+0x2e6>
    1320:	12 e0       	ldi	r17, 0x02	; 2
    1322:	86 3f       	cpi	r24, 0xF6	; 246
    1324:	9f 4f       	sbci	r25, 0xFF	; 255
    1326:	a1 05       	cpc	r26, r1
    1328:	b1 05       	cpc	r27, r1
    132a:	08 f0       	brcs	.+2      	; 0x132e <__stack+0x22f>
    132c:	57 cf       	rjmp	.-338    	; 0x11dc <__stack+0xdd>
    132e:	cb cf       	rjmp	.-106    	; 0x12c6 <__stack+0x1c7>
    1330:	2e 96       	adiw	r28, 0x0e	; 14
    1332:	0f b6       	in	r0, 0x3f	; 63
    1334:	f8 94       	cli
    1336:	de bf       	out	0x3e, r29	; 62
    1338:	0f be       	out	0x3f, r0	; 63
    133a:	cd bf       	out	0x3d, r28	; 61
    133c:	df 91       	pop	r29
    133e:	cf 91       	pop	r28
    1340:	1f 91       	pop	r17
    1342:	0f 91       	pop	r16
    1344:	ff 90       	pop	r15
    1346:	ef 90       	pop	r14
    1348:	df 90       	pop	r13
    134a:	cf 90       	pop	r12
    134c:	bf 90       	pop	r11
    134e:	af 90       	pop	r10
    1350:	9f 90       	pop	r9
    1352:	8f 90       	pop	r8
    1354:	7f 90       	pop	r7
    1356:	6f 90       	pop	r6
    1358:	5f 90       	pop	r5
    135a:	4f 90       	pop	r4
    135c:	3f 90       	pop	r3
    135e:	2f 90       	pop	r2
    1360:	08 95       	ret

00001362 <sync>:
    1362:	ef 92       	push	r14
    1364:	ff 92       	push	r15
    1366:	0f 93       	push	r16
    1368:	cf 93       	push	r28
    136a:	df 93       	push	r29
    136c:	ec 01       	movw	r28, r24
    136e:	40 e0       	ldi	r20, 0x00	; 0
    1370:	50 e0       	ldi	r21, 0x00	; 0
    1372:	ba 01       	movw	r22, r20
    1374:	3b dc       	rcall	.-1930   	; 0xbec <move_window>
    1376:	98 2f       	mov	r25, r24
    1378:	81 11       	cpse	r24, r1
    137a:	52 c0       	rjmp	.+164    	; 0x1420 <sync+0xbe>
    137c:	88 81       	ld	r24, Y
    137e:	83 30       	cpi	r24, 0x03	; 3
    1380:	09 f0       	breq	.+2      	; 0x1384 <sync+0x22>
    1382:	45 c0       	rjmp	.+138    	; 0x140e <sync+0xac>
    1384:	8d 81       	ldd	r24, Y+5	; 0x05
    1386:	88 23       	and	r24, r24
    1388:	09 f4       	brne	.+2      	; 0x138c <sync+0x2a>
    138a:	41 c0       	rjmp	.+130    	; 0x140e <sync+0xac>
    138c:	1e a6       	std	Y+46, r1	; 0x2e
    138e:	1f a6       	std	Y+47, r1	; 0x2f
    1390:	18 aa       	std	Y+48, r1	; 0x30
    1392:	19 aa       	std	Y+49, r1	; 0x31
    1394:	40 e0       	ldi	r20, 0x00	; 0
    1396:	52 e0       	ldi	r21, 0x02	; 2
    1398:	60 e0       	ldi	r22, 0x00	; 0
    139a:	70 e0       	ldi	r23, 0x00	; 0
    139c:	7e 01       	movw	r14, r28
    139e:	82 e3       	ldi	r24, 0x32	; 50
    13a0:	e8 0e       	add	r14, r24
    13a2:	f1 1c       	adc	r15, r1
    13a4:	c7 01       	movw	r24, r14
    13a6:	17 dc       	rcall	.-2002   	; 0xbd6 <mem_set>
    13a8:	85 e5       	ldi	r24, 0x55	; 85
    13aa:	9a ea       	ldi	r25, 0xAA	; 170
    13ac:	fe 01       	movw	r30, r28
    13ae:	e0 5d       	subi	r30, 0xD0	; 208
    13b0:	fd 4f       	sbci	r31, 0xFD	; 253
    13b2:	91 83       	std	Z+1, r25	; 0x01
    13b4:	80 83       	st	Z, r24
    13b6:	82 e5       	ldi	r24, 0x52	; 82
    13b8:	92 e5       	ldi	r25, 0x52	; 82
    13ba:	a1 e6       	ldi	r26, 0x61	; 97
    13bc:	b1 e4       	ldi	r27, 0x41	; 65
    13be:	8a ab       	std	Y+50, r24	; 0x32
    13c0:	9b ab       	std	Y+51, r25	; 0x33
    13c2:	ac ab       	std	Y+52, r26	; 0x34
    13c4:	bd ab       	std	Y+53, r27	; 0x35
    13c6:	82 e7       	ldi	r24, 0x72	; 114
    13c8:	92 e7       	ldi	r25, 0x72	; 114
    13ca:	a1 e4       	ldi	r26, 0x41	; 65
    13cc:	b1 e6       	ldi	r27, 0x61	; 97
    13ce:	7a 97       	sbiw	r30, 0x1a	; 26
    13d0:	80 83       	st	Z, r24
    13d2:	91 83       	std	Z+1, r25	; 0x01
    13d4:	a2 83       	std	Z+2, r26	; 0x02
    13d6:	b3 83       	std	Z+3, r27	; 0x03
    13d8:	8e 85       	ldd	r24, Y+14	; 0x0e
    13da:	9f 85       	ldd	r25, Y+15	; 0x0f
    13dc:	a8 89       	ldd	r26, Y+16	; 0x10
    13de:	b9 89       	ldd	r27, Y+17	; 0x11
    13e0:	34 96       	adiw	r30, 0x04	; 4
    13e2:	80 83       	st	Z, r24
    13e4:	91 83       	std	Z+1, r25	; 0x01
    13e6:	a2 83       	std	Z+2, r26	; 0x02
    13e8:	b3 83       	std	Z+3, r27	; 0x03
    13ea:	8a 85       	ldd	r24, Y+10	; 0x0a
    13ec:	9b 85       	ldd	r25, Y+11	; 0x0b
    13ee:	ac 85       	ldd	r26, Y+12	; 0x0c
    13f0:	bd 85       	ldd	r27, Y+13	; 0x0d
    13f2:	34 96       	adiw	r30, 0x04	; 4
    13f4:	80 83       	st	Z, r24
    13f6:	91 83       	std	Z+1, r25	; 0x01
    13f8:	a2 83       	std	Z+2, r26	; 0x02
    13fa:	b3 83       	std	Z+3, r27	; 0x03
    13fc:	2a 89       	ldd	r18, Y+18	; 0x12
    13fe:	3b 89       	ldd	r19, Y+19	; 0x13
    1400:	4c 89       	ldd	r20, Y+20	; 0x14
    1402:	5d 89       	ldd	r21, Y+21	; 0x15
    1404:	01 e0       	ldi	r16, 0x01	; 1
    1406:	b7 01       	movw	r22, r14
    1408:	89 81       	ldd	r24, Y+1	; 0x01
    140a:	a8 d9       	rcall	.-3248   	; 0x75c <disk_write>
    140c:	1d 82       	std	Y+5, r1	; 0x05
    140e:	40 e0       	ldi	r20, 0x00	; 0
    1410:	50 e0       	ldi	r21, 0x00	; 0
    1412:	60 e0       	ldi	r22, 0x00	; 0
    1414:	89 81       	ldd	r24, Y+1	; 0x01
    1416:	07 da       	rcall	.-3058   	; 0x826 <disk_ioctl>
    1418:	91 e0       	ldi	r25, 0x01	; 1
    141a:	81 11       	cpse	r24, r1
    141c:	01 c0       	rjmp	.+2      	; 0x1420 <sync+0xbe>
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	89 2f       	mov	r24, r25
    1422:	df 91       	pop	r29
    1424:	cf 91       	pop	r28
    1426:	0f 91       	pop	r16
    1428:	ff 90       	pop	r15
    142a:	ef 90       	pop	r14
    142c:	08 95       	ret

0000142e <get_fat>:
    142e:	af 92       	push	r10
    1430:	bf 92       	push	r11
    1432:	cf 92       	push	r12
    1434:	df 92       	push	r13
    1436:	ef 92       	push	r14
    1438:	ff 92       	push	r15
    143a:	1f 93       	push	r17
    143c:	cf 93       	push	r28
    143e:	df 93       	push	r29
    1440:	ec 01       	movw	r28, r24
    1442:	6a 01       	movw	r12, r20
    1444:	7b 01       	movw	r14, r22
    1446:	42 30       	cpi	r20, 0x02	; 2
    1448:	51 05       	cpc	r21, r1
    144a:	61 05       	cpc	r22, r1
    144c:	71 05       	cpc	r23, r1
    144e:	08 f4       	brcc	.+2      	; 0x1452 <get_fat+0x24>
    1450:	a6 c0       	rjmp	.+332    	; 0x159e <get_fat+0x170>
    1452:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1454:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1456:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1458:	bd 8d       	ldd	r27, Y+29	; 0x1d
    145a:	48 17       	cp	r20, r24
    145c:	59 07       	cpc	r21, r25
    145e:	6a 07       	cpc	r22, r26
    1460:	7b 07       	cpc	r23, r27
    1462:	08 f0       	brcs	.+2      	; 0x1466 <get_fat+0x38>
    1464:	a1 c0       	rjmp	.+322    	; 0x15a8 <get_fat+0x17a>
    1466:	88 81       	ld	r24, Y
    1468:	82 30       	cpi	r24, 0x02	; 2
    146a:	09 f4       	brne	.+2      	; 0x146e <get_fat+0x40>
    146c:	4a c0       	rjmp	.+148    	; 0x1502 <get_fat+0xd4>
    146e:	83 30       	cpi	r24, 0x03	; 3
    1470:	09 f4       	brne	.+2      	; 0x1474 <get_fat+0x46>
    1472:	68 c0       	rjmp	.+208    	; 0x1544 <get_fat+0x116>
    1474:	81 30       	cpi	r24, 0x01	; 1
    1476:	09 f0       	breq	.+2      	; 0x147a <get_fat+0x4c>
    1478:	9c c0       	rjmp	.+312    	; 0x15b2 <get_fat+0x184>
    147a:	5a 01       	movw	r10, r20
    147c:	b6 94       	lsr	r11
    147e:	a7 94       	ror	r10
    1480:	a4 0e       	add	r10, r20
    1482:	b5 1e       	adc	r11, r21
    1484:	c5 01       	movw	r24, r10
    1486:	89 2f       	mov	r24, r25
    1488:	99 27       	eor	r25, r25
    148a:	86 95       	lsr	r24
    148c:	4a a1       	ldd	r20, Y+34	; 0x22
    148e:	5b a1       	ldd	r21, Y+35	; 0x23
    1490:	6c a1       	ldd	r22, Y+36	; 0x24
    1492:	7d a1       	ldd	r23, Y+37	; 0x25
    1494:	48 0f       	add	r20, r24
    1496:	59 1f       	adc	r21, r25
    1498:	61 1d       	adc	r22, r1
    149a:	71 1d       	adc	r23, r1
    149c:	ce 01       	movw	r24, r28
    149e:	a6 db       	rcall	.-2228   	; 0xbec <move_window>
    14a0:	81 11       	cpse	r24, r1
    14a2:	8b c0       	rjmp	.+278    	; 0x15ba <get_fat+0x18c>
    14a4:	f5 01       	movw	r30, r10
    14a6:	f1 70       	andi	r31, 0x01	; 1
    14a8:	ec 0f       	add	r30, r28
    14aa:	fd 1f       	adc	r31, r29
    14ac:	12 a9       	ldd	r17, Z+50	; 0x32
    14ae:	8f ef       	ldi	r24, 0xFF	; 255
    14b0:	a8 1a       	sub	r10, r24
    14b2:	b8 0a       	sbc	r11, r24
    14b4:	c5 01       	movw	r24, r10
    14b6:	89 2f       	mov	r24, r25
    14b8:	99 27       	eor	r25, r25
    14ba:	86 95       	lsr	r24
    14bc:	4a a1       	ldd	r20, Y+34	; 0x22
    14be:	5b a1       	ldd	r21, Y+35	; 0x23
    14c0:	6c a1       	ldd	r22, Y+36	; 0x24
    14c2:	7d a1       	ldd	r23, Y+37	; 0x25
    14c4:	48 0f       	add	r20, r24
    14c6:	59 1f       	adc	r21, r25
    14c8:	61 1d       	adc	r22, r1
    14ca:	71 1d       	adc	r23, r1
    14cc:	ce 01       	movw	r24, r28
    14ce:	8e db       	rcall	.-2276   	; 0xbec <move_window>
    14d0:	81 11       	cpse	r24, r1
    14d2:	77 c0       	rjmp	.+238    	; 0x15c2 <get_fat+0x194>
    14d4:	81 e0       	ldi	r24, 0x01	; 1
    14d6:	b8 22       	and	r11, r24
    14d8:	ca 0d       	add	r28, r10
    14da:	db 1d       	adc	r29, r11
    14dc:	8a a9       	ldd	r24, Y+50	; 0x32
    14de:	61 2f       	mov	r22, r17
    14e0:	70 e0       	ldi	r23, 0x00	; 0
    14e2:	78 2b       	or	r23, r24
    14e4:	c0 fe       	sbrs	r12, 0
    14e6:	09 c0       	rjmp	.+18     	; 0x14fa <get_fat+0xcc>
    14e8:	72 95       	swap	r23
    14ea:	62 95       	swap	r22
    14ec:	6f 70       	andi	r22, 0x0F	; 15
    14ee:	67 27       	eor	r22, r23
    14f0:	7f 70       	andi	r23, 0x0F	; 15
    14f2:	67 27       	eor	r22, r23
    14f4:	80 e0       	ldi	r24, 0x00	; 0
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	6f c0       	rjmp	.+222    	; 0x15d8 <get_fat+0x1aa>
    14fa:	7f 70       	andi	r23, 0x0F	; 15
    14fc:	80 e0       	ldi	r24, 0x00	; 0
    14fe:	90 e0       	ldi	r25, 0x00	; 0
    1500:	6b c0       	rjmp	.+214    	; 0x15d8 <get_fat+0x1aa>
    1502:	45 2f       	mov	r20, r21
    1504:	56 2f       	mov	r21, r22
    1506:	67 2f       	mov	r22, r23
    1508:	77 27       	eor	r23, r23
    150a:	8a a1       	ldd	r24, Y+34	; 0x22
    150c:	9b a1       	ldd	r25, Y+35	; 0x23
    150e:	ac a1       	ldd	r26, Y+36	; 0x24
    1510:	bd a1       	ldd	r27, Y+37	; 0x25
    1512:	48 0f       	add	r20, r24
    1514:	59 1f       	adc	r21, r25
    1516:	6a 1f       	adc	r22, r26
    1518:	7b 1f       	adc	r23, r27
    151a:	ce 01       	movw	r24, r28
    151c:	67 db       	rcall	.-2354   	; 0xbec <move_window>
    151e:	81 11       	cpse	r24, r1
    1520:	54 c0       	rjmp	.+168    	; 0x15ca <get_fat+0x19c>
    1522:	cc 0c       	add	r12, r12
    1524:	dd 1c       	adc	r13, r13
    1526:	ee 1c       	adc	r14, r14
    1528:	ff 1c       	adc	r15, r15
    152a:	e8 94       	clt
    152c:	c0 f8       	bld	r12, 0
    152e:	81 e0       	ldi	r24, 0x01	; 1
    1530:	d8 22       	and	r13, r24
    1532:	ee 24       	eor	r14, r14
    1534:	ff 24       	eor	r15, r15
    1536:	cc 0d       	add	r28, r12
    1538:	dd 1d       	adc	r29, r13
    153a:	6a a9       	ldd	r22, Y+50	; 0x32
    153c:	7b a9       	ldd	r23, Y+51	; 0x33
    153e:	80 e0       	ldi	r24, 0x00	; 0
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	4a c0       	rjmp	.+148    	; 0x15d8 <get_fat+0x1aa>
    1544:	8a a1       	ldd	r24, Y+34	; 0x22
    1546:	9b a1       	ldd	r25, Y+35	; 0x23
    1548:	ac a1       	ldd	r26, Y+36	; 0x24
    154a:	bd a1       	ldd	r27, Y+37	; 0x25
    154c:	68 94       	set
    154e:	16 f8       	bld	r1, 6
    1550:	76 95       	lsr	r23
    1552:	67 95       	ror	r22
    1554:	57 95       	ror	r21
    1556:	47 95       	ror	r20
    1558:	16 94       	lsr	r1
    155a:	d1 f7       	brne	.-12     	; 0x1550 <get_fat+0x122>
    155c:	48 0f       	add	r20, r24
    155e:	59 1f       	adc	r21, r25
    1560:	6a 1f       	adc	r22, r26
    1562:	7b 1f       	adc	r23, r27
    1564:	ce 01       	movw	r24, r28
    1566:	42 db       	rcall	.-2428   	; 0xbec <move_window>
    1568:	81 11       	cpse	r24, r1
    156a:	33 c0       	rjmp	.+102    	; 0x15d2 <get_fat+0x1a4>
    156c:	cc 0c       	add	r12, r12
    156e:	dd 1c       	adc	r13, r13
    1570:	ee 1c       	adc	r14, r14
    1572:	ff 1c       	adc	r15, r15
    1574:	cc 0c       	add	r12, r12
    1576:	dd 1c       	adc	r13, r13
    1578:	ee 1c       	adc	r14, r14
    157a:	ff 1c       	adc	r15, r15
    157c:	8c ef       	ldi	r24, 0xFC	; 252
    157e:	c8 22       	and	r12, r24
    1580:	81 e0       	ldi	r24, 0x01	; 1
    1582:	d8 22       	and	r13, r24
    1584:	ee 24       	eor	r14, r14
    1586:	ff 24       	eor	r15, r15
    1588:	fe 01       	movw	r30, r28
    158a:	ec 0d       	add	r30, r12
    158c:	fd 1d       	adc	r31, r13
    158e:	82 a9       	ldd	r24, Z+50	; 0x32
    1590:	93 a9       	ldd	r25, Z+51	; 0x33
    1592:	a4 a9       	ldd	r26, Z+52	; 0x34
    1594:	b5 a9       	ldd	r27, Z+53	; 0x35
    1596:	bc 01       	movw	r22, r24
    1598:	cd 01       	movw	r24, r26
    159a:	9f 70       	andi	r25, 0x0F	; 15
    159c:	1d c0       	rjmp	.+58     	; 0x15d8 <get_fat+0x1aa>
    159e:	61 e0       	ldi	r22, 0x01	; 1
    15a0:	70 e0       	ldi	r23, 0x00	; 0
    15a2:	80 e0       	ldi	r24, 0x00	; 0
    15a4:	90 e0       	ldi	r25, 0x00	; 0
    15a6:	18 c0       	rjmp	.+48     	; 0x15d8 <get_fat+0x1aa>
    15a8:	61 e0       	ldi	r22, 0x01	; 1
    15aa:	70 e0       	ldi	r23, 0x00	; 0
    15ac:	80 e0       	ldi	r24, 0x00	; 0
    15ae:	90 e0       	ldi	r25, 0x00	; 0
    15b0:	13 c0       	rjmp	.+38     	; 0x15d8 <get_fat+0x1aa>
    15b2:	6f ef       	ldi	r22, 0xFF	; 255
    15b4:	7f ef       	ldi	r23, 0xFF	; 255
    15b6:	cb 01       	movw	r24, r22
    15b8:	0f c0       	rjmp	.+30     	; 0x15d8 <get_fat+0x1aa>
    15ba:	6f ef       	ldi	r22, 0xFF	; 255
    15bc:	7f ef       	ldi	r23, 0xFF	; 255
    15be:	cb 01       	movw	r24, r22
    15c0:	0b c0       	rjmp	.+22     	; 0x15d8 <get_fat+0x1aa>
    15c2:	6f ef       	ldi	r22, 0xFF	; 255
    15c4:	7f ef       	ldi	r23, 0xFF	; 255
    15c6:	cb 01       	movw	r24, r22
    15c8:	07 c0       	rjmp	.+14     	; 0x15d8 <get_fat+0x1aa>
    15ca:	6f ef       	ldi	r22, 0xFF	; 255
    15cc:	7f ef       	ldi	r23, 0xFF	; 255
    15ce:	cb 01       	movw	r24, r22
    15d0:	03 c0       	rjmp	.+6      	; 0x15d8 <get_fat+0x1aa>
    15d2:	6f ef       	ldi	r22, 0xFF	; 255
    15d4:	7f ef       	ldi	r23, 0xFF	; 255
    15d6:	cb 01       	movw	r24, r22
    15d8:	df 91       	pop	r29
    15da:	cf 91       	pop	r28
    15dc:	1f 91       	pop	r17
    15de:	ff 90       	pop	r15
    15e0:	ef 90       	pop	r14
    15e2:	df 90       	pop	r13
    15e4:	cf 90       	pop	r12
    15e6:	bf 90       	pop	r11
    15e8:	af 90       	pop	r10
    15ea:	08 95       	ret

000015ec <put_fat>:
    15ec:	4f 92       	push	r4
    15ee:	5f 92       	push	r5
    15f0:	6f 92       	push	r6
    15f2:	7f 92       	push	r7
    15f4:	af 92       	push	r10
    15f6:	bf 92       	push	r11
    15f8:	cf 92       	push	r12
    15fa:	df 92       	push	r13
    15fc:	ef 92       	push	r14
    15fe:	ff 92       	push	r15
    1600:	0f 93       	push	r16
    1602:	1f 93       	push	r17
    1604:	cf 93       	push	r28
    1606:	df 93       	push	r29
    1608:	ec 01       	movw	r28, r24
    160a:	6a 01       	movw	r12, r20
    160c:	7b 01       	movw	r14, r22
    160e:	28 01       	movw	r4, r16
    1610:	39 01       	movw	r6, r18
    1612:	42 30       	cpi	r20, 0x02	; 2
    1614:	51 05       	cpc	r21, r1
    1616:	61 05       	cpc	r22, r1
    1618:	71 05       	cpc	r23, r1
    161a:	08 f4       	brcc	.+2      	; 0x161e <put_fat+0x32>
    161c:	d4 c0       	rjmp	.+424    	; 0x17c6 <put_fat+0x1da>
    161e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1620:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1622:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1624:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1626:	48 17       	cp	r20, r24
    1628:	59 07       	cpc	r21, r25
    162a:	6a 07       	cpc	r22, r26
    162c:	7b 07       	cpc	r23, r27
    162e:	08 f0       	brcs	.+2      	; 0x1632 <put_fat+0x46>
    1630:	cc c0       	rjmp	.+408    	; 0x17ca <put_fat+0x1de>
    1632:	88 81       	ld	r24, Y
    1634:	82 30       	cpi	r24, 0x02	; 2
    1636:	09 f4       	brne	.+2      	; 0x163a <put_fat+0x4e>
    1638:	60 c0       	rjmp	.+192    	; 0x16fa <put_fat+0x10e>
    163a:	83 30       	cpi	r24, 0x03	; 3
    163c:	09 f4       	brne	.+2      	; 0x1640 <put_fat+0x54>
    163e:	81 c0       	rjmp	.+258    	; 0x1742 <put_fat+0x156>
    1640:	81 30       	cpi	r24, 0x01	; 1
    1642:	09 f0       	breq	.+2      	; 0x1646 <put_fat+0x5a>
    1644:	b8 c0       	rjmp	.+368    	; 0x17b6 <put_fat+0x1ca>
    1646:	5a 01       	movw	r10, r20
    1648:	b6 94       	lsr	r11
    164a:	a7 94       	ror	r10
    164c:	a4 0e       	add	r10, r20
    164e:	b5 1e       	adc	r11, r21
    1650:	c5 01       	movw	r24, r10
    1652:	89 2f       	mov	r24, r25
    1654:	99 27       	eor	r25, r25
    1656:	86 95       	lsr	r24
    1658:	4a a1       	ldd	r20, Y+34	; 0x22
    165a:	5b a1       	ldd	r21, Y+35	; 0x23
    165c:	6c a1       	ldd	r22, Y+36	; 0x24
    165e:	7d a1       	ldd	r23, Y+37	; 0x25
    1660:	48 0f       	add	r20, r24
    1662:	59 1f       	adc	r21, r25
    1664:	61 1d       	adc	r22, r1
    1666:	71 1d       	adc	r23, r1
    1668:	ce 01       	movw	r24, r28
    166a:	c0 da       	rcall	.-2688   	; 0xbec <move_window>
    166c:	18 2f       	mov	r17, r24
    166e:	81 11       	cpse	r24, r1
    1670:	a7 c0       	rjmp	.+334    	; 0x17c0 <put_fat+0x1d4>
    1672:	c5 01       	movw	r24, r10
    1674:	91 70       	andi	r25, 0x01	; 1
    1676:	c0 fe       	sbrs	r12, 0
    1678:	22 c0       	rjmp	.+68     	; 0x16be <put_fat+0xd2>
    167a:	fe 01       	movw	r30, r28
    167c:	e8 0f       	add	r30, r24
    167e:	f9 1f       	adc	r31, r25
    1680:	82 a9       	ldd	r24, Z+50	; 0x32
    1682:	28 2f       	mov	r18, r24
    1684:	2f 70       	andi	r18, 0x0F	; 15
    1686:	30 e1       	ldi	r19, 0x10	; 16
    1688:	43 9e       	mul	r4, r19
    168a:	c0 01       	movw	r24, r0
    168c:	11 24       	eor	r1, r1
    168e:	82 2b       	or	r24, r18
    1690:	82 ab       	std	Z+50, r24	; 0x32
    1692:	8f ef       	ldi	r24, 0xFF	; 255
    1694:	a8 1a       	sub	r10, r24
    1696:	b8 0a       	sbc	r11, r24
    1698:	81 e0       	ldi	r24, 0x01	; 1
    169a:	8c 83       	std	Y+4, r24	; 0x04
    169c:	c5 01       	movw	r24, r10
    169e:	89 2f       	mov	r24, r25
    16a0:	99 27       	eor	r25, r25
    16a2:	86 95       	lsr	r24
    16a4:	4a a1       	ldd	r20, Y+34	; 0x22
    16a6:	5b a1       	ldd	r21, Y+35	; 0x23
    16a8:	6c a1       	ldd	r22, Y+36	; 0x24
    16aa:	7d a1       	ldd	r23, Y+37	; 0x25
    16ac:	48 0f       	add	r20, r24
    16ae:	59 1f       	adc	r21, r25
    16b0:	61 1d       	adc	r22, r1
    16b2:	71 1d       	adc	r23, r1
    16b4:	ce 01       	movw	r24, r28
    16b6:	9a da       	rcall	.-2764   	; 0xbec <move_window>
    16b8:	81 11       	cpse	r24, r1
    16ba:	7f c0       	rjmp	.+254    	; 0x17ba <put_fat+0x1ce>
    16bc:	88 c0       	rjmp	.+272    	; 0x17ce <put_fat+0x1e2>
    16be:	fe 01       	movw	r30, r28
    16c0:	e8 0f       	add	r30, r24
    16c2:	f9 1f       	adc	r31, r25
    16c4:	42 aa       	std	Z+50, r4	; 0x32
    16c6:	3f ef       	ldi	r19, 0xFF	; 255
    16c8:	a3 1a       	sub	r10, r19
    16ca:	b3 0a       	sbc	r11, r19
    16cc:	81 e0       	ldi	r24, 0x01	; 1
    16ce:	8c 83       	std	Y+4, r24	; 0x04
    16d0:	c5 01       	movw	r24, r10
    16d2:	89 2f       	mov	r24, r25
    16d4:	99 27       	eor	r25, r25
    16d6:	86 95       	lsr	r24
    16d8:	4a a1       	ldd	r20, Y+34	; 0x22
    16da:	5b a1       	ldd	r21, Y+35	; 0x23
    16dc:	6c a1       	ldd	r22, Y+36	; 0x24
    16de:	7d a1       	ldd	r23, Y+37	; 0x25
    16e0:	48 0f       	add	r20, r24
    16e2:	59 1f       	adc	r21, r25
    16e4:	61 1d       	adc	r22, r1
    16e6:	71 1d       	adc	r23, r1
    16e8:	ce 01       	movw	r24, r28
    16ea:	80 da       	rcall	.-2816   	; 0xbec <move_window>
    16ec:	81 11       	cpse	r24, r1
    16ee:	67 c0       	rjmp	.+206    	; 0x17be <put_fat+0x1d2>
    16f0:	79 c0       	rjmp	.+242    	; 0x17e4 <put_fat+0x1f8>
    16f2:	ec 0f       	add	r30, r28
    16f4:	fd 1f       	adc	r31, r29
    16f6:	42 aa       	std	Z+50, r4	; 0x32
    16f8:	63 c0       	rjmp	.+198    	; 0x17c0 <put_fat+0x1d4>
    16fa:	45 2f       	mov	r20, r21
    16fc:	56 2f       	mov	r21, r22
    16fe:	67 2f       	mov	r22, r23
    1700:	77 27       	eor	r23, r23
    1702:	8a a1       	ldd	r24, Y+34	; 0x22
    1704:	9b a1       	ldd	r25, Y+35	; 0x23
    1706:	ac a1       	ldd	r26, Y+36	; 0x24
    1708:	bd a1       	ldd	r27, Y+37	; 0x25
    170a:	48 0f       	add	r20, r24
    170c:	59 1f       	adc	r21, r25
    170e:	6a 1f       	adc	r22, r26
    1710:	7b 1f       	adc	r23, r27
    1712:	ce 01       	movw	r24, r28
    1714:	6b da       	rcall	.-2858   	; 0xbec <move_window>
    1716:	18 2f       	mov	r17, r24
    1718:	81 11       	cpse	r24, r1
    171a:	52 c0       	rjmp	.+164    	; 0x17c0 <put_fat+0x1d4>
    171c:	cc 0c       	add	r12, r12
    171e:	dd 1c       	adc	r13, r13
    1720:	ee 1c       	adc	r14, r14
    1722:	ff 1c       	adc	r15, r15
    1724:	e8 94       	clt
    1726:	c0 f8       	bld	r12, 0
    1728:	81 e0       	ldi	r24, 0x01	; 1
    172a:	d8 22       	and	r13, r24
    172c:	ee 24       	eor	r14, r14
    172e:	ff 24       	eor	r15, r15
    1730:	32 e3       	ldi	r19, 0x32	; 50
    1732:	c3 0e       	add	r12, r19
    1734:	d1 1c       	adc	r13, r1
    1736:	fe 01       	movw	r30, r28
    1738:	ec 0d       	add	r30, r12
    173a:	fd 1d       	adc	r31, r13
    173c:	51 82       	std	Z+1, r5	; 0x01
    173e:	40 82       	st	Z, r4
    1740:	3f c0       	rjmp	.+126    	; 0x17c0 <put_fat+0x1d4>
    1742:	8a a1       	ldd	r24, Y+34	; 0x22
    1744:	9b a1       	ldd	r25, Y+35	; 0x23
    1746:	ac a1       	ldd	r26, Y+36	; 0x24
    1748:	bd a1       	ldd	r27, Y+37	; 0x25
    174a:	68 94       	set
    174c:	16 f8       	bld	r1, 6
    174e:	76 95       	lsr	r23
    1750:	67 95       	ror	r22
    1752:	57 95       	ror	r21
    1754:	47 95       	ror	r20
    1756:	16 94       	lsr	r1
    1758:	d1 f7       	brne	.-12     	; 0x174e <put_fat+0x162>
    175a:	48 0f       	add	r20, r24
    175c:	59 1f       	adc	r21, r25
    175e:	6a 1f       	adc	r22, r26
    1760:	7b 1f       	adc	r23, r27
    1762:	ce 01       	movw	r24, r28
    1764:	43 da       	rcall	.-2938   	; 0xbec <move_window>
    1766:	18 2f       	mov	r17, r24
    1768:	81 11       	cpse	r24, r1
    176a:	2a c0       	rjmp	.+84     	; 0x17c0 <put_fat+0x1d4>
    176c:	cc 0c       	add	r12, r12
    176e:	dd 1c       	adc	r13, r13
    1770:	ee 1c       	adc	r14, r14
    1772:	ff 1c       	adc	r15, r15
    1774:	cc 0c       	add	r12, r12
    1776:	dd 1c       	adc	r13, r13
    1778:	ee 1c       	adc	r14, r14
    177a:	ff 1c       	adc	r15, r15
    177c:	8c ef       	ldi	r24, 0xFC	; 252
    177e:	c8 22       	and	r12, r24
    1780:	81 e0       	ldi	r24, 0x01	; 1
    1782:	d8 22       	and	r13, r24
    1784:	ee 24       	eor	r14, r14
    1786:	ff 24       	eor	r15, r15
    1788:	32 e3       	ldi	r19, 0x32	; 50
    178a:	c3 0e       	add	r12, r19
    178c:	d1 1c       	adc	r13, r1
    178e:	fe 01       	movw	r30, r28
    1790:	ec 0d       	add	r30, r12
    1792:	fd 1d       	adc	r31, r13
    1794:	80 81       	ld	r24, Z
    1796:	91 81       	ldd	r25, Z+1	; 0x01
    1798:	a2 81       	ldd	r26, Z+2	; 0x02
    179a:	b3 81       	ldd	r27, Z+3	; 0x03
    179c:	88 27       	eor	r24, r24
    179e:	99 27       	eor	r25, r25
    17a0:	aa 27       	eor	r26, r26
    17a2:	b0 7f       	andi	r27, 0xF0	; 240
    17a4:	48 2a       	or	r4, r24
    17a6:	59 2a       	or	r5, r25
    17a8:	6a 2a       	or	r6, r26
    17aa:	7b 2a       	or	r7, r27
    17ac:	40 82       	st	Z, r4
    17ae:	51 82       	std	Z+1, r5	; 0x01
    17b0:	62 82       	std	Z+2, r6	; 0x02
    17b2:	73 82       	std	Z+3, r7	; 0x03
    17b4:	05 c0       	rjmp	.+10     	; 0x17c0 <put_fat+0x1d4>
    17b6:	12 e0       	ldi	r17, 0x02	; 2
    17b8:	03 c0       	rjmp	.+6      	; 0x17c0 <put_fat+0x1d4>
    17ba:	18 2f       	mov	r17, r24
    17bc:	01 c0       	rjmp	.+2      	; 0x17c0 <put_fat+0x1d4>
    17be:	18 2f       	mov	r17, r24
    17c0:	81 e0       	ldi	r24, 0x01	; 1
    17c2:	8c 83       	std	Y+4, r24	; 0x04
    17c4:	1c c0       	rjmp	.+56     	; 0x17fe <put_fat+0x212>
    17c6:	12 e0       	ldi	r17, 0x02	; 2
    17c8:	1a c0       	rjmp	.+52     	; 0x17fe <put_fat+0x212>
    17ca:	12 e0       	ldi	r17, 0x02	; 2
    17cc:	18 c0       	rjmp	.+48     	; 0x17fe <put_fat+0x212>
    17ce:	f5 01       	movw	r30, r10
    17d0:	f1 70       	andi	r31, 0x01	; 1
    17d2:	68 94       	set
    17d4:	13 f8       	bld	r1, 3
    17d6:	76 94       	lsr	r7
    17d8:	67 94       	ror	r6
    17da:	57 94       	ror	r5
    17dc:	47 94       	ror	r4
    17de:	16 94       	lsr	r1
    17e0:	d1 f7       	brne	.-12     	; 0x17d6 <put_fat+0x1ea>
    17e2:	87 cf       	rjmp	.-242    	; 0x16f2 <put_fat+0x106>
    17e4:	f5 01       	movw	r30, r10
    17e6:	f1 70       	andi	r31, 0x01	; 1
    17e8:	de 01       	movw	r26, r28
    17ea:	ae 0f       	add	r26, r30
    17ec:	bf 1f       	adc	r27, r31
    17ee:	d2 96       	adiw	r26, 0x32	; 50
    17f0:	9c 91       	ld	r25, X
    17f2:	90 7f       	andi	r25, 0xF0	; 240
    17f4:	85 2d       	mov	r24, r5
    17f6:	8f 70       	andi	r24, 0x0F	; 15
    17f8:	49 2e       	mov	r4, r25
    17fa:	48 2a       	or	r4, r24
    17fc:	7a cf       	rjmp	.-268    	; 0x16f2 <put_fat+0x106>
    17fe:	81 2f       	mov	r24, r17
    1800:	df 91       	pop	r29
    1802:	cf 91       	pop	r28
    1804:	1f 91       	pop	r17
    1806:	0f 91       	pop	r16
    1808:	ff 90       	pop	r15
    180a:	ef 90       	pop	r14
    180c:	df 90       	pop	r13
    180e:	cf 90       	pop	r12
    1810:	bf 90       	pop	r11
    1812:	af 90       	pop	r10
    1814:	7f 90       	pop	r7
    1816:	6f 90       	pop	r6
    1818:	5f 90       	pop	r5
    181a:	4f 90       	pop	r4
    181c:	08 95       	ret

0000181e <create_chain>:
    181e:	2f 92       	push	r2
    1820:	3f 92       	push	r3
    1822:	4f 92       	push	r4
    1824:	5f 92       	push	r5
    1826:	6f 92       	push	r6
    1828:	7f 92       	push	r7
    182a:	8f 92       	push	r8
    182c:	9f 92       	push	r9
    182e:	af 92       	push	r10
    1830:	bf 92       	push	r11
    1832:	cf 92       	push	r12
    1834:	df 92       	push	r13
    1836:	ef 92       	push	r14
    1838:	ff 92       	push	r15
    183a:	0f 93       	push	r16
    183c:	1f 93       	push	r17
    183e:	cf 93       	push	r28
    1840:	df 93       	push	r29
    1842:	ec 01       	movw	r28, r24
    1844:	2a 01       	movw	r4, r20
    1846:	3b 01       	movw	r6, r22
    1848:	41 15       	cp	r20, r1
    184a:	51 05       	cpc	r21, r1
    184c:	61 05       	cpc	r22, r1
    184e:	71 05       	cpc	r23, r1
    1850:	b9 f4       	brne	.+46     	; 0x1880 <create_chain+0x62>
    1852:	8a 84       	ldd	r8, Y+10	; 0x0a
    1854:	9b 84       	ldd	r9, Y+11	; 0x0b
    1856:	ac 84       	ldd	r10, Y+12	; 0x0c
    1858:	bd 84       	ldd	r11, Y+13	; 0x0d
    185a:	81 14       	cp	r8, r1
    185c:	91 04       	cpc	r9, r1
    185e:	a1 04       	cpc	r10, r1
    1860:	b1 04       	cpc	r11, r1
    1862:	21 f1       	breq	.+72     	; 0x18ac <create_chain+0x8e>
    1864:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1866:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1868:	ac 8d       	ldd	r26, Y+28	; 0x1c
    186a:	bd 8d       	ldd	r27, Y+29	; 0x1d
    186c:	88 16       	cp	r8, r24
    186e:	99 06       	cpc	r9, r25
    1870:	aa 06       	cpc	r10, r26
    1872:	bb 06       	cpc	r11, r27
    1874:	f8 f0       	brcs	.+62     	; 0x18b4 <create_chain+0x96>
    1876:	81 2c       	mov	r8, r1
    1878:	91 2c       	mov	r9, r1
    187a:	54 01       	movw	r10, r8
    187c:	83 94       	inc	r8
    187e:	1a c0       	rjmp	.+52     	; 0x18b4 <create_chain+0x96>
    1880:	d6 dd       	rcall	.-1108   	; 0x142e <get_fat>
    1882:	6b 01       	movw	r12, r22
    1884:	7c 01       	movw	r14, r24
    1886:	62 30       	cpi	r22, 0x02	; 2
    1888:	71 05       	cpc	r23, r1
    188a:	81 05       	cpc	r24, r1
    188c:	91 05       	cpc	r25, r1
    188e:	08 f4       	brcc	.+2      	; 0x1892 <create_chain+0x74>
    1890:	87 c0       	rjmp	.+270    	; 0x19a0 <create_chain+0x182>
    1892:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1894:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1896:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1898:	bd 8d       	ldd	r27, Y+29	; 0x1d
    189a:	c8 16       	cp	r12, r24
    189c:	d9 06       	cpc	r13, r25
    189e:	ea 06       	cpc	r14, r26
    18a0:	fb 06       	cpc	r15, r27
    18a2:	08 f4       	brcc	.+2      	; 0x18a6 <create_chain+0x88>
    18a4:	82 c0       	rjmp	.+260    	; 0x19aa <create_chain+0x18c>
    18a6:	53 01       	movw	r10, r6
    18a8:	42 01       	movw	r8, r4
    18aa:	04 c0       	rjmp	.+8      	; 0x18b4 <create_chain+0x96>
    18ac:	81 2c       	mov	r8, r1
    18ae:	91 2c       	mov	r9, r1
    18b0:	54 01       	movw	r10, r8
    18b2:	83 94       	inc	r8
    18b4:	75 01       	movw	r14, r10
    18b6:	64 01       	movw	r12, r8
    18b8:	68 94       	set
    18ba:	22 24       	eor	r2, r2
    18bc:	21 f8       	bld	r2, 1
    18be:	31 2c       	mov	r3, r1
    18c0:	00 e0       	ldi	r16, 0x00	; 0
    18c2:	10 e0       	ldi	r17, 0x00	; 0
    18c4:	8f ef       	ldi	r24, 0xFF	; 255
    18c6:	c8 1a       	sub	r12, r24
    18c8:	d8 0a       	sbc	r13, r24
    18ca:	e8 0a       	sbc	r14, r24
    18cc:	f8 0a       	sbc	r15, r24
    18ce:	8a 8d       	ldd	r24, Y+26	; 0x1a
    18d0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    18d2:	ac 8d       	ldd	r26, Y+28	; 0x1c
    18d4:	bd 8d       	ldd	r27, Y+29	; 0x1d
    18d6:	c8 16       	cp	r12, r24
    18d8:	d9 06       	cpc	r13, r25
    18da:	ea 06       	cpc	r14, r26
    18dc:	fb 06       	cpc	r15, r27
    18de:	58 f0       	brcs	.+22     	; 0x18f6 <create_chain+0xd8>
    18e0:	22 e0       	ldi	r18, 0x02	; 2
    18e2:	82 16       	cp	r8, r18
    18e4:	91 04       	cpc	r9, r1
    18e6:	a1 04       	cpc	r10, r1
    18e8:	b1 04       	cpc	r11, r1
    18ea:	08 f4       	brcc	.+2      	; 0x18ee <create_chain+0xd0>
    18ec:	63 c0       	rjmp	.+198    	; 0x19b4 <create_chain+0x196>
    18ee:	c2 2c       	mov	r12, r2
    18f0:	d3 2c       	mov	r13, r3
    18f2:	e0 2e       	mov	r14, r16
    18f4:	f1 2e       	mov	r15, r17
    18f6:	b7 01       	movw	r22, r14
    18f8:	a6 01       	movw	r20, r12
    18fa:	ce 01       	movw	r24, r28
    18fc:	98 dd       	rcall	.-1232   	; 0x142e <get_fat>
    18fe:	61 15       	cp	r22, r1
    1900:	71 05       	cpc	r23, r1
    1902:	81 05       	cpc	r24, r1
    1904:	91 05       	cpc	r25, r1
    1906:	99 f0       	breq	.+38     	; 0x192e <create_chain+0x110>
    1908:	6f 3f       	cpi	r22, 0xFF	; 255
    190a:	2f ef       	ldi	r18, 0xFF	; 255
    190c:	72 07       	cpc	r23, r18
    190e:	82 07       	cpc	r24, r18
    1910:	92 07       	cpc	r25, r18
    1912:	09 f4       	brne	.+2      	; 0x1916 <create_chain+0xf8>
    1914:	54 c0       	rjmp	.+168    	; 0x19be <create_chain+0x1a0>
    1916:	61 30       	cpi	r22, 0x01	; 1
    1918:	71 05       	cpc	r23, r1
    191a:	81 05       	cpc	r24, r1
    191c:	91 05       	cpc	r25, r1
    191e:	09 f4       	brne	.+2      	; 0x1922 <create_chain+0x104>
    1920:	53 c0       	rjmp	.+166    	; 0x19c8 <create_chain+0x1aa>
    1922:	c8 14       	cp	r12, r8
    1924:	d9 04       	cpc	r13, r9
    1926:	ea 04       	cpc	r14, r10
    1928:	fb 04       	cpc	r15, r11
    192a:	61 f6       	brne	.-104    	; 0x18c4 <create_chain+0xa6>
    192c:	52 c0       	rjmp	.+164    	; 0x19d2 <create_chain+0x1b4>
    192e:	8c 2c       	mov	r8, r12
    1930:	9d 2c       	mov	r9, r13
    1932:	ae 2c       	mov	r10, r14
    1934:	bf 2c       	mov	r11, r15
    1936:	0f ef       	ldi	r16, 0xFF	; 255
    1938:	1f ef       	ldi	r17, 0xFF	; 255
    193a:	2f ef       	ldi	r18, 0xFF	; 255
    193c:	3f e0       	ldi	r19, 0x0F	; 15
    193e:	b7 01       	movw	r22, r14
    1940:	a6 01       	movw	r20, r12
    1942:	ce 01       	movw	r24, r28
    1944:	53 de       	rcall	.-858    	; 0x15ec <put_fat>
    1946:	81 11       	cpse	r24, r1
    1948:	49 c0       	rjmp	.+146    	; 0x19dc <create_chain+0x1be>
    194a:	41 14       	cp	r4, r1
    194c:	51 04       	cpc	r5, r1
    194e:	61 04       	cpc	r6, r1
    1950:	71 04       	cpc	r7, r1
    1952:	51 f0       	breq	.+20     	; 0x1968 <create_chain+0x14a>
    1954:	0c 2d       	mov	r16, r12
    1956:	1d 2d       	mov	r17, r13
    1958:	2e 2d       	mov	r18, r14
    195a:	3f 2d       	mov	r19, r15
    195c:	b3 01       	movw	r22, r6
    195e:	a2 01       	movw	r20, r4
    1960:	ce 01       	movw	r24, r28
    1962:	44 de       	rcall	.-888    	; 0x15ec <put_fat>
    1964:	81 11       	cpse	r24, r1
    1966:	3f c0       	rjmp	.+126    	; 0x19e6 <create_chain+0x1c8>
    1968:	8a 86       	std	Y+10, r8	; 0x0a
    196a:	9b 86       	std	Y+11, r9	; 0x0b
    196c:	ac 86       	std	Y+12, r10	; 0x0c
    196e:	bd 86       	std	Y+13, r11	; 0x0d
    1970:	8e 85       	ldd	r24, Y+14	; 0x0e
    1972:	9f 85       	ldd	r25, Y+15	; 0x0f
    1974:	a8 89       	ldd	r26, Y+16	; 0x10
    1976:	b9 89       	ldd	r27, Y+17	; 0x11
    1978:	8f 3f       	cpi	r24, 0xFF	; 255
    197a:	2f ef       	ldi	r18, 0xFF	; 255
    197c:	92 07       	cpc	r25, r18
    197e:	a2 07       	cpc	r26, r18
    1980:	b2 07       	cpc	r27, r18
    1982:	49 f0       	breq	.+18     	; 0x1996 <create_chain+0x178>
    1984:	01 97       	sbiw	r24, 0x01	; 1
    1986:	a1 09       	sbc	r26, r1
    1988:	b1 09       	sbc	r27, r1
    198a:	8e 87       	std	Y+14, r24	; 0x0e
    198c:	9f 87       	std	Y+15, r25	; 0x0f
    198e:	a8 8b       	std	Y+16, r26	; 0x10
    1990:	b9 8b       	std	Y+17, r27	; 0x11
    1992:	81 e0       	ldi	r24, 0x01	; 1
    1994:	8d 83       	std	Y+5, r24	; 0x05
    1996:	6c 2d       	mov	r22, r12
    1998:	7d 2d       	mov	r23, r13
    199a:	8e 2d       	mov	r24, r14
    199c:	9f 2d       	mov	r25, r15
    199e:	27 c0       	rjmp	.+78     	; 0x19ee <create_chain+0x1d0>
    19a0:	61 e0       	ldi	r22, 0x01	; 1
    19a2:	70 e0       	ldi	r23, 0x00	; 0
    19a4:	80 e0       	ldi	r24, 0x00	; 0
    19a6:	90 e0       	ldi	r25, 0x00	; 0
    19a8:	22 c0       	rjmp	.+68     	; 0x19ee <create_chain+0x1d0>
    19aa:	6c 2d       	mov	r22, r12
    19ac:	7d 2d       	mov	r23, r13
    19ae:	8e 2d       	mov	r24, r14
    19b0:	9f 2d       	mov	r25, r15
    19b2:	1d c0       	rjmp	.+58     	; 0x19ee <create_chain+0x1d0>
    19b4:	60 e0       	ldi	r22, 0x00	; 0
    19b6:	70 e0       	ldi	r23, 0x00	; 0
    19b8:	80 e0       	ldi	r24, 0x00	; 0
    19ba:	90 e0       	ldi	r25, 0x00	; 0
    19bc:	18 c0       	rjmp	.+48     	; 0x19ee <create_chain+0x1d0>
    19be:	6f ef       	ldi	r22, 0xFF	; 255
    19c0:	7f ef       	ldi	r23, 0xFF	; 255
    19c2:	8f ef       	ldi	r24, 0xFF	; 255
    19c4:	9f ef       	ldi	r25, 0xFF	; 255
    19c6:	13 c0       	rjmp	.+38     	; 0x19ee <create_chain+0x1d0>
    19c8:	61 e0       	ldi	r22, 0x01	; 1
    19ca:	70 e0       	ldi	r23, 0x00	; 0
    19cc:	80 e0       	ldi	r24, 0x00	; 0
    19ce:	90 e0       	ldi	r25, 0x00	; 0
    19d0:	0e c0       	rjmp	.+28     	; 0x19ee <create_chain+0x1d0>
    19d2:	60 e0       	ldi	r22, 0x00	; 0
    19d4:	70 e0       	ldi	r23, 0x00	; 0
    19d6:	80 e0       	ldi	r24, 0x00	; 0
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	09 c0       	rjmp	.+18     	; 0x19ee <create_chain+0x1d0>
    19dc:	6f ef       	ldi	r22, 0xFF	; 255
    19de:	7f ef       	ldi	r23, 0xFF	; 255
    19e0:	8f ef       	ldi	r24, 0xFF	; 255
    19e2:	9f ef       	ldi	r25, 0xFF	; 255
    19e4:	04 c0       	rjmp	.+8      	; 0x19ee <create_chain+0x1d0>
    19e6:	6f ef       	ldi	r22, 0xFF	; 255
    19e8:	7f ef       	ldi	r23, 0xFF	; 255
    19ea:	8f ef       	ldi	r24, 0xFF	; 255
    19ec:	9f ef       	ldi	r25, 0xFF	; 255
    19ee:	df 91       	pop	r29
    19f0:	cf 91       	pop	r28
    19f2:	1f 91       	pop	r17
    19f4:	0f 91       	pop	r16
    19f6:	ff 90       	pop	r15
    19f8:	ef 90       	pop	r14
    19fa:	df 90       	pop	r13
    19fc:	cf 90       	pop	r12
    19fe:	bf 90       	pop	r11
    1a00:	af 90       	pop	r10
    1a02:	9f 90       	pop	r9
    1a04:	8f 90       	pop	r8
    1a06:	7f 90       	pop	r7
    1a08:	6f 90       	pop	r6
    1a0a:	5f 90       	pop	r5
    1a0c:	4f 90       	pop	r4
    1a0e:	3f 90       	pop	r3
    1a10:	2f 90       	pop	r2
    1a12:	08 95       	ret

00001a14 <remove_chain>:
    1a14:	7f 92       	push	r7
    1a16:	8f 92       	push	r8
    1a18:	9f 92       	push	r9
    1a1a:	af 92       	push	r10
    1a1c:	bf 92       	push	r11
    1a1e:	cf 92       	push	r12
    1a20:	df 92       	push	r13
    1a22:	ef 92       	push	r14
    1a24:	ff 92       	push	r15
    1a26:	0f 93       	push	r16
    1a28:	1f 93       	push	r17
    1a2a:	cf 93       	push	r28
    1a2c:	df 93       	push	r29
    1a2e:	ec 01       	movw	r28, r24
    1a30:	6a 01       	movw	r12, r20
    1a32:	7b 01       	movw	r14, r22
    1a34:	42 30       	cpi	r20, 0x02	; 2
    1a36:	51 05       	cpc	r21, r1
    1a38:	61 05       	cpc	r22, r1
    1a3a:	71 05       	cpc	r23, r1
    1a3c:	08 f4       	brcc	.+2      	; 0x1a40 <remove_chain+0x2c>
    1a3e:	4b c0       	rjmp	.+150    	; 0x1ad6 <remove_chain+0xc2>
    1a40:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1a42:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1a44:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1a46:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1a48:	48 17       	cp	r20, r24
    1a4a:	59 07       	cpc	r21, r25
    1a4c:	6a 07       	cpc	r22, r26
    1a4e:	7b 07       	cpc	r23, r27
    1a50:	08 f0       	brcs	.+2      	; 0x1a54 <remove_chain+0x40>
    1a52:	43 c0       	rjmp	.+134    	; 0x1ada <remove_chain+0xc6>
    1a54:	77 24       	eor	r7, r7
    1a56:	73 94       	inc	r7
    1a58:	33 c0       	rjmp	.+102    	; 0x1ac0 <remove_chain+0xac>
    1a5a:	b7 01       	movw	r22, r14
    1a5c:	a6 01       	movw	r20, r12
    1a5e:	ce 01       	movw	r24, r28
    1a60:	e6 dc       	rcall	.-1588   	; 0x142e <get_fat>
    1a62:	4b 01       	movw	r8, r22
    1a64:	5c 01       	movw	r10, r24
    1a66:	67 2b       	or	r22, r23
    1a68:	68 2b       	or	r22, r24
    1a6a:	69 2b       	or	r22, r25
    1a6c:	c1 f1       	breq	.+112    	; 0x1ade <remove_chain+0xca>
    1a6e:	81 e0       	ldi	r24, 0x01	; 1
    1a70:	88 16       	cp	r8, r24
    1a72:	91 04       	cpc	r9, r1
    1a74:	a1 04       	cpc	r10, r1
    1a76:	b1 04       	cpc	r11, r1
    1a78:	a1 f1       	breq	.+104    	; 0x1ae2 <remove_chain+0xce>
    1a7a:	2f ef       	ldi	r18, 0xFF	; 255
    1a7c:	82 16       	cp	r8, r18
    1a7e:	92 06       	cpc	r9, r18
    1a80:	a2 06       	cpc	r10, r18
    1a82:	b2 06       	cpc	r11, r18
    1a84:	81 f1       	breq	.+96     	; 0x1ae6 <remove_chain+0xd2>
    1a86:	00 e0       	ldi	r16, 0x00	; 0
    1a88:	10 e0       	ldi	r17, 0x00	; 0
    1a8a:	98 01       	movw	r18, r16
    1a8c:	b7 01       	movw	r22, r14
    1a8e:	a6 01       	movw	r20, r12
    1a90:	ce 01       	movw	r24, r28
    1a92:	ac dd       	rcall	.-1192   	; 0x15ec <put_fat>
    1a94:	81 11       	cpse	r24, r1
    1a96:	28 c0       	rjmp	.+80     	; 0x1ae8 <remove_chain+0xd4>
    1a98:	8e 85       	ldd	r24, Y+14	; 0x0e
    1a9a:	9f 85       	ldd	r25, Y+15	; 0x0f
    1a9c:	a8 89       	ldd	r26, Y+16	; 0x10
    1a9e:	b9 89       	ldd	r27, Y+17	; 0x11
    1aa0:	8f 3f       	cpi	r24, 0xFF	; 255
    1aa2:	2f ef       	ldi	r18, 0xFF	; 255
    1aa4:	92 07       	cpc	r25, r18
    1aa6:	a2 07       	cpc	r26, r18
    1aa8:	b2 07       	cpc	r27, r18
    1aaa:	41 f0       	breq	.+16     	; 0x1abc <remove_chain+0xa8>
    1aac:	01 96       	adiw	r24, 0x01	; 1
    1aae:	a1 1d       	adc	r26, r1
    1ab0:	b1 1d       	adc	r27, r1
    1ab2:	8e 87       	std	Y+14, r24	; 0x0e
    1ab4:	9f 87       	std	Y+15, r25	; 0x0f
    1ab6:	a8 8b       	std	Y+16, r26	; 0x10
    1ab8:	b9 8b       	std	Y+17, r27	; 0x11
    1aba:	7d 82       	std	Y+5, r7	; 0x05
    1abc:	75 01       	movw	r14, r10
    1abe:	64 01       	movw	r12, r8
    1ac0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1ac2:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1ac4:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1ac6:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1ac8:	c8 16       	cp	r12, r24
    1aca:	d9 06       	cpc	r13, r25
    1acc:	ea 06       	cpc	r14, r26
    1ace:	fb 06       	cpc	r15, r27
    1ad0:	20 f2       	brcs	.-120    	; 0x1a5a <remove_chain+0x46>
    1ad2:	80 e0       	ldi	r24, 0x00	; 0
    1ad4:	09 c0       	rjmp	.+18     	; 0x1ae8 <remove_chain+0xd4>
    1ad6:	82 e0       	ldi	r24, 0x02	; 2
    1ad8:	07 c0       	rjmp	.+14     	; 0x1ae8 <remove_chain+0xd4>
    1ada:	82 e0       	ldi	r24, 0x02	; 2
    1adc:	05 c0       	rjmp	.+10     	; 0x1ae8 <remove_chain+0xd4>
    1ade:	80 e0       	ldi	r24, 0x00	; 0
    1ae0:	03 c0       	rjmp	.+6      	; 0x1ae8 <remove_chain+0xd4>
    1ae2:	82 e0       	ldi	r24, 0x02	; 2
    1ae4:	01 c0       	rjmp	.+2      	; 0x1ae8 <remove_chain+0xd4>
    1ae6:	81 e0       	ldi	r24, 0x01	; 1
    1ae8:	df 91       	pop	r29
    1aea:	cf 91       	pop	r28
    1aec:	1f 91       	pop	r17
    1aee:	0f 91       	pop	r16
    1af0:	ff 90       	pop	r15
    1af2:	ef 90       	pop	r14
    1af4:	df 90       	pop	r13
    1af6:	cf 90       	pop	r12
    1af8:	bf 90       	pop	r11
    1afa:	af 90       	pop	r10
    1afc:	9f 90       	pop	r9
    1afe:	8f 90       	pop	r8
    1b00:	7f 90       	pop	r7
    1b02:	08 95       	ret

00001b04 <clust2sect>:
    1b04:	cf 92       	push	r12
    1b06:	df 92       	push	r13
    1b08:	ef 92       	push	r14
    1b0a:	ff 92       	push	r15
    1b0c:	fc 01       	movw	r30, r24
    1b0e:	9a 01       	movw	r18, r20
    1b10:	ab 01       	movw	r20, r22
    1b12:	22 50       	subi	r18, 0x02	; 2
    1b14:	31 09       	sbc	r19, r1
    1b16:	41 09       	sbc	r20, r1
    1b18:	51 09       	sbc	r21, r1
    1b1a:	c2 8c       	ldd	r12, Z+26	; 0x1a
    1b1c:	d3 8c       	ldd	r13, Z+27	; 0x1b
    1b1e:	e4 8c       	ldd	r14, Z+28	; 0x1c
    1b20:	f5 8c       	ldd	r15, Z+29	; 0x1d
    1b22:	82 e0       	ldi	r24, 0x02	; 2
    1b24:	c8 1a       	sub	r12, r24
    1b26:	d1 08       	sbc	r13, r1
    1b28:	e1 08       	sbc	r14, r1
    1b2a:	f1 08       	sbc	r15, r1
    1b2c:	2c 15       	cp	r18, r12
    1b2e:	3d 05       	cpc	r19, r13
    1b30:	4e 05       	cpc	r20, r14
    1b32:	5f 05       	cpc	r21, r15
    1b34:	68 f4       	brcc	.+26     	; 0x1b50 <clust2sect+0x4c>
    1b36:	a2 81       	ldd	r26, Z+2	; 0x02
    1b38:	b0 e0       	ldi	r27, 0x00	; 0
    1b3a:	0e 94 ad 17 	call	0x2f5a	; 0x2f5a <__muluhisi3>
    1b3e:	c2 a4       	ldd	r12, Z+42	; 0x2a
    1b40:	d3 a4       	ldd	r13, Z+43	; 0x2b
    1b42:	e4 a4       	ldd	r14, Z+44	; 0x2c
    1b44:	f5 a4       	ldd	r15, Z+45	; 0x2d
    1b46:	6c 0d       	add	r22, r12
    1b48:	7d 1d       	adc	r23, r13
    1b4a:	8e 1d       	adc	r24, r14
    1b4c:	9f 1d       	adc	r25, r15
    1b4e:	03 c0       	rjmp	.+6      	; 0x1b56 <clust2sect+0x52>
    1b50:	60 e0       	ldi	r22, 0x00	; 0
    1b52:	70 e0       	ldi	r23, 0x00	; 0
    1b54:	cb 01       	movw	r24, r22
    1b56:	ff 90       	pop	r15
    1b58:	ef 90       	pop	r14
    1b5a:	df 90       	pop	r13
    1b5c:	cf 90       	pop	r12
    1b5e:	08 95       	ret

00001b60 <dir_sdi>:
    1b60:	ef 92       	push	r14
    1b62:	ff 92       	push	r15
    1b64:	0f 93       	push	r16
    1b66:	1f 93       	push	r17
    1b68:	cf 93       	push	r28
    1b6a:	df 93       	push	r29
    1b6c:	ec 01       	movw	r28, r24
    1b6e:	8b 01       	movw	r16, r22
    1b70:	7d 83       	std	Y+5, r23	; 0x05
    1b72:	6c 83       	std	Y+4, r22	; 0x04
    1b74:	4e 81       	ldd	r20, Y+6	; 0x06
    1b76:	5f 81       	ldd	r21, Y+7	; 0x07
    1b78:	68 85       	ldd	r22, Y+8	; 0x08
    1b7a:	79 85       	ldd	r23, Y+9	; 0x09
    1b7c:	41 30       	cpi	r20, 0x01	; 1
    1b7e:	51 05       	cpc	r21, r1
    1b80:	61 05       	cpc	r22, r1
    1b82:	71 05       	cpc	r23, r1
    1b84:	09 f4       	brne	.+2      	; 0x1b88 <dir_sdi+0x28>
    1b86:	91 c0       	rjmp	.+290    	; 0x1caa <dir_sdi+0x14a>
    1b88:	e8 81       	ld	r30, Y
    1b8a:	f9 81       	ldd	r31, Y+1	; 0x01
    1b8c:	82 8d       	ldd	r24, Z+26	; 0x1a
    1b8e:	93 8d       	ldd	r25, Z+27	; 0x1b
    1b90:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1b92:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1b94:	48 17       	cp	r20, r24
    1b96:	59 07       	cpc	r21, r25
    1b98:	6a 07       	cpc	r22, r26
    1b9a:	7b 07       	cpc	r23, r27
    1b9c:	08 f0       	brcs	.+2      	; 0x1ba0 <dir_sdi+0x40>
    1b9e:	87 c0       	rjmp	.+270    	; 0x1cae <dir_sdi+0x14e>
    1ba0:	41 15       	cp	r20, r1
    1ba2:	51 05       	cpc	r21, r1
    1ba4:	61 05       	cpc	r22, r1
    1ba6:	71 05       	cpc	r23, r1
    1ba8:	51 f5       	brne	.+84     	; 0x1bfe <dir_sdi+0x9e>
    1baa:	80 81       	ld	r24, Z
    1bac:	83 30       	cpi	r24, 0x03	; 3
    1bae:	49 f4       	brne	.+18     	; 0x1bc2 <dir_sdi+0x62>
    1bb0:	46 a1       	ldd	r20, Z+38	; 0x26
    1bb2:	57 a1       	ldd	r21, Z+39	; 0x27
    1bb4:	60 a5       	ldd	r22, Z+40	; 0x28
    1bb6:	71 a5       	ldd	r23, Z+41	; 0x29
    1bb8:	41 15       	cp	r20, r1
    1bba:	51 05       	cpc	r21, r1
    1bbc:	61 05       	cpc	r22, r1
    1bbe:	71 05       	cpc	r23, r1
    1bc0:	f1 f4       	brne	.+60     	; 0x1bfe <dir_sdi+0x9e>
    1bc2:	1a 86       	std	Y+10, r1	; 0x0a
    1bc4:	1b 86       	std	Y+11, r1	; 0x0b
    1bc6:	1c 86       	std	Y+12, r1	; 0x0c
    1bc8:	1d 86       	std	Y+13, r1	; 0x0d
    1bca:	80 85       	ldd	r24, Z+8	; 0x08
    1bcc:	91 85       	ldd	r25, Z+9	; 0x09
    1bce:	08 17       	cp	r16, r24
    1bd0:	19 07       	cpc	r17, r25
    1bd2:	08 f0       	brcs	.+2      	; 0x1bd6 <dir_sdi+0x76>
    1bd4:	6e c0       	rjmp	.+220    	; 0x1cb2 <dir_sdi+0x152>
    1bd6:	86 a1       	ldd	r24, Z+38	; 0x26
    1bd8:	97 a1       	ldd	r25, Z+39	; 0x27
    1bda:	a0 a5       	ldd	r26, Z+40	; 0x28
    1bdc:	b1 a5       	ldd	r27, Z+41	; 0x29
    1bde:	98 01       	movw	r18, r16
    1be0:	32 95       	swap	r19
    1be2:	22 95       	swap	r18
    1be4:	2f 70       	andi	r18, 0x0F	; 15
    1be6:	23 27       	eor	r18, r19
    1be8:	3f 70       	andi	r19, 0x0F	; 15
    1bea:	23 27       	eor	r18, r19
    1bec:	82 0f       	add	r24, r18
    1bee:	93 1f       	adc	r25, r19
    1bf0:	a1 1d       	adc	r26, r1
    1bf2:	b1 1d       	adc	r27, r1
    1bf4:	8e 87       	std	Y+14, r24	; 0x0e
    1bf6:	9f 87       	std	Y+15, r25	; 0x0f
    1bf8:	a8 8b       	std	Y+16, r26	; 0x10
    1bfa:	b9 8b       	std	Y+17, r27	; 0x11
    1bfc:	42 c0       	rjmp	.+132    	; 0x1c82 <dir_sdi+0x122>
    1bfe:	e2 80       	ldd	r14, Z+2	; 0x02
    1c00:	80 e1       	ldi	r24, 0x10	; 16
    1c02:	e8 9e       	mul	r14, r24
    1c04:	70 01       	movw	r14, r0
    1c06:	11 24       	eor	r1, r1
    1c08:	0e 15       	cp	r16, r14
    1c0a:	1f 05       	cpc	r17, r15
    1c0c:	10 f1       	brcs	.+68     	; 0x1c52 <dir_sdi+0xf2>
    1c0e:	88 81       	ld	r24, Y
    1c10:	99 81       	ldd	r25, Y+1	; 0x01
    1c12:	0d dc       	rcall	.-2022   	; 0x142e <get_fat>
    1c14:	ab 01       	movw	r20, r22
    1c16:	bc 01       	movw	r22, r24
    1c18:	4f 3f       	cpi	r20, 0xFF	; 255
    1c1a:	8f ef       	ldi	r24, 0xFF	; 255
    1c1c:	58 07       	cpc	r21, r24
    1c1e:	68 07       	cpc	r22, r24
    1c20:	78 07       	cpc	r23, r24
    1c22:	09 f4       	brne	.+2      	; 0x1c26 <dir_sdi+0xc6>
    1c24:	48 c0       	rjmp	.+144    	; 0x1cb6 <dir_sdi+0x156>
    1c26:	42 30       	cpi	r20, 0x02	; 2
    1c28:	51 05       	cpc	r21, r1
    1c2a:	61 05       	cpc	r22, r1
    1c2c:	71 05       	cpc	r23, r1
    1c2e:	08 f4       	brcc	.+2      	; 0x1c32 <dir_sdi+0xd2>
    1c30:	44 c0       	rjmp	.+136    	; 0x1cba <dir_sdi+0x15a>
    1c32:	e8 81       	ld	r30, Y
    1c34:	f9 81       	ldd	r31, Y+1	; 0x01
    1c36:	82 8d       	ldd	r24, Z+26	; 0x1a
    1c38:	93 8d       	ldd	r25, Z+27	; 0x1b
    1c3a:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1c3c:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1c3e:	48 17       	cp	r20, r24
    1c40:	59 07       	cpc	r21, r25
    1c42:	6a 07       	cpc	r22, r26
    1c44:	7b 07       	cpc	r23, r27
    1c46:	d8 f5       	brcc	.+118    	; 0x1cbe <dir_sdi+0x15e>
    1c48:	0e 19       	sub	r16, r14
    1c4a:	1f 09       	sbc	r17, r15
    1c4c:	0e 15       	cp	r16, r14
    1c4e:	1f 05       	cpc	r17, r15
    1c50:	f0 f6       	brcc	.-68     	; 0x1c0e <dir_sdi+0xae>
    1c52:	4a 87       	std	Y+10, r20	; 0x0a
    1c54:	5b 87       	std	Y+11, r21	; 0x0b
    1c56:	6c 87       	std	Y+12, r22	; 0x0c
    1c58:	7d 87       	std	Y+13, r23	; 0x0d
    1c5a:	88 81       	ld	r24, Y
    1c5c:	99 81       	ldd	r25, Y+1	; 0x01
    1c5e:	52 df       	rcall	.-348    	; 0x1b04 <clust2sect>
    1c60:	98 01       	movw	r18, r16
    1c62:	32 95       	swap	r19
    1c64:	22 95       	swap	r18
    1c66:	2f 70       	andi	r18, 0x0F	; 15
    1c68:	23 27       	eor	r18, r19
    1c6a:	3f 70       	andi	r19, 0x0F	; 15
    1c6c:	23 27       	eor	r18, r19
    1c6e:	dc 01       	movw	r26, r24
    1c70:	cb 01       	movw	r24, r22
    1c72:	82 0f       	add	r24, r18
    1c74:	93 1f       	adc	r25, r19
    1c76:	a1 1d       	adc	r26, r1
    1c78:	b1 1d       	adc	r27, r1
    1c7a:	8e 87       	std	Y+14, r24	; 0x0e
    1c7c:	9f 87       	std	Y+15, r25	; 0x0f
    1c7e:	a8 8b       	std	Y+16, r26	; 0x10
    1c80:	b9 8b       	std	Y+17, r27	; 0x11
    1c82:	0f 70       	andi	r16, 0x0F	; 15
    1c84:	11 27       	eor	r17, r17
    1c86:	00 0f       	add	r16, r16
    1c88:	11 1f       	adc	r17, r17
    1c8a:	02 95       	swap	r16
    1c8c:	12 95       	swap	r17
    1c8e:	10 7f       	andi	r17, 0xF0	; 240
    1c90:	10 27       	eor	r17, r16
    1c92:	00 7f       	andi	r16, 0xF0	; 240
    1c94:	10 27       	eor	r17, r16
    1c96:	0e 5c       	subi	r16, 0xCE	; 206
    1c98:	1f 4f       	sbci	r17, 0xFF	; 255
    1c9a:	88 81       	ld	r24, Y
    1c9c:	99 81       	ldd	r25, Y+1	; 0x01
    1c9e:	08 0f       	add	r16, r24
    1ca0:	19 1f       	adc	r17, r25
    1ca2:	1b 8b       	std	Y+19, r17	; 0x13
    1ca4:	0a 8b       	std	Y+18, r16	; 0x12
    1ca6:	80 e0       	ldi	r24, 0x00	; 0
    1ca8:	0b c0       	rjmp	.+22     	; 0x1cc0 <dir_sdi+0x160>
    1caa:	82 e0       	ldi	r24, 0x02	; 2
    1cac:	09 c0       	rjmp	.+18     	; 0x1cc0 <dir_sdi+0x160>
    1cae:	82 e0       	ldi	r24, 0x02	; 2
    1cb0:	07 c0       	rjmp	.+14     	; 0x1cc0 <dir_sdi+0x160>
    1cb2:	82 e0       	ldi	r24, 0x02	; 2
    1cb4:	05 c0       	rjmp	.+10     	; 0x1cc0 <dir_sdi+0x160>
    1cb6:	81 e0       	ldi	r24, 0x01	; 1
    1cb8:	03 c0       	rjmp	.+6      	; 0x1cc0 <dir_sdi+0x160>
    1cba:	82 e0       	ldi	r24, 0x02	; 2
    1cbc:	01 c0       	rjmp	.+2      	; 0x1cc0 <dir_sdi+0x160>
    1cbe:	82 e0       	ldi	r24, 0x02	; 2
    1cc0:	df 91       	pop	r29
    1cc2:	cf 91       	pop	r28
    1cc4:	1f 91       	pop	r17
    1cc6:	0f 91       	pop	r16
    1cc8:	ff 90       	pop	r15
    1cca:	ef 90       	pop	r14
    1ccc:	08 95       	ret

00001cce <dir_next>:
    1cce:	8f 92       	push	r8
    1cd0:	9f 92       	push	r9
    1cd2:	af 92       	push	r10
    1cd4:	bf 92       	push	r11
    1cd6:	cf 92       	push	r12
    1cd8:	df 92       	push	r13
    1cda:	ef 92       	push	r14
    1cdc:	ff 92       	push	r15
    1cde:	0f 93       	push	r16
    1ce0:	1f 93       	push	r17
    1ce2:	cf 93       	push	r28
    1ce4:	df 93       	push	r29
    1ce6:	dc 01       	movw	r26, r24
    1ce8:	14 96       	adiw	r26, 0x04	; 4
    1cea:	cd 91       	ld	r28, X+
    1cec:	dc 91       	ld	r29, X
    1cee:	15 97       	sbiw	r26, 0x05	; 5
    1cf0:	21 96       	adiw	r28, 0x01	; 1
    1cf2:	09 f4       	brne	.+2      	; 0x1cf6 <dir_next+0x28>
    1cf4:	03 c1       	rjmp	.+518    	; 0x1efc <dir_next+0x22e>
    1cf6:	1e 96       	adiw	r26, 0x0e	; 14
    1cf8:	8d 90       	ld	r8, X+
    1cfa:	9d 90       	ld	r9, X+
    1cfc:	ad 90       	ld	r10, X+
    1cfe:	bc 90       	ld	r11, X
    1d00:	51 97       	sbiw	r26, 0x11	; 17
    1d02:	81 14       	cp	r8, r1
    1d04:	91 04       	cpc	r9, r1
    1d06:	a1 04       	cpc	r10, r1
    1d08:	b1 04       	cpc	r11, r1
    1d0a:	09 f4       	brne	.+2      	; 0x1d0e <dir_next+0x40>
    1d0c:	f9 c0       	rjmp	.+498    	; 0x1f00 <dir_next+0x232>
    1d0e:	7b 01       	movw	r14, r22
    1d10:	8c 01       	movw	r16, r24
    1d12:	6e 01       	movw	r12, r28
    1d14:	bf e0       	ldi	r27, 0x0F	; 15
    1d16:	cb 22       	and	r12, r27
    1d18:	dd 24       	eor	r13, r13
    1d1a:	c1 14       	cp	r12, r1
    1d1c:	d1 04       	cpc	r13, r1
    1d1e:	09 f0       	breq	.+2      	; 0x1d22 <dir_next+0x54>
    1d20:	d1 c0       	rjmp	.+418    	; 0x1ec4 <dir_next+0x1f6>
    1d22:	ef ef       	ldi	r30, 0xFF	; 255
    1d24:	8e 1a       	sub	r8, r30
    1d26:	9e 0a       	sbc	r9, r30
    1d28:	ae 0a       	sbc	r10, r30
    1d2a:	be 0a       	sbc	r11, r30
    1d2c:	dc 01       	movw	r26, r24
    1d2e:	1e 96       	adiw	r26, 0x0e	; 14
    1d30:	8d 92       	st	X+, r8
    1d32:	9d 92       	st	X+, r9
    1d34:	ad 92       	st	X+, r10
    1d36:	bc 92       	st	X, r11
    1d38:	51 97       	sbiw	r26, 0x11	; 17
    1d3a:	1a 96       	adiw	r26, 0x0a	; 10
    1d3c:	4d 91       	ld	r20, X+
    1d3e:	5d 91       	ld	r21, X+
    1d40:	6d 91       	ld	r22, X+
    1d42:	7c 91       	ld	r23, X
    1d44:	1d 97       	sbiw	r26, 0x0d	; 13
    1d46:	41 15       	cp	r20, r1
    1d48:	51 05       	cpc	r21, r1
    1d4a:	61 05       	cpc	r22, r1
    1d4c:	71 05       	cpc	r23, r1
    1d4e:	49 f4       	brne	.+18     	; 0x1d62 <dir_next+0x94>
    1d50:	ed 91       	ld	r30, X+
    1d52:	fc 91       	ld	r31, X
    1d54:	80 85       	ldd	r24, Z+8	; 0x08
    1d56:	91 85       	ldd	r25, Z+9	; 0x09
    1d58:	c8 17       	cp	r28, r24
    1d5a:	d9 07       	cpc	r29, r25
    1d5c:	08 f0       	brcs	.+2      	; 0x1d60 <dir_next+0x92>
    1d5e:	d2 c0       	rjmp	.+420    	; 0x1f04 <dir_next+0x236>
    1d60:	b1 c0       	rjmp	.+354    	; 0x1ec4 <dir_next+0x1f6>
    1d62:	dc 01       	movw	r26, r24
    1d64:	ed 91       	ld	r30, X+
    1d66:	fc 91       	ld	r31, X
    1d68:	22 81       	ldd	r18, Z+2	; 0x02
    1d6a:	30 e0       	ldi	r19, 0x00	; 0
    1d6c:	21 50       	subi	r18, 0x01	; 1
    1d6e:	31 09       	sbc	r19, r1
    1d70:	ce 01       	movw	r24, r28
    1d72:	92 95       	swap	r25
    1d74:	82 95       	swap	r24
    1d76:	8f 70       	andi	r24, 0x0F	; 15
    1d78:	89 27       	eor	r24, r25
    1d7a:	9f 70       	andi	r25, 0x0F	; 15
    1d7c:	89 27       	eor	r24, r25
    1d7e:	28 23       	and	r18, r24
    1d80:	39 23       	and	r19, r25
    1d82:	23 2b       	or	r18, r19
    1d84:	09 f0       	breq	.+2      	; 0x1d88 <dir_next+0xba>
    1d86:	9e c0       	rjmp	.+316    	; 0x1ec4 <dir_next+0x1f6>
    1d88:	cf 01       	movw	r24, r30
    1d8a:	51 db       	rcall	.-2398   	; 0x142e <get_fat>
    1d8c:	4b 01       	movw	r8, r22
    1d8e:	5c 01       	movw	r10, r24
    1d90:	62 30       	cpi	r22, 0x02	; 2
    1d92:	71 05       	cpc	r23, r1
    1d94:	81 05       	cpc	r24, r1
    1d96:	91 05       	cpc	r25, r1
    1d98:	08 f4       	brcc	.+2      	; 0x1d9c <dir_next+0xce>
    1d9a:	b6 c0       	rjmp	.+364    	; 0x1f08 <dir_next+0x23a>
    1d9c:	6f 3f       	cpi	r22, 0xFF	; 255
    1d9e:	7f 4f       	sbci	r23, 0xFF	; 255
    1da0:	8f 4f       	sbci	r24, 0xFF	; 255
    1da2:	9f 4f       	sbci	r25, 0xFF	; 255
    1da4:	09 f4       	brne	.+2      	; 0x1da8 <dir_next+0xda>
    1da6:	b2 c0       	rjmp	.+356    	; 0x1f0c <dir_next+0x23e>
    1da8:	d8 01       	movw	r26, r16
    1daa:	ed 91       	ld	r30, X+
    1dac:	fc 91       	ld	r31, X
    1dae:	82 8d       	ldd	r24, Z+26	; 0x1a
    1db0:	93 8d       	ldd	r25, Z+27	; 0x1b
    1db2:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1db4:	b5 8d       	ldd	r27, Z+29	; 0x1d
    1db6:	88 16       	cp	r8, r24
    1db8:	99 06       	cpc	r9, r25
    1dba:	aa 06       	cpc	r10, r26
    1dbc:	bb 06       	cpc	r11, r27
    1dbe:	08 f4       	brcc	.+2      	; 0x1dc2 <dir_next+0xf4>
    1dc0:	70 c0       	rjmp	.+224    	; 0x1ea2 <dir_next+0x1d4>
    1dc2:	ef 28       	or	r14, r15
    1dc4:	09 f4       	brne	.+2      	; 0x1dc8 <dir_next+0xfa>
    1dc6:	a4 c0       	rjmp	.+328    	; 0x1f10 <dir_next+0x242>
    1dc8:	d8 01       	movw	r26, r16
    1dca:	1a 96       	adiw	r26, 0x0a	; 10
    1dcc:	4d 91       	ld	r20, X+
    1dce:	5d 91       	ld	r21, X+
    1dd0:	6d 91       	ld	r22, X+
    1dd2:	7c 91       	ld	r23, X
    1dd4:	1d 97       	sbiw	r26, 0x0d	; 13
    1dd6:	cf 01       	movw	r24, r30
    1dd8:	22 dd       	rcall	.-1468   	; 0x181e <create_chain>
    1dda:	4b 01       	movw	r8, r22
    1ddc:	5c 01       	movw	r10, r24
    1dde:	61 15       	cp	r22, r1
    1de0:	71 05       	cpc	r23, r1
    1de2:	81 05       	cpc	r24, r1
    1de4:	91 05       	cpc	r25, r1
    1de6:	09 f4       	brne	.+2      	; 0x1dea <dir_next+0x11c>
    1de8:	95 c0       	rjmp	.+298    	; 0x1f14 <dir_next+0x246>
    1dea:	61 30       	cpi	r22, 0x01	; 1
    1dec:	71 05       	cpc	r23, r1
    1dee:	81 05       	cpc	r24, r1
    1df0:	91 05       	cpc	r25, r1
    1df2:	09 f4       	brne	.+2      	; 0x1df6 <dir_next+0x128>
    1df4:	91 c0       	rjmp	.+290    	; 0x1f18 <dir_next+0x24a>
    1df6:	6f 3f       	cpi	r22, 0xFF	; 255
    1df8:	7f 4f       	sbci	r23, 0xFF	; 255
    1dfa:	8f 4f       	sbci	r24, 0xFF	; 255
    1dfc:	9f 4f       	sbci	r25, 0xFF	; 255
    1dfe:	09 f4       	brne	.+2      	; 0x1e02 <dir_next+0x134>
    1e00:	8d c0       	rjmp	.+282    	; 0x1f1c <dir_next+0x24e>
    1e02:	40 e0       	ldi	r20, 0x00	; 0
    1e04:	50 e0       	ldi	r21, 0x00	; 0
    1e06:	ba 01       	movw	r22, r20
    1e08:	d8 01       	movw	r26, r16
    1e0a:	8d 91       	ld	r24, X+
    1e0c:	9c 91       	ld	r25, X
    1e0e:	0e 94 f6 05 	call	0xbec	; 0xbec <move_window>
    1e12:	81 11       	cpse	r24, r1
    1e14:	85 c0       	rjmp	.+266    	; 0x1f20 <dir_next+0x252>
    1e16:	f8 01       	movw	r30, r16
    1e18:	80 81       	ld	r24, Z
    1e1a:	91 81       	ldd	r25, Z+1	; 0x01
    1e1c:	40 e0       	ldi	r20, 0x00	; 0
    1e1e:	52 e0       	ldi	r21, 0x02	; 2
    1e20:	60 e0       	ldi	r22, 0x00	; 0
    1e22:	70 e0       	ldi	r23, 0x00	; 0
    1e24:	c2 96       	adiw	r24, 0x32	; 50
    1e26:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <mem_set>
    1e2a:	d8 01       	movw	r26, r16
    1e2c:	ed 90       	ld	r14, X+
    1e2e:	fc 90       	ld	r15, X
    1e30:	b5 01       	movw	r22, r10
    1e32:	a4 01       	movw	r20, r8
    1e34:	c7 01       	movw	r24, r14
    1e36:	66 de       	rcall	.-820    	; 0x1b04 <clust2sect>
    1e38:	f7 01       	movw	r30, r14
    1e3a:	66 a7       	std	Z+46, r22	; 0x2e
    1e3c:	77 a7       	std	Z+47, r23	; 0x2f
    1e3e:	80 ab       	std	Z+48, r24	; 0x30
    1e40:	91 ab       	std	Z+49, r25	; 0x31
    1e42:	f1 2c       	mov	r15, r1
    1e44:	ee 24       	eor	r14, r14
    1e46:	e3 94       	inc	r14
    1e48:	1a c0       	rjmp	.+52     	; 0x1e7e <dir_next+0x1b0>
    1e4a:	e4 82       	std	Z+4, r14	; 0x04
    1e4c:	40 e0       	ldi	r20, 0x00	; 0
    1e4e:	50 e0       	ldi	r21, 0x00	; 0
    1e50:	ba 01       	movw	r22, r20
    1e52:	d8 01       	movw	r26, r16
    1e54:	8d 91       	ld	r24, X+
    1e56:	9c 91       	ld	r25, X
    1e58:	0e 94 f6 05 	call	0xbec	; 0xbec <move_window>
    1e5c:	81 11       	cpse	r24, r1
    1e5e:	62 c0       	rjmp	.+196    	; 0x1f24 <dir_next+0x256>
    1e60:	d8 01       	movw	r26, r16
    1e62:	ed 91       	ld	r30, X+
    1e64:	fc 91       	ld	r31, X
    1e66:	86 a5       	ldd	r24, Z+46	; 0x2e
    1e68:	97 a5       	ldd	r25, Z+47	; 0x2f
    1e6a:	a0 a9       	ldd	r26, Z+48	; 0x30
    1e6c:	b1 a9       	ldd	r27, Z+49	; 0x31
    1e6e:	01 96       	adiw	r24, 0x01	; 1
    1e70:	a1 1d       	adc	r26, r1
    1e72:	b1 1d       	adc	r27, r1
    1e74:	86 a7       	std	Z+46, r24	; 0x2e
    1e76:	97 a7       	std	Z+47, r25	; 0x2f
    1e78:	a0 ab       	std	Z+48, r26	; 0x30
    1e7a:	b1 ab       	std	Z+49, r27	; 0x31
    1e7c:	f3 94       	inc	r15
    1e7e:	d8 01       	movw	r26, r16
    1e80:	ed 91       	ld	r30, X+
    1e82:	fc 91       	ld	r31, X
    1e84:	82 81       	ldd	r24, Z+2	; 0x02
    1e86:	f8 16       	cp	r15, r24
    1e88:	00 f3       	brcs	.-64     	; 0x1e4a <dir_next+0x17c>
    1e8a:	86 a5       	ldd	r24, Z+46	; 0x2e
    1e8c:	97 a5       	ldd	r25, Z+47	; 0x2f
    1e8e:	a0 a9       	ldd	r26, Z+48	; 0x30
    1e90:	b1 a9       	ldd	r27, Z+49	; 0x31
    1e92:	8f 19       	sub	r24, r15
    1e94:	91 09       	sbc	r25, r1
    1e96:	a1 09       	sbc	r26, r1
    1e98:	b1 09       	sbc	r27, r1
    1e9a:	86 a7       	std	Z+46, r24	; 0x2e
    1e9c:	97 a7       	std	Z+47, r25	; 0x2f
    1e9e:	a0 ab       	std	Z+48, r26	; 0x30
    1ea0:	b1 ab       	std	Z+49, r27	; 0x31
    1ea2:	f8 01       	movw	r30, r16
    1ea4:	82 86       	std	Z+10, r8	; 0x0a
    1ea6:	93 86       	std	Z+11, r9	; 0x0b
    1ea8:	a4 86       	std	Z+12, r10	; 0x0c
    1eaa:	b5 86       	std	Z+13, r11	; 0x0d
    1eac:	b5 01       	movw	r22, r10
    1eae:	a4 01       	movw	r20, r8
    1eb0:	80 81       	ld	r24, Z
    1eb2:	91 81       	ldd	r25, Z+1	; 0x01
    1eb4:	27 de       	rcall	.-946    	; 0x1b04 <clust2sect>
    1eb6:	d8 01       	movw	r26, r16
    1eb8:	1e 96       	adiw	r26, 0x0e	; 14
    1eba:	6d 93       	st	X+, r22
    1ebc:	7d 93       	st	X+, r23
    1ebe:	8d 93       	st	X+, r24
    1ec0:	9c 93       	st	X, r25
    1ec2:	51 97       	sbiw	r26, 0x11	; 17
    1ec4:	f8 01       	movw	r30, r16
    1ec6:	d5 83       	std	Z+5, r29	; 0x05
    1ec8:	c4 83       	std	Z+4, r28	; 0x04
    1eca:	cc 0c       	add	r12, r12
    1ecc:	dd 1c       	adc	r13, r13
    1ece:	cc 0c       	add	r12, r12
    1ed0:	dd 1c       	adc	r13, r13
    1ed2:	cc 0c       	add	r12, r12
    1ed4:	dd 1c       	adc	r13, r13
    1ed6:	cc 0c       	add	r12, r12
    1ed8:	dd 1c       	adc	r13, r13
    1eda:	cc 0c       	add	r12, r12
    1edc:	dd 1c       	adc	r13, r13
    1ede:	f2 e3       	ldi	r31, 0x32	; 50
    1ee0:	cf 0e       	add	r12, r31
    1ee2:	d1 1c       	adc	r13, r1
    1ee4:	d8 01       	movw	r26, r16
    1ee6:	8d 91       	ld	r24, X+
    1ee8:	9c 91       	ld	r25, X
    1eea:	11 97       	sbiw	r26, 0x01	; 1
    1eec:	c8 0e       	add	r12, r24
    1eee:	d9 1e       	adc	r13, r25
    1ef0:	53 96       	adiw	r26, 0x13	; 19
    1ef2:	dc 92       	st	X, r13
    1ef4:	ce 92       	st	-X, r12
    1ef6:	52 97       	sbiw	r26, 0x12	; 18
    1ef8:	80 e0       	ldi	r24, 0x00	; 0
    1efa:	15 c0       	rjmp	.+42     	; 0x1f26 <dir_next+0x258>
    1efc:	84 e0       	ldi	r24, 0x04	; 4
    1efe:	13 c0       	rjmp	.+38     	; 0x1f26 <dir_next+0x258>
    1f00:	84 e0       	ldi	r24, 0x04	; 4
    1f02:	11 c0       	rjmp	.+34     	; 0x1f26 <dir_next+0x258>
    1f04:	84 e0       	ldi	r24, 0x04	; 4
    1f06:	0f c0       	rjmp	.+30     	; 0x1f26 <dir_next+0x258>
    1f08:	82 e0       	ldi	r24, 0x02	; 2
    1f0a:	0d c0       	rjmp	.+26     	; 0x1f26 <dir_next+0x258>
    1f0c:	81 e0       	ldi	r24, 0x01	; 1
    1f0e:	0b c0       	rjmp	.+22     	; 0x1f26 <dir_next+0x258>
    1f10:	84 e0       	ldi	r24, 0x04	; 4
    1f12:	09 c0       	rjmp	.+18     	; 0x1f26 <dir_next+0x258>
    1f14:	87 e0       	ldi	r24, 0x07	; 7
    1f16:	07 c0       	rjmp	.+14     	; 0x1f26 <dir_next+0x258>
    1f18:	82 e0       	ldi	r24, 0x02	; 2
    1f1a:	05 c0       	rjmp	.+10     	; 0x1f26 <dir_next+0x258>
    1f1c:	81 e0       	ldi	r24, 0x01	; 1
    1f1e:	03 c0       	rjmp	.+6      	; 0x1f26 <dir_next+0x258>
    1f20:	81 e0       	ldi	r24, 0x01	; 1
    1f22:	01 c0       	rjmp	.+2      	; 0x1f26 <dir_next+0x258>
    1f24:	81 e0       	ldi	r24, 0x01	; 1
    1f26:	df 91       	pop	r29
    1f28:	cf 91       	pop	r28
    1f2a:	1f 91       	pop	r17
    1f2c:	0f 91       	pop	r16
    1f2e:	ff 90       	pop	r15
    1f30:	ef 90       	pop	r14
    1f32:	df 90       	pop	r13
    1f34:	cf 90       	pop	r12
    1f36:	bf 90       	pop	r11
    1f38:	af 90       	pop	r10
    1f3a:	9f 90       	pop	r9
    1f3c:	8f 90       	pop	r8
    1f3e:	08 95       	ret

00001f40 <follow_path>:
    1f40:	2f 92       	push	r2
    1f42:	3f 92       	push	r3
    1f44:	4f 92       	push	r4
    1f46:	5f 92       	push	r5
    1f48:	6f 92       	push	r6
    1f4a:	7f 92       	push	r7
    1f4c:	8f 92       	push	r8
    1f4e:	9f 92       	push	r9
    1f50:	af 92       	push	r10
    1f52:	bf 92       	push	r11
    1f54:	cf 92       	push	r12
    1f56:	df 92       	push	r13
    1f58:	ef 92       	push	r14
    1f5a:	ff 92       	push	r15
    1f5c:	0f 93       	push	r16
    1f5e:	1f 93       	push	r17
    1f60:	cf 93       	push	r28
    1f62:	df 93       	push	r29
    1f64:	cd b7       	in	r28, 0x3d	; 61
    1f66:	de b7       	in	r29, 0x3e	; 62
    1f68:	27 97       	sbiw	r28, 0x07	; 7
    1f6a:	0f b6       	in	r0, 0x3f	; 63
    1f6c:	f8 94       	cli
    1f6e:	de bf       	out	0x3e, r29	; 62
    1f70:	0f be       	out	0x3f, r0	; 63
    1f72:	cd bf       	out	0x3d, r28	; 61
    1f74:	7c 01       	movw	r14, r24
    1f76:	8b 01       	movw	r16, r22
    1f78:	db 01       	movw	r26, r22
    1f7a:	8c 91       	ld	r24, X
    1f7c:	8f 32       	cpi	r24, 0x2F	; 47
    1f7e:	11 f0       	breq	.+4      	; 0x1f84 <follow_path+0x44>
    1f80:	8c 35       	cpi	r24, 0x5C	; 92
    1f82:	41 f4       	brne	.+16     	; 0x1f94 <follow_path+0x54>
    1f84:	0f 5f       	subi	r16, 0xFF	; 255
    1f86:	1f 4f       	sbci	r17, 0xFF	; 255
    1f88:	f7 01       	movw	r30, r14
    1f8a:	16 82       	std	Z+6, r1	; 0x06
    1f8c:	17 82       	std	Z+7, r1	; 0x07
    1f8e:	10 86       	std	Z+8, r1	; 0x08
    1f90:	11 86       	std	Z+9, r1	; 0x09
    1f92:	0c c0       	rjmp	.+24     	; 0x1fac <follow_path+0x6c>
    1f94:	d7 01       	movw	r26, r14
    1f96:	ed 91       	ld	r30, X+
    1f98:	fc 91       	ld	r31, X
    1f9a:	86 89       	ldd	r24, Z+22	; 0x16
    1f9c:	97 89       	ldd	r25, Z+23	; 0x17
    1f9e:	a0 8d       	ldd	r26, Z+24	; 0x18
    1fa0:	b1 8d       	ldd	r27, Z+25	; 0x19
    1fa2:	f7 01       	movw	r30, r14
    1fa4:	86 83       	std	Z+6, r24	; 0x06
    1fa6:	97 83       	std	Z+7, r25	; 0x07
    1fa8:	a0 87       	std	Z+8, r26	; 0x08
    1faa:	b1 87       	std	Z+9, r27	; 0x09
    1fac:	d8 01       	movw	r26, r16
    1fae:	8c 91       	ld	r24, X
    1fb0:	80 32       	cpi	r24, 0x20	; 32
    1fb2:	40 f4       	brcc	.+16     	; 0x1fc4 <follow_path+0x84>
    1fb4:	60 e0       	ldi	r22, 0x00	; 0
    1fb6:	70 e0       	ldi	r23, 0x00	; 0
    1fb8:	c7 01       	movw	r24, r14
    1fba:	d2 dd       	rcall	.-1116   	; 0x1b60 <dir_sdi>
    1fbc:	f7 01       	movw	r30, r14
    1fbe:	13 8a       	std	Z+19, r1	; 0x13
    1fc0:	12 8a       	std	Z+18, r1	; 0x12
    1fc2:	67 c1       	rjmp	.+718    	; 0x2292 <follow_path+0x352>
    1fc4:	0f 2e       	mov	r0, r31
    1fc6:	fb e0       	ldi	r31, 0x0B	; 11
    1fc8:	9f 2e       	mov	r9, r31
    1fca:	f0 2d       	mov	r31, r0
    1fcc:	81 2c       	mov	r8, r1
    1fce:	b1 2c       	mov	r11, r1
    1fd0:	a1 2c       	mov	r10, r1
    1fd2:	68 94       	set
    1fd4:	77 24       	eor	r7, r7
    1fd6:	73 f8       	bld	r7, 3
    1fd8:	31 2c       	mov	r3, r1
    1fda:	21 2c       	mov	r2, r1
    1fdc:	0f 2e       	mov	r0, r31
    1fde:	f5 e0       	ldi	r31, 0x05	; 5
    1fe0:	df 2e       	mov	r13, r31
    1fe2:	f0 2d       	mov	r31, r0
    1fe4:	3b 82       	std	Y+3, r3	; 0x03
    1fe6:	9c 82       	std	Y+4, r9	; 0x04
    1fe8:	8d 82       	std	Y+5, r8	; 0x05
    1fea:	0f 2e       	mov	r0, r31
    1fec:	fe e2       	ldi	r31, 0x2E	; 46
    1fee:	6f 2e       	mov	r6, r31
    1ff0:	f0 2d       	mov	r31, r0
    1ff2:	ff 82       	std	Y+7, r15	; 0x07
    1ff4:	ee 82       	std	Y+6, r14	; 0x06
    1ff6:	c7 2c       	mov	r12, r7
    1ff8:	ae 81       	ldd	r26, Y+6	; 0x06
    1ffa:	bf 81       	ldd	r27, Y+7	; 0x07
    1ffc:	54 96       	adiw	r26, 0x14	; 20
    1ffe:	ed 90       	ld	r14, X+
    2000:	fc 90       	ld	r15, X
    2002:	55 97       	sbiw	r26, 0x15	; 21
    2004:	49 2d       	mov	r20, r9
    2006:	58 2d       	mov	r21, r8
    2008:	60 e2       	ldi	r22, 0x20	; 32
    200a:	70 e0       	ldi	r23, 0x00	; 0
    200c:	c7 01       	movw	r24, r14
    200e:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <mem_set>
    2012:	f8 01       	movw	r30, r16
    2014:	80 81       	ld	r24, Z
    2016:	8e 32       	cpi	r24, 0x2E	; 46
    2018:	49 f0       	breq	.+18     	; 0x202c <follow_path+0xec>
    201a:	d8 01       	movw	r26, r16
    201c:	b9 82       	std	Y+1, r11	; 0x01
    201e:	aa 82       	std	Y+2, r10	; 0x02
    2020:	4b 2d       	mov	r20, r11
    2022:	5a 2d       	mov	r21, r10
    2024:	47 2c       	mov	r4, r7
    2026:	53 2c       	mov	r5, r3
    2028:	72 2d       	mov	r23, r2
    202a:	1f c0       	rjmp	.+62     	; 0x206a <follow_path+0x12a>
    202c:	d7 01       	movw	r26, r14
    202e:	6c 92       	st	X, r6
    2030:	f8 01       	movw	r30, r16
    2032:	81 81       	ldd	r24, Z+1	; 0x01
    2034:	8e 32       	cpi	r24, 0x2E	; 46
    2036:	49 f4       	brne	.+18     	; 0x204a <follow_path+0x10a>
    2038:	11 96       	adiw	r26, 0x01	; 1
    203a:	6c 92       	st	X, r6
    203c:	82 81       	ldd	r24, Z+2	; 0x02
    203e:	8e 32       	cpi	r24, 0x2E	; 46
    2040:	09 f4       	brne	.+2      	; 0x2044 <follow_path+0x104>
    2042:	77 c0       	rjmp	.+238    	; 0x2132 <follow_path+0x1f2>
    2044:	23 e0       	ldi	r18, 0x03	; 3
    2046:	30 e0       	ldi	r19, 0x00	; 0
    2048:	02 c0       	rjmp	.+4      	; 0x204e <follow_path+0x10e>
    204a:	22 e0       	ldi	r18, 0x02	; 2
    204c:	30 e0       	ldi	r19, 0x00	; 0
    204e:	8f 32       	cpi	r24, 0x2F	; 47
    2050:	09 f4       	brne	.+2      	; 0x2054 <follow_path+0x114>
    2052:	db c0       	rjmp	.+438    	; 0x220a <follow_path+0x2ca>
    2054:	8c 35       	cpi	r24, 0x5C	; 92
    2056:	09 f4       	brne	.+2      	; 0x205a <follow_path+0x11a>
    2058:	d8 c0       	rjmp	.+432    	; 0x220a <follow_path+0x2ca>
    205a:	81 32       	cpi	r24, 0x21	; 33
    205c:	08 f0       	brcs	.+2      	; 0x2060 <follow_path+0x120>
    205e:	f1 c0       	rjmp	.+482    	; 0x2242 <follow_path+0x302>
    2060:	d8 c0       	rjmp	.+432    	; 0x2212 <follow_path+0x2d2>
    2062:	d7 01       	movw	r26, r14
    2064:	1b 96       	adiw	r26, 0x0b	; 11
    2066:	8c 93       	st	X, r24
    2068:	ee c0       	rjmp	.+476    	; 0x2246 <follow_path+0x306>
    206a:	4f 5f       	subi	r20, 0xFF	; 255
    206c:	5f 4f       	sbci	r21, 0xFF	; 255
    206e:	6d 91       	ld	r22, X+
    2070:	61 32       	cpi	r22, 0x21	; 33
    2072:	08 f4       	brcc	.+2      	; 0x2076 <follow_path+0x136>
    2074:	e2 c0       	rjmp	.+452    	; 0x223a <follow_path+0x2fa>
    2076:	6f 32       	cpi	r22, 0x2F	; 47
    2078:	09 f4       	brne	.+2      	; 0x207c <follow_path+0x13c>
    207a:	db c0       	rjmp	.+438    	; 0x2232 <follow_path+0x2f2>
    207c:	6c 35       	cpi	r22, 0x5C	; 92
    207e:	09 f4       	brne	.+2      	; 0x2082 <follow_path+0x142>
    2080:	d8 c0       	rjmp	.+432    	; 0x2232 <follow_path+0x2f2>
    2082:	6e 32       	cpi	r22, 0x2E	; 46
    2084:	09 f4       	brne	.+2      	; 0x2088 <follow_path+0x148>
    2086:	c9 c0       	rjmp	.+402    	; 0x221a <follow_path+0x2da>
    2088:	e9 81       	ldd	r30, Y+1	; 0x01
    208a:	fa 81       	ldd	r31, Y+2	; 0x02
    208c:	e4 15       	cp	r30, r4
    208e:	f5 05       	cpc	r31, r5
    2090:	0c f0       	brlt	.+2      	; 0x2094 <follow_path+0x154>
    2092:	d7 c0       	rjmp	.+430    	; 0x2242 <follow_path+0x302>
    2094:	08 c0       	rjmp	.+16     	; 0x20a6 <follow_path+0x166>
    2096:	77 0f       	add	r23, r23
    2098:	77 0f       	add	r23, r23
    209a:	c9 82       	std	Y+1, r12	; 0x01
    209c:	fb 81       	ldd	r31, Y+3	; 0x03
    209e:	fa 83       	std	Y+2, r31	; 0x02
    20a0:	4c 80       	ldd	r4, Y+4	; 0x04
    20a2:	5d 80       	ldd	r5, Y+5	; 0x05
    20a4:	e2 cf       	rjmp	.-60     	; 0x206a <follow_path+0x12a>
    20a6:	66 23       	and	r22, r22
    20a8:	0c f4       	brge	.+2      	; 0x20ac <follow_path+0x16c>
    20aa:	cb c0       	rjmp	.+406    	; 0x2242 <follow_path+0x302>
    20ac:	26 2f       	mov	r18, r22
    20ae:	30 e0       	ldi	r19, 0x00	; 0
    20b0:	22 32       	cpi	r18, 0x22	; 34
    20b2:	31 05       	cpc	r19, r1
    20b4:	f1 f1       	breq	.+124    	; 0x2132 <follow_path+0x1f2>
    20b6:	eb e0       	ldi	r30, 0x0B	; 11
    20b8:	f1 e0       	ldi	r31, 0x01	; 1
    20ba:	81 91       	ld	r24, Z+
    20bc:	88 23       	and	r24, r24
    20be:	09 f4       	brne	.+2      	; 0x20c2 <follow_path+0x182>
    20c0:	b2 c0       	rjmp	.+356    	; 0x2226 <follow_path+0x2e6>
    20c2:	90 e0       	ldi	r25, 0x00	; 0
    20c4:	28 17       	cp	r18, r24
    20c6:	39 07       	cpc	r19, r25
    20c8:	c1 f7       	brne	.-16     	; 0x20ba <follow_path+0x17a>
    20ca:	33 c0       	rjmp	.+102    	; 0x2132 <follow_path+0x1f2>
    20cc:	72 60       	ori	r23, 0x02	; 2
    20ce:	06 c0       	rjmp	.+12     	; 0x20dc <follow_path+0x19c>
    20d0:	8f e9       	ldi	r24, 0x9F	; 159
    20d2:	86 0f       	add	r24, r22
    20d4:	8a 31       	cpi	r24, 0x1A	; 26
    20d6:	10 f4       	brcc	.+4      	; 0x20dc <follow_path+0x19c>
    20d8:	71 60       	ori	r23, 0x01	; 1
    20da:	60 52       	subi	r22, 0x20	; 32
    20dc:	89 81       	ldd	r24, Y+1	; 0x01
    20de:	9a 81       	ldd	r25, Y+2	; 0x02
    20e0:	8e 0d       	add	r24, r14
    20e2:	9f 1d       	adc	r25, r15
    20e4:	fc 01       	movw	r30, r24
    20e6:	60 83       	st	Z, r22
    20e8:	29 81       	ldd	r18, Y+1	; 0x01
    20ea:	3a 81       	ldd	r19, Y+2	; 0x02
    20ec:	2f 5f       	subi	r18, 0xFF	; 255
    20ee:	3f 4f       	sbci	r19, 0xFF	; 255
    20f0:	3a 83       	std	Y+2, r19	; 0x02
    20f2:	29 83       	std	Y+1, r18	; 0x01
    20f4:	ba cf       	rjmp	.-140    	; 0x206a <follow_path+0x12a>
    20f6:	a9 81       	ldd	r26, Y+1	; 0x01
    20f8:	ba 81       	ldd	r27, Y+2	; 0x02
    20fa:	ab 2b       	or	r26, r27
    20fc:	09 f4       	brne	.+2      	; 0x2100 <follow_path+0x1c0>
    20fe:	a1 c0       	rjmp	.+322    	; 0x2242 <follow_path+0x302>
    2100:	f7 01       	movw	r30, r14
    2102:	90 81       	ld	r25, Z
    2104:	95 3e       	cpi	r25, 0xE5	; 229
    2106:	09 f4       	brne	.+2      	; 0x210a <follow_path+0x1ca>
    2108:	d0 82       	st	Z, r13
    210a:	f8 e0       	ldi	r31, 0x08	; 8
    210c:	4f 16       	cp	r4, r31
    210e:	51 04       	cpc	r5, r1
    2110:	11 f4       	brne	.+4      	; 0x2116 <follow_path+0x1d6>
    2112:	77 0f       	add	r23, r23
    2114:	77 0f       	add	r23, r23
    2116:	97 2f       	mov	r25, r23
    2118:	93 70       	andi	r25, 0x03	; 3
    211a:	91 30       	cpi	r25, 0x01	; 1
    211c:	09 f4       	brne	.+2      	; 0x2120 <follow_path+0x1e0>
    211e:	80 61       	ori	r24, 0x10	; 16
    2120:	97 2f       	mov	r25, r23
    2122:	9c 70       	andi	r25, 0x0C	; 12
    2124:	94 30       	cpi	r25, 0x04	; 4
    2126:	09 f4       	brne	.+2      	; 0x212a <follow_path+0x1ea>
    2128:	88 60       	ori	r24, 0x08	; 8
    212a:	d7 01       	movw	r26, r14
    212c:	1b 96       	adiw	r26, 0x0b	; 11
    212e:	8c 93       	st	X, r24
    2130:	8a c0       	rjmp	.+276    	; 0x2246 <follow_path+0x306>
    2132:	86 e0       	ldi	r24, 0x06	; 6
    2134:	ae c0       	rjmp	.+348    	; 0x2292 <follow_path+0x352>
    2136:	ee 80       	ldd	r14, Y+6	; 0x06
    2138:	ff 80       	ldd	r15, Y+7	; 0x07
    213a:	f7 01       	movw	r30, r14
    213c:	46 85       	ldd	r20, Z+14	; 0x0e
    213e:	57 85       	ldd	r21, Z+15	; 0x0f
    2140:	60 89       	ldd	r22, Z+16	; 0x10
    2142:	71 89       	ldd	r23, Z+17	; 0x11
    2144:	80 81       	ld	r24, Z
    2146:	91 81       	ldd	r25, Z+1	; 0x01
    2148:	0e 94 f6 05 	call	0xbec	; 0xbec <move_window>
    214c:	81 11       	cpse	r24, r1
    214e:	8b c0       	rjmp	.+278    	; 0x2266 <follow_path+0x326>
    2150:	d7 01       	movw	r26, r14
    2152:	52 96       	adiw	r26, 0x12	; 18
    2154:	4d 91       	ld	r20, X+
    2156:	5c 91       	ld	r21, X
    2158:	53 97       	sbiw	r26, 0x13	; 19
    215a:	fa 01       	movw	r30, r20
    215c:	90 81       	ld	r25, Z
    215e:	99 23       	and	r25, r25
    2160:	09 f4       	brne	.+2      	; 0x2164 <follow_path+0x224>
    2162:	8e c0       	rjmp	.+284    	; 0x2280 <follow_path+0x340>
    2164:	93 85       	ldd	r25, Z+11	; 0x0b
    2166:	93 fd       	sbrc	r25, 3
    2168:	13 c0       	rjmp	.+38     	; 0x2190 <follow_path+0x250>
    216a:	54 96       	adiw	r26, 0x14	; 20
    216c:	6d 91       	ld	r22, X+
    216e:	7c 91       	ld	r23, X
    2170:	55 97       	sbiw	r26, 0x15	; 21
    2172:	db 01       	movw	r26, r22
    2174:	9a 01       	movw	r18, r20
    2176:	25 5f       	subi	r18, 0xF5	; 245
    2178:	3f 4f       	sbci	r19, 0xFF	; 255
    217a:	27 01       	movw	r4, r14
    217c:	04 c0       	rjmp	.+8      	; 0x2186 <follow_path+0x246>
    217e:	e2 17       	cp	r30, r18
    2180:	f3 07       	cpc	r31, r19
    2182:	09 f4       	brne	.+2      	; 0x2186 <follow_path+0x246>
    2184:	69 c0       	rjmp	.+210    	; 0x2258 <follow_path+0x318>
    2186:	f1 90       	ld	r15, Z+
    2188:	9d 91       	ld	r25, X+
    218a:	f9 16       	cp	r15, r25
    218c:	c1 f3       	breq	.-16     	; 0x217e <follow_path+0x23e>
    218e:	72 01       	movw	r14, r4
    2190:	6b 2d       	mov	r22, r11
    2192:	7a 2d       	mov	r23, r10
    2194:	c7 01       	movw	r24, r14
    2196:	9b dd       	rcall	.-1226   	; 0x1cce <dir_next>
    2198:	88 23       	and	r24, r24
    219a:	79 f2       	breq	.-98     	; 0x213a <follow_path+0x1fa>
    219c:	ff 82       	std	Y+7, r15	; 0x07
    219e:	ee 82       	std	Y+6, r14	; 0x06
    21a0:	64 c0       	rjmp	.+200    	; 0x226a <follow_path+0x32a>
    21a2:	95 ff       	sbrs	r25, 5
    21a4:	10 c0       	rjmp	.+32     	; 0x21c6 <follow_path+0x286>
    21a6:	ae 81       	ldd	r26, Y+6	; 0x06
    21a8:	bf 81       	ldd	r27, Y+7	; 0x07
    21aa:	16 96       	adiw	r26, 0x06	; 6
    21ac:	1d 92       	st	X+, r1
    21ae:	1d 92       	st	X+, r1
    21b0:	1d 92       	st	X+, r1
    21b2:	1c 92       	st	X, r1
    21b4:	19 97       	sbiw	r26, 0x09	; 9
    21b6:	53 96       	adiw	r26, 0x13	; 19
    21b8:	1c 92       	st	X, r1
    21ba:	1e 92       	st	-X, r1
    21bc:	52 97       	sbiw	r26, 0x12	; 18
    21be:	92 ff       	sbrs	r25, 2
    21c0:	1b cf       	rjmp	.-458    	; 0x1ff8 <follow_path+0xb8>
    21c2:	80 e0       	ldi	r24, 0x00	; 0
    21c4:	66 c0       	rjmp	.+204    	; 0x2292 <follow_path+0x352>
    21c6:	92 fd       	sbrc	r25, 2
    21c8:	1c c0       	rjmp	.+56     	; 0x2202 <follow_path+0x2c2>
    21ca:	85 e0       	ldi	r24, 0x05	; 5
    21cc:	62 c0       	rjmp	.+196    	; 0x2292 <follow_path+0x352>
    21ce:	fa 01       	movw	r30, r20
    21d0:	83 85       	ldd	r24, Z+11	; 0x0b
    21d2:	84 ff       	sbrs	r24, 4
    21d4:	18 c0       	rjmp	.+48     	; 0x2206 <follow_path+0x2c6>
    21d6:	84 89       	ldd	r24, Z+20	; 0x14
    21d8:	95 89       	ldd	r25, Z+21	; 0x15
    21da:	a0 e0       	ldi	r26, 0x00	; 0
    21dc:	b0 e0       	ldi	r27, 0x00	; 0
    21de:	dc 01       	movw	r26, r24
    21e0:	99 27       	eor	r25, r25
    21e2:	88 27       	eor	r24, r24
    21e4:	42 8d       	ldd	r20, Z+26	; 0x1a
    21e6:	53 8d       	ldd	r21, Z+27	; 0x1b
    21e8:	60 e0       	ldi	r22, 0x00	; 0
    21ea:	70 e0       	ldi	r23, 0x00	; 0
    21ec:	84 2b       	or	r24, r20
    21ee:	95 2b       	or	r25, r21
    21f0:	a6 2b       	or	r26, r22
    21f2:	b7 2b       	or	r27, r23
    21f4:	ee 81       	ldd	r30, Y+6	; 0x06
    21f6:	ff 81       	ldd	r31, Y+7	; 0x07
    21f8:	86 83       	std	Z+6, r24	; 0x06
    21fa:	97 83       	std	Z+7, r25	; 0x07
    21fc:	a0 87       	std	Z+8, r26	; 0x08
    21fe:	b1 87       	std	Z+9, r27	; 0x09
    2200:	fb ce       	rjmp	.-522    	; 0x1ff8 <follow_path+0xb8>
    2202:	84 e0       	ldi	r24, 0x04	; 4
    2204:	46 c0       	rjmp	.+140    	; 0x2292 <follow_path+0x352>
    2206:	85 e0       	ldi	r24, 0x05	; 5
    2208:	44 c0       	rjmp	.+136    	; 0x2292 <follow_path+0x352>
    220a:	02 0f       	add	r16, r18
    220c:	13 1f       	adc	r17, r19
    220e:	80 e2       	ldi	r24, 0x20	; 32
    2210:	28 cf       	rjmp	.-432    	; 0x2062 <follow_path+0x122>
    2212:	02 0f       	add	r16, r18
    2214:	13 1f       	adc	r17, r19
    2216:	84 e2       	ldi	r24, 0x24	; 36
    2218:	24 cf       	rjmp	.-440    	; 0x2062 <follow_path+0x122>
    221a:	f8 e0       	ldi	r31, 0x08	; 8
    221c:	4f 16       	cp	r4, r31
    221e:	51 04       	cpc	r5, r1
    2220:	09 f4       	brne	.+2      	; 0x2224 <follow_path+0x2e4>
    2222:	39 cf       	rjmp	.-398    	; 0x2096 <follow_path+0x156>
    2224:	86 cf       	rjmp	.-244    	; 0x2132 <follow_path+0x1f2>
    2226:	8f eb       	ldi	r24, 0xBF	; 191
    2228:	86 0f       	add	r24, r22
    222a:	8a 31       	cpi	r24, 0x1A	; 26
    222c:	08 f4       	brcc	.+2      	; 0x2230 <follow_path+0x2f0>
    222e:	4e cf       	rjmp	.-356    	; 0x20cc <follow_path+0x18c>
    2230:	4f cf       	rjmp	.-354    	; 0x20d0 <follow_path+0x190>
    2232:	04 0f       	add	r16, r20
    2234:	15 1f       	adc	r17, r21
    2236:	82 2d       	mov	r24, r2
    2238:	5e cf       	rjmp	.-324    	; 0x20f6 <follow_path+0x1b6>
    223a:	04 0f       	add	r16, r20
    223c:	15 1f       	adc	r17, r21
    223e:	84 e0       	ldi	r24, 0x04	; 4
    2240:	5a cf       	rjmp	.-332    	; 0x20f6 <follow_path+0x1b6>
    2242:	86 e0       	ldi	r24, 0x06	; 6
    2244:	26 c0       	rjmp	.+76     	; 0x2292 <follow_path+0x352>
    2246:	6b 2d       	mov	r22, r11
    2248:	7a 2d       	mov	r23, r10
    224a:	8e 81       	ldd	r24, Y+6	; 0x06
    224c:	9f 81       	ldd	r25, Y+7	; 0x07
    224e:	88 dc       	rcall	.-1776   	; 0x1b60 <dir_sdi>
    2250:	88 23       	and	r24, r24
    2252:	09 f4       	brne	.+2      	; 0x2256 <follow_path+0x316>
    2254:	70 cf       	rjmp	.-288    	; 0x2136 <follow_path+0x1f6>
    2256:	09 c0       	rjmp	.+18     	; 0x226a <follow_path+0x32a>
    2258:	5f 82       	std	Y+7, r5	; 0x07
    225a:	4e 82       	std	Y+6, r4	; 0x06
    225c:	fb 01       	movw	r30, r22
    225e:	93 85       	ldd	r25, Z+11	; 0x0b
    2260:	92 ff       	sbrs	r25, 2
    2262:	b5 cf       	rjmp	.-150    	; 0x21ce <follow_path+0x28e>
    2264:	16 c0       	rjmp	.+44     	; 0x2292 <follow_path+0x352>
    2266:	ff 82       	std	Y+7, r15	; 0x07
    2268:	ee 82       	std	Y+6, r14	; 0x06
    226a:	ae 81       	ldd	r26, Y+6	; 0x06
    226c:	bf 81       	ldd	r27, Y+7	; 0x07
    226e:	54 96       	adiw	r26, 0x14	; 20
    2270:	ed 91       	ld	r30, X+
    2272:	fc 91       	ld	r31, X
    2274:	55 97       	sbiw	r26, 0x15	; 21
    2276:	93 85       	ldd	r25, Z+11	; 0x0b
    2278:	84 30       	cpi	r24, 0x04	; 4
    227a:	09 f4       	brne	.+2      	; 0x227e <follow_path+0x33e>
    227c:	92 cf       	rjmp	.-220    	; 0x21a2 <follow_path+0x262>
    227e:	09 c0       	rjmp	.+18     	; 0x2292 <follow_path+0x352>
    2280:	ff 82       	std	Y+7, r15	; 0x07
    2282:	ee 82       	std	Y+6, r14	; 0x06
    2284:	d7 01       	movw	r26, r14
    2286:	54 96       	adiw	r26, 0x14	; 20
    2288:	ed 91       	ld	r30, X+
    228a:	fc 91       	ld	r31, X
    228c:	55 97       	sbiw	r26, 0x15	; 21
    228e:	93 85       	ldd	r25, Z+11	; 0x0b
    2290:	88 cf       	rjmp	.-240    	; 0x21a2 <follow_path+0x262>
    2292:	27 96       	adiw	r28, 0x07	; 7
    2294:	0f b6       	in	r0, 0x3f	; 63
    2296:	f8 94       	cli
    2298:	de bf       	out	0x3e, r29	; 62
    229a:	0f be       	out	0x3f, r0	; 63
    229c:	cd bf       	out	0x3d, r28	; 61
    229e:	df 91       	pop	r29
    22a0:	cf 91       	pop	r28
    22a2:	1f 91       	pop	r17
    22a4:	0f 91       	pop	r16
    22a6:	ff 90       	pop	r15
    22a8:	ef 90       	pop	r14
    22aa:	df 90       	pop	r13
    22ac:	cf 90       	pop	r12
    22ae:	bf 90       	pop	r11
    22b0:	af 90       	pop	r10
    22b2:	9f 90       	pop	r9
    22b4:	8f 90       	pop	r8
    22b6:	7f 90       	pop	r7
    22b8:	6f 90       	pop	r6
    22ba:	5f 90       	pop	r5
    22bc:	4f 90       	pop	r4
    22be:	3f 90       	pop	r3
    22c0:	2f 90       	pop	r2
    22c2:	08 95       	ret

000022c4 <dir_register>:
    22c4:	ef 92       	push	r14
    22c6:	ff 92       	push	r15
    22c8:	0f 93       	push	r16
    22ca:	1f 93       	push	r17
    22cc:	cf 93       	push	r28
    22ce:	8c 01       	movw	r16, r24
    22d0:	60 e0       	ldi	r22, 0x00	; 0
    22d2:	70 e0       	ldi	r23, 0x00	; 0
    22d4:	45 dc       	rcall	.-1910   	; 0x1b60 <dir_sdi>
    22d6:	c8 2f       	mov	r28, r24
    22d8:	81 11       	cpse	r24, r1
    22da:	46 c0       	rjmp	.+140    	; 0x2368 <dir_register+0xa4>
    22dc:	d8 01       	movw	r26, r16
    22de:	1e 96       	adiw	r26, 0x0e	; 14
    22e0:	4d 91       	ld	r20, X+
    22e2:	5d 91       	ld	r21, X+
    22e4:	6d 91       	ld	r22, X+
    22e6:	7c 91       	ld	r23, X
    22e8:	51 97       	sbiw	r26, 0x11	; 17
    22ea:	8d 91       	ld	r24, X+
    22ec:	9c 91       	ld	r25, X
    22ee:	0e 94 f6 05 	call	0xbec	; 0xbec <move_window>
    22f2:	c8 2f       	mov	r28, r24
    22f4:	81 11       	cpse	r24, r1
    22f6:	38 c0       	rjmp	.+112    	; 0x2368 <dir_register+0xa4>
    22f8:	d8 01       	movw	r26, r16
    22fa:	52 96       	adiw	r26, 0x12	; 18
    22fc:	ed 91       	ld	r30, X+
    22fe:	fc 91       	ld	r31, X
    2300:	53 97       	sbiw	r26, 0x13	; 19
    2302:	80 81       	ld	r24, Z
    2304:	85 3e       	cpi	r24, 0xE5	; 229
    2306:	21 f1       	breq	.+72     	; 0x2350 <dir_register+0x8c>
    2308:	88 23       	and	r24, r24
    230a:	11 f1       	breq	.+68     	; 0x2350 <dir_register+0x8c>
    230c:	61 e0       	ldi	r22, 0x01	; 1
    230e:	70 e0       	ldi	r23, 0x00	; 0
    2310:	c8 01       	movw	r24, r16
    2312:	dd dc       	rcall	.-1606   	; 0x1cce <dir_next>
    2314:	c8 2f       	mov	r28, r24
    2316:	88 23       	and	r24, r24
    2318:	09 f3       	breq	.-62     	; 0x22dc <dir_register+0x18>
    231a:	26 c0       	rjmp	.+76     	; 0x2368 <dir_register+0xa4>
    231c:	f8 01       	movw	r30, r16
    231e:	e2 88       	ldd	r14, Z+18	; 0x12
    2320:	f3 88       	ldd	r15, Z+19	; 0x13
    2322:	40 e2       	ldi	r20, 0x20	; 32
    2324:	50 e0       	ldi	r21, 0x00	; 0
    2326:	60 e0       	ldi	r22, 0x00	; 0
    2328:	70 e0       	ldi	r23, 0x00	; 0
    232a:	c7 01       	movw	r24, r14
    232c:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <mem_set>
    2330:	d8 01       	movw	r26, r16
    2332:	54 96       	adiw	r26, 0x14	; 20
    2334:	6d 91       	ld	r22, X+
    2336:	7c 91       	ld	r23, X
    2338:	55 97       	sbiw	r26, 0x15	; 21
    233a:	4b e0       	ldi	r20, 0x0B	; 11
    233c:	50 e0       	ldi	r21, 0x00	; 0
    233e:	c7 01       	movw	r24, r14
    2340:	0e 94 b9 05 	call	0xb72	; 0xb72 <mem_cpy>
    2344:	d8 01       	movw	r26, r16
    2346:	ed 91       	ld	r30, X+
    2348:	fc 91       	ld	r31, X
    234a:	81 e0       	ldi	r24, 0x01	; 1
    234c:	84 83       	std	Z+4, r24	; 0x04
    234e:	0c c0       	rjmp	.+24     	; 0x2368 <dir_register+0xa4>
    2350:	f8 01       	movw	r30, r16
    2352:	46 85       	ldd	r20, Z+14	; 0x0e
    2354:	57 85       	ldd	r21, Z+15	; 0x0f
    2356:	60 89       	ldd	r22, Z+16	; 0x10
    2358:	71 89       	ldd	r23, Z+17	; 0x11
    235a:	80 81       	ld	r24, Z
    235c:	91 81       	ldd	r25, Z+1	; 0x01
    235e:	0e 94 f6 05 	call	0xbec	; 0xbec <move_window>
    2362:	c8 2f       	mov	r28, r24
    2364:	88 23       	and	r24, r24
    2366:	d1 f2       	breq	.-76     	; 0x231c <dir_register+0x58>
    2368:	8c 2f       	mov	r24, r28
    236a:	cf 91       	pop	r28
    236c:	1f 91       	pop	r17
    236e:	0f 91       	pop	r16
    2370:	ff 90       	pop	r15
    2372:	ef 90       	pop	r14
    2374:	08 95       	ret

00002376 <f_mount>:
    2376:	82 30       	cpi	r24, 0x02	; 2
    2378:	d0 f4       	brcc	.+52     	; 0x23ae <f_mount+0x38>
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	fc 01       	movw	r30, r24
    237e:	ee 0f       	add	r30, r30
    2380:	ff 1f       	adc	r31, r31
    2382:	e5 51       	subi	r30, 0x15	; 21
    2384:	fe 4f       	sbci	r31, 0xFE	; 254
    2386:	01 90       	ld	r0, Z+
    2388:	f0 81       	ld	r31, Z
    238a:	e0 2d       	mov	r30, r0
    238c:	30 97       	sbiw	r30, 0x00	; 0
    238e:	09 f0       	breq	.+2      	; 0x2392 <f_mount+0x1c>
    2390:	10 82       	st	Z, r1
    2392:	61 15       	cp	r22, r1
    2394:	71 05       	cpc	r23, r1
    2396:	11 f0       	breq	.+4      	; 0x239c <f_mount+0x26>
    2398:	fb 01       	movw	r30, r22
    239a:	10 82       	st	Z, r1
    239c:	88 0f       	add	r24, r24
    239e:	99 1f       	adc	r25, r25
    23a0:	fc 01       	movw	r30, r24
    23a2:	e5 51       	subi	r30, 0x15	; 21
    23a4:	fe 4f       	sbci	r31, 0xFE	; 254
    23a6:	71 83       	std	Z+1, r23	; 0x01
    23a8:	60 83       	st	Z, r22
    23aa:	80 e0       	ldi	r24, 0x00	; 0
    23ac:	08 95       	ret
    23ae:	8b e0       	ldi	r24, 0x0B	; 11
    23b0:	08 95       	ret

000023b2 <f_open>:
    23b2:	4f 92       	push	r4
    23b4:	5f 92       	push	r5
    23b6:	6f 92       	push	r6
    23b8:	7f 92       	push	r7
    23ba:	8f 92       	push	r8
    23bc:	9f 92       	push	r9
    23be:	af 92       	push	r10
    23c0:	bf 92       	push	r11
    23c2:	cf 92       	push	r12
    23c4:	df 92       	push	r13
    23c6:	ef 92       	push	r14
    23c8:	ff 92       	push	r15
    23ca:	0f 93       	push	r16
    23cc:	1f 93       	push	r17
    23ce:	cf 93       	push	r28
    23d0:	df 93       	push	r29
    23d2:	cd b7       	in	r28, 0x3d	; 61
    23d4:	de b7       	in	r29, 0x3e	; 62
    23d6:	a4 97       	sbiw	r28, 0x24	; 36
    23d8:	0f b6       	in	r0, 0x3f	; 63
    23da:	f8 94       	cli
    23dc:	de bf       	out	0x3e, r29	; 62
    23de:	0f be       	out	0x3f, r0	; 63
    23e0:	cd bf       	out	0x3d, r28	; 61
    23e2:	8c 01       	movw	r16, r24
    23e4:	7c a3       	std	Y+36, r23	; 0x24
    23e6:	6b a3       	std	Y+35, r22	; 0x23
    23e8:	f4 2e       	mov	r15, r20
    23ea:	dc 01       	movw	r26, r24
    23ec:	1d 92       	st	X+, r1
    23ee:	1c 92       	st	X, r1
    23f0:	b4 2f       	mov	r27, r20
    23f2:	bf 71       	andi	r27, 0x1F	; 31
    23f4:	eb 2e       	mov	r14, r27
    23f6:	4e 71       	andi	r20, 0x1E	; 30
    23f8:	be 01       	movw	r22, r28
    23fa:	6f 5f       	subi	r22, 0xFF	; 255
    23fc:	7f 4f       	sbci	r23, 0xFF	; 255
    23fe:	ce 01       	movw	r24, r28
    2400:	83 96       	adiw	r24, 0x23	; 35
    2402:	0e 94 c4 06 	call	0xd88	; 0xd88 <chk_mounted>
    2406:	9e 01       	movw	r18, r28
    2408:	29 5e       	subi	r18, 0xE9	; 233
    240a:	3f 4f       	sbci	r19, 0xFF	; 255
    240c:	3e 8b       	std	Y+22, r19	; 0x16
    240e:	2d 8b       	std	Y+21, r18	; 0x15
    2410:	81 11       	cpse	r24, r1
    2412:	bc c0       	rjmp	.+376    	; 0x258c <f_open+0x1da>
    2414:	6b a1       	ldd	r22, Y+35	; 0x23
    2416:	7c a1       	ldd	r23, Y+36	; 0x24
    2418:	ce 01       	movw	r24, r28
    241a:	01 96       	adiw	r24, 0x01	; 1
    241c:	91 dd       	rcall	.-1246   	; 0x1f40 <follow_path>
    241e:	cb 88       	ldd	r12, Y+19	; 0x13
    2420:	dc 88       	ldd	r13, Y+20	; 0x14
    2422:	81 11       	cpse	r24, r1
    2424:	ba c0       	rjmp	.+372    	; 0x259a <f_open+0x1e8>
    2426:	c1 14       	cp	r12, r1
    2428:	d1 04       	cpc	r13, r1
    242a:	09 f0       	breq	.+2      	; 0x242e <f_open+0x7c>
    242c:	c0 c0       	rjmp	.+384    	; 0x25ae <f_open+0x1fc>
    242e:	ba c0       	rjmp	.+372    	; 0x25a4 <f_open+0x1f2>
    2430:	84 30       	cpi	r24, 0x04	; 4
    2432:	19 f4       	brne	.+6      	; 0x243a <f_open+0x88>
    2434:	ce 01       	movw	r24, r28
    2436:	01 96       	adiw	r24, 0x01	; 1
    2438:	45 df       	rcall	.-374    	; 0x22c4 <dir_register>
    243a:	ee 2d       	mov	r30, r14
    243c:	e8 60       	ori	r30, 0x08	; 8
    243e:	ee 2e       	mov	r14, r30
    2440:	cb 88       	ldd	r12, Y+19	; 0x13
    2442:	dc 88       	ldd	r13, Y+20	; 0x14
    2444:	88 23       	and	r24, r24
    2446:	49 f0       	breq	.+18     	; 0x245a <f_open+0xa8>
    2448:	cc c0       	rjmp	.+408    	; 0x25e2 <f_open+0x230>
    244a:	f2 fc       	sbrc	r15, 2
    244c:	b5 c0       	rjmp	.+362    	; 0x25b8 <f_open+0x206>
    244e:	d6 01       	movw	r26, r12
    2450:	1b 96       	adiw	r26, 0x0b	; 11
    2452:	8c 91       	ld	r24, X
    2454:	81 71       	andi	r24, 0x11	; 17
    2456:	09 f0       	breq	.+2      	; 0x245a <f_open+0xa8>
    2458:	b1 c0       	rjmp	.+354    	; 0x25bc <f_open+0x20a>
    245a:	e3 fe       	sbrs	r14, 3
    245c:	4c c0       	rjmp	.+152    	; 0x24f6 <f_open+0x144>
    245e:	0e 94 b5 05 	call	0xb6a	; 0xb6a <get_fattime>
    2462:	f6 01       	movw	r30, r12
    2464:	66 87       	std	Z+14, r22	; 0x0e
    2466:	77 87       	std	Z+15, r23	; 0x0f
    2468:	80 8b       	std	Z+16, r24	; 0x10
    246a:	91 8b       	std	Z+17, r25	; 0x11
    246c:	13 86       	std	Z+11, r1	; 0x0b
    246e:	14 8e       	std	Z+28, r1	; 0x1c
    2470:	15 8e       	std	Z+29, r1	; 0x1d
    2472:	16 8e       	std	Z+30, r1	; 0x1e
    2474:	17 8e       	std	Z+31, r1	; 0x1f
    2476:	84 88       	ldd	r8, Z+20	; 0x14
    2478:	95 88       	ldd	r9, Z+21	; 0x15
    247a:	a1 2c       	mov	r10, r1
    247c:	b1 2c       	mov	r11, r1
    247e:	d4 01       	movw	r26, r8
    2480:	99 27       	eor	r25, r25
    2482:	88 27       	eor	r24, r24
    2484:	82 8c       	ldd	r8, Z+26	; 0x1a
    2486:	93 8c       	ldd	r9, Z+27	; 0x1b
    2488:	a1 2c       	mov	r10, r1
    248a:	b1 2c       	mov	r11, r1
    248c:	88 2a       	or	r8, r24
    248e:	99 2a       	or	r9, r25
    2490:	aa 2a       	or	r10, r26
    2492:	bb 2a       	or	r11, r27
    2494:	15 8a       	std	Z+21, r1	; 0x15
    2496:	14 8a       	std	Z+20, r1	; 0x14
    2498:	13 8e       	std	Z+27, r1	; 0x1b
    249a:	12 8e       	std	Z+26, r1	; 0x1a
    249c:	e9 81       	ldd	r30, Y+1	; 0x01
    249e:	fa 81       	ldd	r31, Y+2	; 0x02
    24a0:	81 e0       	ldi	r24, 0x01	; 1
    24a2:	84 83       	std	Z+4, r24	; 0x04
    24a4:	81 14       	cp	r8, r1
    24a6:	91 04       	cpc	r9, r1
    24a8:	a1 04       	cpc	r10, r1
    24aa:	b1 04       	cpc	r11, r1
    24ac:	21 f1       	breq	.+72     	; 0x24f6 <f_open+0x144>
    24ae:	46 a4       	ldd	r4, Z+46	; 0x2e
    24b0:	57 a4       	ldd	r5, Z+47	; 0x2f
    24b2:	60 a8       	ldd	r6, Z+48	; 0x30
    24b4:	71 a8       	ldd	r7, Z+49	; 0x31
    24b6:	b5 01       	movw	r22, r10
    24b8:	a4 01       	movw	r20, r8
    24ba:	cf 01       	movw	r24, r30
    24bc:	ab da       	rcall	.-2730   	; 0x1a14 <remove_chain>
    24be:	81 11       	cpse	r24, r1
    24c0:	90 c0       	rjmp	.+288    	; 0x25e2 <f_open+0x230>
    24c2:	89 81       	ldd	r24, Y+1	; 0x01
    24c4:	9a 81       	ldd	r25, Y+2	; 0x02
    24c6:	f1 e0       	ldi	r31, 0x01	; 1
    24c8:	8f 1a       	sub	r8, r31
    24ca:	91 08       	sbc	r9, r1
    24cc:	a1 08       	sbc	r10, r1
    24ce:	b1 08       	sbc	r11, r1
    24d0:	dc 01       	movw	r26, r24
    24d2:	1a 96       	adiw	r26, 0x0a	; 10
    24d4:	8d 92       	st	X+, r8
    24d6:	9d 92       	st	X+, r9
    24d8:	ad 92       	st	X+, r10
    24da:	bc 92       	st	X, r11
    24dc:	1d 97       	sbiw	r26, 0x0d	; 13
    24de:	b3 01       	movw	r22, r6
    24e0:	a2 01       	movw	r20, r4
    24e2:	0e 94 f6 05 	call	0xbec	; 0xbec <move_window>
    24e6:	05 c0       	rjmp	.+10     	; 0x24f2 <f_open+0x140>
    24e8:	f1 fe       	sbrs	r15, 1
    24ea:	05 c0       	rjmp	.+10     	; 0x24f6 <f_open+0x144>
    24ec:	80 fd       	sbrc	r24, 0
    24ee:	78 c0       	rjmp	.+240    	; 0x25e0 <f_open+0x22e>
    24f0:	02 c0       	rjmp	.+4      	; 0x24f6 <f_open+0x144>
    24f2:	81 11       	cpse	r24, r1
    24f4:	76 c0       	rjmp	.+236    	; 0x25e2 <f_open+0x230>
    24f6:	8e 2d       	mov	r24, r14
    24f8:	8e 71       	andi	r24, 0x1E	; 30
    24fa:	19 f0       	breq	.+6      	; 0x2502 <f_open+0x150>
    24fc:	be 2d       	mov	r27, r14
    24fe:	b0 62       	ori	r27, 0x20	; 32
    2500:	eb 2e       	mov	r14, r27
    2502:	e9 81       	ldd	r30, Y+1	; 0x01
    2504:	fa 81       	ldd	r31, Y+2	; 0x02
    2506:	86 a5       	ldd	r24, Z+46	; 0x2e
    2508:	97 a5       	ldd	r25, Z+47	; 0x2f
    250a:	a0 a9       	ldd	r26, Z+48	; 0x30
    250c:	b1 a9       	ldd	r27, Z+49	; 0x31
    250e:	f8 01       	movw	r30, r16
    2510:	82 8f       	std	Z+26, r24	; 0x1a
    2512:	93 8f       	std	Z+27, r25	; 0x1b
    2514:	a4 8f       	std	Z+28, r26	; 0x1c
    2516:	b5 8f       	std	Z+29, r27	; 0x1d
    2518:	d7 8e       	std	Z+31, r13	; 0x1f
    251a:	c6 8e       	std	Z+30, r12	; 0x1e
    251c:	d8 01       	movw	r26, r16
    251e:	14 96       	adiw	r26, 0x04	; 4
    2520:	ec 92       	st	X, r14
    2522:	f6 01       	movw	r30, r12
    2524:	84 89       	ldd	r24, Z+20	; 0x14
    2526:	95 89       	ldd	r25, Z+21	; 0x15
    2528:	a0 e0       	ldi	r26, 0x00	; 0
    252a:	b0 e0       	ldi	r27, 0x00	; 0
    252c:	dc 01       	movw	r26, r24
    252e:	99 27       	eor	r25, r25
    2530:	88 27       	eor	r24, r24
    2532:	42 8d       	ldd	r20, Z+26	; 0x1a
    2534:	53 8d       	ldd	r21, Z+27	; 0x1b
    2536:	60 e0       	ldi	r22, 0x00	; 0
    2538:	70 e0       	ldi	r23, 0x00	; 0
    253a:	84 2b       	or	r24, r20
    253c:	95 2b       	or	r25, r21
    253e:	a6 2b       	or	r26, r22
    2540:	b7 2b       	or	r27, r23
    2542:	f8 01       	movw	r30, r16
    2544:	86 87       	std	Z+14, r24	; 0x0e
    2546:	97 87       	std	Z+15, r25	; 0x0f
    2548:	a0 8b       	std	Z+16, r26	; 0x10
    254a:	b1 8b       	std	Z+17, r27	; 0x11
    254c:	f6 01       	movw	r30, r12
    254e:	84 8d       	ldd	r24, Z+28	; 0x1c
    2550:	95 8d       	ldd	r25, Z+29	; 0x1d
    2552:	a6 8d       	ldd	r26, Z+30	; 0x1e
    2554:	b7 8d       	ldd	r27, Z+31	; 0x1f
    2556:	f8 01       	movw	r30, r16
    2558:	82 87       	std	Z+10, r24	; 0x0a
    255a:	93 87       	std	Z+11, r25	; 0x0b
    255c:	a4 87       	std	Z+12, r26	; 0x0c
    255e:	b5 87       	std	Z+13, r27	; 0x0d
    2560:	d8 01       	movw	r26, r16
    2562:	16 82       	std	Z+6, r1	; 0x06
    2564:	17 82       	std	Z+7, r1	; 0x07
    2566:	10 86       	std	Z+8, r1	; 0x08
    2568:	11 86       	std	Z+9, r1	; 0x09
    256a:	16 8a       	std	Z+22, r1	; 0x16
    256c:	17 8a       	std	Z+23, r1	; 0x17
    256e:	10 8e       	std	Z+24, r1	; 0x18
    2570:	11 8e       	std	Z+25, r1	; 0x19
    2572:	e9 81       	ldd	r30, Y+1	; 0x01
    2574:	fa 81       	ldd	r31, Y+2	; 0x02
    2576:	11 96       	adiw	r26, 0x01	; 1
    2578:	fc 93       	st	X, r31
    257a:	ee 93       	st	-X, r30
    257c:	86 81       	ldd	r24, Z+6	; 0x06
    257e:	97 81       	ldd	r25, Z+7	; 0x07
    2580:	13 96       	adiw	r26, 0x03	; 3
    2582:	9c 93       	st	X, r25
    2584:	8e 93       	st	-X, r24
    2586:	12 97       	sbiw	r26, 0x02	; 2
    2588:	80 e0       	ldi	r24, 0x00	; 0
    258a:	2b c0       	rjmp	.+86     	; 0x25e2 <f_open+0x230>
    258c:	cb 88       	ldd	r12, Y+19	; 0x13
    258e:	dc 88       	ldd	r13, Y+20	; 0x14
    2590:	9f 2d       	mov	r25, r15
    2592:	9c 71       	andi	r25, 0x1C	; 28
    2594:	09 f0       	breq	.+2      	; 0x2598 <f_open+0x1e6>
    2596:	4c cf       	rjmp	.-360    	; 0x2430 <f_open+0x7e>
    2598:	13 c0       	rjmp	.+38     	; 0x25c0 <f_open+0x20e>
    259a:	9f 2d       	mov	r25, r15
    259c:	9c 71       	andi	r25, 0x1C	; 28
    259e:	09 f0       	breq	.+2      	; 0x25a2 <f_open+0x1f0>
    25a0:	47 cf       	rjmp	.-370    	; 0x2430 <f_open+0x7e>
    25a2:	0e c0       	rjmp	.+28     	; 0x25c0 <f_open+0x20e>
    25a4:	8f 2d       	mov	r24, r15
    25a6:	8c 71       	andi	r24, 0x1C	; 28
    25a8:	71 f4       	brne	.+28     	; 0x25c6 <f_open+0x214>
    25aa:	86 e0       	ldi	r24, 0x06	; 6
    25ac:	09 c0       	rjmp	.+18     	; 0x25c0 <f_open+0x20e>
    25ae:	8f 2d       	mov	r24, r15
    25b0:	8c 71       	andi	r24, 0x1C	; 28
    25b2:	09 f0       	breq	.+2      	; 0x25b6 <f_open+0x204>
    25b4:	4a cf       	rjmp	.-364    	; 0x244a <f_open+0x98>
    25b6:	0e c0       	rjmp	.+28     	; 0x25d4 <f_open+0x222>
    25b8:	88 e0       	ldi	r24, 0x08	; 8
    25ba:	9b cf       	rjmp	.-202    	; 0x24f2 <f_open+0x140>
    25bc:	87 e0       	ldi	r24, 0x07	; 7
    25be:	99 cf       	rjmp	.-206    	; 0x24f2 <f_open+0x140>
    25c0:	81 11       	cpse	r24, r1
    25c2:	0f c0       	rjmp	.+30     	; 0x25e2 <f_open+0x230>
    25c4:	ab cf       	rjmp	.-170    	; 0x251c <f_open+0x16a>
    25c6:	be 2d       	mov	r27, r14
    25c8:	b8 60       	ori	r27, 0x08	; 8
    25ca:	eb 2e       	mov	r14, r27
    25cc:	cb 88       	ldd	r12, Y+19	; 0x13
    25ce:	dc 88       	ldd	r13, Y+20	; 0x14
    25d0:	86 e0       	ldi	r24, 0x06	; 6
    25d2:	f6 cf       	rjmp	.-20     	; 0x25c0 <f_open+0x20e>
    25d4:	f6 01       	movw	r30, r12
    25d6:	83 85       	ldd	r24, Z+11	; 0x0b
    25d8:	84 ff       	sbrs	r24, 4
    25da:	86 cf       	rjmp	.-244    	; 0x24e8 <f_open+0x136>
    25dc:	84 e0       	ldi	r24, 0x04	; 4
    25de:	01 c0       	rjmp	.+2      	; 0x25e2 <f_open+0x230>
    25e0:	87 e0       	ldi	r24, 0x07	; 7
    25e2:	a4 96       	adiw	r28, 0x24	; 36
    25e4:	0f b6       	in	r0, 0x3f	; 63
    25e6:	f8 94       	cli
    25e8:	de bf       	out	0x3e, r29	; 62
    25ea:	0f be       	out	0x3f, r0	; 63
    25ec:	cd bf       	out	0x3d, r28	; 61
    25ee:	df 91       	pop	r29
    25f0:	cf 91       	pop	r28
    25f2:	1f 91       	pop	r17
    25f4:	0f 91       	pop	r16
    25f6:	ff 90       	pop	r15
    25f8:	ef 90       	pop	r14
    25fa:	df 90       	pop	r13
    25fc:	cf 90       	pop	r12
    25fe:	bf 90       	pop	r11
    2600:	af 90       	pop	r10
    2602:	9f 90       	pop	r9
    2604:	8f 90       	pop	r8
    2606:	7f 90       	pop	r7
    2608:	6f 90       	pop	r6
    260a:	5f 90       	pop	r5
    260c:	4f 90       	pop	r4
    260e:	08 95       	ret

00002610 <f_write>:
	FIL *fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT *bw			/* Pointer to number of bytes written */
)
{
    2610:	2f 92       	push	r2
    2612:	3f 92       	push	r3
    2614:	4f 92       	push	r4
    2616:	5f 92       	push	r5
    2618:	6f 92       	push	r6
    261a:	7f 92       	push	r7
    261c:	8f 92       	push	r8
    261e:	9f 92       	push	r9
    2620:	af 92       	push	r10
    2622:	bf 92       	push	r11
    2624:	cf 92       	push	r12
    2626:	df 92       	push	r13
    2628:	ef 92       	push	r14
    262a:	ff 92       	push	r15
    262c:	0f 93       	push	r16
    262e:	1f 93       	push	r17
    2630:	cf 93       	push	r28
    2632:	df 93       	push	r29
    2634:	ec 01       	movw	r28, r24
    2636:	4b 01       	movw	r8, r22
    2638:	6a 01       	movw	r12, r20
    263a:	59 01       	movw	r10, r18
	UINT wcnt, cc;
	const BYTE *wbuff = buff;
	BYTE csect;


	*bw = 0;	/* Initialize byte counter */
    263c:	f9 01       	movw	r30, r18
    263e:	11 82       	std	Z+1, r1	; 0x01
    2640:	10 82       	st	Z, r1

	res = validate(fp->fs, fp->id);					/* Check validity of the object */
    2642:	6a 81       	ldd	r22, Y+2	; 0x02
    2644:	7b 81       	ldd	r23, Y+3	; 0x03
    2646:	88 81       	ld	r24, Y
    2648:	99 81       	ldd	r25, Y+1	; 0x01
    264a:	0e 94 ab 06 	call	0xd56	; 0xd56 <validate>
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
    264e:	81 11       	cpse	r24, r1
    2650:	77 c1       	rjmp	.+750    	; 0x2940 <f_write+0x330>
	if (fp->flag & FA__ERROR)						/* Check abort flag */
    2652:	8c 81       	ldd	r24, Y+4	; 0x04
    2654:	88 23       	and	r24, r24
    2656:	0c f4       	brge	.+2      	; 0x265a <f_write+0x4a>
    2658:	70 c1       	rjmp	.+736    	; 0x293a <f_write+0x32a>
		LEAVE_FF(fp->fs, FR_INT_ERR);
	if (!(fp->flag & FA_WRITE))						/* Check access mode */
    265a:	81 ff       	sbrs	r24, 1
    265c:	70 c1       	rjmp	.+736    	; 0x293e <f_write+0x32e>
		LEAVE_FF(fp->fs, FR_DENIED);
	if (fp->fsize + btw < fp->fsize) btw = 0;		/* File size cannot reach 4GB */
    265e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2660:	9b 85       	ldd	r25, Y+11	; 0x0b
    2662:	ac 85       	ldd	r26, Y+12	; 0x0c
    2664:	bd 85       	ldd	r27, Y+13	; 0x0d
    2666:	ac 01       	movw	r20, r24
    2668:	bd 01       	movw	r22, r26
    266a:	4c 0d       	add	r20, r12
    266c:	5d 1d       	adc	r21, r13
    266e:	61 1d       	adc	r22, r1
    2670:	71 1d       	adc	r23, r1
    2672:	48 17       	cp	r20, r24
    2674:	59 07       	cpc	r21, r25
    2676:	6a 07       	cpc	r22, r26
    2678:	7b 07       	cpc	r23, r27
    267a:	08 f4       	brcc	.+2      	; 0x267e <f_write+0x6e>
    267c:	48 c1       	rjmp	.+656    	; 0x290e <f_write+0x2fe>

	for ( ;  btw;									/* Repeat until all data transferred */
    267e:	c1 14       	cp	r12, r1
    2680:	d1 04       	cpc	r13, r1
    2682:	09 f4       	brne	.+2      	; 0x2686 <f_write+0x76>
    2684:	44 c1       	rjmp	.+648    	; 0x290e <f_write+0x2fe>
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
		if ((fp->fptr % SS(fp->fs)) == 0) {			/* On the sector boundary? */
    2686:	4e 81       	ldd	r20, Y+6	; 0x06
    2688:	5f 81       	ldd	r21, Y+7	; 0x07
    268a:	68 85       	ldd	r22, Y+8	; 0x08
    268c:	79 85       	ldd	r23, Y+9	; 0x09
    268e:	db 01       	movw	r26, r22
    2690:	ca 01       	movw	r24, r20
    2692:	91 70       	andi	r25, 0x01	; 1
    2694:	aa 27       	eor	r26, r26
    2696:	bb 27       	eor	r27, r27
    2698:	89 2b       	or	r24, r25
    269a:	8a 2b       	or	r24, r26
    269c:	8b 2b       	or	r24, r27
    269e:	09 f0       	breq	.+2      	; 0x26a2 <f_write+0x92>
    26a0:	ee c0       	rjmp	.+476    	; 0x287e <f_write+0x26e>
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
    26a2:	e8 81       	ld	r30, Y
    26a4:	f9 81       	ldd	r31, Y+1	; 0x01
    26a6:	12 81       	ldd	r17, Z+2	; 0x02
    26a8:	11 50       	subi	r17, 0x01	; 1
    26aa:	db 01       	movw	r26, r22
    26ac:	ca 01       	movw	r24, r20
    26ae:	07 2e       	mov	r0, r23
    26b0:	79 e0       	ldi	r23, 0x09	; 9
    26b2:	b6 95       	lsr	r27
    26b4:	a7 95       	ror	r26
    26b6:	97 95       	ror	r25
    26b8:	87 95       	ror	r24
    26ba:	7a 95       	dec	r23
    26bc:	d1 f7       	brne	.-12     	; 0x26b2 <f_write+0xa2>
    26be:	70 2d       	mov	r23, r0
    26c0:	18 23       	and	r17, r24
			if (!csect) {							/* On the cluster boundary? */
    26c2:	e1 f5       	brne	.+120    	; 0x273c <f_write+0x12c>
				if (fp->fptr == 0) {				/* On the top of the file? */
    26c4:	45 2b       	or	r20, r21
    26c6:	46 2b       	or	r20, r22
    26c8:	47 2b       	or	r20, r23
    26ca:	99 f4       	brne	.+38     	; 0x26f2 <f_write+0xe2>
					clst = fp->org_clust;			/* Follow from the origin */
    26cc:	6e 85       	ldd	r22, Y+14	; 0x0e
    26ce:	7f 85       	ldd	r23, Y+15	; 0x0f
    26d0:	88 89       	ldd	r24, Y+16	; 0x10
    26d2:	99 89       	ldd	r25, Y+17	; 0x11
					if (clst == 0)					/* When there is no cluster chain, */
    26d4:	61 15       	cp	r22, r1
    26d6:	71 05       	cpc	r23, r1
    26d8:	81 05       	cpc	r24, r1
    26da:	91 05       	cpc	r25, r1
    26dc:	b1 f4       	brne	.+44     	; 0x270a <f_write+0xfa>
						fp->org_clust = clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
    26de:	40 e0       	ldi	r20, 0x00	; 0
    26e0:	50 e0       	ldi	r21, 0x00	; 0
    26e2:	ba 01       	movw	r22, r20
    26e4:	cf 01       	movw	r24, r30
    26e6:	9b d8       	rcall	.-3786   	; 0x181e <create_chain>
    26e8:	6e 87       	std	Y+14, r22	; 0x0e
    26ea:	7f 87       	std	Y+15, r23	; 0x0f
    26ec:	88 8b       	std	Y+16, r24	; 0x10
    26ee:	99 8b       	std	Y+17, r25	; 0x11
    26f0:	06 c0       	rjmp	.+12     	; 0x26fe <f_write+0xee>
				} else {							/* Middle or end of the file */
					clst = create_chain(fp->fs, fp->curr_clust);			/* Follow or stretch cluster chain */
    26f2:	4a 89       	ldd	r20, Y+18	; 0x12
    26f4:	5b 89       	ldd	r21, Y+19	; 0x13
    26f6:	6c 89       	ldd	r22, Y+20	; 0x14
    26f8:	7d 89       	ldd	r23, Y+21	; 0x15
    26fa:	cf 01       	movw	r24, r30
    26fc:	90 d8       	rcall	.-3808   	; 0x181e <create_chain>
				}
				if (clst == 0) break;				/* Could not allocate a new cluster (disk full) */
    26fe:	61 15       	cp	r22, r1
    2700:	71 05       	cpc	r23, r1
    2702:	81 05       	cpc	r24, r1
    2704:	91 05       	cpc	r25, r1
    2706:	09 f4       	brne	.+2      	; 0x270a <f_write+0xfa>
    2708:	02 c1       	rjmp	.+516    	; 0x290e <f_write+0x2fe>
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
    270a:	61 30       	cpi	r22, 0x01	; 1
    270c:	71 05       	cpc	r23, r1
    270e:	81 05       	cpc	r24, r1
    2710:	91 05       	cpc	r25, r1
    2712:	29 f4       	brne	.+10     	; 0x271e <f_write+0x10e>
    2714:	8c 81       	ldd	r24, Y+4	; 0x04
    2716:	80 68       	ori	r24, 0x80	; 128
    2718:	8c 83       	std	Y+4, r24	; 0x04
    271a:	82 e0       	ldi	r24, 0x02	; 2
    271c:	11 c1       	rjmp	.+546    	; 0x2940 <f_write+0x330>
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    271e:	6f 3f       	cpi	r22, 0xFF	; 255
    2720:	ff ef       	ldi	r31, 0xFF	; 255
    2722:	7f 07       	cpc	r23, r31
    2724:	8f 07       	cpc	r24, r31
    2726:	9f 07       	cpc	r25, r31
    2728:	29 f4       	brne	.+10     	; 0x2734 <f_write+0x124>
    272a:	8c 81       	ldd	r24, Y+4	; 0x04
    272c:	80 68       	ori	r24, 0x80	; 128
    272e:	8c 83       	std	Y+4, r24	; 0x04
    2730:	81 e0       	ldi	r24, 0x01	; 1
    2732:	06 c1       	rjmp	.+524    	; 0x2940 <f_write+0x330>
				fp->curr_clust = clst;				/* Update current cluster */
    2734:	6a 8b       	std	Y+18, r22	; 0x12
    2736:	7b 8b       	std	Y+19, r23	; 0x13
    2738:	8c 8b       	std	Y+20, r24	; 0x14
    273a:	9d 8b       	std	Y+21, r25	; 0x15
			}
#if _FS_TINY
			if (fp->fs->winsect == fp->dsect && move_window(fp->fs, 0))	/* Write back data buffer prior to following direct transfer */
    273c:	e8 81       	ld	r30, Y
    273e:	f9 81       	ldd	r31, Y+1	; 0x01
    2740:	46 a5       	ldd	r20, Z+46	; 0x2e
    2742:	57 a5       	ldd	r21, Z+47	; 0x2f
    2744:	60 a9       	ldd	r22, Z+48	; 0x30
    2746:	71 a9       	ldd	r23, Z+49	; 0x31
    2748:	8e 89       	ldd	r24, Y+22	; 0x16
    274a:	9f 89       	ldd	r25, Y+23	; 0x17
    274c:	a8 8d       	ldd	r26, Y+24	; 0x18
    274e:	b9 8d       	ldd	r27, Y+25	; 0x19
    2750:	48 17       	cp	r20, r24
    2752:	59 07       	cpc	r21, r25
    2754:	6a 07       	cpc	r22, r26
    2756:	7b 07       	cpc	r23, r27
    2758:	69 f4       	brne	.+26     	; 0x2774 <f_write+0x164>
    275a:	40 e0       	ldi	r20, 0x00	; 0
    275c:	50 e0       	ldi	r21, 0x00	; 0
    275e:	ba 01       	movw	r22, r20
    2760:	cf 01       	movw	r24, r30
    2762:	0e 94 f6 05 	call	0xbec	; 0xbec <move_window>
    2766:	88 23       	and	r24, r24
    2768:	29 f0       	breq	.+10     	; 0x2774 <f_write+0x164>
				ABORT(fp->fs, FR_DISK_ERR);
    276a:	8c 81       	ldd	r24, Y+4	; 0x04
    276c:	80 68       	ori	r24, 0x80	; 128
    276e:	8c 83       	std	Y+4, r24	; 0x04
    2770:	81 e0       	ldi	r24, 0x01	; 1
    2772:	e6 c0       	rjmp	.+460    	; 0x2940 <f_write+0x330>
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			sect = clust2sect(fp->fs, fp->curr_clust);	/* Get current sector */
    2774:	28 80       	ld	r2, Y
    2776:	39 80       	ldd	r3, Y+1	; 0x01
    2778:	4a 89       	ldd	r20, Y+18	; 0x12
    277a:	5b 89       	ldd	r21, Y+19	; 0x13
    277c:	6c 89       	ldd	r22, Y+20	; 0x14
    277e:	7d 89       	ldd	r23, Y+21	; 0x15
    2780:	c1 01       	movw	r24, r2
    2782:	c0 d9       	rcall	.-3200   	; 0x1b04 <clust2sect>
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
    2784:	61 15       	cp	r22, r1
    2786:	71 05       	cpc	r23, r1
    2788:	81 05       	cpc	r24, r1
    278a:	91 05       	cpc	r25, r1
    278c:	29 f4       	brne	.+10     	; 0x2798 <f_write+0x188>
    278e:	8c 81       	ldd	r24, Y+4	; 0x04
    2790:	80 68       	ori	r24, 0x80	; 128
    2792:	8c 83       	std	Y+4, r24	; 0x04
    2794:	82 e0       	ldi	r24, 0x02	; 2
    2796:	d4 c0       	rjmp	.+424    	; 0x2940 <f_write+0x330>
			sect += csect;
    2798:	2b 01       	movw	r4, r22
    279a:	3c 01       	movw	r6, r24
    279c:	41 0e       	add	r4, r17
    279e:	51 1c       	adc	r5, r1
    27a0:	61 1c       	adc	r6, r1
    27a2:	71 1c       	adc	r7, r1
			cc = btw / SS(fp->fs);					/* When remaining bytes >= sector size, */
    27a4:	76 01       	movw	r14, r12
    27a6:	ef 2c       	mov	r14, r15
    27a8:	ff 24       	eor	r15, r15
    27aa:	e6 94       	lsr	r14
			if (cc) {								/* Write maximum contiguous sectors directly */
    27ac:	e1 14       	cp	r14, r1
    27ae:	f1 04       	cpc	r15, r1
    27b0:	09 f4       	brne	.+2      	; 0x27b4 <f_write+0x1a4>
    27b2:	41 c0       	rjmp	.+130    	; 0x2836 <f_write+0x226>
				if (csect + cc > fp->fs->csize)		/* Clip at cluster boundary */
    27b4:	f1 01       	movw	r30, r2
    27b6:	42 81       	ldd	r20, Z+2	; 0x02
    27b8:	24 2f       	mov	r18, r20
    27ba:	30 e0       	ldi	r19, 0x00	; 0
    27bc:	c7 01       	movw	r24, r14
    27be:	81 0f       	add	r24, r17
    27c0:	91 1d       	adc	r25, r1
    27c2:	28 17       	cp	r18, r24
    27c4:	39 07       	cpc	r19, r25
    27c6:	18 f4       	brcc	.+6      	; 0x27ce <f_write+0x1be>
					cc = fp->fs->csize - csect;
    27c8:	79 01       	movw	r14, r18
    27ca:	e1 1a       	sub	r14, r17
    27cc:	f1 08       	sbc	r15, r1
				if (disk_write(fp->fs->drv, wbuff, sect, (BYTE)cc) != RES_OK)
    27ce:	0e 2d       	mov	r16, r14
    27d0:	a3 01       	movw	r20, r6
    27d2:	92 01       	movw	r18, r4
    27d4:	b4 01       	movw	r22, r8
    27d6:	f1 01       	movw	r30, r2
    27d8:	81 81       	ldd	r24, Z+1	; 0x01
    27da:	0e 94 ae 03 	call	0x75c	; 0x75c <disk_write>
    27de:	88 23       	and	r24, r24
    27e0:	29 f0       	breq	.+10     	; 0x27ec <f_write+0x1dc>
					ABORT(fp->fs, FR_DISK_ERR);
    27e2:	8c 81       	ldd	r24, Y+4	; 0x04
    27e4:	80 68       	ori	r24, 0x80	; 128
    27e6:	8c 83       	std	Y+4, r24	; 0x04
    27e8:	81 e0       	ldi	r24, 0x01	; 1
    27ea:	aa c0       	rjmp	.+340    	; 0x2940 <f_write+0x330>
#if _FS_TINY
				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets dirty by the direct write */
    27ec:	e8 81       	ld	r30, Y
    27ee:	f9 81       	ldd	r31, Y+1	; 0x01
    27f0:	86 a5       	ldd	r24, Z+46	; 0x2e
    27f2:	97 a5       	ldd	r25, Z+47	; 0x2f
    27f4:	a0 a9       	ldd	r26, Z+48	; 0x30
    27f6:	b1 a9       	ldd	r27, Z+49	; 0x31
    27f8:	84 19       	sub	r24, r4
    27fa:	95 09       	sbc	r25, r5
    27fc:	a6 09       	sbc	r26, r6
    27fe:	b7 09       	sbc	r27, r7
    2800:	a7 01       	movw	r20, r14
    2802:	60 e0       	ldi	r22, 0x00	; 0
    2804:	70 e0       	ldi	r23, 0x00	; 0
    2806:	84 17       	cp	r24, r20
    2808:	95 07       	cpc	r25, r21
    280a:	a6 07       	cpc	r26, r22
    280c:	b7 07       	cpc	r27, r23
    280e:	78 f4       	brcc	.+30     	; 0x282e <f_write+0x21e>
					mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
    2810:	98 2f       	mov	r25, r24
    2812:	88 27       	eor	r24, r24
    2814:	99 0f       	add	r25, r25
    2816:	b4 01       	movw	r22, r8
    2818:	68 0f       	add	r22, r24
    281a:	79 1f       	adc	r23, r25
    281c:	40 e0       	ldi	r20, 0x00	; 0
    281e:	52 e0       	ldi	r21, 0x02	; 2
    2820:	cf 01       	movw	r24, r30
    2822:	c2 96       	adiw	r24, 0x32	; 50
    2824:	0e 94 b9 05 	call	0xb72	; 0xb72 <mem_cpy>
					fp->fs->wflag = 0;
    2828:	e8 81       	ld	r30, Y
    282a:	f9 81       	ldd	r31, Y+1	; 0x01
    282c:	14 82       	std	Z+4, r1	; 0x04
				if (fp->dsect - sect < cc) {		/* Refill sector cache if it gets dirty by the direct write */
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
					fp->flag &= ~FA__DIRTY;
				}
#endif
				wcnt = SS(fp->fs) * cc;				/* Number of bytes transferred */
    282e:	fe 2c       	mov	r15, r14
    2830:	ee 24       	eor	r14, r14
    2832:	ff 0c       	add	r15, r15
				continue;
    2834:	53 c0       	rjmp	.+166    	; 0x28dc <f_write+0x2cc>
			}
#if _FS_TINY
			if (fp->fptr >= fp->fsize) {			/* Avoid silly buffer filling at growing edge */
    2836:	4e 81       	ldd	r20, Y+6	; 0x06
    2838:	5f 81       	ldd	r21, Y+7	; 0x07
    283a:	68 85       	ldd	r22, Y+8	; 0x08
    283c:	79 85       	ldd	r23, Y+9	; 0x09
    283e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2840:	9b 85       	ldd	r25, Y+11	; 0x0b
    2842:	ac 85       	ldd	r26, Y+12	; 0x0c
    2844:	bd 85       	ldd	r27, Y+13	; 0x0d
    2846:	48 17       	cp	r20, r24
    2848:	59 07       	cpc	r21, r25
    284a:	6a 07       	cpc	r22, r26
    284c:	7b 07       	cpc	r23, r27
    284e:	98 f0       	brcs	.+38     	; 0x2876 <f_write+0x266>
				if (move_window(fp->fs, 0)) ABORT(fp->fs, FR_DISK_ERR);
    2850:	40 e0       	ldi	r20, 0x00	; 0
    2852:	50 e0       	ldi	r21, 0x00	; 0
    2854:	ba 01       	movw	r22, r20
    2856:	c1 01       	movw	r24, r2
    2858:	0e 94 f6 05 	call	0xbec	; 0xbec <move_window>
    285c:	88 23       	and	r24, r24
    285e:	29 f0       	breq	.+10     	; 0x286a <f_write+0x25a>
    2860:	8c 81       	ldd	r24, Y+4	; 0x04
    2862:	80 68       	ori	r24, 0x80	; 128
    2864:	8c 83       	std	Y+4, r24	; 0x04
    2866:	81 e0       	ldi	r24, 0x01	; 1
    2868:	6b c0       	rjmp	.+214    	; 0x2940 <f_write+0x330>
				fp->fs->winsect = sect;
    286a:	e8 81       	ld	r30, Y
    286c:	f9 81       	ldd	r31, Y+1	; 0x01
    286e:	46 a6       	std	Z+46, r4	; 0x2e
    2870:	57 a6       	std	Z+47, r5	; 0x2f
    2872:	60 aa       	std	Z+48, r6	; 0x30
    2874:	71 aa       	std	Z+49, r7	; 0x31
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)
						ABORT(fp->fs, FR_DISK_ERR);
			}
#endif
			fp->dsect = sect;
    2876:	4e 8a       	std	Y+22, r4	; 0x16
    2878:	5f 8a       	std	Y+23, r5	; 0x17
    287a:	68 8e       	std	Y+24, r6	; 0x18
    287c:	79 8e       	std	Y+25, r7	; 0x19
		}
		wcnt = SS(fp->fs) - (fp->fptr % SS(fp->fs));	/* Put partial sector into file I/O buffer */
    287e:	2e 81       	ldd	r18, Y+6	; 0x06
    2880:	3f 81       	ldd	r19, Y+7	; 0x07
    2882:	31 70       	andi	r19, 0x01	; 1
    2884:	80 e0       	ldi	r24, 0x00	; 0
    2886:	92 e0       	ldi	r25, 0x02	; 2
    2888:	82 1b       	sub	r24, r18
    288a:	93 0b       	sbc	r25, r19
    288c:	76 01       	movw	r14, r12
    288e:	8c 15       	cp	r24, r12
    2890:	9d 05       	cpc	r25, r13
    2892:	08 f4       	brcc	.+2      	; 0x2896 <f_write+0x286>
    2894:	7c 01       	movw	r14, r24
		if (wcnt > btw) wcnt = btw;
#if _FS_TINY
		if (move_window(fp->fs, fp->dsect))			/* Move sector window */
    2896:	4e 89       	ldd	r20, Y+22	; 0x16
    2898:	5f 89       	ldd	r21, Y+23	; 0x17
    289a:	68 8d       	ldd	r22, Y+24	; 0x18
    289c:	79 8d       	ldd	r23, Y+25	; 0x19
    289e:	88 81       	ld	r24, Y
    28a0:	99 81       	ldd	r25, Y+1	; 0x01
    28a2:	0e 94 f6 05 	call	0xbec	; 0xbec <move_window>
    28a6:	88 23       	and	r24, r24
    28a8:	29 f0       	breq	.+10     	; 0x28b4 <f_write+0x2a4>
			ABORT(fp->fs, FR_DISK_ERR);
    28aa:	8c 81       	ldd	r24, Y+4	; 0x04
    28ac:	80 68       	ori	r24, 0x80	; 128
    28ae:	8c 83       	std	Y+4, r24	; 0x04
    28b0:	81 e0       	ldi	r24, 0x01	; 1
    28b2:	46 c0       	rjmp	.+140    	; 0x2940 <f_write+0x330>
		mem_cpy(&fp->fs->win[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
    28b4:	8e 81       	ldd	r24, Y+6	; 0x06
    28b6:	9f 81       	ldd	r25, Y+7	; 0x07
    28b8:	a8 85       	ldd	r26, Y+8	; 0x08
    28ba:	b9 85       	ldd	r27, Y+9	; 0x09
    28bc:	91 70       	andi	r25, 0x01	; 1
    28be:	aa 27       	eor	r26, r26
    28c0:	bb 27       	eor	r27, r27
    28c2:	c2 96       	adiw	r24, 0x32	; 50
    28c4:	28 81       	ld	r18, Y
    28c6:	39 81       	ldd	r19, Y+1	; 0x01
    28c8:	a7 01       	movw	r20, r14
    28ca:	b4 01       	movw	r22, r8
    28cc:	82 0f       	add	r24, r18
    28ce:	93 1f       	adc	r25, r19
    28d0:	0e 94 b9 05 	call	0xb72	; 0xb72 <mem_cpy>
		fp->fs->wflag = 1;
    28d4:	e8 81       	ld	r30, Y
    28d6:	f9 81       	ldd	r31, Y+1	; 0x01
    28d8:	21 e0       	ldi	r18, 0x01	; 1
    28da:	24 83       	std	Z+4, r18	; 0x04
	if (!(fp->flag & FA_WRITE))						/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
	if (fp->fsize + btw < fp->fsize) btw = 0;		/* File size cannot reach 4GB */

	for ( ;  btw;									/* Repeat until all data transferred */
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
    28dc:	8e 0c       	add	r8, r14
    28de:	9f 1c       	adc	r9, r15
    28e0:	8e 81       	ldd	r24, Y+6	; 0x06
    28e2:	9f 81       	ldd	r25, Y+7	; 0x07
    28e4:	a8 85       	ldd	r26, Y+8	; 0x08
    28e6:	b9 85       	ldd	r27, Y+9	; 0x09
    28e8:	8e 0d       	add	r24, r14
    28ea:	9f 1d       	adc	r25, r15
    28ec:	a1 1d       	adc	r26, r1
    28ee:	b1 1d       	adc	r27, r1
    28f0:	8e 83       	std	Y+6, r24	; 0x06
    28f2:	9f 83       	std	Y+7, r25	; 0x07
    28f4:	a8 87       	std	Y+8, r26	; 0x08
    28f6:	b9 87       	std	Y+9, r27	; 0x09
    28f8:	f5 01       	movw	r30, r10
    28fa:	80 81       	ld	r24, Z
    28fc:	91 81       	ldd	r25, Z+1	; 0x01
    28fe:	8e 0d       	add	r24, r14
    2900:	9f 1d       	adc	r25, r15
    2902:	91 83       	std	Z+1, r25	; 0x01
    2904:	80 83       	st	Z, r24
    2906:	ce 18       	sub	r12, r14
    2908:	df 08       	sbc	r13, r15
		LEAVE_FF(fp->fs, FR_INT_ERR);
	if (!(fp->flag & FA_WRITE))						/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
	if (fp->fsize + btw < fp->fsize) btw = 0;		/* File size cannot reach 4GB */

	for ( ;  btw;									/* Repeat until all data transferred */
    290a:	09 f0       	breq	.+2      	; 0x290e <f_write+0x2fe>
    290c:	bc ce       	rjmp	.-648    	; 0x2686 <f_write+0x76>
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
		fp->flag |= FA__DIRTY;
#endif
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
    290e:	8e 81       	ldd	r24, Y+6	; 0x06
    2910:	9f 81       	ldd	r25, Y+7	; 0x07
    2912:	a8 85       	ldd	r26, Y+8	; 0x08
    2914:	b9 85       	ldd	r27, Y+9	; 0x09
    2916:	4a 85       	ldd	r20, Y+10	; 0x0a
    2918:	5b 85       	ldd	r21, Y+11	; 0x0b
    291a:	6c 85       	ldd	r22, Y+12	; 0x0c
    291c:	7d 85       	ldd	r23, Y+13	; 0x0d
    291e:	48 17       	cp	r20, r24
    2920:	59 07       	cpc	r21, r25
    2922:	6a 07       	cpc	r22, r26
    2924:	7b 07       	cpc	r23, r27
    2926:	20 f4       	brcc	.+8      	; 0x2930 <f_write+0x320>
    2928:	8a 87       	std	Y+10, r24	; 0x0a
    292a:	9b 87       	std	Y+11, r25	; 0x0b
    292c:	ac 87       	std	Y+12, r26	; 0x0c
    292e:	bd 87       	std	Y+13, r27	; 0x0d
	fp->flag |= FA__WRITTEN;						/* Set file changed flag */
    2930:	8c 81       	ldd	r24, Y+4	; 0x04
    2932:	80 62       	ori	r24, 0x20	; 32
    2934:	8c 83       	std	Y+4, r24	; 0x04

	LEAVE_FF(fp->fs, FR_OK);
    2936:	80 e0       	ldi	r24, 0x00	; 0
    2938:	03 c0       	rjmp	.+6      	; 0x2940 <f_write+0x330>
	*bw = 0;	/* Initialize byte counter */

	res = validate(fp->fs, fp->id);					/* Check validity of the object */
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
	if (fp->flag & FA__ERROR)						/* Check abort flag */
		LEAVE_FF(fp->fs, FR_INT_ERR);
    293a:	82 e0       	ldi	r24, 0x02	; 2
    293c:	01 c0       	rjmp	.+2      	; 0x2940 <f_write+0x330>
	if (!(fp->flag & FA_WRITE))						/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
    293e:	87 e0       	ldi	r24, 0x07	; 7

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file changed flag */

	LEAVE_FF(fp->fs, FR_OK);
}
    2940:	df 91       	pop	r29
    2942:	cf 91       	pop	r28
    2944:	1f 91       	pop	r17
    2946:	0f 91       	pop	r16
    2948:	ff 90       	pop	r15
    294a:	ef 90       	pop	r14
    294c:	df 90       	pop	r13
    294e:	cf 90       	pop	r12
    2950:	bf 90       	pop	r11
    2952:	af 90       	pop	r10
    2954:	9f 90       	pop	r9
    2956:	8f 90       	pop	r8
    2958:	7f 90       	pop	r7
    295a:	6f 90       	pop	r6
    295c:	5f 90       	pop	r5
    295e:	4f 90       	pop	r4
    2960:	3f 90       	pop	r3
    2962:	2f 90       	pop	r2
    2964:	08 95       	ret

00002966 <f_sync>:
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL *fp		/* Pointer to the file object */
)
{
    2966:	0f 93       	push	r16
    2968:	1f 93       	push	r17
    296a:	cf 93       	push	r28
    296c:	df 93       	push	r29
    296e:	ec 01       	movw	r28, r24
	FRESULT res;
	DWORD tim;
	BYTE *dir;


	res = validate(fp->fs, fp->id);		/* Check validity of the object */
    2970:	6a 81       	ldd	r22, Y+2	; 0x02
    2972:	7b 81       	ldd	r23, Y+3	; 0x03
    2974:	88 81       	ld	r24, Y
    2976:	99 81       	ldd	r25, Y+1	; 0x01
    2978:	0e 94 ab 06 	call	0xd56	; 0xd56 <validate>
	if (res == FR_OK) {
    297c:	81 11       	cpse	r24, r1
    297e:	37 c0       	rjmp	.+110    	; 0x29ee <f_sync+0x88>
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
    2980:	9c 81       	ldd	r25, Y+4	; 0x04
    2982:	95 ff       	sbrs	r25, 5
    2984:	34 c0       	rjmp	.+104    	; 0x29ee <f_sync+0x88>
					LEAVE_FF(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			/* Update the directory entry */
			res = move_window(fp->fs, fp->dir_sect);
    2986:	4a 8d       	ldd	r20, Y+26	; 0x1a
    2988:	5b 8d       	ldd	r21, Y+27	; 0x1b
    298a:	6c 8d       	ldd	r22, Y+28	; 0x1c
    298c:	7d 8d       	ldd	r23, Y+29	; 0x1d
    298e:	88 81       	ld	r24, Y
    2990:	99 81       	ldd	r25, Y+1	; 0x01
    2992:	0e 94 f6 05 	call	0xbec	; 0xbec <move_window>
			if (res == FR_OK) {
    2996:	81 11       	cpse	r24, r1
    2998:	2a c0       	rjmp	.+84     	; 0x29ee <f_sync+0x88>
				dir = fp->dir_ptr;
    299a:	0e 8d       	ldd	r16, Y+30	; 0x1e
    299c:	1f 8d       	ldd	r17, Y+31	; 0x1f
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
    299e:	f8 01       	movw	r30, r16
    29a0:	83 85       	ldd	r24, Z+11	; 0x0b
    29a2:	80 62       	ori	r24, 0x20	; 32
    29a4:	83 87       	std	Z+11, r24	; 0x0b
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
    29a6:	8a 85       	ldd	r24, Y+10	; 0x0a
    29a8:	9b 85       	ldd	r25, Y+11	; 0x0b
    29aa:	ac 85       	ldd	r26, Y+12	; 0x0c
    29ac:	bd 85       	ldd	r27, Y+13	; 0x0d
    29ae:	84 8f       	std	Z+28, r24	; 0x1c
    29b0:	95 8f       	std	Z+29, r25	; 0x1d
    29b2:	a6 8f       	std	Z+30, r26	; 0x1e
    29b4:	b7 8f       	std	Z+31, r27	; 0x1f
				ST_WORD(dir+DIR_FstClusLO, fp->org_clust);	/* Update start cluster */
    29b6:	8e 85       	ldd	r24, Y+14	; 0x0e
    29b8:	9f 85       	ldd	r25, Y+15	; 0x0f
    29ba:	93 8f       	std	Z+27, r25	; 0x1b
    29bc:	82 8f       	std	Z+26, r24	; 0x1a
				ST_WORD(dir+DIR_FstClusHI, fp->org_clust >> 16);
    29be:	8e 85       	ldd	r24, Y+14	; 0x0e
    29c0:	9f 85       	ldd	r25, Y+15	; 0x0f
    29c2:	a8 89       	ldd	r26, Y+16	; 0x10
    29c4:	b9 89       	ldd	r27, Y+17	; 0x11
    29c6:	b5 8b       	std	Z+21, r27	; 0x15
    29c8:	a4 8b       	std	Z+20, r26	; 0x14
				tim = get_fattime();						/* Update updated time */
    29ca:	0e 94 b5 05 	call	0xb6a	; 0xb6a <get_fattime>
				ST_DWORD(dir+DIR_WrtTime, tim);
    29ce:	f8 01       	movw	r30, r16
    29d0:	66 8b       	std	Z+22, r22	; 0x16
    29d2:	77 8b       	std	Z+23, r23	; 0x17
    29d4:	80 8f       	std	Z+24, r24	; 0x18
    29d6:	91 8f       	std	Z+25, r25	; 0x19
				fp->flag &= ~FA__WRITTEN;
    29d8:	8c 81       	ldd	r24, Y+4	; 0x04
    29da:	8f 7d       	andi	r24, 0xDF	; 223
    29dc:	8c 83       	std	Y+4, r24	; 0x04
				fp->fs->wflag = 1;
    29de:	e8 81       	ld	r30, Y
    29e0:	f9 81       	ldd	r31, Y+1	; 0x01
    29e2:	81 e0       	ldi	r24, 0x01	; 1
    29e4:	84 83       	std	Z+4, r24	; 0x04
				res = sync(fp->fs);
    29e6:	88 81       	ld	r24, Y
    29e8:	99 81       	ldd	r25, Y+1	; 0x01
    29ea:	0e 94 b1 09 	call	0x1362	; 0x1362 <sync>
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
    29ee:	df 91       	pop	r29
    29f0:	cf 91       	pop	r28
    29f2:	1f 91       	pop	r17
    29f4:	0f 91       	pop	r16
    29f6:	08 95       	ret

000029f8 <f_close>:
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
    29f8:	cf 93       	push	r28
    29fa:	df 93       	push	r29
    29fc:	ec 01       	movw	r28, r24
	res = validate(fs, fp->id);
	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
	LEAVE_FF(fs, res);

#else
	res = f_sync(fp);		/* Flush cached data */
    29fe:	b3 df       	rcall	.-154    	; 0x2966 <f_sync>
#else
		res = dec_lock(fp->fs, fp->lockid);
#endif
	}
#endif
	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
    2a00:	81 11       	cpse	r24, r1
    2a02:	02 c0       	rjmp	.+4      	; 0x2a08 <f_close+0x10>
    2a04:	19 82       	std	Y+1, r1	; 0x01
    2a06:	18 82       	st	Y, r1
	return res;
#endif
}
    2a08:	df 91       	pop	r29
    2a0a:	cf 91       	pop	r28
    2a0c:	08 95       	ret

00002a0e <Initialize>:
}

void Initialize(){
	//0 --> Input
	//1 --> Output
	DDRB = 0b11100111;
    2a0e:	87 ee       	ldi	r24, 0xE7	; 231
    2a10:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1<<5)|(1<<6)|(1<<7);
    2a12:	85 b1       	in	r24, 0x05	; 5
    2a14:	80 6e       	ori	r24, 0xE0	; 224
    2a16:	85 b9       	out	0x05, r24	; 5
	DDRD = 0b00000000;
    2a18:	1a b8       	out	0x0a, r1	; 10
	DDRF = 0b00000000;
    2a1a:	10 ba       	out	0x10, r1	; 16
	DDRE = 0b00000000;
    2a1c:	1d b8       	out	0x0d, r1	; 13
	set_bit(PORTE, PE3);
    2a1e:	73 9a       	sbi	0x0e, 3	; 14
	
	//Set Up the SPI in Master Mode
	DDRB |= (1<<2)|(1<<1)|(1<<0);
    2a20:	84 b1       	in	r24, 0x04	; 4
    2a22:	87 60       	ori	r24, 0x07	; 7
    2a24:	84 b9       	out	0x04, r24	; 4
	SPCR |= (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    2a26:	8c b5       	in	r24, 0x2c	; 44
    2a28:	81 65       	ori	r24, 0x51	; 81
    2a2a:	8c bd       	out	0x2c, r24	; 44
	
	USART0_Init(MYUBRR0);
    2a2c:	8c e0       	ldi	r24, 0x0C	; 12
    2a2e:	90 e0       	ldi	r25, 0x00	; 0
    2a30:	49 d2       	rcall	.+1170   	; 0x2ec4 <USART0_Init>
	USART1_Init(MYUBRR1);
    2a32:	87 e6       	ldi	r24, 0x67	; 103
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	56 d2       	rcall	.+1196   	; 0x2ee4 <USART1_Init>
	can_init();
    2a38:	0e 94 60 01 	call	0x2c0	; 0x2c0 <can_init>
	sei();
    2a3c:	78 94       	sei
    2a3e:	08 95       	ret

00002a40 <initializeFAT>:

uint8_t initializeFAT(FATFS* fs){
	DSTATUS driveStatus;
	
	// Mount and verify disk type
	if (f_mount(0, fs) != FR_OK){
    2a40:	bc 01       	movw	r22, r24
    2a42:	80 e0       	ldi	r24, 0x00	; 0
    2a44:	98 dc       	rcall	.-1744   	; 0x2376 <f_mount>
    2a46:	81 11       	cpse	r24, r1
    2a48:	05 c0       	rjmp	.+10     	; 0x2a54 <initializeFAT+0x14>
		// Report error
		return 2;
	}
	
	driveStatus = disk_initialize(0);
    2a4a:	0e 94 a3 02 	call	0x546	; 0x546 <disk_initialize>
    2a4e:	87 70       	andi	r24, 0x07	; 7
		// Report error
		return 2;
	}
	
	// Verify that disk is not write protected
	if (driveStatus & STA_PROTECT){
    2a50:	19 f4       	brne	.+6      	; 0x2a58 <initializeFAT+0x18>
    2a52:	08 95       	ret
	DSTATUS driveStatus;
	
	// Mount and verify disk type
	if (f_mount(0, fs) != FR_OK){
		// Report error
		return 2;
    2a54:	82 e0       	ldi	r24, 0x02	; 2
    2a56:	08 95       	ret
	}
	
	// Verify that disk is not write protected
	if (driveStatus & STA_PROTECT){
		// Report error
		return 2;
    2a58:	82 e0       	ldi	r24, 0x02	; 2
	}
	
	return 0;
}
    2a5a:	08 95       	ret

00002a5c <errorLED>:
	
//Turns on the error signal
void errorLED( void){
	REDLEDON;
    2a5c:	2d 98       	cbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2a5e:	2f eb       	ldi	r18, 0xBF	; 191
    2a60:	84 ed       	ldi	r24, 0xD4	; 212
    2a62:	91 e0       	ldi	r25, 0x01	; 1
    2a64:	21 50       	subi	r18, 0x01	; 1
    2a66:	80 40       	sbci	r24, 0x00	; 0
    2a68:	90 40       	sbci	r25, 0x00	; 0
    2a6a:	e1 f7       	brne	.-8      	; 0x2a64 <errorLED+0x8>
    2a6c:	00 c0       	rjmp	.+0      	; 0x2a6e <errorLED+0x12>
    2a6e:	00 00       	nop
	_delay_ms(75);
	REDLEDOFF;
    2a70:	2d 9a       	sbi	0x05, 5	; 5
    2a72:	2f eb       	ldi	r18, 0xBF	; 191
    2a74:	84 ed       	ldi	r24, 0xD4	; 212
    2a76:	91 e0       	ldi	r25, 0x01	; 1
    2a78:	21 50       	subi	r18, 0x01	; 1
    2a7a:	80 40       	sbci	r24, 0x00	; 0
    2a7c:	90 40       	sbci	r25, 0x00	; 0
    2a7e:	e1 f7       	brne	.-8      	; 0x2a78 <errorLED+0x1c>
    2a80:	00 c0       	rjmp	.+0      	; 0x2a82 <errorLED+0x26>
    2a82:	00 00       	nop
    2a84:	08 95       	ret

00002a86 <SDCard_esc>:
		}
		asm("sleep");
	}
}

void SDCard_esc(CAN_packet *p) {
    2a86:	cf 93       	push	r28
    2a88:	df 93       	push	r29
	if (FINISHED_LISTENING) {
    2a8a:	20 91 f1 01 	lds	r18, 0x01F1
    2a8e:	21 11       	cpse	r18, r1
    2a90:	54 c0       	rjmp	.+168    	; 0x2b3a <SDCard_esc+0xb4>
		//do nothing
	} else if (FINISHED_WRITING_ESC && !FINISHED_LISTENING) {
    2a92:	20 91 07 01 	lds	r18, 0x0107
    2a96:	22 23       	and	r18, r18
    2a98:	09 f4       	brne	.+2      	; 0x2a9c <SDCard_esc+0x16>
    2a9a:	4f c0       	rjmp	.+158    	; 0x2b3a <SDCard_esc+0xb4>
    2a9c:	fc 01       	movw	r30, r24
		cli();
    2a9e:	f8 94       	cli
		FINISHED_WRITING_ESC = FALSE;
    2aa0:	10 92 07 01 	sts	0x0107, r1
		// write stuff
		BLUELEDON;
    2aa4:	2f 98       	cbi	0x05, 7	; 5
		GREENLEDOFF;
    2aa6:	2e 9a       	sbi	0x05, 6	; 5
		int numBytes = 21;
		
		sprintf(buf_esc,"%d %d %d %d %d\r\n", p->data[0], p->data[1], p->data[2], p->data[3], p->data[4]);
    2aa8:	87 81       	ldd	r24, Z+7	; 0x07
    2aaa:	1f 92       	push	r1
    2aac:	8f 93       	push	r24
    2aae:	86 81       	ldd	r24, Z+6	; 0x06
    2ab0:	1f 92       	push	r1
    2ab2:	8f 93       	push	r24
    2ab4:	85 81       	ldd	r24, Z+5	; 0x05
    2ab6:	1f 92       	push	r1
    2ab8:	8f 93       	push	r24
    2aba:	84 81       	ldd	r24, Z+4	; 0x04
    2abc:	1f 92       	push	r1
    2abe:	8f 93       	push	r24
    2ac0:	83 81       	ldd	r24, Z+3	; 0x03
    2ac2:	1f 92       	push	r1
    2ac4:	8f 93       	push	r24
    2ac6:	80 e4       	ldi	r24, 0x40	; 64
    2ac8:	91 e0       	ldi	r25, 0x01	; 1
    2aca:	9f 93       	push	r25
    2acc:	8f 93       	push	r24
    2ace:	c0 e1       	ldi	r28, 0x10	; 16
    2ad0:	d2 e0       	ldi	r29, 0x02	; 2
    2ad2:	df 93       	push	r29
    2ad4:	cf 93       	push	r28
    2ad6:	b7 d2       	rcall	.+1390   	; 0x3046 <sprintf>
		
		printf("\r\nWriting %s", buf_esc);
    2ad8:	df 93       	push	r29
    2ada:	cf 93       	push	r28
    2adc:	81 e5       	ldi	r24, 0x51	; 81
    2ade:	91 e0       	ldi	r25, 0x01	; 1
    2ae0:	9f 93       	push	r25
    2ae2:	8f 93       	push	r24
    2ae4:	9d d2       	rcall	.+1338   	; 0x3020 <printf>
		if (f_write(&file_esc, &buf_esc, numBytes, &bytesWritten_esc) != FR_OK) {
    2ae6:	20 ea       	ldi	r18, 0xA0	; 160
    2ae8:	32 e0       	ldi	r19, 0x02	; 2
    2aea:	45 e1       	ldi	r20, 0x15	; 21
    2aec:	50 e0       	ldi	r21, 0x00	; 0
    2aee:	be 01       	movw	r22, r28
    2af0:	87 e3       	ldi	r24, 0x37	; 55
    2af2:	92 e0       	ldi	r25, 0x02	; 2
    2af4:	8d dd       	rcall	.-1254   	; 0x2610 <f_write>
    2af6:	2d b7       	in	r18, 0x3d	; 61
    2af8:	3e b7       	in	r19, 0x3e	; 62
    2afa:	2e 5e       	subi	r18, 0xEE	; 238
    2afc:	3f 4f       	sbci	r19, 0xFF	; 255
    2afe:	0f b6       	in	r0, 0x3f	; 63
    2b00:	f8 94       	cli
    2b02:	3e bf       	out	0x3e, r19	; 62
    2b04:	0f be       	out	0x3f, r0	; 63
    2b06:	2d bf       	out	0x3d, r18	; 61
    2b08:	88 23       	and	r24, r24
    2b0a:	91 f0       	breq	.+36     	; 0x2b30 <SDCard_esc+0xaa>
			while(1) {
				printf("\r\nCouldnt write");
    2b0c:	ce e5       	ldi	r28, 0x5E	; 94
    2b0e:	d1 e0       	ldi	r29, 0x01	; 1
    2b10:	df 93       	push	r29
    2b12:	cf 93       	push	r28
    2b14:	85 d2       	rcall	.+1290   	; 0x3020 <printf>
    2b16:	9f e7       	ldi	r25, 0x7F	; 127
    2b18:	28 e3       	ldi	r18, 0x38	; 56
    2b1a:	31 e0       	ldi	r19, 0x01	; 1
    2b1c:	91 50       	subi	r25, 0x01	; 1
    2b1e:	20 40       	sbci	r18, 0x00	; 0
    2b20:	30 40       	sbci	r19, 0x00	; 0
    2b22:	e1 f7       	brne	.-8      	; 0x2b1c <SDCard_esc+0x96>
    2b24:	00 c0       	rjmp	.+0      	; 0x2b26 <SDCard_esc+0xa0>
    2b26:	00 00       	nop
    2b28:	0f 90       	pop	r0
    2b2a:	0f 90       	pop	r0
				_delay_ms(50);
				errorLED();
    2b2c:	97 df       	rcall	.-210    	; 0x2a5c <errorLED>
			}
    2b2e:	f0 cf       	rjmp	.-32     	; 0x2b10 <SDCard_esc+0x8a>
		}
		BLUELEDOFF;
    2b30:	2f 9a       	sbi	0x05, 7	; 5
		FINISHED_WRITING_ESC = TRUE;
    2b32:	81 e0       	ldi	r24, 0x01	; 1
    2b34:	80 93 07 01 	sts	0x0107, r24
		sei();
    2b38:	78 94       	sei
// 		else if(p->data[i] < 100)
// 			numBytes = numBytes + 2;
// 		else
// 			numBytes = numBytes + 3;
// 	}
}
    2b3a:	df 91       	pop	r29
    2b3c:	cf 91       	pop	r28
    2b3e:	08 95       	ret

00002b40 <SDCard_power>:

void SDCard_power(CAN_packet *p) {
    2b40:	cf 93       	push	r28
    2b42:	df 93       	push	r29
	if (FINISHED_LISTENING) {
    2b44:	20 91 f1 01 	lds	r18, 0x01F1
    2b48:	21 11       	cpse	r18, r1
    2b4a:	51 c0       	rjmp	.+162    	; 0x2bee <SDCard_power+0xae>
		//do nothing
	} else if (FINISHED_WRITING_POWER && !FINISHED_LISTENING) {
    2b4c:	20 91 08 01 	lds	r18, 0x0108
    2b50:	22 23       	and	r18, r18
    2b52:	09 f4       	brne	.+2      	; 0x2b56 <SDCard_power+0x16>
    2b54:	4c c0       	rjmp	.+152    	; 0x2bee <SDCard_power+0xae>
    2b56:	fc 01       	movw	r30, r24
		cli();
    2b58:	f8 94       	cli
		FINISHED_WRITING_POWER = FALSE;
    2b5a:	10 92 08 01 	sts	0x0108, r1
		// write stuff
		BLUELEDON;
    2b5e:	2f 98       	cbi	0x05, 7	; 5
		GREENLEDOFF;
    2b60:	2e 9a       	sbi	0x05, 6	; 5
		int numBytes = 17;
		
		sprintf(buf_power,"%d %d %d %d\r\n", p->data[0], p->data[1], p->data[2], p->data[3]);
    2b62:	86 81       	ldd	r24, Z+6	; 0x06
    2b64:	1f 92       	push	r1
    2b66:	8f 93       	push	r24
    2b68:	85 81       	ldd	r24, Z+5	; 0x05
    2b6a:	1f 92       	push	r1
    2b6c:	8f 93       	push	r24
    2b6e:	84 81       	ldd	r24, Z+4	; 0x04
    2b70:	1f 92       	push	r1
    2b72:	8f 93       	push	r24
    2b74:	83 81       	ldd	r24, Z+3	; 0x03
    2b76:	1f 92       	push	r1
    2b78:	8f 93       	push	r24
    2b7a:	83 e4       	ldi	r24, 0x43	; 67
    2b7c:	91 e0       	ldi	r25, 0x01	; 1
    2b7e:	9f 93       	push	r25
    2b80:	8f 93       	push	r24
    2b82:	c5 e2       	ldi	r28, 0x25	; 37
    2b84:	d2 e0       	ldi	r29, 0x02	; 2
    2b86:	df 93       	push	r29
    2b88:	cf 93       	push	r28
    2b8a:	5d d2       	rcall	.+1210   	; 0x3046 <sprintf>

		printf("\r\nWriting %s", buf_power);
    2b8c:	df 93       	push	r29
    2b8e:	cf 93       	push	r28
    2b90:	81 e5       	ldi	r24, 0x51	; 81
    2b92:	91 e0       	ldi	r25, 0x01	; 1
    2b94:	9f 93       	push	r25
    2b96:	8f 93       	push	r24
    2b98:	43 d2       	rcall	.+1158   	; 0x3020 <printf>
		if (f_write(&file_power, &buf_power, numBytes, &bytesWritten_power) != FR_OK) {
    2b9a:	29 e9       	ldi	r18, 0x99	; 153
    2b9c:	32 e0       	ldi	r19, 0x02	; 2
    2b9e:	41 e1       	ldi	r20, 0x11	; 17
    2ba0:	50 e0       	ldi	r21, 0x00	; 0
    2ba2:	be 01       	movw	r22, r28
    2ba4:	87 e7       	ldi	r24, 0x77	; 119
    2ba6:	92 e0       	ldi	r25, 0x02	; 2
    2ba8:	33 dd       	rcall	.-1434   	; 0x2610 <f_write>
    2baa:	2d b7       	in	r18, 0x3d	; 61
    2bac:	3e b7       	in	r19, 0x3e	; 62
    2bae:	20 5f       	subi	r18, 0xF0	; 240
    2bb0:	3f 4f       	sbci	r19, 0xFF	; 255
    2bb2:	0f b6       	in	r0, 0x3f	; 63
    2bb4:	f8 94       	cli
    2bb6:	3e bf       	out	0x3e, r19	; 62
    2bb8:	0f be       	out	0x3f, r0	; 63
    2bba:	2d bf       	out	0x3d, r18	; 61
    2bbc:	88 23       	and	r24, r24
    2bbe:	91 f0       	breq	.+36     	; 0x2be4 <SDCard_power+0xa4>
			while(1) {
				printf("\r\nCouldnt write");
    2bc0:	ce e5       	ldi	r28, 0x5E	; 94
    2bc2:	d1 e0       	ldi	r29, 0x01	; 1
    2bc4:	df 93       	push	r29
    2bc6:	cf 93       	push	r28
    2bc8:	2b d2       	rcall	.+1110   	; 0x3020 <printf>
    2bca:	9f e7       	ldi	r25, 0x7F	; 127
    2bcc:	28 e3       	ldi	r18, 0x38	; 56
    2bce:	31 e0       	ldi	r19, 0x01	; 1
    2bd0:	91 50       	subi	r25, 0x01	; 1
    2bd2:	20 40       	sbci	r18, 0x00	; 0
    2bd4:	30 40       	sbci	r19, 0x00	; 0
    2bd6:	e1 f7       	brne	.-8      	; 0x2bd0 <SDCard_power+0x90>
    2bd8:	00 c0       	rjmp	.+0      	; 0x2bda <SDCard_power+0x9a>
    2bda:	00 00       	nop
    2bdc:	0f 90       	pop	r0
    2bde:	0f 90       	pop	r0
				_delay_ms(50);
				errorLED();
    2be0:	3d df       	rcall	.-390    	; 0x2a5c <errorLED>
			}
    2be2:	f0 cf       	rjmp	.-32     	; 0x2bc4 <SDCard_power+0x84>
		}
		BLUELEDOFF;
    2be4:	2f 9a       	sbi	0x05, 7	; 5
		FINISHED_WRITING_POWER = TRUE;
    2be6:	81 e0       	ldi	r24, 0x01	; 1
    2be8:	80 93 08 01 	sts	0x0108, r24
		sei();
    2bec:	78 94       	sei
	}
}
    2bee:	df 91       	pop	r29
    2bf0:	cf 91       	pop	r28
    2bf2:	08 95       	ret

00002bf4 <SDCard_sw>:

void SDCard_sw(CAN_packet *p) {
    2bf4:	cf 93       	push	r28
    2bf6:	df 93       	push	r29
	if (FINISHED_LISTENING) {
    2bf8:	20 91 f1 01 	lds	r18, 0x01F1
    2bfc:	21 11       	cpse	r18, r1
    2bfe:	48 c0       	rjmp	.+144    	; 0x2c90 <SDCard_sw+0x9c>
		//do nothing
	} else if (FINISHED_WRITING_SW && !FINISHED_LISTENING) {
    2c00:	20 91 09 01 	lds	r18, 0x0109
    2c04:	22 23       	and	r18, r18
    2c06:	09 f4       	brne	.+2      	; 0x2c0a <SDCard_sw+0x16>
    2c08:	43 c0       	rjmp	.+134    	; 0x2c90 <SDCard_sw+0x9c>
    2c0a:	fc 01       	movw	r30, r24
		cli();
    2c0c:	f8 94       	cli
		FINISHED_WRITING_SW = FALSE;
    2c0e:	10 92 09 01 	sts	0x0109, r1
		// write stuff
		BLUELEDON;
    2c12:	2f 98       	cbi	0x05, 7	; 5
		GREENLEDOFF;
    2c14:	2e 9a       	sbi	0x05, 6	; 5
		int numBytes = 5;
		
		sprintf(buf_sw,"%d\r\n", p->data[1]);
    2c16:	84 81       	ldd	r24, Z+4	; 0x04
    2c18:	1f 92       	push	r1
    2c1a:	8f 93       	push	r24
    2c1c:	8c e4       	ldi	r24, 0x4C	; 76
    2c1e:	91 e0       	ldi	r25, 0x01	; 1
    2c20:	9f 93       	push	r25
    2c22:	8f 93       	push	r24
    2c24:	cb e9       	ldi	r28, 0x9B	; 155
    2c26:	d2 e0       	ldi	r29, 0x02	; 2
    2c28:	df 93       	push	r29
    2c2a:	cf 93       	push	r28
    2c2c:	0c d2       	rcall	.+1048   	; 0x3046 <sprintf>

		printf("\r\nWriting %s", buf_sw);
    2c2e:	df 93       	push	r29
    2c30:	cf 93       	push	r28
    2c32:	81 e5       	ldi	r24, 0x51	; 81
    2c34:	91 e0       	ldi	r25, 0x01	; 1
    2c36:	9f 93       	push	r25
    2c38:	8f 93       	push	r24
    2c3a:	f2 d1       	rcall	.+996    	; 0x3020 <printf>
		if (f_write(&file_sw, &buf_sw, numBytes, &bytesWritten_sw) != FR_OK) {
    2c3c:	27 e9       	ldi	r18, 0x97	; 151
    2c3e:	32 e0       	ldi	r19, 0x02	; 2
    2c40:	45 e0       	ldi	r20, 0x05	; 5
    2c42:	50 e0       	ldi	r21, 0x00	; 0
    2c44:	be 01       	movw	r22, r28
    2c46:	87 e5       	ldi	r24, 0x57	; 87
    2c48:	92 e0       	ldi	r25, 0x02	; 2
    2c4a:	e2 dc       	rcall	.-1596   	; 0x2610 <f_write>
    2c4c:	2d b7       	in	r18, 0x3d	; 61
    2c4e:	3e b7       	in	r19, 0x3e	; 62
    2c50:	26 5f       	subi	r18, 0xF6	; 246
    2c52:	3f 4f       	sbci	r19, 0xFF	; 255
    2c54:	0f b6       	in	r0, 0x3f	; 63
    2c56:	f8 94       	cli
    2c58:	3e bf       	out	0x3e, r19	; 62
    2c5a:	0f be       	out	0x3f, r0	; 63
    2c5c:	2d bf       	out	0x3d, r18	; 61
    2c5e:	88 23       	and	r24, r24
    2c60:	91 f0       	breq	.+36     	; 0x2c86 <SDCard_sw+0x92>
			while(1) {
				printf("\r\nCouldnt write");
    2c62:	ce e5       	ldi	r28, 0x5E	; 94
    2c64:	d1 e0       	ldi	r29, 0x01	; 1
    2c66:	df 93       	push	r29
    2c68:	cf 93       	push	r28
    2c6a:	da d1       	rcall	.+948    	; 0x3020 <printf>
    2c6c:	9f e7       	ldi	r25, 0x7F	; 127
    2c6e:	28 e3       	ldi	r18, 0x38	; 56
    2c70:	31 e0       	ldi	r19, 0x01	; 1
    2c72:	91 50       	subi	r25, 0x01	; 1
    2c74:	20 40       	sbci	r18, 0x00	; 0
    2c76:	30 40       	sbci	r19, 0x00	; 0
    2c78:	e1 f7       	brne	.-8      	; 0x2c72 <SDCard_sw+0x7e>
    2c7a:	00 c0       	rjmp	.+0      	; 0x2c7c <SDCard_sw+0x88>
    2c7c:	00 00       	nop
    2c7e:	0f 90       	pop	r0
    2c80:	0f 90       	pop	r0
				_delay_ms(50);
				errorLED();
    2c82:	ec de       	rcall	.-552    	; 0x2a5c <errorLED>
			}
    2c84:	f0 cf       	rjmp	.-32     	; 0x2c66 <SDCard_sw+0x72>
		}
		BLUELEDOFF;
    2c86:	2f 9a       	sbi	0x05, 7	; 5
		FINISHED_WRITING_SW = TRUE;
    2c88:	81 e0       	ldi	r24, 0x01	; 1
    2c8a:	80 93 09 01 	sts	0x0109, r24
		sei();
    2c8e:	78 94       	sei
	}
}
    2c90:	df 91       	pop	r29
    2c92:	cf 91       	pop	r28
    2c94:	08 95       	ret

00002c96 <GPS_callback>:

void GPS_callback(CAN_packet *p, unsigned char mob) {
	(void)mob;
	switch(p->id) {
    2c96:	fc 01       	movw	r30, r24
    2c98:	20 81       	ld	r18, Z
    2c9a:	31 81       	ldd	r19, Z+1	; 0x01
    2c9c:	2d 30       	cpi	r18, 0x0D	; 13
    2c9e:	31 05       	cpc	r19, r1
    2ca0:	39 f0       	breq	.+14     	; 0x2cb0 <GPS_callback+0x1a>
    2ca2:	2e 30       	cpi	r18, 0x0E	; 14
    2ca4:	31 05       	cpc	r19, r1
    2ca6:	81 f0       	breq	.+32     	; 0x2cc8 <GPS_callback+0x32>
    2ca8:	2c 30       	cpi	r18, 0x0C	; 12
    2caa:	31 05       	cpc	r19, r1
    2cac:	89 f4       	brne	.+34     	; 0x2cd0 <GPS_callback+0x3a>
    2cae:	06 c0       	rjmp	.+12     	; 0x2cbc <GPS_callback+0x26>
		case ID_steeringWheel:
			if(FINISHED_WRITING_SW)
    2cb0:	20 91 09 01 	lds	r18, 0x0109
    2cb4:	22 23       	and	r18, r18
    2cb6:	61 f0       	breq	.+24     	; 0x2cd0 <GPS_callback+0x3a>
				SDCard_sw(p);
    2cb8:	9d cf       	rjmp	.-198    	; 0x2bf4 <SDCard_sw>
    2cba:	08 95       	ret
			break;
		case ID_power:
			if(FINISHED_WRITING_POWER)
    2cbc:	20 91 08 01 	lds	r18, 0x0108
    2cc0:	22 23       	and	r18, r18
    2cc2:	31 f0       	breq	.+12     	; 0x2cd0 <GPS_callback+0x3a>
				SDCard_power(p);
    2cc4:	3d cf       	rjmp	.-390    	; 0x2b40 <SDCard_power>
    2cc6:	08 95       	ret
			break;
		case ID_esc_telemetry:
			if(FINISHED_WRITING_ESC)
    2cc8:	20 91 07 01 	lds	r18, 0x0107
    2ccc:	21 11       	cpse	r18, r1
				SDCard_esc(p);
    2cce:	db ce       	rjmp	.-586    	; 0x2a86 <SDCard_esc>
    2cd0:	08 95       	ret

00002cd2 <finishedLED>:
	REDLEDOFF;
	_delay_ms(75);
}

void finishedLED( void){
	GREENLEDON;
    2cd2:	2e 98       	cbi	0x05, 6	; 5
    2cd4:	2f ef       	ldi	r18, 0xFF	; 255
    2cd6:	83 ec       	ldi	r24, 0xC3	; 195
    2cd8:	99 e0       	ldi	r25, 0x09	; 9
    2cda:	21 50       	subi	r18, 0x01	; 1
    2cdc:	80 40       	sbci	r24, 0x00	; 0
    2cde:	90 40       	sbci	r25, 0x00	; 0
    2ce0:	e1 f7       	brne	.-8      	; 0x2cda <finishedLED+0x8>
    2ce2:	00 c0       	rjmp	.+0      	; 0x2ce4 <finishedLED+0x12>
    2ce4:	00 00       	nop
	_delay_ms(400);
	GREENLEDOFF;
    2ce6:	2e 9a       	sbi	0x05, 6	; 5
    2ce8:	2f ef       	ldi	r18, 0xFF	; 255
    2cea:	83 ec       	ldi	r24, 0xC3	; 195
    2cec:	99 e0       	ldi	r25, 0x09	; 9
    2cee:	21 50       	subi	r18, 0x01	; 1
    2cf0:	80 40       	sbci	r24, 0x00	; 0
    2cf2:	90 40       	sbci	r25, 0x00	; 0
    2cf4:	e1 f7       	brne	.-8      	; 0x2cee <finishedLED+0x1c>
    2cf6:	00 c0       	rjmp	.+0      	; 0x2cf8 <finishedLED+0x26>
    2cf8:	00 00       	nop
    2cfa:	08 95       	ret

00002cfc <main>:
char buf_esc[21];
UINT bytesWritten_sw;
UINT bytesWritten_power;
UINT bytesWritten_esc;

int main(void){
    2cfc:	cf 93       	push	r28
    2cfe:	df 93       	push	r29
    2d00:	cd b7       	in	r28, 0x3d	; 61
    2d02:	de b7       	in	r29, 0x3e	; 62
    2d04:	c2 53       	subi	r28, 0x32	; 50
    2d06:	d2 40       	sbci	r29, 0x02	; 2
    2d08:	0f b6       	in	r0, 0x3f	; 63
    2d0a:	f8 94       	cli
    2d0c:	de bf       	out	0x3e, r29	; 62
    2d0e:	0f be       	out	0x3f, r0	; 63
    2d10:	cd bf       	out	0x3d, r28	; 61
	uint8_t result;
	BOOL ret = FALSE;
	BOOL SDCard_closed = FALSE;
	
	//CPU_PRESCALE(CPU_8MHz);
	Initialize();
    2d12:	7d de       	rcall	.-774    	; 0x2a0e <Initialize>
	
	result = initializeFAT(&fs);
    2d14:	ce 01       	movw	r24, r28
    2d16:	01 96       	adiw	r24, 0x01	; 1
    2d18:	93 de       	rcall	.-730    	; 0x2a40 <initializeFAT>
	
	if (result != 0)
    2d1a:	88 23       	and	r24, r24
    2d1c:	11 f0       	breq	.+4      	; 0x2d22 <main+0x26>
		while(1)
			errorLED();
    2d1e:	9e de       	rcall	.-708    	; 0x2a5c <errorLED>
    2d20:	fe cf       	rjmp	.-4      	; 0x2d1e <main+0x22>
	GREENLEDON;
    2d22:	2e 98       	cbi	0x05, 6	; 5
	printf("\r\nGPS initialized");
    2d24:	8e e6       	ldi	r24, 0x6E	; 110
    2d26:	91 e0       	ldi	r25, 0x01	; 1
    2d28:	9f 93       	push	r25
    2d2a:	8f 93       	push	r24
    2d2c:	79 d1       	rcall	.+754    	; 0x3020 <printf>
	//Open a text file on the SD Card
	if(f_open(&file_sw, "/SW.txt", FA_WRITE | FA_CREATE_ALWAYS) != FR_OK){
    2d2e:	4a e0       	ldi	r20, 0x0A	; 10
    2d30:	60 e8       	ldi	r22, 0x80	; 128
    2d32:	71 e0       	ldi	r23, 0x01	; 1
    2d34:	87 e5       	ldi	r24, 0x57	; 87
    2d36:	92 e0       	ldi	r25, 0x02	; 2
    2d38:	3c db       	rcall	.-2440   	; 0x23b2 <f_open>
    2d3a:	0f 90       	pop	r0
    2d3c:	0f 90       	pop	r0
    2d3e:	88 23       	and	r24, r24
    2d40:	11 f0       	breq	.+4      	; 0x2d46 <main+0x4a>
		while (1)
			errorLED();
    2d42:	8c de       	rcall	.-744    	; 0x2a5c <errorLED>
    2d44:	fe cf       	rjmp	.-4      	; 0x2d42 <main+0x46>
	}
	if(f_open(&file_power, "/POWER.txt", FA_WRITE | FA_CREATE_ALWAYS) != FR_OK){
    2d46:	4a e0       	ldi	r20, 0x0A	; 10
    2d48:	68 e8       	ldi	r22, 0x88	; 136
    2d4a:	71 e0       	ldi	r23, 0x01	; 1
    2d4c:	87 e7       	ldi	r24, 0x77	; 119
    2d4e:	92 e0       	ldi	r25, 0x02	; 2
    2d50:	30 db       	rcall	.-2464   	; 0x23b2 <f_open>
    2d52:	88 23       	and	r24, r24
    2d54:	11 f0       	breq	.+4      	; 0x2d5a <main+0x5e>
		while (1)
			errorLED();
    2d56:	82 de       	rcall	.-764    	; 0x2a5c <errorLED>
    2d58:	fe cf       	rjmp	.-4      	; 0x2d56 <main+0x5a>
	}
	if(f_open(&file_esc, "/ESC.txt", FA_WRITE | FA_CREATE_ALWAYS) != FR_OK){
    2d5a:	4a e0       	ldi	r20, 0x0A	; 10
    2d5c:	63 e9       	ldi	r22, 0x93	; 147
    2d5e:	71 e0       	ldi	r23, 0x01	; 1
    2d60:	87 e3       	ldi	r24, 0x37	; 55
    2d62:	92 e0       	ldi	r25, 0x02	; 2
    2d64:	26 db       	rcall	.-2484   	; 0x23b2 <f_open>
    2d66:	88 23       	and	r24, r24
    2d68:	11 f0       	breq	.+4      	; 0x2d6e <main+0x72>
		while (1)
			errorLED();
    2d6a:	78 de       	rcall	.-784    	; 0x2a5c <errorLED>
    2d6c:	fe cf       	rjmp	.-4      	; 0x2d6a <main+0x6e>
    2d6e:	2f ef       	ldi	r18, 0xFF	; 255
    2d70:	84 e3       	ldi	r24, 0x34	; 52
    2d72:	9c e0       	ldi	r25, 0x0C	; 12
    2d74:	21 50       	subi	r18, 0x01	; 1
    2d76:	80 40       	sbci	r24, 0x00	; 0
    2d78:	90 40       	sbci	r25, 0x00	; 0
    2d7a:	e1 f7       	brne	.-8      	; 0x2d74 <main+0x78>
    2d7c:	00 c0       	rjmp	.+0      	; 0x2d7e <main+0x82>
    2d7e:	00 00       	nop
	}
	//Delay to ensure things are all set up and SD card is ready to receive more commands
	_delay_ms(500);
	GREENLEDON;
    2d80:	2e 98       	cbi	0x05, 6	; 5
	
	ret = prepare_rx(0, ID_steeringWheel, MASK_GPS, GPS_callback);
    2d82:	2b e4       	ldi	r18, 0x4B	; 75
    2d84:	36 e1       	ldi	r19, 0x16	; 22
    2d86:	4c e0       	ldi	r20, 0x0C	; 12
    2d88:	50 e0       	ldi	r21, 0x00	; 0
    2d8a:	6d e0       	ldi	r22, 0x0D	; 13
    2d8c:	70 e0       	ldi	r23, 0x00	; 0
    2d8e:	80 e0       	ldi	r24, 0x00	; 0
    2d90:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <prepare_rx>
int main(void){
	FATFS fs;
	
	uint8_t result;
	BOOL ret = FALSE;
	BOOL SDCard_closed = FALSE;
    2d94:	e1 2c       	mov	r14, r1
	ret = prepare_rx(0, ID_steeringWheel, MASK_GPS, GPS_callback);
	for(;;) {
		if(SDCard_closed){
				finishedLED();
		} else if (!test_bit(PINE, PE3)) {
			FINISHED_LISTENING = TRUE;
    2d96:	ff 24       	eor	r15, r15
    2d98:	f3 94       	inc	r15
			if (FINISHED_WRITING_SW && FINISHED_WRITING_POWER && FINISHED_WRITING_ESC && !SDCard_closed) {
				printf("\r\nClosing SD Card.");
    2d9a:	0f 2e       	mov	r0, r31
    2d9c:	fc e9       	ldi	r31, 0x9C	; 156
    2d9e:	cf 2e       	mov	r12, r31
    2da0:	f1 e0       	ldi	r31, 0x01	; 1
    2da2:	df 2e       	mov	r13, r31
    2da4:	f0 2d       	mov	r31, r0
						_delay_ms(100);
						errorLED();
					}
				}
				f_mount(0,0);
				printf("\r\nSD Card closed.");
    2da6:	09 ec       	ldi	r16, 0xC9	; 201
    2da8:	11 e0       	ldi	r17, 0x01	; 1
	_delay_ms(500);
	GREENLEDON;
	
	ret = prepare_rx(0, ID_steeringWheel, MASK_GPS, GPS_callback);
	for(;;) {
		if(SDCard_closed){
    2daa:	ee 20       	and	r14, r14
    2dac:	11 f0       	breq	.+4      	; 0x2db2 <main+0xb6>
				finishedLED();
    2dae:	91 df       	rcall	.-222    	; 0x2cd2 <finishedLED>
    2db0:	67 c0       	rjmp	.+206    	; 0x2e80 <main+0x184>
		} else if (!test_bit(PINE, PE3)) {
    2db2:	63 99       	sbic	0x0c, 3	; 12
    2db4:	65 c0       	rjmp	.+202    	; 0x2e80 <main+0x184>
			FINISHED_LISTENING = TRUE;
    2db6:	f0 92 f1 01 	sts	0x01F1, r15
			if (FINISHED_WRITING_SW && FINISHED_WRITING_POWER && FINISHED_WRITING_ESC && !SDCard_closed) {
    2dba:	80 91 09 01 	lds	r24, 0x0109
    2dbe:	88 23       	and	r24, r24
    2dc0:	09 f4       	brne	.+2      	; 0x2dc4 <main+0xc8>
    2dc2:	5e c0       	rjmp	.+188    	; 0x2e80 <main+0x184>
    2dc4:	80 91 08 01 	lds	r24, 0x0108
    2dc8:	88 23       	and	r24, r24
    2dca:	09 f4       	brne	.+2      	; 0x2dce <main+0xd2>
    2dcc:	59 c0       	rjmp	.+178    	; 0x2e80 <main+0x184>
    2dce:	80 91 07 01 	lds	r24, 0x0107
    2dd2:	88 23       	and	r24, r24
    2dd4:	09 f4       	brne	.+2      	; 0x2dd8 <main+0xdc>
    2dd6:	54 c0       	rjmp	.+168    	; 0x2e80 <main+0x184>
				printf("\r\nClosing SD Card.");
    2dd8:	df 92       	push	r13
    2dda:	cf 92       	push	r12
    2ddc:	21 d1       	rcall	.+578    	; 0x3020 <printf>
				if (f_close(&file_sw) != FR_OK){
    2dde:	87 e5       	ldi	r24, 0x57	; 87
    2de0:	92 e0       	ldi	r25, 0x02	; 2
    2de2:	0a de       	rcall	.-1004   	; 0x29f8 <f_close>
    2de4:	0f 90       	pop	r0
    2de6:	0f 90       	pop	r0
    2de8:	88 23       	and	r24, r24
    2dea:	91 f0       	breq	.+36     	; 0x2e10 <main+0x114>
					while (1) {
						printf("\r\nCouldn't close SD Card.");
    2dec:	0f ea       	ldi	r16, 0xAF	; 175
    2dee:	11 e0       	ldi	r17, 0x01	; 1
    2df0:	1f 93       	push	r17
    2df2:	0f 93       	push	r16
    2df4:	15 d1       	rcall	.+554    	; 0x3020 <printf>
    2df6:	2f ef       	ldi	r18, 0xFF	; 255
    2df8:	80 e7       	ldi	r24, 0x70	; 112
    2dfa:	92 e0       	ldi	r25, 0x02	; 2
    2dfc:	21 50       	subi	r18, 0x01	; 1
    2dfe:	80 40       	sbci	r24, 0x00	; 0
    2e00:	90 40       	sbci	r25, 0x00	; 0
    2e02:	e1 f7       	brne	.-8      	; 0x2dfc <main+0x100>
    2e04:	00 c0       	rjmp	.+0      	; 0x2e06 <main+0x10a>
    2e06:	00 00       	nop
    2e08:	0f 90       	pop	r0
    2e0a:	0f 90       	pop	r0
						_delay_ms(100);
						errorLED();
    2e0c:	27 de       	rcall	.-946    	; 0x2a5c <errorLED>
					}
    2e0e:	f0 cf       	rjmp	.-32     	; 0x2df0 <main+0xf4>
				}
				if (f_close(&file_power) != FR_OK){
    2e10:	87 e7       	ldi	r24, 0x77	; 119
    2e12:	92 e0       	ldi	r25, 0x02	; 2
    2e14:	f1 dd       	rcall	.-1054   	; 0x29f8 <f_close>
    2e16:	88 23       	and	r24, r24
    2e18:	91 f0       	breq	.+36     	; 0x2e3e <main+0x142>
					while (1) {
						printf("\r\nCouldn't close SD Card.");
    2e1a:	0f ea       	ldi	r16, 0xAF	; 175
    2e1c:	11 e0       	ldi	r17, 0x01	; 1
    2e1e:	1f 93       	push	r17
    2e20:	0f 93       	push	r16
    2e22:	fe d0       	rcall	.+508    	; 0x3020 <printf>
    2e24:	2f ef       	ldi	r18, 0xFF	; 255
    2e26:	80 e7       	ldi	r24, 0x70	; 112
    2e28:	92 e0       	ldi	r25, 0x02	; 2
    2e2a:	21 50       	subi	r18, 0x01	; 1
    2e2c:	80 40       	sbci	r24, 0x00	; 0
    2e2e:	90 40       	sbci	r25, 0x00	; 0
    2e30:	e1 f7       	brne	.-8      	; 0x2e2a <main+0x12e>
    2e32:	00 c0       	rjmp	.+0      	; 0x2e34 <main+0x138>
    2e34:	00 00       	nop
    2e36:	0f 90       	pop	r0
    2e38:	0f 90       	pop	r0
						_delay_ms(100);
						errorLED();
    2e3a:	10 de       	rcall	.-992    	; 0x2a5c <errorLED>
					}
    2e3c:	f0 cf       	rjmp	.-32     	; 0x2e1e <main+0x122>
				}
				if (f_close(&file_esc) != FR_OK){
    2e3e:	87 e3       	ldi	r24, 0x37	; 55
    2e40:	92 e0       	ldi	r25, 0x02	; 2
    2e42:	da dd       	rcall	.-1100   	; 0x29f8 <f_close>
    2e44:	88 23       	and	r24, r24
    2e46:	91 f0       	breq	.+36     	; 0x2e6c <main+0x170>
					while (1) {
						printf("\r\nCouldn't close SD Card.");
    2e48:	0f ea       	ldi	r16, 0xAF	; 175
    2e4a:	11 e0       	ldi	r17, 0x01	; 1
    2e4c:	1f 93       	push	r17
    2e4e:	0f 93       	push	r16
    2e50:	e7 d0       	rcall	.+462    	; 0x3020 <printf>
    2e52:	2f ef       	ldi	r18, 0xFF	; 255
    2e54:	80 e7       	ldi	r24, 0x70	; 112
    2e56:	92 e0       	ldi	r25, 0x02	; 2
    2e58:	21 50       	subi	r18, 0x01	; 1
    2e5a:	80 40       	sbci	r24, 0x00	; 0
    2e5c:	90 40       	sbci	r25, 0x00	; 0
    2e5e:	e1 f7       	brne	.-8      	; 0x2e58 <main+0x15c>
    2e60:	00 c0       	rjmp	.+0      	; 0x2e62 <main+0x166>
    2e62:	00 00       	nop
    2e64:	0f 90       	pop	r0
    2e66:	0f 90       	pop	r0
						_delay_ms(100);
						errorLED();
    2e68:	f9 dd       	rcall	.-1038   	; 0x2a5c <errorLED>
					}
    2e6a:	f0 cf       	rjmp	.-32     	; 0x2e4c <main+0x150>
				}
				f_mount(0,0);
    2e6c:	60 e0       	ldi	r22, 0x00	; 0
    2e6e:	70 e0       	ldi	r23, 0x00	; 0
    2e70:	80 e0       	ldi	r24, 0x00	; 0
    2e72:	81 da       	rcall	.-2814   	; 0x2376 <f_mount>
				printf("\r\nSD Card closed.");
    2e74:	1f 93       	push	r17
    2e76:	0f 93       	push	r16
    2e78:	d3 d0       	rcall	.+422    	; 0x3020 <printf>
    2e7a:	0f 90       	pop	r0
    2e7c:	0f 90       	pop	r0
				SDCard_closed = TRUE;
    2e7e:	ef 2c       	mov	r14, r15
			}	
		}
		asm("sleep");
    2e80:	88 95       	sleep
	}
    2e82:	93 cf       	rjmp	.-218    	; 0x2daa <main+0xae>

00002e84 <uart_putc0>:

void uart_putc0 (unsigned char data){
	/*
	Wait for empty transmit buffer
	*/
	while( !( UCSR0A & (1<<UDRE0)));
    2e84:	e0 ec       	ldi	r30, 0xC0	; 192
    2e86:	f0 e0       	ldi	r31, 0x00	; 0
    2e88:	90 81       	ld	r25, Z
    2e8a:	95 ff       	sbrs	r25, 5
    2e8c:	fd cf       	rjmp	.-6      	; 0x2e88 <uart_putc0+0x4>
	/*
	Put data into buffer, sends the data
	*/
	UDR0 = data;
    2e8e:	80 93 c6 00 	sts	0x00C6, r24
    2e92:	08 95       	ret

00002e94 <uart_putc1>:

void uart_putc1 (unsigned char data){
	/*
	Wait for empty transmit buffer
	*/
	while( !( UCSR1A & (1<<UDRE1)));
    2e94:	e8 ec       	ldi	r30, 0xC8	; 200
    2e96:	f0 e0       	ldi	r31, 0x00	; 0
    2e98:	90 81       	ld	r25, Z
    2e9a:	95 ff       	sbrs	r25, 5
    2e9c:	fd cf       	rjmp	.-6      	; 0x2e98 <uart_putc1+0x4>
	/*
	Put data into buffer, sends the data
	*/
	UDR1 = data;
    2e9e:	80 93 ce 00 	sts	0x00CE, r24
    2ea2:	08 95       	ret

00002ea4 <USART0_Receive>:
unsigned char USART0_Receive (void)
{
	/*
	Wait for data to be received
	*/
	while	( ! (UCSR0A & (1<<RXC0)));
    2ea4:	e0 ec       	ldi	r30, 0xC0	; 192
    2ea6:	f0 e0       	ldi	r31, 0x00	; 0
    2ea8:	80 81       	ld	r24, Z
    2eaa:	88 23       	and	r24, r24
    2eac:	ec f7       	brge	.-6      	; 0x2ea8 <USART0_Receive+0x4>
	/*
	Get and return received data from buffer
	*/
	return	UDR0;
    2eae:	80 91 c6 00 	lds	r24, 0x00C6
}
    2eb2:	08 95       	ret

00002eb4 <USART1_Receive>:
unsigned char USART1_Receive (void)
{
	/*
	Wait for data to be received
	*/
	while	( ! (UCSR1A & (1<<RXC1)));
    2eb4:	e8 ec       	ldi	r30, 0xC8	; 200
    2eb6:	f0 e0       	ldi	r31, 0x00	; 0
    2eb8:	80 81       	ld	r24, Z
    2eba:	88 23       	and	r24, r24
    2ebc:	ec f7       	brge	.-6      	; 0x2eb8 <USART1_Receive+0x4>
	/*
	Get and return received data from buffer
	*/
	return UDR1;
    2ebe:	80 91 ce 00 	lds	r24, 0x00CE
}
    2ec2:	08 95       	ret

00002ec4 <USART0_Init>:

void USART0_Init (unsigned int baud){
	/*
	Set baud rate
	*/
	UBRR0H = (	unsigned char	) (baud>>8);
    2ec4:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (	unsigned char	) baud;
    2ec8:	80 93 c4 00 	sts	0x00C4, r24
	
	/*
	Set frame format: 8data, no parity & 1 stop bit
	*/
	UCSR0C = (0<<UMSEL0) | (0<<UPM0) | (3<<UCSZ00);
    2ecc:	86 e0       	ldi	r24, 0x06	; 6
    2ece:	80 93 c2 00 	sts	0x00C2, r24
	/*
	Enable receiver and transmitter
	*/
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
    2ed2:	88 e1       	ldi	r24, 0x18	; 24
    2ed4:	80 93 c1 00 	sts	0x00C1, r24
	fdevopen(uart_putc0, USART0_Receive);
    2ed8:	62 e5       	ldi	r22, 0x52	; 82
    2eda:	77 e1       	ldi	r23, 0x17	; 23
    2edc:	82 e4       	ldi	r24, 0x42	; 66
    2ede:	97 e1       	ldi	r25, 0x17	; 23
    2ee0:	55 c0       	rjmp	.+170    	; 0x2f8c <fdevopen>
    2ee2:	08 95       	ret

00002ee4 <USART1_Init>:

void USART1_Init (unsigned int baud){
	/*
	Set baud rate
	*/
	UBRR1H = (	unsigned char	) (baud>>8);
    2ee4:	90 93 cd 00 	sts	0x00CD, r25
	UBRR1L = (	unsigned char	) baud;
    2ee8:	80 93 cc 00 	sts	0x00CC, r24
	
	/*
	Set frame format: 8data, no parity & 1 stop bit
	*/
	UCSR1C = (0<<UMSEL1) | (0<<UPM1) | (3<<UCSZ10);
    2eec:	86 e0       	ldi	r24, 0x06	; 6
    2eee:	80 93 ca 00 	sts	0x00CA, r24
	/*
	Enable receiver and transmitter
	*/
	UCSR1B = (1<<RXEN1) | (1<<TXEN1);
    2ef2:	88 e1       	ldi	r24, 0x18	; 24
    2ef4:	80 93 c9 00 	sts	0x00C9, r24
	fdevopen(uart_putc1, USART1_Receive);
    2ef8:	6a e5       	ldi	r22, 0x5A	; 90
    2efa:	77 e1       	ldi	r23, 0x17	; 23
    2efc:	8a e4       	ldi	r24, 0x4A	; 74
    2efe:	97 e1       	ldi	r25, 0x17	; 23
    2f00:	45 c0       	rjmp	.+138    	; 0x2f8c <fdevopen>
    2f02:	08 95       	ret

00002f04 <__udivmodsi4>:
    2f04:	a1 e2       	ldi	r26, 0x21	; 33
    2f06:	1a 2e       	mov	r1, r26
    2f08:	aa 1b       	sub	r26, r26
    2f0a:	bb 1b       	sub	r27, r27
    2f0c:	fd 01       	movw	r30, r26
    2f0e:	0d c0       	rjmp	.+26     	; 0x2f2a <__udivmodsi4_ep>

00002f10 <__udivmodsi4_loop>:
    2f10:	aa 1f       	adc	r26, r26
    2f12:	bb 1f       	adc	r27, r27
    2f14:	ee 1f       	adc	r30, r30
    2f16:	ff 1f       	adc	r31, r31
    2f18:	a2 17       	cp	r26, r18
    2f1a:	b3 07       	cpc	r27, r19
    2f1c:	e4 07       	cpc	r30, r20
    2f1e:	f5 07       	cpc	r31, r21
    2f20:	20 f0       	brcs	.+8      	; 0x2f2a <__udivmodsi4_ep>
    2f22:	a2 1b       	sub	r26, r18
    2f24:	b3 0b       	sbc	r27, r19
    2f26:	e4 0b       	sbc	r30, r20
    2f28:	f5 0b       	sbc	r31, r21

00002f2a <__udivmodsi4_ep>:
    2f2a:	66 1f       	adc	r22, r22
    2f2c:	77 1f       	adc	r23, r23
    2f2e:	88 1f       	adc	r24, r24
    2f30:	99 1f       	adc	r25, r25
    2f32:	1a 94       	dec	r1
    2f34:	69 f7       	brne	.-38     	; 0x2f10 <__udivmodsi4_loop>
    2f36:	60 95       	com	r22
    2f38:	70 95       	com	r23
    2f3a:	80 95       	com	r24
    2f3c:	90 95       	com	r25
    2f3e:	9b 01       	movw	r18, r22
    2f40:	ac 01       	movw	r20, r24
    2f42:	bd 01       	movw	r22, r26
    2f44:	cf 01       	movw	r24, r30
    2f46:	08 95       	ret

00002f48 <__tablejump2__>:
    2f48:	ee 0f       	add	r30, r30
    2f4a:	ff 1f       	adc	r31, r31
    2f4c:	00 24       	eor	r0, r0
    2f4e:	00 1c       	adc	r0, r0
    2f50:	0b be       	out	0x3b, r0	; 59
    2f52:	07 90       	elpm	r0, Z+
    2f54:	f6 91       	elpm	r31, Z
    2f56:	e0 2d       	mov	r30, r0
    2f58:	09 94       	ijmp

00002f5a <__muluhisi3>:
    2f5a:	09 d0       	rcall	.+18     	; 0x2f6e <__umulhisi3>
    2f5c:	a5 9f       	mul	r26, r21
    2f5e:	90 0d       	add	r25, r0
    2f60:	b4 9f       	mul	r27, r20
    2f62:	90 0d       	add	r25, r0
    2f64:	a4 9f       	mul	r26, r20
    2f66:	80 0d       	add	r24, r0
    2f68:	91 1d       	adc	r25, r1
    2f6a:	11 24       	eor	r1, r1
    2f6c:	08 95       	ret

00002f6e <__umulhisi3>:
    2f6e:	a2 9f       	mul	r26, r18
    2f70:	b0 01       	movw	r22, r0
    2f72:	b3 9f       	mul	r27, r19
    2f74:	c0 01       	movw	r24, r0
    2f76:	a3 9f       	mul	r26, r19
    2f78:	70 0d       	add	r23, r0
    2f7a:	81 1d       	adc	r24, r1
    2f7c:	11 24       	eor	r1, r1
    2f7e:	91 1d       	adc	r25, r1
    2f80:	b2 9f       	mul	r27, r18
    2f82:	70 0d       	add	r23, r0
    2f84:	81 1d       	adc	r24, r1
    2f86:	11 24       	eor	r1, r1
    2f88:	91 1d       	adc	r25, r1
    2f8a:	08 95       	ret

00002f8c <fdevopen>:
    2f8c:	0f 93       	push	r16
    2f8e:	1f 93       	push	r17
    2f90:	cf 93       	push	r28
    2f92:	df 93       	push	r29
    2f94:	00 97       	sbiw	r24, 0x00	; 0
    2f96:	31 f4       	brne	.+12     	; 0x2fa4 <fdevopen+0x18>
    2f98:	61 15       	cp	r22, r1
    2f9a:	71 05       	cpc	r23, r1
    2f9c:	19 f4       	brne	.+6      	; 0x2fa4 <fdevopen+0x18>
    2f9e:	80 e0       	ldi	r24, 0x00	; 0
    2fa0:	90 e0       	ldi	r25, 0x00	; 0
    2fa2:	39 c0       	rjmp	.+114    	; 0x3016 <fdevopen+0x8a>
    2fa4:	8b 01       	movw	r16, r22
    2fa6:	ec 01       	movw	r28, r24
    2fa8:	6e e0       	ldi	r22, 0x0E	; 14
    2faa:	70 e0       	ldi	r23, 0x00	; 0
    2fac:	81 e0       	ldi	r24, 0x01	; 1
    2fae:	90 e0       	ldi	r25, 0x00	; 0
    2fb0:	67 d2       	rcall	.+1230   	; 0x3480 <calloc>
    2fb2:	fc 01       	movw	r30, r24
    2fb4:	89 2b       	or	r24, r25
    2fb6:	99 f3       	breq	.-26     	; 0x2f9e <fdevopen+0x12>
    2fb8:	80 e8       	ldi	r24, 0x80	; 128
    2fba:	83 83       	std	Z+3, r24	; 0x03
    2fbc:	01 15       	cp	r16, r1
    2fbe:	11 05       	cpc	r17, r1
    2fc0:	71 f0       	breq	.+28     	; 0x2fde <fdevopen+0x52>
    2fc2:	13 87       	std	Z+11, r17	; 0x0b
    2fc4:	02 87       	std	Z+10, r16	; 0x0a
    2fc6:	81 e8       	ldi	r24, 0x81	; 129
    2fc8:	83 83       	std	Z+3, r24	; 0x03
    2fca:	80 91 a2 02 	lds	r24, 0x02A2
    2fce:	90 91 a3 02 	lds	r25, 0x02A3
    2fd2:	89 2b       	or	r24, r25
    2fd4:	21 f4       	brne	.+8      	; 0x2fde <fdevopen+0x52>
    2fd6:	f0 93 a3 02 	sts	0x02A3, r31
    2fda:	e0 93 a2 02 	sts	0x02A2, r30
    2fde:	20 97       	sbiw	r28, 0x00	; 0
    2fe0:	c9 f0       	breq	.+50     	; 0x3014 <fdevopen+0x88>
    2fe2:	d1 87       	std	Z+9, r29	; 0x09
    2fe4:	c0 87       	std	Z+8, r28	; 0x08
    2fe6:	83 81       	ldd	r24, Z+3	; 0x03
    2fe8:	82 60       	ori	r24, 0x02	; 2
    2fea:	83 83       	std	Z+3, r24	; 0x03
    2fec:	80 91 a4 02 	lds	r24, 0x02A4
    2ff0:	90 91 a5 02 	lds	r25, 0x02A5
    2ff4:	89 2b       	or	r24, r25
    2ff6:	71 f4       	brne	.+28     	; 0x3014 <fdevopen+0x88>
    2ff8:	f0 93 a5 02 	sts	0x02A5, r31
    2ffc:	e0 93 a4 02 	sts	0x02A4, r30
    3000:	80 91 a6 02 	lds	r24, 0x02A6
    3004:	90 91 a7 02 	lds	r25, 0x02A7
    3008:	89 2b       	or	r24, r25
    300a:	21 f4       	brne	.+8      	; 0x3014 <fdevopen+0x88>
    300c:	f0 93 a7 02 	sts	0x02A7, r31
    3010:	e0 93 a6 02 	sts	0x02A6, r30
    3014:	cf 01       	movw	r24, r30
    3016:	df 91       	pop	r29
    3018:	cf 91       	pop	r28
    301a:	1f 91       	pop	r17
    301c:	0f 91       	pop	r16
    301e:	08 95       	ret

00003020 <printf>:
    3020:	cf 93       	push	r28
    3022:	df 93       	push	r29
    3024:	cd b7       	in	r28, 0x3d	; 61
    3026:	de b7       	in	r29, 0x3e	; 62
    3028:	ae 01       	movw	r20, r28
    302a:	4b 5f       	subi	r20, 0xFB	; 251
    302c:	5f 4f       	sbci	r21, 0xFF	; 255
    302e:	fa 01       	movw	r30, r20
    3030:	61 91       	ld	r22, Z+
    3032:	71 91       	ld	r23, Z+
    3034:	af 01       	movw	r20, r30
    3036:	80 91 a4 02 	lds	r24, 0x02A4
    303a:	90 91 a5 02 	lds	r25, 0x02A5
    303e:	32 d0       	rcall	.+100    	; 0x30a4 <vfprintf>
    3040:	df 91       	pop	r29
    3042:	cf 91       	pop	r28
    3044:	08 95       	ret

00003046 <sprintf>:
    3046:	0f 93       	push	r16
    3048:	1f 93       	push	r17
    304a:	cf 93       	push	r28
    304c:	df 93       	push	r29
    304e:	cd b7       	in	r28, 0x3d	; 61
    3050:	de b7       	in	r29, 0x3e	; 62
    3052:	2e 97       	sbiw	r28, 0x0e	; 14
    3054:	0f b6       	in	r0, 0x3f	; 63
    3056:	f8 94       	cli
    3058:	de bf       	out	0x3e, r29	; 62
    305a:	0f be       	out	0x3f, r0	; 63
    305c:	cd bf       	out	0x3d, r28	; 61
    305e:	0d 89       	ldd	r16, Y+21	; 0x15
    3060:	1e 89       	ldd	r17, Y+22	; 0x16
    3062:	86 e0       	ldi	r24, 0x06	; 6
    3064:	8c 83       	std	Y+4, r24	; 0x04
    3066:	1a 83       	std	Y+2, r17	; 0x02
    3068:	09 83       	std	Y+1, r16	; 0x01
    306a:	8f ef       	ldi	r24, 0xFF	; 255
    306c:	9f e7       	ldi	r25, 0x7F	; 127
    306e:	9e 83       	std	Y+6, r25	; 0x06
    3070:	8d 83       	std	Y+5, r24	; 0x05
    3072:	ae 01       	movw	r20, r28
    3074:	47 5e       	subi	r20, 0xE7	; 231
    3076:	5f 4f       	sbci	r21, 0xFF	; 255
    3078:	6f 89       	ldd	r22, Y+23	; 0x17
    307a:	78 8d       	ldd	r23, Y+24	; 0x18
    307c:	ce 01       	movw	r24, r28
    307e:	01 96       	adiw	r24, 0x01	; 1
    3080:	11 d0       	rcall	.+34     	; 0x30a4 <vfprintf>
    3082:	2f 81       	ldd	r18, Y+7	; 0x07
    3084:	38 85       	ldd	r19, Y+8	; 0x08
    3086:	f8 01       	movw	r30, r16
    3088:	e2 0f       	add	r30, r18
    308a:	f3 1f       	adc	r31, r19
    308c:	10 82       	st	Z, r1
    308e:	2e 96       	adiw	r28, 0x0e	; 14
    3090:	0f b6       	in	r0, 0x3f	; 63
    3092:	f8 94       	cli
    3094:	de bf       	out	0x3e, r29	; 62
    3096:	0f be       	out	0x3f, r0	; 63
    3098:	cd bf       	out	0x3d, r28	; 61
    309a:	df 91       	pop	r29
    309c:	cf 91       	pop	r28
    309e:	1f 91       	pop	r17
    30a0:	0f 91       	pop	r16
    30a2:	08 95       	ret

000030a4 <vfprintf>:
    30a4:	2f 92       	push	r2
    30a6:	3f 92       	push	r3
    30a8:	4f 92       	push	r4
    30aa:	5f 92       	push	r5
    30ac:	6f 92       	push	r6
    30ae:	7f 92       	push	r7
    30b0:	8f 92       	push	r8
    30b2:	9f 92       	push	r9
    30b4:	af 92       	push	r10
    30b6:	bf 92       	push	r11
    30b8:	cf 92       	push	r12
    30ba:	df 92       	push	r13
    30bc:	ef 92       	push	r14
    30be:	ff 92       	push	r15
    30c0:	0f 93       	push	r16
    30c2:	1f 93       	push	r17
    30c4:	cf 93       	push	r28
    30c6:	df 93       	push	r29
    30c8:	cd b7       	in	r28, 0x3d	; 61
    30ca:	de b7       	in	r29, 0x3e	; 62
    30cc:	2c 97       	sbiw	r28, 0x0c	; 12
    30ce:	0f b6       	in	r0, 0x3f	; 63
    30d0:	f8 94       	cli
    30d2:	de bf       	out	0x3e, r29	; 62
    30d4:	0f be       	out	0x3f, r0	; 63
    30d6:	cd bf       	out	0x3d, r28	; 61
    30d8:	7c 01       	movw	r14, r24
    30da:	6b 01       	movw	r12, r22
    30dc:	8a 01       	movw	r16, r20
    30de:	fc 01       	movw	r30, r24
    30e0:	17 82       	std	Z+7, r1	; 0x07
    30e2:	16 82       	std	Z+6, r1	; 0x06
    30e4:	83 81       	ldd	r24, Z+3	; 0x03
    30e6:	81 ff       	sbrs	r24, 1
    30e8:	b0 c1       	rjmp	.+864    	; 0x344a <vfprintf+0x3a6>
    30ea:	ce 01       	movw	r24, r28
    30ec:	01 96       	adiw	r24, 0x01	; 1
    30ee:	4c 01       	movw	r8, r24
    30f0:	f7 01       	movw	r30, r14
    30f2:	93 81       	ldd	r25, Z+3	; 0x03
    30f4:	f6 01       	movw	r30, r12
    30f6:	93 fd       	sbrc	r25, 3
    30f8:	85 91       	lpm	r24, Z+
    30fa:	93 ff       	sbrs	r25, 3
    30fc:	81 91       	ld	r24, Z+
    30fe:	6f 01       	movw	r12, r30
    3100:	88 23       	and	r24, r24
    3102:	09 f4       	brne	.+2      	; 0x3106 <vfprintf+0x62>
    3104:	9e c1       	rjmp	.+828    	; 0x3442 <vfprintf+0x39e>
    3106:	85 32       	cpi	r24, 0x25	; 37
    3108:	39 f4       	brne	.+14     	; 0x3118 <vfprintf+0x74>
    310a:	93 fd       	sbrc	r25, 3
    310c:	85 91       	lpm	r24, Z+
    310e:	93 ff       	sbrs	r25, 3
    3110:	81 91       	ld	r24, Z+
    3112:	6f 01       	movw	r12, r30
    3114:	85 32       	cpi	r24, 0x25	; 37
    3116:	21 f4       	brne	.+8      	; 0x3120 <vfprintf+0x7c>
    3118:	b7 01       	movw	r22, r14
    311a:	90 e0       	ldi	r25, 0x00	; 0
    311c:	15 d3       	rcall	.+1578   	; 0x3748 <fputc>
    311e:	e8 cf       	rjmp	.-48     	; 0x30f0 <vfprintf+0x4c>
    3120:	51 2c       	mov	r5, r1
    3122:	31 2c       	mov	r3, r1
    3124:	20 e0       	ldi	r18, 0x00	; 0
    3126:	20 32       	cpi	r18, 0x20	; 32
    3128:	a0 f4       	brcc	.+40     	; 0x3152 <vfprintf+0xae>
    312a:	8b 32       	cpi	r24, 0x2B	; 43
    312c:	69 f0       	breq	.+26     	; 0x3148 <vfprintf+0xa4>
    312e:	30 f4       	brcc	.+12     	; 0x313c <vfprintf+0x98>
    3130:	80 32       	cpi	r24, 0x20	; 32
    3132:	59 f0       	breq	.+22     	; 0x314a <vfprintf+0xa6>
    3134:	83 32       	cpi	r24, 0x23	; 35
    3136:	69 f4       	brne	.+26     	; 0x3152 <vfprintf+0xae>
    3138:	20 61       	ori	r18, 0x10	; 16
    313a:	2c c0       	rjmp	.+88     	; 0x3194 <vfprintf+0xf0>
    313c:	8d 32       	cpi	r24, 0x2D	; 45
    313e:	39 f0       	breq	.+14     	; 0x314e <vfprintf+0xaa>
    3140:	80 33       	cpi	r24, 0x30	; 48
    3142:	39 f4       	brne	.+14     	; 0x3152 <vfprintf+0xae>
    3144:	21 60       	ori	r18, 0x01	; 1
    3146:	26 c0       	rjmp	.+76     	; 0x3194 <vfprintf+0xf0>
    3148:	22 60       	ori	r18, 0x02	; 2
    314a:	24 60       	ori	r18, 0x04	; 4
    314c:	23 c0       	rjmp	.+70     	; 0x3194 <vfprintf+0xf0>
    314e:	28 60       	ori	r18, 0x08	; 8
    3150:	21 c0       	rjmp	.+66     	; 0x3194 <vfprintf+0xf0>
    3152:	27 fd       	sbrc	r18, 7
    3154:	27 c0       	rjmp	.+78     	; 0x31a4 <vfprintf+0x100>
    3156:	30 ed       	ldi	r19, 0xD0	; 208
    3158:	38 0f       	add	r19, r24
    315a:	3a 30       	cpi	r19, 0x0A	; 10
    315c:	78 f4       	brcc	.+30     	; 0x317c <vfprintf+0xd8>
    315e:	26 ff       	sbrs	r18, 6
    3160:	06 c0       	rjmp	.+12     	; 0x316e <vfprintf+0xca>
    3162:	fa e0       	ldi	r31, 0x0A	; 10
    3164:	5f 9e       	mul	r5, r31
    3166:	30 0d       	add	r19, r0
    3168:	11 24       	eor	r1, r1
    316a:	53 2e       	mov	r5, r19
    316c:	13 c0       	rjmp	.+38     	; 0x3194 <vfprintf+0xf0>
    316e:	8a e0       	ldi	r24, 0x0A	; 10
    3170:	38 9e       	mul	r3, r24
    3172:	30 0d       	add	r19, r0
    3174:	11 24       	eor	r1, r1
    3176:	33 2e       	mov	r3, r19
    3178:	20 62       	ori	r18, 0x20	; 32
    317a:	0c c0       	rjmp	.+24     	; 0x3194 <vfprintf+0xf0>
    317c:	8e 32       	cpi	r24, 0x2E	; 46
    317e:	21 f4       	brne	.+8      	; 0x3188 <vfprintf+0xe4>
    3180:	26 fd       	sbrc	r18, 6
    3182:	5f c1       	rjmp	.+702    	; 0x3442 <vfprintf+0x39e>
    3184:	20 64       	ori	r18, 0x40	; 64
    3186:	06 c0       	rjmp	.+12     	; 0x3194 <vfprintf+0xf0>
    3188:	8c 36       	cpi	r24, 0x6C	; 108
    318a:	11 f4       	brne	.+4      	; 0x3190 <vfprintf+0xec>
    318c:	20 68       	ori	r18, 0x80	; 128
    318e:	02 c0       	rjmp	.+4      	; 0x3194 <vfprintf+0xf0>
    3190:	88 36       	cpi	r24, 0x68	; 104
    3192:	41 f4       	brne	.+16     	; 0x31a4 <vfprintf+0x100>
    3194:	f6 01       	movw	r30, r12
    3196:	93 fd       	sbrc	r25, 3
    3198:	85 91       	lpm	r24, Z+
    319a:	93 ff       	sbrs	r25, 3
    319c:	81 91       	ld	r24, Z+
    319e:	6f 01       	movw	r12, r30
    31a0:	81 11       	cpse	r24, r1
    31a2:	c1 cf       	rjmp	.-126    	; 0x3126 <vfprintf+0x82>
    31a4:	98 2f       	mov	r25, r24
    31a6:	9f 7d       	andi	r25, 0xDF	; 223
    31a8:	95 54       	subi	r25, 0x45	; 69
    31aa:	93 30       	cpi	r25, 0x03	; 3
    31ac:	28 f4       	brcc	.+10     	; 0x31b8 <vfprintf+0x114>
    31ae:	0c 5f       	subi	r16, 0xFC	; 252
    31b0:	1f 4f       	sbci	r17, 0xFF	; 255
    31b2:	ff e3       	ldi	r31, 0x3F	; 63
    31b4:	f9 83       	std	Y+1, r31	; 0x01
    31b6:	0d c0       	rjmp	.+26     	; 0x31d2 <vfprintf+0x12e>
    31b8:	83 36       	cpi	r24, 0x63	; 99
    31ba:	31 f0       	breq	.+12     	; 0x31c8 <vfprintf+0x124>
    31bc:	83 37       	cpi	r24, 0x73	; 115
    31be:	71 f0       	breq	.+28     	; 0x31dc <vfprintf+0x138>
    31c0:	83 35       	cpi	r24, 0x53	; 83
    31c2:	09 f0       	breq	.+2      	; 0x31c6 <vfprintf+0x122>
    31c4:	57 c0       	rjmp	.+174    	; 0x3274 <vfprintf+0x1d0>
    31c6:	21 c0       	rjmp	.+66     	; 0x320a <vfprintf+0x166>
    31c8:	f8 01       	movw	r30, r16
    31ca:	80 81       	ld	r24, Z
    31cc:	89 83       	std	Y+1, r24	; 0x01
    31ce:	0e 5f       	subi	r16, 0xFE	; 254
    31d0:	1f 4f       	sbci	r17, 0xFF	; 255
    31d2:	44 24       	eor	r4, r4
    31d4:	43 94       	inc	r4
    31d6:	51 2c       	mov	r5, r1
    31d8:	54 01       	movw	r10, r8
    31da:	14 c0       	rjmp	.+40     	; 0x3204 <vfprintf+0x160>
    31dc:	38 01       	movw	r6, r16
    31de:	f2 e0       	ldi	r31, 0x02	; 2
    31e0:	6f 0e       	add	r6, r31
    31e2:	71 1c       	adc	r7, r1
    31e4:	f8 01       	movw	r30, r16
    31e6:	a0 80       	ld	r10, Z
    31e8:	b1 80       	ldd	r11, Z+1	; 0x01
    31ea:	26 ff       	sbrs	r18, 6
    31ec:	03 c0       	rjmp	.+6      	; 0x31f4 <vfprintf+0x150>
    31ee:	65 2d       	mov	r22, r5
    31f0:	70 e0       	ldi	r23, 0x00	; 0
    31f2:	02 c0       	rjmp	.+4      	; 0x31f8 <vfprintf+0x154>
    31f4:	6f ef       	ldi	r22, 0xFF	; 255
    31f6:	7f ef       	ldi	r23, 0xFF	; 255
    31f8:	c5 01       	movw	r24, r10
    31fa:	2c 87       	std	Y+12, r18	; 0x0c
    31fc:	9a d2       	rcall	.+1332   	; 0x3732 <strnlen>
    31fe:	2c 01       	movw	r4, r24
    3200:	83 01       	movw	r16, r6
    3202:	2c 85       	ldd	r18, Y+12	; 0x0c
    3204:	2f 77       	andi	r18, 0x7F	; 127
    3206:	22 2e       	mov	r2, r18
    3208:	16 c0       	rjmp	.+44     	; 0x3236 <vfprintf+0x192>
    320a:	38 01       	movw	r6, r16
    320c:	f2 e0       	ldi	r31, 0x02	; 2
    320e:	6f 0e       	add	r6, r31
    3210:	71 1c       	adc	r7, r1
    3212:	f8 01       	movw	r30, r16
    3214:	a0 80       	ld	r10, Z
    3216:	b1 80       	ldd	r11, Z+1	; 0x01
    3218:	26 ff       	sbrs	r18, 6
    321a:	03 c0       	rjmp	.+6      	; 0x3222 <vfprintf+0x17e>
    321c:	65 2d       	mov	r22, r5
    321e:	70 e0       	ldi	r23, 0x00	; 0
    3220:	02 c0       	rjmp	.+4      	; 0x3226 <vfprintf+0x182>
    3222:	6f ef       	ldi	r22, 0xFF	; 255
    3224:	7f ef       	ldi	r23, 0xFF	; 255
    3226:	c5 01       	movw	r24, r10
    3228:	2c 87       	std	Y+12, r18	; 0x0c
    322a:	71 d2       	rcall	.+1250   	; 0x370e <strnlen_P>
    322c:	2c 01       	movw	r4, r24
    322e:	2c 85       	ldd	r18, Y+12	; 0x0c
    3230:	20 68       	ori	r18, 0x80	; 128
    3232:	22 2e       	mov	r2, r18
    3234:	83 01       	movw	r16, r6
    3236:	23 fc       	sbrc	r2, 3
    3238:	19 c0       	rjmp	.+50     	; 0x326c <vfprintf+0x1c8>
    323a:	83 2d       	mov	r24, r3
    323c:	90 e0       	ldi	r25, 0x00	; 0
    323e:	48 16       	cp	r4, r24
    3240:	59 06       	cpc	r5, r25
    3242:	a0 f4       	brcc	.+40     	; 0x326c <vfprintf+0x1c8>
    3244:	b7 01       	movw	r22, r14
    3246:	80 e2       	ldi	r24, 0x20	; 32
    3248:	90 e0       	ldi	r25, 0x00	; 0
    324a:	7e d2       	rcall	.+1276   	; 0x3748 <fputc>
    324c:	3a 94       	dec	r3
    324e:	f5 cf       	rjmp	.-22     	; 0x323a <vfprintf+0x196>
    3250:	f5 01       	movw	r30, r10
    3252:	27 fc       	sbrc	r2, 7
    3254:	85 91       	lpm	r24, Z+
    3256:	27 fe       	sbrs	r2, 7
    3258:	81 91       	ld	r24, Z+
    325a:	5f 01       	movw	r10, r30
    325c:	b7 01       	movw	r22, r14
    325e:	90 e0       	ldi	r25, 0x00	; 0
    3260:	73 d2       	rcall	.+1254   	; 0x3748 <fputc>
    3262:	31 10       	cpse	r3, r1
    3264:	3a 94       	dec	r3
    3266:	f1 e0       	ldi	r31, 0x01	; 1
    3268:	4f 1a       	sub	r4, r31
    326a:	51 08       	sbc	r5, r1
    326c:	41 14       	cp	r4, r1
    326e:	51 04       	cpc	r5, r1
    3270:	79 f7       	brne	.-34     	; 0x3250 <vfprintf+0x1ac>
    3272:	de c0       	rjmp	.+444    	; 0x3430 <vfprintf+0x38c>
    3274:	84 36       	cpi	r24, 0x64	; 100
    3276:	11 f0       	breq	.+4      	; 0x327c <vfprintf+0x1d8>
    3278:	89 36       	cpi	r24, 0x69	; 105
    327a:	31 f5       	brne	.+76     	; 0x32c8 <vfprintf+0x224>
    327c:	f8 01       	movw	r30, r16
    327e:	27 ff       	sbrs	r18, 7
    3280:	07 c0       	rjmp	.+14     	; 0x3290 <vfprintf+0x1ec>
    3282:	60 81       	ld	r22, Z
    3284:	71 81       	ldd	r23, Z+1	; 0x01
    3286:	82 81       	ldd	r24, Z+2	; 0x02
    3288:	93 81       	ldd	r25, Z+3	; 0x03
    328a:	0c 5f       	subi	r16, 0xFC	; 252
    328c:	1f 4f       	sbci	r17, 0xFF	; 255
    328e:	08 c0       	rjmp	.+16     	; 0x32a0 <vfprintf+0x1fc>
    3290:	60 81       	ld	r22, Z
    3292:	71 81       	ldd	r23, Z+1	; 0x01
    3294:	07 2e       	mov	r0, r23
    3296:	00 0c       	add	r0, r0
    3298:	88 0b       	sbc	r24, r24
    329a:	99 0b       	sbc	r25, r25
    329c:	0e 5f       	subi	r16, 0xFE	; 254
    329e:	1f 4f       	sbci	r17, 0xFF	; 255
    32a0:	2f 76       	andi	r18, 0x6F	; 111
    32a2:	72 2e       	mov	r7, r18
    32a4:	97 ff       	sbrs	r25, 7
    32a6:	09 c0       	rjmp	.+18     	; 0x32ba <vfprintf+0x216>
    32a8:	90 95       	com	r25
    32aa:	80 95       	com	r24
    32ac:	70 95       	com	r23
    32ae:	61 95       	neg	r22
    32b0:	7f 4f       	sbci	r23, 0xFF	; 255
    32b2:	8f 4f       	sbci	r24, 0xFF	; 255
    32b4:	9f 4f       	sbci	r25, 0xFF	; 255
    32b6:	20 68       	ori	r18, 0x80	; 128
    32b8:	72 2e       	mov	r7, r18
    32ba:	2a e0       	ldi	r18, 0x0A	; 10
    32bc:	30 e0       	ldi	r19, 0x00	; 0
    32be:	a4 01       	movw	r20, r8
    32c0:	7b d2       	rcall	.+1270   	; 0x37b8 <__ultoa_invert>
    32c2:	a8 2e       	mov	r10, r24
    32c4:	a8 18       	sub	r10, r8
    32c6:	43 c0       	rjmp	.+134    	; 0x334e <vfprintf+0x2aa>
    32c8:	85 37       	cpi	r24, 0x75	; 117
    32ca:	29 f4       	brne	.+10     	; 0x32d6 <vfprintf+0x232>
    32cc:	2f 7e       	andi	r18, 0xEF	; 239
    32ce:	b2 2e       	mov	r11, r18
    32d0:	2a e0       	ldi	r18, 0x0A	; 10
    32d2:	30 e0       	ldi	r19, 0x00	; 0
    32d4:	25 c0       	rjmp	.+74     	; 0x3320 <vfprintf+0x27c>
    32d6:	f2 2f       	mov	r31, r18
    32d8:	f9 7f       	andi	r31, 0xF9	; 249
    32da:	bf 2e       	mov	r11, r31
    32dc:	8f 36       	cpi	r24, 0x6F	; 111
    32de:	c1 f0       	breq	.+48     	; 0x3310 <vfprintf+0x26c>
    32e0:	18 f4       	brcc	.+6      	; 0x32e8 <vfprintf+0x244>
    32e2:	88 35       	cpi	r24, 0x58	; 88
    32e4:	79 f0       	breq	.+30     	; 0x3304 <vfprintf+0x260>
    32e6:	ad c0       	rjmp	.+346    	; 0x3442 <vfprintf+0x39e>
    32e8:	80 37       	cpi	r24, 0x70	; 112
    32ea:	19 f0       	breq	.+6      	; 0x32f2 <vfprintf+0x24e>
    32ec:	88 37       	cpi	r24, 0x78	; 120
    32ee:	21 f0       	breq	.+8      	; 0x32f8 <vfprintf+0x254>
    32f0:	a8 c0       	rjmp	.+336    	; 0x3442 <vfprintf+0x39e>
    32f2:	2f 2f       	mov	r18, r31
    32f4:	20 61       	ori	r18, 0x10	; 16
    32f6:	b2 2e       	mov	r11, r18
    32f8:	b4 fe       	sbrs	r11, 4
    32fa:	0d c0       	rjmp	.+26     	; 0x3316 <vfprintf+0x272>
    32fc:	8b 2d       	mov	r24, r11
    32fe:	84 60       	ori	r24, 0x04	; 4
    3300:	b8 2e       	mov	r11, r24
    3302:	09 c0       	rjmp	.+18     	; 0x3316 <vfprintf+0x272>
    3304:	24 ff       	sbrs	r18, 4
    3306:	0a c0       	rjmp	.+20     	; 0x331c <vfprintf+0x278>
    3308:	9f 2f       	mov	r25, r31
    330a:	96 60       	ori	r25, 0x06	; 6
    330c:	b9 2e       	mov	r11, r25
    330e:	06 c0       	rjmp	.+12     	; 0x331c <vfprintf+0x278>
    3310:	28 e0       	ldi	r18, 0x08	; 8
    3312:	30 e0       	ldi	r19, 0x00	; 0
    3314:	05 c0       	rjmp	.+10     	; 0x3320 <vfprintf+0x27c>
    3316:	20 e1       	ldi	r18, 0x10	; 16
    3318:	30 e0       	ldi	r19, 0x00	; 0
    331a:	02 c0       	rjmp	.+4      	; 0x3320 <vfprintf+0x27c>
    331c:	20 e1       	ldi	r18, 0x10	; 16
    331e:	32 e0       	ldi	r19, 0x02	; 2
    3320:	f8 01       	movw	r30, r16
    3322:	b7 fe       	sbrs	r11, 7
    3324:	07 c0       	rjmp	.+14     	; 0x3334 <vfprintf+0x290>
    3326:	60 81       	ld	r22, Z
    3328:	71 81       	ldd	r23, Z+1	; 0x01
    332a:	82 81       	ldd	r24, Z+2	; 0x02
    332c:	93 81       	ldd	r25, Z+3	; 0x03
    332e:	0c 5f       	subi	r16, 0xFC	; 252
    3330:	1f 4f       	sbci	r17, 0xFF	; 255
    3332:	06 c0       	rjmp	.+12     	; 0x3340 <vfprintf+0x29c>
    3334:	60 81       	ld	r22, Z
    3336:	71 81       	ldd	r23, Z+1	; 0x01
    3338:	80 e0       	ldi	r24, 0x00	; 0
    333a:	90 e0       	ldi	r25, 0x00	; 0
    333c:	0e 5f       	subi	r16, 0xFE	; 254
    333e:	1f 4f       	sbci	r17, 0xFF	; 255
    3340:	a4 01       	movw	r20, r8
    3342:	3a d2       	rcall	.+1140   	; 0x37b8 <__ultoa_invert>
    3344:	a8 2e       	mov	r10, r24
    3346:	a8 18       	sub	r10, r8
    3348:	fb 2d       	mov	r31, r11
    334a:	ff 77       	andi	r31, 0x7F	; 127
    334c:	7f 2e       	mov	r7, r31
    334e:	76 fe       	sbrs	r7, 6
    3350:	0b c0       	rjmp	.+22     	; 0x3368 <vfprintf+0x2c4>
    3352:	37 2d       	mov	r19, r7
    3354:	3e 7f       	andi	r19, 0xFE	; 254
    3356:	a5 14       	cp	r10, r5
    3358:	50 f4       	brcc	.+20     	; 0x336e <vfprintf+0x2ca>
    335a:	74 fe       	sbrs	r7, 4
    335c:	0a c0       	rjmp	.+20     	; 0x3372 <vfprintf+0x2ce>
    335e:	72 fc       	sbrc	r7, 2
    3360:	08 c0       	rjmp	.+16     	; 0x3372 <vfprintf+0x2ce>
    3362:	37 2d       	mov	r19, r7
    3364:	3e 7e       	andi	r19, 0xEE	; 238
    3366:	05 c0       	rjmp	.+10     	; 0x3372 <vfprintf+0x2ce>
    3368:	ba 2c       	mov	r11, r10
    336a:	37 2d       	mov	r19, r7
    336c:	03 c0       	rjmp	.+6      	; 0x3374 <vfprintf+0x2d0>
    336e:	ba 2c       	mov	r11, r10
    3370:	01 c0       	rjmp	.+2      	; 0x3374 <vfprintf+0x2d0>
    3372:	b5 2c       	mov	r11, r5
    3374:	34 ff       	sbrs	r19, 4
    3376:	0d c0       	rjmp	.+26     	; 0x3392 <vfprintf+0x2ee>
    3378:	fe 01       	movw	r30, r28
    337a:	ea 0d       	add	r30, r10
    337c:	f1 1d       	adc	r31, r1
    337e:	80 81       	ld	r24, Z
    3380:	80 33       	cpi	r24, 0x30	; 48
    3382:	11 f4       	brne	.+4      	; 0x3388 <vfprintf+0x2e4>
    3384:	39 7e       	andi	r19, 0xE9	; 233
    3386:	09 c0       	rjmp	.+18     	; 0x339a <vfprintf+0x2f6>
    3388:	32 ff       	sbrs	r19, 2
    338a:	06 c0       	rjmp	.+12     	; 0x3398 <vfprintf+0x2f4>
    338c:	b3 94       	inc	r11
    338e:	b3 94       	inc	r11
    3390:	04 c0       	rjmp	.+8      	; 0x339a <vfprintf+0x2f6>
    3392:	83 2f       	mov	r24, r19
    3394:	86 78       	andi	r24, 0x86	; 134
    3396:	09 f0       	breq	.+2      	; 0x339a <vfprintf+0x2f6>
    3398:	b3 94       	inc	r11
    339a:	33 fd       	sbrc	r19, 3
    339c:	12 c0       	rjmp	.+36     	; 0x33c2 <vfprintf+0x31e>
    339e:	30 ff       	sbrs	r19, 0
    33a0:	06 c0       	rjmp	.+12     	; 0x33ae <vfprintf+0x30a>
    33a2:	5a 2c       	mov	r5, r10
    33a4:	b3 14       	cp	r11, r3
    33a6:	18 f4       	brcc	.+6      	; 0x33ae <vfprintf+0x30a>
    33a8:	53 0c       	add	r5, r3
    33aa:	5b 18       	sub	r5, r11
    33ac:	b3 2c       	mov	r11, r3
    33ae:	b3 14       	cp	r11, r3
    33b0:	60 f4       	brcc	.+24     	; 0x33ca <vfprintf+0x326>
    33b2:	b7 01       	movw	r22, r14
    33b4:	80 e2       	ldi	r24, 0x20	; 32
    33b6:	90 e0       	ldi	r25, 0x00	; 0
    33b8:	3c 87       	std	Y+12, r19	; 0x0c
    33ba:	c6 d1       	rcall	.+908    	; 0x3748 <fputc>
    33bc:	b3 94       	inc	r11
    33be:	3c 85       	ldd	r19, Y+12	; 0x0c
    33c0:	f6 cf       	rjmp	.-20     	; 0x33ae <vfprintf+0x30a>
    33c2:	b3 14       	cp	r11, r3
    33c4:	10 f4       	brcc	.+4      	; 0x33ca <vfprintf+0x326>
    33c6:	3b 18       	sub	r3, r11
    33c8:	01 c0       	rjmp	.+2      	; 0x33cc <vfprintf+0x328>
    33ca:	31 2c       	mov	r3, r1
    33cc:	34 ff       	sbrs	r19, 4
    33ce:	11 c0       	rjmp	.+34     	; 0x33f2 <vfprintf+0x34e>
    33d0:	b7 01       	movw	r22, r14
    33d2:	80 e3       	ldi	r24, 0x30	; 48
    33d4:	90 e0       	ldi	r25, 0x00	; 0
    33d6:	3c 87       	std	Y+12, r19	; 0x0c
    33d8:	b7 d1       	rcall	.+878    	; 0x3748 <fputc>
    33da:	3c 85       	ldd	r19, Y+12	; 0x0c
    33dc:	32 ff       	sbrs	r19, 2
    33de:	16 c0       	rjmp	.+44     	; 0x340c <vfprintf+0x368>
    33e0:	31 fd       	sbrc	r19, 1
    33e2:	03 c0       	rjmp	.+6      	; 0x33ea <vfprintf+0x346>
    33e4:	88 e7       	ldi	r24, 0x78	; 120
    33e6:	90 e0       	ldi	r25, 0x00	; 0
    33e8:	02 c0       	rjmp	.+4      	; 0x33ee <vfprintf+0x34a>
    33ea:	88 e5       	ldi	r24, 0x58	; 88
    33ec:	90 e0       	ldi	r25, 0x00	; 0
    33ee:	b7 01       	movw	r22, r14
    33f0:	0c c0       	rjmp	.+24     	; 0x340a <vfprintf+0x366>
    33f2:	83 2f       	mov	r24, r19
    33f4:	86 78       	andi	r24, 0x86	; 134
    33f6:	51 f0       	breq	.+20     	; 0x340c <vfprintf+0x368>
    33f8:	31 ff       	sbrs	r19, 1
    33fa:	02 c0       	rjmp	.+4      	; 0x3400 <vfprintf+0x35c>
    33fc:	8b e2       	ldi	r24, 0x2B	; 43
    33fe:	01 c0       	rjmp	.+2      	; 0x3402 <vfprintf+0x35e>
    3400:	80 e2       	ldi	r24, 0x20	; 32
    3402:	37 fd       	sbrc	r19, 7
    3404:	8d e2       	ldi	r24, 0x2D	; 45
    3406:	b7 01       	movw	r22, r14
    3408:	90 e0       	ldi	r25, 0x00	; 0
    340a:	9e d1       	rcall	.+828    	; 0x3748 <fputc>
    340c:	a5 14       	cp	r10, r5
    340e:	30 f4       	brcc	.+12     	; 0x341c <vfprintf+0x378>
    3410:	b7 01       	movw	r22, r14
    3412:	80 e3       	ldi	r24, 0x30	; 48
    3414:	90 e0       	ldi	r25, 0x00	; 0
    3416:	98 d1       	rcall	.+816    	; 0x3748 <fputc>
    3418:	5a 94       	dec	r5
    341a:	f8 cf       	rjmp	.-16     	; 0x340c <vfprintf+0x368>
    341c:	aa 94       	dec	r10
    341e:	f4 01       	movw	r30, r8
    3420:	ea 0d       	add	r30, r10
    3422:	f1 1d       	adc	r31, r1
    3424:	80 81       	ld	r24, Z
    3426:	b7 01       	movw	r22, r14
    3428:	90 e0       	ldi	r25, 0x00	; 0
    342a:	8e d1       	rcall	.+796    	; 0x3748 <fputc>
    342c:	a1 10       	cpse	r10, r1
    342e:	f6 cf       	rjmp	.-20     	; 0x341c <vfprintf+0x378>
    3430:	33 20       	and	r3, r3
    3432:	09 f4       	brne	.+2      	; 0x3436 <vfprintf+0x392>
    3434:	5d ce       	rjmp	.-838    	; 0x30f0 <vfprintf+0x4c>
    3436:	b7 01       	movw	r22, r14
    3438:	80 e2       	ldi	r24, 0x20	; 32
    343a:	90 e0       	ldi	r25, 0x00	; 0
    343c:	85 d1       	rcall	.+778    	; 0x3748 <fputc>
    343e:	3a 94       	dec	r3
    3440:	f7 cf       	rjmp	.-18     	; 0x3430 <vfprintf+0x38c>
    3442:	f7 01       	movw	r30, r14
    3444:	86 81       	ldd	r24, Z+6	; 0x06
    3446:	97 81       	ldd	r25, Z+7	; 0x07
    3448:	02 c0       	rjmp	.+4      	; 0x344e <vfprintf+0x3aa>
    344a:	8f ef       	ldi	r24, 0xFF	; 255
    344c:	9f ef       	ldi	r25, 0xFF	; 255
    344e:	2c 96       	adiw	r28, 0x0c	; 12
    3450:	0f b6       	in	r0, 0x3f	; 63
    3452:	f8 94       	cli
    3454:	de bf       	out	0x3e, r29	; 62
    3456:	0f be       	out	0x3f, r0	; 63
    3458:	cd bf       	out	0x3d, r28	; 61
    345a:	df 91       	pop	r29
    345c:	cf 91       	pop	r28
    345e:	1f 91       	pop	r17
    3460:	0f 91       	pop	r16
    3462:	ff 90       	pop	r15
    3464:	ef 90       	pop	r14
    3466:	df 90       	pop	r13
    3468:	cf 90       	pop	r12
    346a:	bf 90       	pop	r11
    346c:	af 90       	pop	r10
    346e:	9f 90       	pop	r9
    3470:	8f 90       	pop	r8
    3472:	7f 90       	pop	r7
    3474:	6f 90       	pop	r6
    3476:	5f 90       	pop	r5
    3478:	4f 90       	pop	r4
    347a:	3f 90       	pop	r3
    347c:	2f 90       	pop	r2
    347e:	08 95       	ret

00003480 <calloc>:
    3480:	0f 93       	push	r16
    3482:	1f 93       	push	r17
    3484:	cf 93       	push	r28
    3486:	df 93       	push	r29
    3488:	86 9f       	mul	r24, r22
    348a:	80 01       	movw	r16, r0
    348c:	87 9f       	mul	r24, r23
    348e:	10 0d       	add	r17, r0
    3490:	96 9f       	mul	r25, r22
    3492:	10 0d       	add	r17, r0
    3494:	11 24       	eor	r1, r1
    3496:	c8 01       	movw	r24, r16
    3498:	0d d0       	rcall	.+26     	; 0x34b4 <malloc>
    349a:	ec 01       	movw	r28, r24
    349c:	00 97       	sbiw	r24, 0x00	; 0
    349e:	21 f0       	breq	.+8      	; 0x34a8 <calloc+0x28>
    34a0:	a8 01       	movw	r20, r16
    34a2:	60 e0       	ldi	r22, 0x00	; 0
    34a4:	70 e0       	ldi	r23, 0x00	; 0
    34a6:	3e d1       	rcall	.+636    	; 0x3724 <memset>
    34a8:	ce 01       	movw	r24, r28
    34aa:	df 91       	pop	r29
    34ac:	cf 91       	pop	r28
    34ae:	1f 91       	pop	r17
    34b0:	0f 91       	pop	r16
    34b2:	08 95       	ret

000034b4 <malloc>:
    34b4:	cf 93       	push	r28
    34b6:	df 93       	push	r29
    34b8:	82 30       	cpi	r24, 0x02	; 2
    34ba:	91 05       	cpc	r25, r1
    34bc:	10 f4       	brcc	.+4      	; 0x34c2 <malloc+0xe>
    34be:	82 e0       	ldi	r24, 0x02	; 2
    34c0:	90 e0       	ldi	r25, 0x00	; 0
    34c2:	e0 91 aa 02 	lds	r30, 0x02AA
    34c6:	f0 91 ab 02 	lds	r31, 0x02AB
    34ca:	20 e0       	ldi	r18, 0x00	; 0
    34cc:	30 e0       	ldi	r19, 0x00	; 0
    34ce:	c0 e0       	ldi	r28, 0x00	; 0
    34d0:	d0 e0       	ldi	r29, 0x00	; 0
    34d2:	30 97       	sbiw	r30, 0x00	; 0
    34d4:	11 f1       	breq	.+68     	; 0x351a <malloc+0x66>
    34d6:	40 81       	ld	r20, Z
    34d8:	51 81       	ldd	r21, Z+1	; 0x01
    34da:	48 17       	cp	r20, r24
    34dc:	59 07       	cpc	r21, r25
    34de:	c0 f0       	brcs	.+48     	; 0x3510 <malloc+0x5c>
    34e0:	48 17       	cp	r20, r24
    34e2:	59 07       	cpc	r21, r25
    34e4:	61 f4       	brne	.+24     	; 0x34fe <malloc+0x4a>
    34e6:	82 81       	ldd	r24, Z+2	; 0x02
    34e8:	93 81       	ldd	r25, Z+3	; 0x03
    34ea:	20 97       	sbiw	r28, 0x00	; 0
    34ec:	19 f0       	breq	.+6      	; 0x34f4 <malloc+0x40>
    34ee:	9b 83       	std	Y+3, r25	; 0x03
    34f0:	8a 83       	std	Y+2, r24	; 0x02
    34f2:	2b c0       	rjmp	.+86     	; 0x354a <malloc+0x96>
    34f4:	90 93 ab 02 	sts	0x02AB, r25
    34f8:	80 93 aa 02 	sts	0x02AA, r24
    34fc:	26 c0       	rjmp	.+76     	; 0x354a <malloc+0x96>
    34fe:	21 15       	cp	r18, r1
    3500:	31 05       	cpc	r19, r1
    3502:	19 f0       	breq	.+6      	; 0x350a <malloc+0x56>
    3504:	42 17       	cp	r20, r18
    3506:	53 07       	cpc	r21, r19
    3508:	18 f4       	brcc	.+6      	; 0x3510 <malloc+0x5c>
    350a:	9a 01       	movw	r18, r20
    350c:	be 01       	movw	r22, r28
    350e:	df 01       	movw	r26, r30
    3510:	ef 01       	movw	r28, r30
    3512:	02 80       	ldd	r0, Z+2	; 0x02
    3514:	f3 81       	ldd	r31, Z+3	; 0x03
    3516:	e0 2d       	mov	r30, r0
    3518:	dc cf       	rjmp	.-72     	; 0x34d2 <malloc+0x1e>
    351a:	21 15       	cp	r18, r1
    351c:	31 05       	cpc	r19, r1
    351e:	09 f1       	breq	.+66     	; 0x3562 <malloc+0xae>
    3520:	28 1b       	sub	r18, r24
    3522:	39 0b       	sbc	r19, r25
    3524:	24 30       	cpi	r18, 0x04	; 4
    3526:	31 05       	cpc	r19, r1
    3528:	90 f4       	brcc	.+36     	; 0x354e <malloc+0x9a>
    352a:	12 96       	adiw	r26, 0x02	; 2
    352c:	8d 91       	ld	r24, X+
    352e:	9c 91       	ld	r25, X
    3530:	13 97       	sbiw	r26, 0x03	; 3
    3532:	61 15       	cp	r22, r1
    3534:	71 05       	cpc	r23, r1
    3536:	21 f0       	breq	.+8      	; 0x3540 <malloc+0x8c>
    3538:	fb 01       	movw	r30, r22
    353a:	93 83       	std	Z+3, r25	; 0x03
    353c:	82 83       	std	Z+2, r24	; 0x02
    353e:	04 c0       	rjmp	.+8      	; 0x3548 <malloc+0x94>
    3540:	90 93 ab 02 	sts	0x02AB, r25
    3544:	80 93 aa 02 	sts	0x02AA, r24
    3548:	fd 01       	movw	r30, r26
    354a:	32 96       	adiw	r30, 0x02	; 2
    354c:	44 c0       	rjmp	.+136    	; 0x35d6 <malloc+0x122>
    354e:	fd 01       	movw	r30, r26
    3550:	e2 0f       	add	r30, r18
    3552:	f3 1f       	adc	r31, r19
    3554:	81 93       	st	Z+, r24
    3556:	91 93       	st	Z+, r25
    3558:	22 50       	subi	r18, 0x02	; 2
    355a:	31 09       	sbc	r19, r1
    355c:	2d 93       	st	X+, r18
    355e:	3c 93       	st	X, r19
    3560:	3a c0       	rjmp	.+116    	; 0x35d6 <malloc+0x122>
    3562:	20 91 a8 02 	lds	r18, 0x02A8
    3566:	30 91 a9 02 	lds	r19, 0x02A9
    356a:	23 2b       	or	r18, r19
    356c:	41 f4       	brne	.+16     	; 0x357e <malloc+0xca>
    356e:	20 91 02 01 	lds	r18, 0x0102
    3572:	30 91 03 01 	lds	r19, 0x0103
    3576:	30 93 a9 02 	sts	0x02A9, r19
    357a:	20 93 a8 02 	sts	0x02A8, r18
    357e:	20 91 00 01 	lds	r18, 0x0100
    3582:	30 91 01 01 	lds	r19, 0x0101
    3586:	21 15       	cp	r18, r1
    3588:	31 05       	cpc	r19, r1
    358a:	41 f4       	brne	.+16     	; 0x359c <malloc+0xe8>
    358c:	2d b7       	in	r18, 0x3d	; 61
    358e:	3e b7       	in	r19, 0x3e	; 62
    3590:	40 91 04 01 	lds	r20, 0x0104
    3594:	50 91 05 01 	lds	r21, 0x0105
    3598:	24 1b       	sub	r18, r20
    359a:	35 0b       	sbc	r19, r21
    359c:	e0 91 a8 02 	lds	r30, 0x02A8
    35a0:	f0 91 a9 02 	lds	r31, 0x02A9
    35a4:	e2 17       	cp	r30, r18
    35a6:	f3 07       	cpc	r31, r19
    35a8:	a0 f4       	brcc	.+40     	; 0x35d2 <malloc+0x11e>
    35aa:	2e 1b       	sub	r18, r30
    35ac:	3f 0b       	sbc	r19, r31
    35ae:	28 17       	cp	r18, r24
    35b0:	39 07       	cpc	r19, r25
    35b2:	78 f0       	brcs	.+30     	; 0x35d2 <malloc+0x11e>
    35b4:	ac 01       	movw	r20, r24
    35b6:	4e 5f       	subi	r20, 0xFE	; 254
    35b8:	5f 4f       	sbci	r21, 0xFF	; 255
    35ba:	24 17       	cp	r18, r20
    35bc:	35 07       	cpc	r19, r21
    35be:	48 f0       	brcs	.+18     	; 0x35d2 <malloc+0x11e>
    35c0:	4e 0f       	add	r20, r30
    35c2:	5f 1f       	adc	r21, r31
    35c4:	50 93 a9 02 	sts	0x02A9, r21
    35c8:	40 93 a8 02 	sts	0x02A8, r20
    35cc:	81 93       	st	Z+, r24
    35ce:	91 93       	st	Z+, r25
    35d0:	02 c0       	rjmp	.+4      	; 0x35d6 <malloc+0x122>
    35d2:	e0 e0       	ldi	r30, 0x00	; 0
    35d4:	f0 e0       	ldi	r31, 0x00	; 0
    35d6:	cf 01       	movw	r24, r30
    35d8:	df 91       	pop	r29
    35da:	cf 91       	pop	r28
    35dc:	08 95       	ret

000035de <free>:
    35de:	0f 93       	push	r16
    35e0:	1f 93       	push	r17
    35e2:	cf 93       	push	r28
    35e4:	df 93       	push	r29
    35e6:	00 97       	sbiw	r24, 0x00	; 0
    35e8:	09 f4       	brne	.+2      	; 0x35ec <free+0xe>
    35ea:	8c c0       	rjmp	.+280    	; 0x3704 <free+0x126>
    35ec:	fc 01       	movw	r30, r24
    35ee:	32 97       	sbiw	r30, 0x02	; 2
    35f0:	13 82       	std	Z+3, r1	; 0x03
    35f2:	12 82       	std	Z+2, r1	; 0x02
    35f4:	00 91 aa 02 	lds	r16, 0x02AA
    35f8:	10 91 ab 02 	lds	r17, 0x02AB
    35fc:	01 15       	cp	r16, r1
    35fe:	11 05       	cpc	r17, r1
    3600:	81 f4       	brne	.+32     	; 0x3622 <free+0x44>
    3602:	20 81       	ld	r18, Z
    3604:	31 81       	ldd	r19, Z+1	; 0x01
    3606:	82 0f       	add	r24, r18
    3608:	93 1f       	adc	r25, r19
    360a:	20 91 a8 02 	lds	r18, 0x02A8
    360e:	30 91 a9 02 	lds	r19, 0x02A9
    3612:	28 17       	cp	r18, r24
    3614:	39 07       	cpc	r19, r25
    3616:	79 f5       	brne	.+94     	; 0x3676 <free+0x98>
    3618:	f0 93 a9 02 	sts	0x02A9, r31
    361c:	e0 93 a8 02 	sts	0x02A8, r30
    3620:	71 c0       	rjmp	.+226    	; 0x3704 <free+0x126>
    3622:	d8 01       	movw	r26, r16
    3624:	40 e0       	ldi	r20, 0x00	; 0
    3626:	50 e0       	ldi	r21, 0x00	; 0
    3628:	ae 17       	cp	r26, r30
    362a:	bf 07       	cpc	r27, r31
    362c:	50 f4       	brcc	.+20     	; 0x3642 <free+0x64>
    362e:	12 96       	adiw	r26, 0x02	; 2
    3630:	2d 91       	ld	r18, X+
    3632:	3c 91       	ld	r19, X
    3634:	13 97       	sbiw	r26, 0x03	; 3
    3636:	ad 01       	movw	r20, r26
    3638:	21 15       	cp	r18, r1
    363a:	31 05       	cpc	r19, r1
    363c:	09 f1       	breq	.+66     	; 0x3680 <free+0xa2>
    363e:	d9 01       	movw	r26, r18
    3640:	f3 cf       	rjmp	.-26     	; 0x3628 <free+0x4a>
    3642:	9d 01       	movw	r18, r26
    3644:	da 01       	movw	r26, r20
    3646:	33 83       	std	Z+3, r19	; 0x03
    3648:	22 83       	std	Z+2, r18	; 0x02
    364a:	60 81       	ld	r22, Z
    364c:	71 81       	ldd	r23, Z+1	; 0x01
    364e:	86 0f       	add	r24, r22
    3650:	97 1f       	adc	r25, r23
    3652:	82 17       	cp	r24, r18
    3654:	93 07       	cpc	r25, r19
    3656:	69 f4       	brne	.+26     	; 0x3672 <free+0x94>
    3658:	ec 01       	movw	r28, r24
    365a:	28 81       	ld	r18, Y
    365c:	39 81       	ldd	r19, Y+1	; 0x01
    365e:	26 0f       	add	r18, r22
    3660:	37 1f       	adc	r19, r23
    3662:	2e 5f       	subi	r18, 0xFE	; 254
    3664:	3f 4f       	sbci	r19, 0xFF	; 255
    3666:	31 83       	std	Z+1, r19	; 0x01
    3668:	20 83       	st	Z, r18
    366a:	8a 81       	ldd	r24, Y+2	; 0x02
    366c:	9b 81       	ldd	r25, Y+3	; 0x03
    366e:	93 83       	std	Z+3, r25	; 0x03
    3670:	82 83       	std	Z+2, r24	; 0x02
    3672:	45 2b       	or	r20, r21
    3674:	29 f4       	brne	.+10     	; 0x3680 <free+0xa2>
    3676:	f0 93 ab 02 	sts	0x02AB, r31
    367a:	e0 93 aa 02 	sts	0x02AA, r30
    367e:	42 c0       	rjmp	.+132    	; 0x3704 <free+0x126>
    3680:	13 96       	adiw	r26, 0x03	; 3
    3682:	fc 93       	st	X, r31
    3684:	ee 93       	st	-X, r30
    3686:	12 97       	sbiw	r26, 0x02	; 2
    3688:	ed 01       	movw	r28, r26
    368a:	49 91       	ld	r20, Y+
    368c:	59 91       	ld	r21, Y+
    368e:	9e 01       	movw	r18, r28
    3690:	24 0f       	add	r18, r20
    3692:	35 1f       	adc	r19, r21
    3694:	e2 17       	cp	r30, r18
    3696:	f3 07       	cpc	r31, r19
    3698:	71 f4       	brne	.+28     	; 0x36b6 <free+0xd8>
    369a:	80 81       	ld	r24, Z
    369c:	91 81       	ldd	r25, Z+1	; 0x01
    369e:	84 0f       	add	r24, r20
    36a0:	95 1f       	adc	r25, r21
    36a2:	02 96       	adiw	r24, 0x02	; 2
    36a4:	11 96       	adiw	r26, 0x01	; 1
    36a6:	9c 93       	st	X, r25
    36a8:	8e 93       	st	-X, r24
    36aa:	82 81       	ldd	r24, Z+2	; 0x02
    36ac:	93 81       	ldd	r25, Z+3	; 0x03
    36ae:	13 96       	adiw	r26, 0x03	; 3
    36b0:	9c 93       	st	X, r25
    36b2:	8e 93       	st	-X, r24
    36b4:	12 97       	sbiw	r26, 0x02	; 2
    36b6:	e0 e0       	ldi	r30, 0x00	; 0
    36b8:	f0 e0       	ldi	r31, 0x00	; 0
    36ba:	d8 01       	movw	r26, r16
    36bc:	12 96       	adiw	r26, 0x02	; 2
    36be:	8d 91       	ld	r24, X+
    36c0:	9c 91       	ld	r25, X
    36c2:	13 97       	sbiw	r26, 0x03	; 3
    36c4:	00 97       	sbiw	r24, 0x00	; 0
    36c6:	19 f0       	breq	.+6      	; 0x36ce <free+0xf0>
    36c8:	f8 01       	movw	r30, r16
    36ca:	8c 01       	movw	r16, r24
    36cc:	f6 cf       	rjmp	.-20     	; 0x36ba <free+0xdc>
    36ce:	8d 91       	ld	r24, X+
    36d0:	9c 91       	ld	r25, X
    36d2:	98 01       	movw	r18, r16
    36d4:	2e 5f       	subi	r18, 0xFE	; 254
    36d6:	3f 4f       	sbci	r19, 0xFF	; 255
    36d8:	82 0f       	add	r24, r18
    36da:	93 1f       	adc	r25, r19
    36dc:	20 91 a8 02 	lds	r18, 0x02A8
    36e0:	30 91 a9 02 	lds	r19, 0x02A9
    36e4:	28 17       	cp	r18, r24
    36e6:	39 07       	cpc	r19, r25
    36e8:	69 f4       	brne	.+26     	; 0x3704 <free+0x126>
    36ea:	30 97       	sbiw	r30, 0x00	; 0
    36ec:	29 f4       	brne	.+10     	; 0x36f8 <free+0x11a>
    36ee:	10 92 ab 02 	sts	0x02AB, r1
    36f2:	10 92 aa 02 	sts	0x02AA, r1
    36f6:	02 c0       	rjmp	.+4      	; 0x36fc <free+0x11e>
    36f8:	13 82       	std	Z+3, r1	; 0x03
    36fa:	12 82       	std	Z+2, r1	; 0x02
    36fc:	10 93 a9 02 	sts	0x02A9, r17
    3700:	00 93 a8 02 	sts	0x02A8, r16
    3704:	df 91       	pop	r29
    3706:	cf 91       	pop	r28
    3708:	1f 91       	pop	r17
    370a:	0f 91       	pop	r16
    370c:	08 95       	ret

0000370e <strnlen_P>:
    370e:	fc 01       	movw	r30, r24
    3710:	05 90       	lpm	r0, Z+
    3712:	61 50       	subi	r22, 0x01	; 1
    3714:	70 40       	sbci	r23, 0x00	; 0
    3716:	01 10       	cpse	r0, r1
    3718:	d8 f7       	brcc	.-10     	; 0x3710 <strnlen_P+0x2>
    371a:	80 95       	com	r24
    371c:	90 95       	com	r25
    371e:	8e 0f       	add	r24, r30
    3720:	9f 1f       	adc	r25, r31
    3722:	08 95       	ret

00003724 <memset>:
    3724:	dc 01       	movw	r26, r24
    3726:	01 c0       	rjmp	.+2      	; 0x372a <memset+0x6>
    3728:	6d 93       	st	X+, r22
    372a:	41 50       	subi	r20, 0x01	; 1
    372c:	50 40       	sbci	r21, 0x00	; 0
    372e:	e0 f7       	brcc	.-8      	; 0x3728 <memset+0x4>
    3730:	08 95       	ret

00003732 <strnlen>:
    3732:	fc 01       	movw	r30, r24
    3734:	61 50       	subi	r22, 0x01	; 1
    3736:	70 40       	sbci	r23, 0x00	; 0
    3738:	01 90       	ld	r0, Z+
    373a:	01 10       	cpse	r0, r1
    373c:	d8 f7       	brcc	.-10     	; 0x3734 <strnlen+0x2>
    373e:	80 95       	com	r24
    3740:	90 95       	com	r25
    3742:	8e 0f       	add	r24, r30
    3744:	9f 1f       	adc	r25, r31
    3746:	08 95       	ret

00003748 <fputc>:
    3748:	0f 93       	push	r16
    374a:	1f 93       	push	r17
    374c:	cf 93       	push	r28
    374e:	df 93       	push	r29
    3750:	fb 01       	movw	r30, r22
    3752:	23 81       	ldd	r18, Z+3	; 0x03
    3754:	21 fd       	sbrc	r18, 1
    3756:	03 c0       	rjmp	.+6      	; 0x375e <fputc+0x16>
    3758:	8f ef       	ldi	r24, 0xFF	; 255
    375a:	9f ef       	ldi	r25, 0xFF	; 255
    375c:	28 c0       	rjmp	.+80     	; 0x37ae <fputc+0x66>
    375e:	22 ff       	sbrs	r18, 2
    3760:	16 c0       	rjmp	.+44     	; 0x378e <fputc+0x46>
    3762:	46 81       	ldd	r20, Z+6	; 0x06
    3764:	57 81       	ldd	r21, Z+7	; 0x07
    3766:	24 81       	ldd	r18, Z+4	; 0x04
    3768:	35 81       	ldd	r19, Z+5	; 0x05
    376a:	42 17       	cp	r20, r18
    376c:	53 07       	cpc	r21, r19
    376e:	44 f4       	brge	.+16     	; 0x3780 <fputc+0x38>
    3770:	a0 81       	ld	r26, Z
    3772:	b1 81       	ldd	r27, Z+1	; 0x01
    3774:	9d 01       	movw	r18, r26
    3776:	2f 5f       	subi	r18, 0xFF	; 255
    3778:	3f 4f       	sbci	r19, 0xFF	; 255
    377a:	31 83       	std	Z+1, r19	; 0x01
    377c:	20 83       	st	Z, r18
    377e:	8c 93       	st	X, r24
    3780:	26 81       	ldd	r18, Z+6	; 0x06
    3782:	37 81       	ldd	r19, Z+7	; 0x07
    3784:	2f 5f       	subi	r18, 0xFF	; 255
    3786:	3f 4f       	sbci	r19, 0xFF	; 255
    3788:	37 83       	std	Z+7, r19	; 0x07
    378a:	26 83       	std	Z+6, r18	; 0x06
    378c:	10 c0       	rjmp	.+32     	; 0x37ae <fputc+0x66>
    378e:	eb 01       	movw	r28, r22
    3790:	09 2f       	mov	r16, r25
    3792:	18 2f       	mov	r17, r24
    3794:	00 84       	ldd	r0, Z+8	; 0x08
    3796:	f1 85       	ldd	r31, Z+9	; 0x09
    3798:	e0 2d       	mov	r30, r0
    379a:	09 95       	icall
    379c:	89 2b       	or	r24, r25
    379e:	e1 f6       	brne	.-72     	; 0x3758 <fputc+0x10>
    37a0:	8e 81       	ldd	r24, Y+6	; 0x06
    37a2:	9f 81       	ldd	r25, Y+7	; 0x07
    37a4:	01 96       	adiw	r24, 0x01	; 1
    37a6:	9f 83       	std	Y+7, r25	; 0x07
    37a8:	8e 83       	std	Y+6, r24	; 0x06
    37aa:	81 2f       	mov	r24, r17
    37ac:	90 2f       	mov	r25, r16
    37ae:	df 91       	pop	r29
    37b0:	cf 91       	pop	r28
    37b2:	1f 91       	pop	r17
    37b4:	0f 91       	pop	r16
    37b6:	08 95       	ret

000037b8 <__ultoa_invert>:
    37b8:	fa 01       	movw	r30, r20
    37ba:	aa 27       	eor	r26, r26
    37bc:	28 30       	cpi	r18, 0x08	; 8
    37be:	51 f1       	breq	.+84     	; 0x3814 <__ultoa_invert+0x5c>
    37c0:	20 31       	cpi	r18, 0x10	; 16
    37c2:	81 f1       	breq	.+96     	; 0x3824 <__ultoa_invert+0x6c>
    37c4:	e8 94       	clt
    37c6:	6f 93       	push	r22
    37c8:	6e 7f       	andi	r22, 0xFE	; 254
    37ca:	6e 5f       	subi	r22, 0xFE	; 254
    37cc:	7f 4f       	sbci	r23, 0xFF	; 255
    37ce:	8f 4f       	sbci	r24, 0xFF	; 255
    37d0:	9f 4f       	sbci	r25, 0xFF	; 255
    37d2:	af 4f       	sbci	r26, 0xFF	; 255
    37d4:	b1 e0       	ldi	r27, 0x01	; 1
    37d6:	3e d0       	rcall	.+124    	; 0x3854 <__ultoa_invert+0x9c>
    37d8:	b4 e0       	ldi	r27, 0x04	; 4
    37da:	3c d0       	rcall	.+120    	; 0x3854 <__ultoa_invert+0x9c>
    37dc:	67 0f       	add	r22, r23
    37de:	78 1f       	adc	r23, r24
    37e0:	89 1f       	adc	r24, r25
    37e2:	9a 1f       	adc	r25, r26
    37e4:	a1 1d       	adc	r26, r1
    37e6:	68 0f       	add	r22, r24
    37e8:	79 1f       	adc	r23, r25
    37ea:	8a 1f       	adc	r24, r26
    37ec:	91 1d       	adc	r25, r1
    37ee:	a1 1d       	adc	r26, r1
    37f0:	6a 0f       	add	r22, r26
    37f2:	71 1d       	adc	r23, r1
    37f4:	81 1d       	adc	r24, r1
    37f6:	91 1d       	adc	r25, r1
    37f8:	a1 1d       	adc	r26, r1
    37fa:	20 d0       	rcall	.+64     	; 0x383c <__ultoa_invert+0x84>
    37fc:	09 f4       	brne	.+2      	; 0x3800 <__ultoa_invert+0x48>
    37fe:	68 94       	set
    3800:	3f 91       	pop	r19
    3802:	2a e0       	ldi	r18, 0x0A	; 10
    3804:	26 9f       	mul	r18, r22
    3806:	11 24       	eor	r1, r1
    3808:	30 19       	sub	r19, r0
    380a:	30 5d       	subi	r19, 0xD0	; 208
    380c:	31 93       	st	Z+, r19
    380e:	de f6       	brtc	.-74     	; 0x37c6 <__ultoa_invert+0xe>
    3810:	cf 01       	movw	r24, r30
    3812:	08 95       	ret
    3814:	46 2f       	mov	r20, r22
    3816:	47 70       	andi	r20, 0x07	; 7
    3818:	40 5d       	subi	r20, 0xD0	; 208
    381a:	41 93       	st	Z+, r20
    381c:	b3 e0       	ldi	r27, 0x03	; 3
    381e:	0f d0       	rcall	.+30     	; 0x383e <__ultoa_invert+0x86>
    3820:	c9 f7       	brne	.-14     	; 0x3814 <__ultoa_invert+0x5c>
    3822:	f6 cf       	rjmp	.-20     	; 0x3810 <__ultoa_invert+0x58>
    3824:	46 2f       	mov	r20, r22
    3826:	4f 70       	andi	r20, 0x0F	; 15
    3828:	40 5d       	subi	r20, 0xD0	; 208
    382a:	4a 33       	cpi	r20, 0x3A	; 58
    382c:	18 f0       	brcs	.+6      	; 0x3834 <__ultoa_invert+0x7c>
    382e:	49 5d       	subi	r20, 0xD9	; 217
    3830:	31 fd       	sbrc	r19, 1
    3832:	40 52       	subi	r20, 0x20	; 32
    3834:	41 93       	st	Z+, r20
    3836:	02 d0       	rcall	.+4      	; 0x383c <__ultoa_invert+0x84>
    3838:	a9 f7       	brne	.-22     	; 0x3824 <__ultoa_invert+0x6c>
    383a:	ea cf       	rjmp	.-44     	; 0x3810 <__ultoa_invert+0x58>
    383c:	b4 e0       	ldi	r27, 0x04	; 4
    383e:	a6 95       	lsr	r26
    3840:	97 95       	ror	r25
    3842:	87 95       	ror	r24
    3844:	77 95       	ror	r23
    3846:	67 95       	ror	r22
    3848:	ba 95       	dec	r27
    384a:	c9 f7       	brne	.-14     	; 0x383e <__ultoa_invert+0x86>
    384c:	00 97       	sbiw	r24, 0x00	; 0
    384e:	61 05       	cpc	r22, r1
    3850:	71 05       	cpc	r23, r1
    3852:	08 95       	ret
    3854:	9b 01       	movw	r18, r22
    3856:	ac 01       	movw	r20, r24
    3858:	0a 2e       	mov	r0, r26
    385a:	06 94       	lsr	r0
    385c:	57 95       	ror	r21
    385e:	47 95       	ror	r20
    3860:	37 95       	ror	r19
    3862:	27 95       	ror	r18
    3864:	ba 95       	dec	r27
    3866:	c9 f7       	brne	.-14     	; 0x385a <__ultoa_invert+0xa2>
    3868:	62 0f       	add	r22, r18
    386a:	73 1f       	adc	r23, r19
    386c:	84 1f       	adc	r24, r20
    386e:	95 1f       	adc	r25, r21
    3870:	a0 1d       	adc	r26, r0
    3872:	08 95       	ret

00003874 <_exit>:
    3874:	f8 94       	cli

00003876 <__stop_program>:
    3876:	ff cf       	rjmp	.-2      	; 0x3876 <__stop_program>
