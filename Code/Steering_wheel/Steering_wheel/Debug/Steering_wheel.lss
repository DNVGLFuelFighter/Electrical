
Steering_wheel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00000db4  00000e48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000db4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000033  0080013a  0080013a  00000e82  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e82  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ee0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000f20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c3c  00000000  00000000  00001028  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006bc  00000000  00000000  00001c64  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009a0  00000000  00000000  00002320  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000021c  00000000  00000000  00002cc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000393  00000000  00000000  00002edc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000692  00000000  00000000  0000326f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00003901  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
   2:	00 00       	nop
   4:	64 c0       	rjmp	.+200    	; 0xce <__bad_interrupt>
   6:	00 00       	nop
   8:	62 c0       	rjmp	.+196    	; 0xce <__bad_interrupt>
   a:	00 00       	nop
   c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
   e:	00 00       	nop
  10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
  12:	00 00       	nop
  14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
  16:	00 00       	nop
  18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
  1a:	00 00       	nop
  1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
  1e:	00 00       	nop
  20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
  22:	00 00       	nop
  24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
  26:	00 00       	nop
  28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
  2a:	00 00       	nop
  2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
  2e:	00 00       	nop
  30:	4e c0       	rjmp	.+156    	; 0xce <__bad_interrupt>
  32:	00 00       	nop
  34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
  36:	00 00       	nop
  38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
  3a:	00 00       	nop
  3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
  3e:	00 00       	nop
  40:	46 c0       	rjmp	.+140    	; 0xce <__bad_interrupt>
  42:	00 00       	nop
  44:	44 c0       	rjmp	.+136    	; 0xce <__bad_interrupt>
  46:	00 00       	nop
  48:	81 c0       	rjmp	.+258    	; 0x14c <__vector_18>
  4a:	00 00       	nop
  4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
  4e:	00 00       	nop
  50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
  52:	00 00       	nop
  54:	3c c0       	rjmp	.+120    	; 0xce <__bad_interrupt>
  56:	00 00       	nop
  58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
  5a:	00 00       	nop
  5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
  5e:	00 00       	nop
  60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
  62:	00 00       	nop
  64:	34 c0       	rjmp	.+104    	; 0xce <__bad_interrupt>
  66:	00 00       	nop
  68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
  6a:	00 00       	nop
  6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
  6e:	00 00       	nop
  70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
  72:	00 00       	nop
  74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
  76:	00 00       	nop
  78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
  7a:	00 00       	nop
  7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
  7e:	00 00       	nop
  80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
  82:	00 00       	nop
  84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
  86:	00 00       	nop
  88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
  8a:	00 00       	nop
  8c:	20 c0       	rjmp	.+64     	; 0xce <__bad_interrupt>
  8e:	00 00       	nop
  90:	1e c0       	rjmp	.+60     	; 0xce <__bad_interrupt>
	...

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	11 e0       	ldi	r17, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	e4 eb       	ldi	r30, 0xB4	; 180
  a8:	fd e0       	ldi	r31, 0x0D	; 13
  aa:	00 e0       	ldi	r16, 0x00	; 0
  ac:	0b bf       	out	0x3b, r16	; 59
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
  b0:	07 90       	elpm	r0, Z+
  b2:	0d 92       	st	X+, r0
  b4:	aa 33       	cpi	r26, 0x3A	; 58
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	aa e3       	ldi	r26, 0x3A	; 58
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	ad 36       	cpi	r26, 0x6D	; 109
  c6:	b2 07       	cpc	r27, r18
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	61 d1       	rcall	.+706    	; 0x38e <main>
  cc:	71 c6       	rjmp	.+3298   	; 0xdb0 <_exit>

000000ce <__bad_interrupt>:
  ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <adc_init>:
 *  Author: Vilius
 */ 
#include "adc.h"

void adc_init( void) {
	clear_bit(DDRF, DDF0);
  d0:	80 98       	cbi	0x10, 0	; 16
	
	/* Voltage ref AVcc with external capacitor on AREF pin */
	set_bit(ADMUX, REFS0);
  d2:	ec e7       	ldi	r30, 0x7C	; 124
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	80 64       	ori	r24, 0x40	; 64
  da:	80 83       	st	Z, r24
	/* Select prescaler to 64 --> conversion f= 125kHz */
	set_bit(ADCSRA, ADPS2);
  dc:	ea e7       	ldi	r30, 0x7A	; 122
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	84 60       	ori	r24, 0x04	; 4
  e4:	80 83       	st	Z, r24
	set_bit(ADCSRA, ADPS1);
  e6:	80 81       	ld	r24, Z
  e8:	82 60       	ori	r24, 0x02	; 2
  ea:	80 83       	st	Z, r24
	/* Enable the ADC */
	set_bit(ADCSRA, ADEN);
  ec:	80 81       	ld	r24, Z
  ee:	80 68       	ori	r24, 0x80	; 128
  f0:	80 83       	st	Z, r24
  f2:	08 95       	ret

000000f4 <adc_sleep>:
	//set_bit(ADCSRA, ADIE);
}

void adc_sleep( void) {
	/* Wait for the conversion to complete */
	while(test_bit(ADCSRA, ADSC));
  f4:	ea e7       	ldi	r30, 0x7A	; 122
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	86 fd       	sbrc	r24, 6
  fc:	fd cf       	rjmp	.-6      	; 0xf8 <adc_sleep+0x4>
	/* Turn off the ADC */
	clear_bit(ADCSRA, ADEN);
  fe:	ea e7       	ldi	r30, 0x7A	; 122
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	8f 77       	andi	r24, 0x7F	; 127
 106:	80 83       	st	Z, r24
 108:	08 95       	ret

0000010a <adc_input>:
}

void adc_input(int ref, CAN_packet* p) {
	/*Select the reference channel */
	if (ref==SPEED)
 10a:	00 97       	sbiw	r24, 0x00	; 0
 10c:	29 f4       	brne	.+10     	; 0x118 <adc_input+0xe>
		ADMUX |= 0x00;
 10e:	ec e7       	ldi	r30, 0x7C	; 124
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	80 83       	st	Z, r24
 116:	07 c0       	rjmp	.+14     	; 0x126 <adc_input+0x1c>
	else if (ref==FANS)
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	29 f4       	brne	.+10     	; 0x126 <adc_input+0x1c>
		ADMUX |= 0x01;
 11c:	ec e7       	ldi	r30, 0x7C	; 124
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	81 60       	ori	r24, 0x01	; 1
 124:	80 83       	st	Z, r24
	/* Start the conversion */
	set_bit(ADCSRA, ADSC);
 126:	ea e7       	ldi	r30, 0x7A	; 122
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	80 64       	ori	r24, 0x40	; 64
 12e:	80 83       	st	Z, r24
	/* Wait for the conversion to complete */
	while(test_bit(ADCSRA, ADSC));
 130:	80 81       	ld	r24, Z
 132:	86 fd       	sbrc	r24, 6
 134:	fd cf       	rjmp	.-6      	; 0x130 <adc_input+0x26>
	p->data[1] = (ADC>>2); // left shift to fit into 8-bit msg
 136:	80 91 78 00 	lds	r24, 0x0078
 13a:	90 91 79 00 	lds	r25, 0x0079
 13e:	96 95       	lsr	r25
 140:	87 95       	ror	r24
 142:	96 95       	lsr	r25
 144:	87 95       	ror	r24
 146:	fb 01       	movw	r30, r22
 148:	84 83       	std	Z+4, r24	; 0x04
 14a:	08 95       	ret

0000014c <__vector_18>:
		}
	CANGCON |= 0x02;
	CANGIE=(1<<ENIT) | (1<< ENRX);
}
	
void can_health(void) {
 14c:	1f 92       	push	r1
 14e:	0f 92       	push	r0
 150:	0f b6       	in	r0, 0x3f	; 63
 152:	0f 92       	push	r0
 154:	11 24       	eor	r1, r1
 156:	0b b6       	in	r0, 0x3b	; 59
 158:	0f 92       	push	r0
 15a:	2f 93       	push	r18
 15c:	3f 93       	push	r19
 15e:	4f 93       	push	r20
 160:	5f 93       	push	r21
 162:	6f 93       	push	r22
 164:	7f 93       	push	r23
 166:	8f 93       	push	r24
 168:	9f 93       	push	r25
 16a:	af 93       	push	r26
 16c:	bf 93       	push	r27
 16e:	cf 93       	push	r28
 170:	ef 93       	push	r30
 172:	ff 93       	push	r31
 174:	ed ee       	ldi	r30, 0xED	; 237
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	c0 81       	ld	r28, Z
 17a:	80 91 ec 00 	lds	r24, 0x00EC
 17e:	68 2f       	mov	r22, r24
 180:	70 e0       	ldi	r23, 0x00	; 0
 182:	80 7f       	andi	r24, 0xF0	; 240
 184:	80 83       	st	Z, r24
 186:	72 95       	swap	r23
 188:	62 95       	swap	r22
 18a:	6f 70       	andi	r22, 0x0F	; 15
 18c:	67 27       	eor	r22, r23
 18e:	7f 70       	andi	r23, 0x0F	; 15
 190:	67 27       	eor	r22, r23
 192:	80 91 ee 00 	lds	r24, 0x00EE
 196:	8f 75       	andi	r24, 0x5F	; 95
 198:	09 f0       	breq	.+2      	; 0x19c <__vector_18+0x50>
 19a:	98 95       	break
 19c:	20 91 f2 00 	lds	r18, 0x00F2
 1a0:	80 91 f3 00 	lds	r24, 0x00F3
 1a4:	ea e3       	ldi	r30, 0x3A	; 58
 1a6:	f1 e0       	ldi	r31, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	88 0f       	add	r24, r24
 1b0:	99 1f       	adc	r25, r25
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	22 95       	swap	r18
 1b8:	26 95       	lsr	r18
 1ba:	27 70       	andi	r18, 0x07	; 7
 1bc:	82 2b       	or	r24, r18
 1be:	91 83       	std	Z+1, r25	; 0x01
 1c0:	80 83       	st	Z, r24
 1c2:	80 91 ef 00 	lds	r24, 0x00EF
 1c6:	8f 70       	andi	r24, 0x0F	; 15
 1c8:	82 83       	std	Z+2, r24	; 0x02
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	00 97       	sbiw	r24, 0x00	; 0
 1ce:	59 f0       	breq	.+22     	; 0x1e6 <__vector_18+0x9a>
 1d0:	ed e3       	ldi	r30, 0x3D	; 61
 1d2:	f1 e0       	ldi	r31, 0x01	; 1
 1d4:	83 5c       	subi	r24, 0xC3	; 195
 1d6:	9e 4f       	sbci	r25, 0xFE	; 254
 1d8:	aa ef       	ldi	r26, 0xFA	; 250
 1da:	b0 e0       	ldi	r27, 0x00	; 0
 1dc:	2c 91       	ld	r18, X
 1de:	21 93       	st	Z+, r18
 1e0:	e8 17       	cp	r30, r24
 1e2:	f9 07       	cpc	r31, r25
 1e4:	d9 f7       	brne	.-10     	; 0x1dc <__vector_18+0x90>
 1e6:	10 92 ee 00 	sts	0x00EE, r1
 1ea:	80 e8       	ldi	r24, 0x80	; 128
 1ec:	80 93 ef 00 	sts	0x00EF, r24
 1f0:	fb 01       	movw	r30, r22
 1f2:	ee 0f       	add	r30, r30
 1f4:	ff 1f       	adc	r31, r31
 1f6:	eb 5b       	subi	r30, 0xBB	; 187
 1f8:	fe 4f       	sbci	r31, 0xFE	; 254
 1fa:	01 90       	ld	r0, Z+
 1fc:	f0 81       	ld	r31, Z
 1fe:	e0 2d       	mov	r30, r0
 200:	8a e3       	ldi	r24, 0x3A	; 58
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	09 95       	icall
 206:	c0 93 ed 00 	sts	0x00ED, r28
 20a:	ff 91       	pop	r31
 20c:	ef 91       	pop	r30
 20e:	cf 91       	pop	r28
 210:	bf 91       	pop	r27
 212:	af 91       	pop	r26
 214:	9f 91       	pop	r25
 216:	8f 91       	pop	r24
 218:	7f 91       	pop	r23
 21a:	6f 91       	pop	r22
 21c:	5f 91       	pop	r21
 21e:	4f 91       	pop	r20
 220:	3f 91       	pop	r19
 222:	2f 91       	pop	r18
 224:	0f 90       	pop	r0
 226:	0b be       	out	0x3b, r0	; 59
 228:	0f 90       	pop	r0
 22a:	0f be       	out	0x3f, r0	; 63
 22c:	0f 90       	pop	r0
 22e:	1f 90       	pop	r1
 230:	18 95       	reti

00000232 <can_tx>:
 232:	cf 93       	push	r28
 234:	df 93       	push	r29
 236:	fb 01       	movw	r30, r22
 238:	20 81       	ld	r18, Z
 23a:	31 81       	ldd	r19, Z+1	; 0x01
 23c:	21 15       	cp	r18, r1
 23e:	38 40       	sbci	r19, 0x08	; 8
 240:	08 f0       	brcs	.+2      	; 0x244 <can_tx+0x12>
 242:	98 95       	break
 244:	92 81       	ldd	r25, Z+2	; 0x02
 246:	99 30       	cpi	r25, 0x09	; 9
 248:	08 f0       	brcs	.+2      	; 0x24c <can_tx+0x1a>
 24a:	98 95       	break
 24c:	8f 30       	cpi	r24, 0x0F	; 15
 24e:	08 f0       	brcs	.+2      	; 0x252 <can_tx+0x20>
 250:	98 95       	break
 252:	82 95       	swap	r24
 254:	80 7f       	andi	r24, 0xF0	; 240
 256:	80 93 ed 00 	sts	0x00ED, r24
 25a:	80 91 ef 00 	lds	r24, 0x00EF
 25e:	80 7c       	andi	r24, 0xC0	; 192
 260:	21 f0       	breq	.+8      	; 0x26a <can_tx+0x38>
 262:	80 91 ee 00 	lds	r24, 0x00EE
 266:	86 ff       	sbrs	r24, 6
 268:	55 c0       	rjmp	.+170    	; 0x314 <can_tx+0xe2>
 26a:	10 92 ee 00 	sts	0x00EE, r1
 26e:	10 92 ef 00 	sts	0x00EF, r1
 272:	82 81       	ldd	r24, Z+2	; 0x02
 274:	8f 3f       	cpi	r24, 0xFF	; 255
 276:	61 f1       	breq	.+88     	; 0x2d0 <can_tx+0x9e>
 278:	80 81       	ld	r24, Z
 27a:	91 81       	ldd	r25, Z+1	; 0x01
 27c:	96 95       	lsr	r25
 27e:	87 95       	ror	r24
 280:	96 95       	lsr	r25
 282:	87 95       	ror	r24
 284:	96 95       	lsr	r25
 286:	87 95       	ror	r24
 288:	80 93 f3 00 	sts	0x00F3, r24
 28c:	80 81       	ld	r24, Z
 28e:	82 95       	swap	r24
 290:	88 0f       	add	r24, r24
 292:	80 7e       	andi	r24, 0xE0	; 224
 294:	80 93 f2 00 	sts	0x00F2, r24
 298:	10 92 f1 00 	sts	0x00F1, r1
 29c:	10 92 f0 00 	sts	0x00F0, r1
 2a0:	22 81       	ldd	r18, Z+2	; 0x02
 2a2:	22 23       	and	r18, r18
 2a4:	79 f0       	breq	.+30     	; 0x2c4 <can_tx+0x92>
 2a6:	df 01       	movw	r26, r30
 2a8:	13 96       	adiw	r26, 0x03	; 3
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	ca ef       	ldi	r28, 0xFA	; 250
 2b0:	d0 e0       	ldi	r29, 0x00	; 0
 2b2:	2d 91       	ld	r18, X+
 2b4:	28 83       	st	Y, r18
 2b6:	01 96       	adiw	r24, 0x01	; 1
 2b8:	22 81       	ldd	r18, Z+2	; 0x02
 2ba:	42 2f       	mov	r20, r18
 2bc:	50 e0       	ldi	r21, 0x00	; 0
 2be:	84 17       	cp	r24, r20
 2c0:	95 07       	cpc	r25, r21
 2c2:	b8 f3       	brcs	.-18     	; 0x2b2 <can_tx+0x80>
 2c4:	ef ee       	ldi	r30, 0xEF	; 239
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	80 81       	ld	r24, Z
 2ca:	28 2b       	or	r18, r24
 2cc:	20 83       	st	Z, r18
 2ce:	1b c0       	rjmp	.+54     	; 0x306 <can_tx+0xd4>
 2d0:	80 81       	ld	r24, Z
 2d2:	91 81       	ldd	r25, Z+1	; 0x01
 2d4:	96 95       	lsr	r25
 2d6:	87 95       	ror	r24
 2d8:	96 95       	lsr	r25
 2da:	87 95       	ror	r24
 2dc:	96 95       	lsr	r25
 2de:	87 95       	ror	r24
 2e0:	80 93 f3 00 	sts	0x00F3, r24
 2e4:	80 81       	ld	r24, Z
 2e6:	82 95       	swap	r24
 2e8:	88 0f       	add	r24, r24
 2ea:	80 7e       	andi	r24, 0xE0	; 224
 2ec:	80 93 f2 00 	sts	0x00F2, r24
 2f0:	10 92 f1 00 	sts	0x00F1, r1
 2f4:	84 e0       	ldi	r24, 0x04	; 4
 2f6:	80 93 f0 00 	sts	0x00F0, r24
 2fa:	af ee       	ldi	r26, 0xEF	; 239
 2fc:	b0 e0       	ldi	r27, 0x00	; 0
 2fe:	9c 91       	ld	r25, X
 300:	82 81       	ldd	r24, Z+2	; 0x02
 302:	89 2b       	or	r24, r25
 304:	8c 93       	st	X, r24
 306:	ef ee       	ldi	r30, 0xEF	; 239
 308:	f0 e0       	ldi	r31, 0x00	; 0
 30a:	80 81       	ld	r24, Z
 30c:	80 64       	ori	r24, 0x40	; 64
 30e:	80 83       	st	Z, r24
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	01 c0       	rjmp	.+2      	; 0x316 <can_tx+0xe4>
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	df 91       	pop	r29
 318:	cf 91       	pop	r28
 31a:	08 95       	ret

0000031c <can_init>:
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	86 e0       	ldi	r24, 0x06	; 6
 322:	80 93 e2 00 	sts	0x00E2, r24
 326:	8c e0       	ldi	r24, 0x0C	; 12
 328:	80 93 e3 00 	sts	0x00E3, r24
 32c:	8a e5       	ldi	r24, 0x5A	; 90
 32e:	80 93 e4 00 	sts	0x00E4, r24
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	cd ee       	ldi	r28, 0xED	; 237
 336:	d0 e0       	ldi	r29, 0x00	; 0
 338:	ae ee       	ldi	r26, 0xEE	; 238
 33a:	b0 e0       	ldi	r27, 0x00	; 0
 33c:	ef ee       	ldi	r30, 0xEF	; 239
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	98 2f       	mov	r25, r24
 342:	92 95       	swap	r25
 344:	90 7f       	andi	r25, 0xF0	; 240
 346:	98 83       	st	Y, r25
 348:	1c 92       	st	X, r1
 34a:	10 82       	st	Z, r1
 34c:	8f 5f       	subi	r24, 0xFF	; 255
 34e:	8f 30       	cpi	r24, 0x0F	; 15
 350:	b9 f7       	brne	.-18     	; 0x340 <can_init+0x24>
 352:	e8 ed       	ldi	r30, 0xD8	; 216
 354:	f0 e0       	ldi	r31, 0x00	; 0
 356:	80 81       	ld	r24, Z
 358:	82 60       	ori	r24, 0x02	; 2
 35a:	80 83       	st	Z, r24
 35c:	80 ea       	ldi	r24, 0xA0	; 160
 35e:	80 93 db 00 	sts	0x00DB, r24
 362:	df 91       	pop	r29
 364:	cf 91       	pop	r28
 366:	08 95       	ret

00000368 <can_packet_send>:
	*/
}

BOOL can_packet_send(char mob, CAN_packet *packet) {
	/* Clear global interrupts */
	cli();
 368:	f8 94       	cli
	BOOL result = can_tx(mob, packet);
 36a:	63 df       	rcall	.-314    	; 0x232 <can_tx>
	/* Set global interrupts */
	sei();
 36c:	78 94       	sei
	return result;
}
 36e:	08 95       	ret

00000370 <inits>:
	printf("\r\nInitialization complete");
}

void response(CAN_packet* p, unsigned int mob) {
	(void)mob;
	printf("\r\nReceived");
 370:	d5 df       	rcall	.-86     	; 0x31c <can_init>
 372:	61 e0       	ldi	r22, 0x01	; 1
 374:	83 e3       	ldi	r24, 0x33	; 51
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	b2 d0       	rcall	.+356    	; 0x4de <USART_init>
 37a:	6b d0       	rcall	.+214    	; 0x452 <sw_init>
 37c:	a9 de       	rcall	.-686    	; 0xd0 <adc_init>
 37e:	86 e0       	ldi	r24, 0x06	; 6
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	9f 93       	push	r25
 384:	8f 93       	push	r24
 386:	19 d1       	rcall	.+562    	; 0x5ba <printf>
 388:	0f 90       	pop	r0
 38a:	0f 90       	pop	r0
 38c:	08 95       	ret

0000038e <main>:
}

int main(void)
{
 38e:	cf 93       	push	r28
 390:	df 93       	push	r29
 392:	cd b7       	in	r28, 0x3d	; 61
 394:	de b7       	in	r29, 0x3e	; 62
 396:	66 97       	sbiw	r28, 0x16	; 22
 398:	0f b6       	in	r0, 0x3f	; 63
 39a:	f8 94       	cli
 39c:	de bf       	out	0x3e, r29	; 62
 39e:	0f be       	out	0x3f, r0	; 63
 3a0:	cd bf       	out	0x3d, r28	; 61
	/* Make two CAN packets */
	CAN_packet current;
	CAN_packet updated;
	
	/* Initialize module and packets*/
	inits();
 3a2:	e6 df       	rcall	.-52     	; 0x370 <inits>
	
	/* Initialize packets */
	current.id = ID_steeringWheel;
 3a4:	2f e1       	ldi	r18, 0x1F	; 31
 3a6:	30 e0       	ldi	r19, 0x00	; 0
 3a8:	3a 83       	std	Y+2, r19	; 0x02
 3aa:	29 83       	std	Y+1, r18	; 0x01
	current.length = 1;
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	8b 83       	std	Y+3, r24	; 0x03
	updated.id = ID_steeringWheel;
 3b0:	3d 87       	std	Y+13, r19	; 0x0d
 3b2:	2c 87       	std	Y+12, r18	; 0x0c
	updated.length = 1;
 3b4:	8e 87       	std	Y+14, r24	; 0x0e
	sw_input(&current);
 3b6:	ce 01       	movw	r24, r28
 3b8:	01 96       	adiw	r24, 0x01	; 1
 3ba:	5a d0       	rcall	.+180    	; 0x470 <sw_input>
	sw_input(&updated);
 3bc:	ce 01       	movw	r24, r28
 3be:	0c 96       	adiw	r24, 0x0c	; 12
 3c0:	57 d0       	rcall	.+174    	; 0x470 <sw_input>
	adc_input(SPEED, &current);
 3c2:	be 01       	movw	r22, r28
 3c4:	6f 5f       	subi	r22, 0xFF	; 255
 3c6:	7f 4f       	sbci	r23, 0xFF	; 255
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	9e de       	rcall	.-708    	; 0x10a <adc_input>
	adc_input(SPEED, &updated);
 3ce:	be 01       	movw	r22, r28
 3d0:	64 5f       	subi	r22, 0xF4	; 244
 3d2:	7f 4f       	sbci	r23, 0xFF	; 255
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	98 de       	rcall	.-720    	; 0x10a <adc_input>
	adc_sleep();
 3da:	8c de       	rcall	.-744    	; 0xf4 <adc_sleep>
			
			printf("\r\nUpdated data[0] - %u",updated.data[0]);
			*/
			/* Send a message with new data */
			ret = can_packet_send(1, &updated);
			current = updated;
 3dc:	0f 2e       	mov	r0, r31
 3de:	fb e0       	ldi	r31, 0x0B	; 11
 3e0:	ff 2e       	mov	r15, r31
 3e2:	f0 2d       	mov	r31, r0
		}
		if (ret) {
			printf("\r\nMessage sent");
 3e4:	0b e2       	ldi	r16, 0x2B	; 43
 3e6:	11 e0       	ldi	r17, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3e8:	2f ef       	ldi	r18, 0xFF	; 255
 3ea:	80 e7       	ldi	r24, 0x70	; 112
 3ec:	92 e0       	ldi	r25, 0x02	; 2
 3ee:	21 50       	subi	r18, 0x01	; 1
 3f0:	80 40       	sbci	r24, 0x00	; 0
 3f2:	90 40       	sbci	r25, 0x00	; 0
 3f4:	e1 f7       	brne	.-8      	; 0x3ee <main+0x60>
 3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <main+0x6a>
 3f8:	00 00       	nop
	adc_sleep();
	
    for(;;) {
		_delay_ms(100);
		/* Update one CAN_packet */
		sw_input(&updated); 
 3fa:	ce 01       	movw	r24, r28
 3fc:	0c 96       	adiw	r24, 0x0c	; 12
 3fe:	38 d0       	rcall	.+112    	; 0x470 <sw_input>
		adc_init();
 400:	67 de       	rcall	.-818    	; 0xd0 <adc_init>
		adc_input(SPEED, &updated);
 402:	be 01       	movw	r22, r28
 404:	64 5f       	subi	r22, 0xF4	; 244
 406:	7f 4f       	sbci	r23, 0xFF	; 255
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	7e de       	rcall	.-772    	; 0x10a <adc_input>
		adc_sleep();
 40e:	72 de       	rcall	.-796    	; 0xf4 <adc_sleep>
		int t = 1023;
		/* Compare the two packets */
		different = memcmp(current.data, updated.data, 8);
 410:	48 e0       	ldi	r20, 0x08	; 8
 412:	50 e0       	ldi	r21, 0x00	; 0
 414:	be 01       	movw	r22, r28
 416:	61 5f       	subi	r22, 0xF1	; 241
 418:	7f 4f       	sbci	r23, 0xFF	; 255
 41a:	ce 01       	movw	r24, r28
 41c:	04 96       	adiw	r24, 0x04	; 4
 41e:	76 d0       	rcall	.+236    	; 0x50c <memcmp>
		if (different) {
 420:	89 2b       	or	r24, r25
 422:	a9 f0       	breq	.+42     	; 0x44e <main+0xc0>
			/*printf("\r\nCurrent data[0] - %u",current.data[0]);
			
			printf("\r\nUpdated data[0] - %u",updated.data[0]);
			*/
			/* Send a message with new data */
			ret = can_packet_send(1, &updated);
 424:	be 01       	movw	r22, r28
 426:	64 5f       	subi	r22, 0xF4	; 244
 428:	7f 4f       	sbci	r23, 0xFF	; 255
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	9d df       	rcall	.-198    	; 0x368 <can_packet_send>
			current = updated;
 42e:	fe 01       	movw	r30, r28
 430:	3c 96       	adiw	r30, 0x0c	; 12
 432:	de 01       	movw	r26, r28
 434:	11 96       	adiw	r26, 0x01	; 1
 436:	9f 2d       	mov	r25, r15
 438:	01 90       	ld	r0, Z+
 43a:	0d 92       	st	X+, r0
 43c:	9a 95       	dec	r25
 43e:	e1 f7       	brne	.-8      	; 0x438 <main+0xaa>
		}
		if (ret) {
 440:	88 23       	and	r24, r24
 442:	29 f0       	breq	.+10     	; 0x44e <main+0xc0>
			printf("\r\nMessage sent");
 444:	1f 93       	push	r17
 446:	0f 93       	push	r16
 448:	b8 d0       	rcall	.+368    	; 0x5ba <printf>
 44a:	0f 90       	pop	r0
 44c:	0f 90       	pop	r0
			ret = FALSE;
		}
 		//TODO: if successfully read, stop sending!
		asm("sleep");;
 44e:	88 95       	sleep
	}
 450:	cb cf       	rjmp	.-106    	; 0x3e8 <main+0x5a>

00000452 <sw_init>:
CAN_packet updated;

void sw_init( void) {	
	/* Indicators init */
	/* Set PE3 and PE4 as inputs */
	clear_bit(DDRE, DDE3);
 452:	6b 98       	cbi	0x0d, 3	; 13
	clear_bit(DDRE, DDE4);
 454:	6c 98       	cbi	0x0d, 4	; 13
	/* Set PE3 and PE4 as high (pull up res) */
	set_bit(PORTE, PE3);
 456:	73 9a       	sbi	0x0e, 3	; 14
	set_bit(PORTE, PE4);	
 458:	74 9a       	sbi	0x0e, 4	; 14
	
	/* Whiper init */
	clear_bit(DDRE, DDE5);
 45a:	6d 98       	cbi	0x0d, 5	; 13
	set_bit(PORTE, PE5);
 45c:	75 9a       	sbi	0x0e, 5	; 14
	
	/* Horn init */
	clear_bit(DDRB, DDB4);
 45e:	24 98       	cbi	0x04, 4	; 4
	set_bit(PORTB, PB4);
 460:	2c 9a       	sbi	0x05, 4	; 5
	
	/* Deadman */
	clear_bit(DDRB, DDB3);
 462:	23 98       	cbi	0x04, 3	; 4
	set_bit(PORTB, PB3);
 464:	2b 9a       	sbi	0x05, 3	; 5
	
	/* Speed potentiometer uses adc_init() */
	
	/* Cruise control */
	clear_bit(DDRB, DDB2);
 466:	22 98       	cbi	0x04, 2	; 4
	clear_bit(DDRB, DDB1);
 468:	21 98       	cbi	0x04, 1	; 4
	set_bit(PORTB, PB2);
 46a:	2a 9a       	sbi	0x05, 2	; 5
	set_bit(PORTB, PB1);	
 46c:	29 9a       	sbi	0x05, 1	; 5
 46e:	08 95       	ret

00000470 <sw_input>:
}

void sw_input( CAN_packet* p) {	
 470:	fc 01       	movw	r30, r24
	/* Initialize data */
	p->data[0] = 0x00;
 472:	13 82       	std	Z+3, r1	; 0x03
	/* Read right/left indicator */
	if(!test_bit(PINE, PE4))
 474:	64 99       	sbic	0x0c, 4	; 12
 476:	03 c0       	rjmp	.+6      	; 0x47e <sw_input+0xe>
		p->data[0] |= (1<<0);
 478:	81 e0       	ldi	r24, 0x01	; 1
 47a:	83 83       	std	Z+3, r24	; 0x03
 47c:	04 c0       	rjmp	.+8      	; 0x486 <sw_input+0x16>
	else if (!test_bit(PINE, PE3))
 47e:	63 99       	sbic	0x0c, 3	; 12
 480:	02 c0       	rjmp	.+4      	; 0x486 <sw_input+0x16>
		p->data[0] |= (1<<1);	
 482:	82 e0       	ldi	r24, 0x02	; 2
 484:	83 83       	std	Z+3, r24	; 0x03
	/* Read cruise control */
	if(!test_bit(PINB, PB2))
 486:	1a 99       	sbic	0x03, 2	; 3
 488:	04 c0       	rjmp	.+8      	; 0x492 <sw_input+0x22>
		p->data[0] |= (1<<2);
 48a:	83 81       	ldd	r24, Z+3	; 0x03
 48c:	84 60       	ori	r24, 0x04	; 4
 48e:	83 83       	std	Z+3, r24	; 0x03
 490:	05 c0       	rjmp	.+10     	; 0x49c <sw_input+0x2c>
	else if(!test_bit(PINB, PB1))
 492:	19 99       	sbic	0x03, 1	; 3
 494:	03 c0       	rjmp	.+6      	; 0x49c <sw_input+0x2c>
		p->data[0] |= (1<<3);	
 496:	83 81       	ldd	r24, Z+3	; 0x03
 498:	88 60       	ori	r24, 0x08	; 8
 49a:	83 83       	std	Z+3, r24	; 0x03
	/* Read horn */
	if (!test_bit(PINB, PB4))
 49c:	1c 99       	sbic	0x03, 4	; 3
 49e:	03 c0       	rjmp	.+6      	; 0x4a6 <sw_input+0x36>
		p->data[0] |= (1<<4);
 4a0:	83 81       	ldd	r24, Z+3	; 0x03
 4a2:	80 61       	ori	r24, 0x10	; 16
 4a4:	83 83       	std	Z+3, r24	; 0x03
	/* Read whiper */
	if (!test_bit(PINE, PE5))
 4a6:	65 99       	sbic	0x0c, 5	; 12
 4a8:	03 c0       	rjmp	.+6      	; 0x4b0 <sw_input+0x40>
		p->data[0] |= (1<<5);
 4aa:	83 81       	ldd	r24, Z+3	; 0x03
 4ac:	80 62       	ori	r24, 0x20	; 32
 4ae:	83 83       	std	Z+3, r24	; 0x03
	/* Read deadman */
	if (!test_bit(PINB, PB3))
 4b0:	1b 99       	sbic	0x03, 3	; 3
 4b2:	03 c0       	rjmp	.+6      	; 0x4ba <sw_input+0x4a>
		p->data[0] |= (1<<6);
 4b4:	83 81       	ldd	r24, Z+3	; 0x03
 4b6:	80 64       	ori	r24, 0x40	; 64
 4b8:	83 83       	std	Z+3, r24	; 0x03
 4ba:	08 95       	ret

000004bc <USART_tx>:
	fdevopen(USART_tx, USART_rx);
}

_Bool USART_tx(unsigned char data) {
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)));
 4bc:	e0 ec       	ldi	r30, 0xC0	; 192
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	90 81       	ld	r25, Z
 4c2:	95 ff       	sbrs	r25, 5
 4c4:	fd cf       	rjmp	.-6      	; 0x4c0 <USART_tx+0x4>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 4c6:	80 93 c6 00 	sts	0x00C6, r24
	// T0D0 implement 
	return true;
}
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	08 95       	ret

000004ce <USART_rx>:

unsigned char USART_rx(void) {
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)));
 4ce:	e0 ec       	ldi	r30, 0xC0	; 192
 4d0:	f0 e0       	ldi	r31, 0x00	; 0
 4d2:	80 81       	ld	r24, Z
 4d4:	88 23       	and	r24, r24
 4d6:	ec f7       	brge	.-6      	; 0x4d2 <USART_rx+0x4>
	/* Get and return received data from buffer */
	return UDR0;
 4d8:	80 91 c6 00 	lds	r24, 0x00C6
}
 4dc:	08 95       	ret

000004de <USART_init>:

/*! Initialize the serial communication
	baud is the baud rate */
void USART_init(unsigned int baud, _Bool onOff) {
	/* Set baud rate */
	UBRR0H = (unsigned char) (baud>>8);
 4de:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char) baud;
 4e2:	80 93 c4 00 	sts	0x00C4, r24
	/* Set frame format: Asynchronous normal mode, 8data, no parity  1 stop bit */
	/*(0<<UMSEL0) | (0<<UPM0) | (0<<USBS0) | already set as Initial values */
	UCSR0C = (3<<UCSZ0);
 4e6:	86 e0       	ldi	r24, 0x06	; 6
 4e8:	80 93 c2 00 	sts	0x00C2, r24
	/* Enable receiver and transmitter */
	if (onOff) {
 4ec:	66 23       	and	r22, r22
 4ee:	41 f0       	breq	.+16     	; 0x500 <USART_init+0x22>
		set_bit(UCSR0B,	RXEN0);
 4f0:	e1 ec       	ldi	r30, 0xC1	; 193
 4f2:	f0 e0       	ldi	r31, 0x00	; 0
 4f4:	80 81       	ld	r24, Z
 4f6:	80 61       	ori	r24, 0x10	; 16
 4f8:	80 83       	st	Z, r24
		set_bit(UCSR0B, TXEN0);
 4fa:	80 81       	ld	r24, Z
 4fc:	88 60       	ori	r24, 0x08	; 8
 4fe:	80 83       	st	Z, r24
	}
	/*!	enables using fprint() instead of USART_tx_string() */
	fdevopen(USART_tx, USART_rx);
 500:	67 e6       	ldi	r22, 0x67	; 103
 502:	72 e0       	ldi	r23, 0x02	; 2
 504:	8e e5       	ldi	r24, 0x5E	; 94
 506:	92 e0       	ldi	r25, 0x02	; 2
 508:	0e c0       	rjmp	.+28     	; 0x526 <fdevopen>
 50a:	08 95       	ret

0000050c <memcmp>:
 50c:	fb 01       	movw	r30, r22
 50e:	dc 01       	movw	r26, r24
 510:	04 c0       	rjmp	.+8      	; 0x51a <memcmp+0xe>
 512:	8d 91       	ld	r24, X+
 514:	01 90       	ld	r0, Z+
 516:	80 19       	sub	r24, r0
 518:	21 f4       	brne	.+8      	; 0x522 <memcmp+0x16>
 51a:	41 50       	subi	r20, 0x01	; 1
 51c:	50 40       	sbci	r21, 0x00	; 0
 51e:	c8 f7       	brcc	.-14     	; 0x512 <memcmp+0x6>
 520:	88 1b       	sub	r24, r24
 522:	99 0b       	sbc	r25, r25
 524:	08 95       	ret

00000526 <fdevopen>:
 526:	0f 93       	push	r16
 528:	1f 93       	push	r17
 52a:	cf 93       	push	r28
 52c:	df 93       	push	r29
 52e:	00 97       	sbiw	r24, 0x00	; 0
 530:	31 f4       	brne	.+12     	; 0x53e <fdevopen+0x18>
 532:	61 15       	cp	r22, r1
 534:	71 05       	cpc	r23, r1
 536:	19 f4       	brne	.+6      	; 0x53e <fdevopen+0x18>
 538:	80 e0       	ldi	r24, 0x00	; 0
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	39 c0       	rjmp	.+114    	; 0x5b0 <fdevopen+0x8a>
 53e:	8b 01       	movw	r16, r22
 540:	ec 01       	movw	r28, r24
 542:	6e e0       	ldi	r22, 0x0E	; 14
 544:	70 e0       	ldi	r23, 0x00	; 0
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	38 d2       	rcall	.+1136   	; 0x9bc <calloc>
 54c:	fc 01       	movw	r30, r24
 54e:	89 2b       	or	r24, r25
 550:	99 f3       	breq	.-26     	; 0x538 <fdevopen+0x12>
 552:	80 e8       	ldi	r24, 0x80	; 128
 554:	83 83       	std	Z+3, r24	; 0x03
 556:	01 15       	cp	r16, r1
 558:	11 05       	cpc	r17, r1
 55a:	71 f0       	breq	.+28     	; 0x578 <fdevopen+0x52>
 55c:	13 87       	std	Z+11, r17	; 0x0b
 55e:	02 87       	std	Z+10, r16	; 0x0a
 560:	81 e8       	ldi	r24, 0x81	; 129
 562:	83 83       	std	Z+3, r24	; 0x03
 564:	80 91 63 01 	lds	r24, 0x0163
 568:	90 91 64 01 	lds	r25, 0x0164
 56c:	89 2b       	or	r24, r25
 56e:	21 f4       	brne	.+8      	; 0x578 <fdevopen+0x52>
 570:	f0 93 64 01 	sts	0x0164, r31
 574:	e0 93 63 01 	sts	0x0163, r30
 578:	20 97       	sbiw	r28, 0x00	; 0
 57a:	c9 f0       	breq	.+50     	; 0x5ae <fdevopen+0x88>
 57c:	d1 87       	std	Z+9, r29	; 0x09
 57e:	c0 87       	std	Z+8, r28	; 0x08
 580:	83 81       	ldd	r24, Z+3	; 0x03
 582:	82 60       	ori	r24, 0x02	; 2
 584:	83 83       	std	Z+3, r24	; 0x03
 586:	80 91 65 01 	lds	r24, 0x0165
 58a:	90 91 66 01 	lds	r25, 0x0166
 58e:	89 2b       	or	r24, r25
 590:	71 f4       	brne	.+28     	; 0x5ae <fdevopen+0x88>
 592:	f0 93 66 01 	sts	0x0166, r31
 596:	e0 93 65 01 	sts	0x0165, r30
 59a:	80 91 67 01 	lds	r24, 0x0167
 59e:	90 91 68 01 	lds	r25, 0x0168
 5a2:	89 2b       	or	r24, r25
 5a4:	21 f4       	brne	.+8      	; 0x5ae <fdevopen+0x88>
 5a6:	f0 93 68 01 	sts	0x0168, r31
 5aa:	e0 93 67 01 	sts	0x0167, r30
 5ae:	cf 01       	movw	r24, r30
 5b0:	df 91       	pop	r29
 5b2:	cf 91       	pop	r28
 5b4:	1f 91       	pop	r17
 5b6:	0f 91       	pop	r16
 5b8:	08 95       	ret

000005ba <printf>:
 5ba:	cf 93       	push	r28
 5bc:	df 93       	push	r29
 5be:	cd b7       	in	r28, 0x3d	; 61
 5c0:	de b7       	in	r29, 0x3e	; 62
 5c2:	ae 01       	movw	r20, r28
 5c4:	4b 5f       	subi	r20, 0xFB	; 251
 5c6:	5f 4f       	sbci	r21, 0xFF	; 255
 5c8:	fa 01       	movw	r30, r20
 5ca:	61 91       	ld	r22, Z+
 5cc:	71 91       	ld	r23, Z+
 5ce:	af 01       	movw	r20, r30
 5d0:	80 91 65 01 	lds	r24, 0x0165
 5d4:	90 91 66 01 	lds	r25, 0x0166
 5d8:	03 d0       	rcall	.+6      	; 0x5e0 <vfprintf>
 5da:	df 91       	pop	r29
 5dc:	cf 91       	pop	r28
 5de:	08 95       	ret

000005e0 <vfprintf>:
 5e0:	2f 92       	push	r2
 5e2:	3f 92       	push	r3
 5e4:	4f 92       	push	r4
 5e6:	5f 92       	push	r5
 5e8:	6f 92       	push	r6
 5ea:	7f 92       	push	r7
 5ec:	8f 92       	push	r8
 5ee:	9f 92       	push	r9
 5f0:	af 92       	push	r10
 5f2:	bf 92       	push	r11
 5f4:	cf 92       	push	r12
 5f6:	df 92       	push	r13
 5f8:	ef 92       	push	r14
 5fa:	ff 92       	push	r15
 5fc:	0f 93       	push	r16
 5fe:	1f 93       	push	r17
 600:	cf 93       	push	r28
 602:	df 93       	push	r29
 604:	cd b7       	in	r28, 0x3d	; 61
 606:	de b7       	in	r29, 0x3e	; 62
 608:	2c 97       	sbiw	r28, 0x0c	; 12
 60a:	0f b6       	in	r0, 0x3f	; 63
 60c:	f8 94       	cli
 60e:	de bf       	out	0x3e, r29	; 62
 610:	0f be       	out	0x3f, r0	; 63
 612:	cd bf       	out	0x3d, r28	; 61
 614:	7c 01       	movw	r14, r24
 616:	6b 01       	movw	r12, r22
 618:	8a 01       	movw	r16, r20
 61a:	fc 01       	movw	r30, r24
 61c:	17 82       	std	Z+7, r1	; 0x07
 61e:	16 82       	std	Z+6, r1	; 0x06
 620:	83 81       	ldd	r24, Z+3	; 0x03
 622:	81 ff       	sbrs	r24, 1
 624:	b0 c1       	rjmp	.+864    	; 0x986 <vfprintf+0x3a6>
 626:	ce 01       	movw	r24, r28
 628:	01 96       	adiw	r24, 0x01	; 1
 62a:	4c 01       	movw	r8, r24
 62c:	f7 01       	movw	r30, r14
 62e:	93 81       	ldd	r25, Z+3	; 0x03
 630:	f6 01       	movw	r30, r12
 632:	93 fd       	sbrc	r25, 3
 634:	85 91       	lpm	r24, Z+
 636:	93 ff       	sbrs	r25, 3
 638:	81 91       	ld	r24, Z+
 63a:	6f 01       	movw	r12, r30
 63c:	88 23       	and	r24, r24
 63e:	09 f4       	brne	.+2      	; 0x642 <vfprintf+0x62>
 640:	9e c1       	rjmp	.+828    	; 0x97e <vfprintf+0x39e>
 642:	85 32       	cpi	r24, 0x25	; 37
 644:	39 f4       	brne	.+14     	; 0x654 <vfprintf+0x74>
 646:	93 fd       	sbrc	r25, 3
 648:	85 91       	lpm	r24, Z+
 64a:	93 ff       	sbrs	r25, 3
 64c:	81 91       	ld	r24, Z+
 64e:	6f 01       	movw	r12, r30
 650:	85 32       	cpi	r24, 0x25	; 37
 652:	21 f4       	brne	.+8      	; 0x65c <vfprintf+0x7c>
 654:	b7 01       	movw	r22, r14
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	15 d3       	rcall	.+1578   	; 0xc84 <fputc>
 65a:	e8 cf       	rjmp	.-48     	; 0x62c <vfprintf+0x4c>
 65c:	51 2c       	mov	r5, r1
 65e:	31 2c       	mov	r3, r1
 660:	20 e0       	ldi	r18, 0x00	; 0
 662:	20 32       	cpi	r18, 0x20	; 32
 664:	a0 f4       	brcc	.+40     	; 0x68e <vfprintf+0xae>
 666:	8b 32       	cpi	r24, 0x2B	; 43
 668:	69 f0       	breq	.+26     	; 0x684 <vfprintf+0xa4>
 66a:	30 f4       	brcc	.+12     	; 0x678 <vfprintf+0x98>
 66c:	80 32       	cpi	r24, 0x20	; 32
 66e:	59 f0       	breq	.+22     	; 0x686 <vfprintf+0xa6>
 670:	83 32       	cpi	r24, 0x23	; 35
 672:	69 f4       	brne	.+26     	; 0x68e <vfprintf+0xae>
 674:	20 61       	ori	r18, 0x10	; 16
 676:	2c c0       	rjmp	.+88     	; 0x6d0 <vfprintf+0xf0>
 678:	8d 32       	cpi	r24, 0x2D	; 45
 67a:	39 f0       	breq	.+14     	; 0x68a <vfprintf+0xaa>
 67c:	80 33       	cpi	r24, 0x30	; 48
 67e:	39 f4       	brne	.+14     	; 0x68e <vfprintf+0xae>
 680:	21 60       	ori	r18, 0x01	; 1
 682:	26 c0       	rjmp	.+76     	; 0x6d0 <vfprintf+0xf0>
 684:	22 60       	ori	r18, 0x02	; 2
 686:	24 60       	ori	r18, 0x04	; 4
 688:	23 c0       	rjmp	.+70     	; 0x6d0 <vfprintf+0xf0>
 68a:	28 60       	ori	r18, 0x08	; 8
 68c:	21 c0       	rjmp	.+66     	; 0x6d0 <vfprintf+0xf0>
 68e:	27 fd       	sbrc	r18, 7
 690:	27 c0       	rjmp	.+78     	; 0x6e0 <vfprintf+0x100>
 692:	30 ed       	ldi	r19, 0xD0	; 208
 694:	38 0f       	add	r19, r24
 696:	3a 30       	cpi	r19, 0x0A	; 10
 698:	78 f4       	brcc	.+30     	; 0x6b8 <vfprintf+0xd8>
 69a:	26 ff       	sbrs	r18, 6
 69c:	06 c0       	rjmp	.+12     	; 0x6aa <vfprintf+0xca>
 69e:	fa e0       	ldi	r31, 0x0A	; 10
 6a0:	5f 9e       	mul	r5, r31
 6a2:	30 0d       	add	r19, r0
 6a4:	11 24       	eor	r1, r1
 6a6:	53 2e       	mov	r5, r19
 6a8:	13 c0       	rjmp	.+38     	; 0x6d0 <vfprintf+0xf0>
 6aa:	8a e0       	ldi	r24, 0x0A	; 10
 6ac:	38 9e       	mul	r3, r24
 6ae:	30 0d       	add	r19, r0
 6b0:	11 24       	eor	r1, r1
 6b2:	33 2e       	mov	r3, r19
 6b4:	20 62       	ori	r18, 0x20	; 32
 6b6:	0c c0       	rjmp	.+24     	; 0x6d0 <vfprintf+0xf0>
 6b8:	8e 32       	cpi	r24, 0x2E	; 46
 6ba:	21 f4       	brne	.+8      	; 0x6c4 <vfprintf+0xe4>
 6bc:	26 fd       	sbrc	r18, 6
 6be:	5f c1       	rjmp	.+702    	; 0x97e <vfprintf+0x39e>
 6c0:	20 64       	ori	r18, 0x40	; 64
 6c2:	06 c0       	rjmp	.+12     	; 0x6d0 <vfprintf+0xf0>
 6c4:	8c 36       	cpi	r24, 0x6C	; 108
 6c6:	11 f4       	brne	.+4      	; 0x6cc <vfprintf+0xec>
 6c8:	20 68       	ori	r18, 0x80	; 128
 6ca:	02 c0       	rjmp	.+4      	; 0x6d0 <vfprintf+0xf0>
 6cc:	88 36       	cpi	r24, 0x68	; 104
 6ce:	41 f4       	brne	.+16     	; 0x6e0 <vfprintf+0x100>
 6d0:	f6 01       	movw	r30, r12
 6d2:	93 fd       	sbrc	r25, 3
 6d4:	85 91       	lpm	r24, Z+
 6d6:	93 ff       	sbrs	r25, 3
 6d8:	81 91       	ld	r24, Z+
 6da:	6f 01       	movw	r12, r30
 6dc:	81 11       	cpse	r24, r1
 6de:	c1 cf       	rjmp	.-126    	; 0x662 <vfprintf+0x82>
 6e0:	98 2f       	mov	r25, r24
 6e2:	9f 7d       	andi	r25, 0xDF	; 223
 6e4:	95 54       	subi	r25, 0x45	; 69
 6e6:	93 30       	cpi	r25, 0x03	; 3
 6e8:	28 f4       	brcc	.+10     	; 0x6f4 <vfprintf+0x114>
 6ea:	0c 5f       	subi	r16, 0xFC	; 252
 6ec:	1f 4f       	sbci	r17, 0xFF	; 255
 6ee:	ff e3       	ldi	r31, 0x3F	; 63
 6f0:	f9 83       	std	Y+1, r31	; 0x01
 6f2:	0d c0       	rjmp	.+26     	; 0x70e <vfprintf+0x12e>
 6f4:	83 36       	cpi	r24, 0x63	; 99
 6f6:	31 f0       	breq	.+12     	; 0x704 <vfprintf+0x124>
 6f8:	83 37       	cpi	r24, 0x73	; 115
 6fa:	71 f0       	breq	.+28     	; 0x718 <vfprintf+0x138>
 6fc:	83 35       	cpi	r24, 0x53	; 83
 6fe:	09 f0       	breq	.+2      	; 0x702 <vfprintf+0x122>
 700:	57 c0       	rjmp	.+174    	; 0x7b0 <vfprintf+0x1d0>
 702:	21 c0       	rjmp	.+66     	; 0x746 <vfprintf+0x166>
 704:	f8 01       	movw	r30, r16
 706:	80 81       	ld	r24, Z
 708:	89 83       	std	Y+1, r24	; 0x01
 70a:	0e 5f       	subi	r16, 0xFE	; 254
 70c:	1f 4f       	sbci	r17, 0xFF	; 255
 70e:	44 24       	eor	r4, r4
 710:	43 94       	inc	r4
 712:	51 2c       	mov	r5, r1
 714:	54 01       	movw	r10, r8
 716:	14 c0       	rjmp	.+40     	; 0x740 <vfprintf+0x160>
 718:	38 01       	movw	r6, r16
 71a:	f2 e0       	ldi	r31, 0x02	; 2
 71c:	6f 0e       	add	r6, r31
 71e:	71 1c       	adc	r7, r1
 720:	f8 01       	movw	r30, r16
 722:	a0 80       	ld	r10, Z
 724:	b1 80       	ldd	r11, Z+1	; 0x01
 726:	26 ff       	sbrs	r18, 6
 728:	03 c0       	rjmp	.+6      	; 0x730 <vfprintf+0x150>
 72a:	65 2d       	mov	r22, r5
 72c:	70 e0       	ldi	r23, 0x00	; 0
 72e:	02 c0       	rjmp	.+4      	; 0x734 <vfprintf+0x154>
 730:	6f ef       	ldi	r22, 0xFF	; 255
 732:	7f ef       	ldi	r23, 0xFF	; 255
 734:	c5 01       	movw	r24, r10
 736:	2c 87       	std	Y+12, r18	; 0x0c
 738:	9a d2       	rcall	.+1332   	; 0xc6e <strnlen>
 73a:	2c 01       	movw	r4, r24
 73c:	83 01       	movw	r16, r6
 73e:	2c 85       	ldd	r18, Y+12	; 0x0c
 740:	2f 77       	andi	r18, 0x7F	; 127
 742:	22 2e       	mov	r2, r18
 744:	16 c0       	rjmp	.+44     	; 0x772 <vfprintf+0x192>
 746:	38 01       	movw	r6, r16
 748:	f2 e0       	ldi	r31, 0x02	; 2
 74a:	6f 0e       	add	r6, r31
 74c:	71 1c       	adc	r7, r1
 74e:	f8 01       	movw	r30, r16
 750:	a0 80       	ld	r10, Z
 752:	b1 80       	ldd	r11, Z+1	; 0x01
 754:	26 ff       	sbrs	r18, 6
 756:	03 c0       	rjmp	.+6      	; 0x75e <vfprintf+0x17e>
 758:	65 2d       	mov	r22, r5
 75a:	70 e0       	ldi	r23, 0x00	; 0
 75c:	02 c0       	rjmp	.+4      	; 0x762 <vfprintf+0x182>
 75e:	6f ef       	ldi	r22, 0xFF	; 255
 760:	7f ef       	ldi	r23, 0xFF	; 255
 762:	c5 01       	movw	r24, r10
 764:	2c 87       	std	Y+12, r18	; 0x0c
 766:	71 d2       	rcall	.+1250   	; 0xc4a <strnlen_P>
 768:	2c 01       	movw	r4, r24
 76a:	2c 85       	ldd	r18, Y+12	; 0x0c
 76c:	20 68       	ori	r18, 0x80	; 128
 76e:	22 2e       	mov	r2, r18
 770:	83 01       	movw	r16, r6
 772:	23 fc       	sbrc	r2, 3
 774:	19 c0       	rjmp	.+50     	; 0x7a8 <vfprintf+0x1c8>
 776:	83 2d       	mov	r24, r3
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	48 16       	cp	r4, r24
 77c:	59 06       	cpc	r5, r25
 77e:	a0 f4       	brcc	.+40     	; 0x7a8 <vfprintf+0x1c8>
 780:	b7 01       	movw	r22, r14
 782:	80 e2       	ldi	r24, 0x20	; 32
 784:	90 e0       	ldi	r25, 0x00	; 0
 786:	7e d2       	rcall	.+1276   	; 0xc84 <fputc>
 788:	3a 94       	dec	r3
 78a:	f5 cf       	rjmp	.-22     	; 0x776 <vfprintf+0x196>
 78c:	f5 01       	movw	r30, r10
 78e:	27 fc       	sbrc	r2, 7
 790:	85 91       	lpm	r24, Z+
 792:	27 fe       	sbrs	r2, 7
 794:	81 91       	ld	r24, Z+
 796:	5f 01       	movw	r10, r30
 798:	b7 01       	movw	r22, r14
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	73 d2       	rcall	.+1254   	; 0xc84 <fputc>
 79e:	31 10       	cpse	r3, r1
 7a0:	3a 94       	dec	r3
 7a2:	f1 e0       	ldi	r31, 0x01	; 1
 7a4:	4f 1a       	sub	r4, r31
 7a6:	51 08       	sbc	r5, r1
 7a8:	41 14       	cp	r4, r1
 7aa:	51 04       	cpc	r5, r1
 7ac:	79 f7       	brne	.-34     	; 0x78c <vfprintf+0x1ac>
 7ae:	de c0       	rjmp	.+444    	; 0x96c <vfprintf+0x38c>
 7b0:	84 36       	cpi	r24, 0x64	; 100
 7b2:	11 f0       	breq	.+4      	; 0x7b8 <vfprintf+0x1d8>
 7b4:	89 36       	cpi	r24, 0x69	; 105
 7b6:	31 f5       	brne	.+76     	; 0x804 <vfprintf+0x224>
 7b8:	f8 01       	movw	r30, r16
 7ba:	27 ff       	sbrs	r18, 7
 7bc:	07 c0       	rjmp	.+14     	; 0x7cc <vfprintf+0x1ec>
 7be:	60 81       	ld	r22, Z
 7c0:	71 81       	ldd	r23, Z+1	; 0x01
 7c2:	82 81       	ldd	r24, Z+2	; 0x02
 7c4:	93 81       	ldd	r25, Z+3	; 0x03
 7c6:	0c 5f       	subi	r16, 0xFC	; 252
 7c8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ca:	08 c0       	rjmp	.+16     	; 0x7dc <vfprintf+0x1fc>
 7cc:	60 81       	ld	r22, Z
 7ce:	71 81       	ldd	r23, Z+1	; 0x01
 7d0:	07 2e       	mov	r0, r23
 7d2:	00 0c       	add	r0, r0
 7d4:	88 0b       	sbc	r24, r24
 7d6:	99 0b       	sbc	r25, r25
 7d8:	0e 5f       	subi	r16, 0xFE	; 254
 7da:	1f 4f       	sbci	r17, 0xFF	; 255
 7dc:	2f 76       	andi	r18, 0x6F	; 111
 7de:	72 2e       	mov	r7, r18
 7e0:	97 ff       	sbrs	r25, 7
 7e2:	09 c0       	rjmp	.+18     	; 0x7f6 <vfprintf+0x216>
 7e4:	90 95       	com	r25
 7e6:	80 95       	com	r24
 7e8:	70 95       	com	r23
 7ea:	61 95       	neg	r22
 7ec:	7f 4f       	sbci	r23, 0xFF	; 255
 7ee:	8f 4f       	sbci	r24, 0xFF	; 255
 7f0:	9f 4f       	sbci	r25, 0xFF	; 255
 7f2:	20 68       	ori	r18, 0x80	; 128
 7f4:	72 2e       	mov	r7, r18
 7f6:	2a e0       	ldi	r18, 0x0A	; 10
 7f8:	30 e0       	ldi	r19, 0x00	; 0
 7fa:	a4 01       	movw	r20, r8
 7fc:	7b d2       	rcall	.+1270   	; 0xcf4 <__ultoa_invert>
 7fe:	a8 2e       	mov	r10, r24
 800:	a8 18       	sub	r10, r8
 802:	43 c0       	rjmp	.+134    	; 0x88a <vfprintf+0x2aa>
 804:	85 37       	cpi	r24, 0x75	; 117
 806:	29 f4       	brne	.+10     	; 0x812 <vfprintf+0x232>
 808:	2f 7e       	andi	r18, 0xEF	; 239
 80a:	b2 2e       	mov	r11, r18
 80c:	2a e0       	ldi	r18, 0x0A	; 10
 80e:	30 e0       	ldi	r19, 0x00	; 0
 810:	25 c0       	rjmp	.+74     	; 0x85c <vfprintf+0x27c>
 812:	f2 2f       	mov	r31, r18
 814:	f9 7f       	andi	r31, 0xF9	; 249
 816:	bf 2e       	mov	r11, r31
 818:	8f 36       	cpi	r24, 0x6F	; 111
 81a:	c1 f0       	breq	.+48     	; 0x84c <vfprintf+0x26c>
 81c:	18 f4       	brcc	.+6      	; 0x824 <vfprintf+0x244>
 81e:	88 35       	cpi	r24, 0x58	; 88
 820:	79 f0       	breq	.+30     	; 0x840 <vfprintf+0x260>
 822:	ad c0       	rjmp	.+346    	; 0x97e <vfprintf+0x39e>
 824:	80 37       	cpi	r24, 0x70	; 112
 826:	19 f0       	breq	.+6      	; 0x82e <vfprintf+0x24e>
 828:	88 37       	cpi	r24, 0x78	; 120
 82a:	21 f0       	breq	.+8      	; 0x834 <vfprintf+0x254>
 82c:	a8 c0       	rjmp	.+336    	; 0x97e <vfprintf+0x39e>
 82e:	2f 2f       	mov	r18, r31
 830:	20 61       	ori	r18, 0x10	; 16
 832:	b2 2e       	mov	r11, r18
 834:	b4 fe       	sbrs	r11, 4
 836:	0d c0       	rjmp	.+26     	; 0x852 <vfprintf+0x272>
 838:	8b 2d       	mov	r24, r11
 83a:	84 60       	ori	r24, 0x04	; 4
 83c:	b8 2e       	mov	r11, r24
 83e:	09 c0       	rjmp	.+18     	; 0x852 <vfprintf+0x272>
 840:	24 ff       	sbrs	r18, 4
 842:	0a c0       	rjmp	.+20     	; 0x858 <vfprintf+0x278>
 844:	9f 2f       	mov	r25, r31
 846:	96 60       	ori	r25, 0x06	; 6
 848:	b9 2e       	mov	r11, r25
 84a:	06 c0       	rjmp	.+12     	; 0x858 <vfprintf+0x278>
 84c:	28 e0       	ldi	r18, 0x08	; 8
 84e:	30 e0       	ldi	r19, 0x00	; 0
 850:	05 c0       	rjmp	.+10     	; 0x85c <vfprintf+0x27c>
 852:	20 e1       	ldi	r18, 0x10	; 16
 854:	30 e0       	ldi	r19, 0x00	; 0
 856:	02 c0       	rjmp	.+4      	; 0x85c <vfprintf+0x27c>
 858:	20 e1       	ldi	r18, 0x10	; 16
 85a:	32 e0       	ldi	r19, 0x02	; 2
 85c:	f8 01       	movw	r30, r16
 85e:	b7 fe       	sbrs	r11, 7
 860:	07 c0       	rjmp	.+14     	; 0x870 <vfprintf+0x290>
 862:	60 81       	ld	r22, Z
 864:	71 81       	ldd	r23, Z+1	; 0x01
 866:	82 81       	ldd	r24, Z+2	; 0x02
 868:	93 81       	ldd	r25, Z+3	; 0x03
 86a:	0c 5f       	subi	r16, 0xFC	; 252
 86c:	1f 4f       	sbci	r17, 0xFF	; 255
 86e:	06 c0       	rjmp	.+12     	; 0x87c <vfprintf+0x29c>
 870:	60 81       	ld	r22, Z
 872:	71 81       	ldd	r23, Z+1	; 0x01
 874:	80 e0       	ldi	r24, 0x00	; 0
 876:	90 e0       	ldi	r25, 0x00	; 0
 878:	0e 5f       	subi	r16, 0xFE	; 254
 87a:	1f 4f       	sbci	r17, 0xFF	; 255
 87c:	a4 01       	movw	r20, r8
 87e:	3a d2       	rcall	.+1140   	; 0xcf4 <__ultoa_invert>
 880:	a8 2e       	mov	r10, r24
 882:	a8 18       	sub	r10, r8
 884:	fb 2d       	mov	r31, r11
 886:	ff 77       	andi	r31, 0x7F	; 127
 888:	7f 2e       	mov	r7, r31
 88a:	76 fe       	sbrs	r7, 6
 88c:	0b c0       	rjmp	.+22     	; 0x8a4 <vfprintf+0x2c4>
 88e:	37 2d       	mov	r19, r7
 890:	3e 7f       	andi	r19, 0xFE	; 254
 892:	a5 14       	cp	r10, r5
 894:	50 f4       	brcc	.+20     	; 0x8aa <vfprintf+0x2ca>
 896:	74 fe       	sbrs	r7, 4
 898:	0a c0       	rjmp	.+20     	; 0x8ae <vfprintf+0x2ce>
 89a:	72 fc       	sbrc	r7, 2
 89c:	08 c0       	rjmp	.+16     	; 0x8ae <vfprintf+0x2ce>
 89e:	37 2d       	mov	r19, r7
 8a0:	3e 7e       	andi	r19, 0xEE	; 238
 8a2:	05 c0       	rjmp	.+10     	; 0x8ae <vfprintf+0x2ce>
 8a4:	ba 2c       	mov	r11, r10
 8a6:	37 2d       	mov	r19, r7
 8a8:	03 c0       	rjmp	.+6      	; 0x8b0 <vfprintf+0x2d0>
 8aa:	ba 2c       	mov	r11, r10
 8ac:	01 c0       	rjmp	.+2      	; 0x8b0 <vfprintf+0x2d0>
 8ae:	b5 2c       	mov	r11, r5
 8b0:	34 ff       	sbrs	r19, 4
 8b2:	0d c0       	rjmp	.+26     	; 0x8ce <vfprintf+0x2ee>
 8b4:	fe 01       	movw	r30, r28
 8b6:	ea 0d       	add	r30, r10
 8b8:	f1 1d       	adc	r31, r1
 8ba:	80 81       	ld	r24, Z
 8bc:	80 33       	cpi	r24, 0x30	; 48
 8be:	11 f4       	brne	.+4      	; 0x8c4 <vfprintf+0x2e4>
 8c0:	39 7e       	andi	r19, 0xE9	; 233
 8c2:	09 c0       	rjmp	.+18     	; 0x8d6 <vfprintf+0x2f6>
 8c4:	32 ff       	sbrs	r19, 2
 8c6:	06 c0       	rjmp	.+12     	; 0x8d4 <vfprintf+0x2f4>
 8c8:	b3 94       	inc	r11
 8ca:	b3 94       	inc	r11
 8cc:	04 c0       	rjmp	.+8      	; 0x8d6 <vfprintf+0x2f6>
 8ce:	83 2f       	mov	r24, r19
 8d0:	86 78       	andi	r24, 0x86	; 134
 8d2:	09 f0       	breq	.+2      	; 0x8d6 <vfprintf+0x2f6>
 8d4:	b3 94       	inc	r11
 8d6:	33 fd       	sbrc	r19, 3
 8d8:	12 c0       	rjmp	.+36     	; 0x8fe <vfprintf+0x31e>
 8da:	30 ff       	sbrs	r19, 0
 8dc:	06 c0       	rjmp	.+12     	; 0x8ea <vfprintf+0x30a>
 8de:	5a 2c       	mov	r5, r10
 8e0:	b3 14       	cp	r11, r3
 8e2:	18 f4       	brcc	.+6      	; 0x8ea <vfprintf+0x30a>
 8e4:	53 0c       	add	r5, r3
 8e6:	5b 18       	sub	r5, r11
 8e8:	b3 2c       	mov	r11, r3
 8ea:	b3 14       	cp	r11, r3
 8ec:	60 f4       	brcc	.+24     	; 0x906 <vfprintf+0x326>
 8ee:	b7 01       	movw	r22, r14
 8f0:	80 e2       	ldi	r24, 0x20	; 32
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	3c 87       	std	Y+12, r19	; 0x0c
 8f6:	c6 d1       	rcall	.+908    	; 0xc84 <fputc>
 8f8:	b3 94       	inc	r11
 8fa:	3c 85       	ldd	r19, Y+12	; 0x0c
 8fc:	f6 cf       	rjmp	.-20     	; 0x8ea <vfprintf+0x30a>
 8fe:	b3 14       	cp	r11, r3
 900:	10 f4       	brcc	.+4      	; 0x906 <vfprintf+0x326>
 902:	3b 18       	sub	r3, r11
 904:	01 c0       	rjmp	.+2      	; 0x908 <vfprintf+0x328>
 906:	31 2c       	mov	r3, r1
 908:	34 ff       	sbrs	r19, 4
 90a:	11 c0       	rjmp	.+34     	; 0x92e <vfprintf+0x34e>
 90c:	b7 01       	movw	r22, r14
 90e:	80 e3       	ldi	r24, 0x30	; 48
 910:	90 e0       	ldi	r25, 0x00	; 0
 912:	3c 87       	std	Y+12, r19	; 0x0c
 914:	b7 d1       	rcall	.+878    	; 0xc84 <fputc>
 916:	3c 85       	ldd	r19, Y+12	; 0x0c
 918:	32 ff       	sbrs	r19, 2
 91a:	16 c0       	rjmp	.+44     	; 0x948 <vfprintf+0x368>
 91c:	31 fd       	sbrc	r19, 1
 91e:	03 c0       	rjmp	.+6      	; 0x926 <vfprintf+0x346>
 920:	88 e7       	ldi	r24, 0x78	; 120
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	02 c0       	rjmp	.+4      	; 0x92a <vfprintf+0x34a>
 926:	88 e5       	ldi	r24, 0x58	; 88
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	b7 01       	movw	r22, r14
 92c:	0c c0       	rjmp	.+24     	; 0x946 <vfprintf+0x366>
 92e:	83 2f       	mov	r24, r19
 930:	86 78       	andi	r24, 0x86	; 134
 932:	51 f0       	breq	.+20     	; 0x948 <vfprintf+0x368>
 934:	31 ff       	sbrs	r19, 1
 936:	02 c0       	rjmp	.+4      	; 0x93c <vfprintf+0x35c>
 938:	8b e2       	ldi	r24, 0x2B	; 43
 93a:	01 c0       	rjmp	.+2      	; 0x93e <vfprintf+0x35e>
 93c:	80 e2       	ldi	r24, 0x20	; 32
 93e:	37 fd       	sbrc	r19, 7
 940:	8d e2       	ldi	r24, 0x2D	; 45
 942:	b7 01       	movw	r22, r14
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	9e d1       	rcall	.+828    	; 0xc84 <fputc>
 948:	a5 14       	cp	r10, r5
 94a:	30 f4       	brcc	.+12     	; 0x958 <vfprintf+0x378>
 94c:	b7 01       	movw	r22, r14
 94e:	80 e3       	ldi	r24, 0x30	; 48
 950:	90 e0       	ldi	r25, 0x00	; 0
 952:	98 d1       	rcall	.+816    	; 0xc84 <fputc>
 954:	5a 94       	dec	r5
 956:	f8 cf       	rjmp	.-16     	; 0x948 <vfprintf+0x368>
 958:	aa 94       	dec	r10
 95a:	f4 01       	movw	r30, r8
 95c:	ea 0d       	add	r30, r10
 95e:	f1 1d       	adc	r31, r1
 960:	80 81       	ld	r24, Z
 962:	b7 01       	movw	r22, r14
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	8e d1       	rcall	.+796    	; 0xc84 <fputc>
 968:	a1 10       	cpse	r10, r1
 96a:	f6 cf       	rjmp	.-20     	; 0x958 <vfprintf+0x378>
 96c:	33 20       	and	r3, r3
 96e:	09 f4       	brne	.+2      	; 0x972 <vfprintf+0x392>
 970:	5d ce       	rjmp	.-838    	; 0x62c <vfprintf+0x4c>
 972:	b7 01       	movw	r22, r14
 974:	80 e2       	ldi	r24, 0x20	; 32
 976:	90 e0       	ldi	r25, 0x00	; 0
 978:	85 d1       	rcall	.+778    	; 0xc84 <fputc>
 97a:	3a 94       	dec	r3
 97c:	f7 cf       	rjmp	.-18     	; 0x96c <vfprintf+0x38c>
 97e:	f7 01       	movw	r30, r14
 980:	86 81       	ldd	r24, Z+6	; 0x06
 982:	97 81       	ldd	r25, Z+7	; 0x07
 984:	02 c0       	rjmp	.+4      	; 0x98a <vfprintf+0x3aa>
 986:	8f ef       	ldi	r24, 0xFF	; 255
 988:	9f ef       	ldi	r25, 0xFF	; 255
 98a:	2c 96       	adiw	r28, 0x0c	; 12
 98c:	0f b6       	in	r0, 0x3f	; 63
 98e:	f8 94       	cli
 990:	de bf       	out	0x3e, r29	; 62
 992:	0f be       	out	0x3f, r0	; 63
 994:	cd bf       	out	0x3d, r28	; 61
 996:	df 91       	pop	r29
 998:	cf 91       	pop	r28
 99a:	1f 91       	pop	r17
 99c:	0f 91       	pop	r16
 99e:	ff 90       	pop	r15
 9a0:	ef 90       	pop	r14
 9a2:	df 90       	pop	r13
 9a4:	cf 90       	pop	r12
 9a6:	bf 90       	pop	r11
 9a8:	af 90       	pop	r10
 9aa:	9f 90       	pop	r9
 9ac:	8f 90       	pop	r8
 9ae:	7f 90       	pop	r7
 9b0:	6f 90       	pop	r6
 9b2:	5f 90       	pop	r5
 9b4:	4f 90       	pop	r4
 9b6:	3f 90       	pop	r3
 9b8:	2f 90       	pop	r2
 9ba:	08 95       	ret

000009bc <calloc>:
 9bc:	0f 93       	push	r16
 9be:	1f 93       	push	r17
 9c0:	cf 93       	push	r28
 9c2:	df 93       	push	r29
 9c4:	86 9f       	mul	r24, r22
 9c6:	80 01       	movw	r16, r0
 9c8:	87 9f       	mul	r24, r23
 9ca:	10 0d       	add	r17, r0
 9cc:	96 9f       	mul	r25, r22
 9ce:	10 0d       	add	r17, r0
 9d0:	11 24       	eor	r1, r1
 9d2:	c8 01       	movw	r24, r16
 9d4:	0d d0       	rcall	.+26     	; 0x9f0 <malloc>
 9d6:	ec 01       	movw	r28, r24
 9d8:	00 97       	sbiw	r24, 0x00	; 0
 9da:	21 f0       	breq	.+8      	; 0x9e4 <calloc+0x28>
 9dc:	a8 01       	movw	r20, r16
 9de:	60 e0       	ldi	r22, 0x00	; 0
 9e0:	70 e0       	ldi	r23, 0x00	; 0
 9e2:	3e d1       	rcall	.+636    	; 0xc60 <memset>
 9e4:	ce 01       	movw	r24, r28
 9e6:	df 91       	pop	r29
 9e8:	cf 91       	pop	r28
 9ea:	1f 91       	pop	r17
 9ec:	0f 91       	pop	r16
 9ee:	08 95       	ret

000009f0 <malloc>:
 9f0:	cf 93       	push	r28
 9f2:	df 93       	push	r29
 9f4:	82 30       	cpi	r24, 0x02	; 2
 9f6:	91 05       	cpc	r25, r1
 9f8:	10 f4       	brcc	.+4      	; 0x9fe <malloc+0xe>
 9fa:	82 e0       	ldi	r24, 0x02	; 2
 9fc:	90 e0       	ldi	r25, 0x00	; 0
 9fe:	e0 91 6b 01 	lds	r30, 0x016B
 a02:	f0 91 6c 01 	lds	r31, 0x016C
 a06:	20 e0       	ldi	r18, 0x00	; 0
 a08:	30 e0       	ldi	r19, 0x00	; 0
 a0a:	c0 e0       	ldi	r28, 0x00	; 0
 a0c:	d0 e0       	ldi	r29, 0x00	; 0
 a0e:	30 97       	sbiw	r30, 0x00	; 0
 a10:	11 f1       	breq	.+68     	; 0xa56 <malloc+0x66>
 a12:	40 81       	ld	r20, Z
 a14:	51 81       	ldd	r21, Z+1	; 0x01
 a16:	48 17       	cp	r20, r24
 a18:	59 07       	cpc	r21, r25
 a1a:	c0 f0       	brcs	.+48     	; 0xa4c <malloc+0x5c>
 a1c:	48 17       	cp	r20, r24
 a1e:	59 07       	cpc	r21, r25
 a20:	61 f4       	brne	.+24     	; 0xa3a <malloc+0x4a>
 a22:	82 81       	ldd	r24, Z+2	; 0x02
 a24:	93 81       	ldd	r25, Z+3	; 0x03
 a26:	20 97       	sbiw	r28, 0x00	; 0
 a28:	19 f0       	breq	.+6      	; 0xa30 <malloc+0x40>
 a2a:	9b 83       	std	Y+3, r25	; 0x03
 a2c:	8a 83       	std	Y+2, r24	; 0x02
 a2e:	2b c0       	rjmp	.+86     	; 0xa86 <malloc+0x96>
 a30:	90 93 6c 01 	sts	0x016C, r25
 a34:	80 93 6b 01 	sts	0x016B, r24
 a38:	26 c0       	rjmp	.+76     	; 0xa86 <malloc+0x96>
 a3a:	21 15       	cp	r18, r1
 a3c:	31 05       	cpc	r19, r1
 a3e:	19 f0       	breq	.+6      	; 0xa46 <malloc+0x56>
 a40:	42 17       	cp	r20, r18
 a42:	53 07       	cpc	r21, r19
 a44:	18 f4       	brcc	.+6      	; 0xa4c <malloc+0x5c>
 a46:	9a 01       	movw	r18, r20
 a48:	be 01       	movw	r22, r28
 a4a:	df 01       	movw	r26, r30
 a4c:	ef 01       	movw	r28, r30
 a4e:	02 80       	ldd	r0, Z+2	; 0x02
 a50:	f3 81       	ldd	r31, Z+3	; 0x03
 a52:	e0 2d       	mov	r30, r0
 a54:	dc cf       	rjmp	.-72     	; 0xa0e <malloc+0x1e>
 a56:	21 15       	cp	r18, r1
 a58:	31 05       	cpc	r19, r1
 a5a:	09 f1       	breq	.+66     	; 0xa9e <malloc+0xae>
 a5c:	28 1b       	sub	r18, r24
 a5e:	39 0b       	sbc	r19, r25
 a60:	24 30       	cpi	r18, 0x04	; 4
 a62:	31 05       	cpc	r19, r1
 a64:	90 f4       	brcc	.+36     	; 0xa8a <malloc+0x9a>
 a66:	12 96       	adiw	r26, 0x02	; 2
 a68:	8d 91       	ld	r24, X+
 a6a:	9c 91       	ld	r25, X
 a6c:	13 97       	sbiw	r26, 0x03	; 3
 a6e:	61 15       	cp	r22, r1
 a70:	71 05       	cpc	r23, r1
 a72:	21 f0       	breq	.+8      	; 0xa7c <malloc+0x8c>
 a74:	fb 01       	movw	r30, r22
 a76:	93 83       	std	Z+3, r25	; 0x03
 a78:	82 83       	std	Z+2, r24	; 0x02
 a7a:	04 c0       	rjmp	.+8      	; 0xa84 <malloc+0x94>
 a7c:	90 93 6c 01 	sts	0x016C, r25
 a80:	80 93 6b 01 	sts	0x016B, r24
 a84:	fd 01       	movw	r30, r26
 a86:	32 96       	adiw	r30, 0x02	; 2
 a88:	44 c0       	rjmp	.+136    	; 0xb12 <malloc+0x122>
 a8a:	fd 01       	movw	r30, r26
 a8c:	e2 0f       	add	r30, r18
 a8e:	f3 1f       	adc	r31, r19
 a90:	81 93       	st	Z+, r24
 a92:	91 93       	st	Z+, r25
 a94:	22 50       	subi	r18, 0x02	; 2
 a96:	31 09       	sbc	r19, r1
 a98:	2d 93       	st	X+, r18
 a9a:	3c 93       	st	X, r19
 a9c:	3a c0       	rjmp	.+116    	; 0xb12 <malloc+0x122>
 a9e:	20 91 69 01 	lds	r18, 0x0169
 aa2:	30 91 6a 01 	lds	r19, 0x016A
 aa6:	23 2b       	or	r18, r19
 aa8:	41 f4       	brne	.+16     	; 0xaba <malloc+0xca>
 aaa:	20 91 02 01 	lds	r18, 0x0102
 aae:	30 91 03 01 	lds	r19, 0x0103
 ab2:	30 93 6a 01 	sts	0x016A, r19
 ab6:	20 93 69 01 	sts	0x0169, r18
 aba:	20 91 00 01 	lds	r18, 0x0100
 abe:	30 91 01 01 	lds	r19, 0x0101
 ac2:	21 15       	cp	r18, r1
 ac4:	31 05       	cpc	r19, r1
 ac6:	41 f4       	brne	.+16     	; 0xad8 <malloc+0xe8>
 ac8:	2d b7       	in	r18, 0x3d	; 61
 aca:	3e b7       	in	r19, 0x3e	; 62
 acc:	40 91 04 01 	lds	r20, 0x0104
 ad0:	50 91 05 01 	lds	r21, 0x0105
 ad4:	24 1b       	sub	r18, r20
 ad6:	35 0b       	sbc	r19, r21
 ad8:	e0 91 69 01 	lds	r30, 0x0169
 adc:	f0 91 6a 01 	lds	r31, 0x016A
 ae0:	e2 17       	cp	r30, r18
 ae2:	f3 07       	cpc	r31, r19
 ae4:	a0 f4       	brcc	.+40     	; 0xb0e <malloc+0x11e>
 ae6:	2e 1b       	sub	r18, r30
 ae8:	3f 0b       	sbc	r19, r31
 aea:	28 17       	cp	r18, r24
 aec:	39 07       	cpc	r19, r25
 aee:	78 f0       	brcs	.+30     	; 0xb0e <malloc+0x11e>
 af0:	ac 01       	movw	r20, r24
 af2:	4e 5f       	subi	r20, 0xFE	; 254
 af4:	5f 4f       	sbci	r21, 0xFF	; 255
 af6:	24 17       	cp	r18, r20
 af8:	35 07       	cpc	r19, r21
 afa:	48 f0       	brcs	.+18     	; 0xb0e <malloc+0x11e>
 afc:	4e 0f       	add	r20, r30
 afe:	5f 1f       	adc	r21, r31
 b00:	50 93 6a 01 	sts	0x016A, r21
 b04:	40 93 69 01 	sts	0x0169, r20
 b08:	81 93       	st	Z+, r24
 b0a:	91 93       	st	Z+, r25
 b0c:	02 c0       	rjmp	.+4      	; 0xb12 <malloc+0x122>
 b0e:	e0 e0       	ldi	r30, 0x00	; 0
 b10:	f0 e0       	ldi	r31, 0x00	; 0
 b12:	cf 01       	movw	r24, r30
 b14:	df 91       	pop	r29
 b16:	cf 91       	pop	r28
 b18:	08 95       	ret

00000b1a <free>:
 b1a:	0f 93       	push	r16
 b1c:	1f 93       	push	r17
 b1e:	cf 93       	push	r28
 b20:	df 93       	push	r29
 b22:	00 97       	sbiw	r24, 0x00	; 0
 b24:	09 f4       	brne	.+2      	; 0xb28 <free+0xe>
 b26:	8c c0       	rjmp	.+280    	; 0xc40 <free+0x126>
 b28:	fc 01       	movw	r30, r24
 b2a:	32 97       	sbiw	r30, 0x02	; 2
 b2c:	13 82       	std	Z+3, r1	; 0x03
 b2e:	12 82       	std	Z+2, r1	; 0x02
 b30:	00 91 6b 01 	lds	r16, 0x016B
 b34:	10 91 6c 01 	lds	r17, 0x016C
 b38:	01 15       	cp	r16, r1
 b3a:	11 05       	cpc	r17, r1
 b3c:	81 f4       	brne	.+32     	; 0xb5e <free+0x44>
 b3e:	20 81       	ld	r18, Z
 b40:	31 81       	ldd	r19, Z+1	; 0x01
 b42:	82 0f       	add	r24, r18
 b44:	93 1f       	adc	r25, r19
 b46:	20 91 69 01 	lds	r18, 0x0169
 b4a:	30 91 6a 01 	lds	r19, 0x016A
 b4e:	28 17       	cp	r18, r24
 b50:	39 07       	cpc	r19, r25
 b52:	79 f5       	brne	.+94     	; 0xbb2 <free+0x98>
 b54:	f0 93 6a 01 	sts	0x016A, r31
 b58:	e0 93 69 01 	sts	0x0169, r30
 b5c:	71 c0       	rjmp	.+226    	; 0xc40 <free+0x126>
 b5e:	d8 01       	movw	r26, r16
 b60:	40 e0       	ldi	r20, 0x00	; 0
 b62:	50 e0       	ldi	r21, 0x00	; 0
 b64:	ae 17       	cp	r26, r30
 b66:	bf 07       	cpc	r27, r31
 b68:	50 f4       	brcc	.+20     	; 0xb7e <free+0x64>
 b6a:	12 96       	adiw	r26, 0x02	; 2
 b6c:	2d 91       	ld	r18, X+
 b6e:	3c 91       	ld	r19, X
 b70:	13 97       	sbiw	r26, 0x03	; 3
 b72:	ad 01       	movw	r20, r26
 b74:	21 15       	cp	r18, r1
 b76:	31 05       	cpc	r19, r1
 b78:	09 f1       	breq	.+66     	; 0xbbc <free+0xa2>
 b7a:	d9 01       	movw	r26, r18
 b7c:	f3 cf       	rjmp	.-26     	; 0xb64 <free+0x4a>
 b7e:	9d 01       	movw	r18, r26
 b80:	da 01       	movw	r26, r20
 b82:	33 83       	std	Z+3, r19	; 0x03
 b84:	22 83       	std	Z+2, r18	; 0x02
 b86:	60 81       	ld	r22, Z
 b88:	71 81       	ldd	r23, Z+1	; 0x01
 b8a:	86 0f       	add	r24, r22
 b8c:	97 1f       	adc	r25, r23
 b8e:	82 17       	cp	r24, r18
 b90:	93 07       	cpc	r25, r19
 b92:	69 f4       	brne	.+26     	; 0xbae <free+0x94>
 b94:	ec 01       	movw	r28, r24
 b96:	28 81       	ld	r18, Y
 b98:	39 81       	ldd	r19, Y+1	; 0x01
 b9a:	26 0f       	add	r18, r22
 b9c:	37 1f       	adc	r19, r23
 b9e:	2e 5f       	subi	r18, 0xFE	; 254
 ba0:	3f 4f       	sbci	r19, 0xFF	; 255
 ba2:	31 83       	std	Z+1, r19	; 0x01
 ba4:	20 83       	st	Z, r18
 ba6:	8a 81       	ldd	r24, Y+2	; 0x02
 ba8:	9b 81       	ldd	r25, Y+3	; 0x03
 baa:	93 83       	std	Z+3, r25	; 0x03
 bac:	82 83       	std	Z+2, r24	; 0x02
 bae:	45 2b       	or	r20, r21
 bb0:	29 f4       	brne	.+10     	; 0xbbc <free+0xa2>
 bb2:	f0 93 6c 01 	sts	0x016C, r31
 bb6:	e0 93 6b 01 	sts	0x016B, r30
 bba:	42 c0       	rjmp	.+132    	; 0xc40 <free+0x126>
 bbc:	13 96       	adiw	r26, 0x03	; 3
 bbe:	fc 93       	st	X, r31
 bc0:	ee 93       	st	-X, r30
 bc2:	12 97       	sbiw	r26, 0x02	; 2
 bc4:	ed 01       	movw	r28, r26
 bc6:	49 91       	ld	r20, Y+
 bc8:	59 91       	ld	r21, Y+
 bca:	9e 01       	movw	r18, r28
 bcc:	24 0f       	add	r18, r20
 bce:	35 1f       	adc	r19, r21
 bd0:	e2 17       	cp	r30, r18
 bd2:	f3 07       	cpc	r31, r19
 bd4:	71 f4       	brne	.+28     	; 0xbf2 <free+0xd8>
 bd6:	80 81       	ld	r24, Z
 bd8:	91 81       	ldd	r25, Z+1	; 0x01
 bda:	84 0f       	add	r24, r20
 bdc:	95 1f       	adc	r25, r21
 bde:	02 96       	adiw	r24, 0x02	; 2
 be0:	11 96       	adiw	r26, 0x01	; 1
 be2:	9c 93       	st	X, r25
 be4:	8e 93       	st	-X, r24
 be6:	82 81       	ldd	r24, Z+2	; 0x02
 be8:	93 81       	ldd	r25, Z+3	; 0x03
 bea:	13 96       	adiw	r26, 0x03	; 3
 bec:	9c 93       	st	X, r25
 bee:	8e 93       	st	-X, r24
 bf0:	12 97       	sbiw	r26, 0x02	; 2
 bf2:	e0 e0       	ldi	r30, 0x00	; 0
 bf4:	f0 e0       	ldi	r31, 0x00	; 0
 bf6:	d8 01       	movw	r26, r16
 bf8:	12 96       	adiw	r26, 0x02	; 2
 bfa:	8d 91       	ld	r24, X+
 bfc:	9c 91       	ld	r25, X
 bfe:	13 97       	sbiw	r26, 0x03	; 3
 c00:	00 97       	sbiw	r24, 0x00	; 0
 c02:	19 f0       	breq	.+6      	; 0xc0a <free+0xf0>
 c04:	f8 01       	movw	r30, r16
 c06:	8c 01       	movw	r16, r24
 c08:	f6 cf       	rjmp	.-20     	; 0xbf6 <free+0xdc>
 c0a:	8d 91       	ld	r24, X+
 c0c:	9c 91       	ld	r25, X
 c0e:	98 01       	movw	r18, r16
 c10:	2e 5f       	subi	r18, 0xFE	; 254
 c12:	3f 4f       	sbci	r19, 0xFF	; 255
 c14:	82 0f       	add	r24, r18
 c16:	93 1f       	adc	r25, r19
 c18:	20 91 69 01 	lds	r18, 0x0169
 c1c:	30 91 6a 01 	lds	r19, 0x016A
 c20:	28 17       	cp	r18, r24
 c22:	39 07       	cpc	r19, r25
 c24:	69 f4       	brne	.+26     	; 0xc40 <free+0x126>
 c26:	30 97       	sbiw	r30, 0x00	; 0
 c28:	29 f4       	brne	.+10     	; 0xc34 <free+0x11a>
 c2a:	10 92 6c 01 	sts	0x016C, r1
 c2e:	10 92 6b 01 	sts	0x016B, r1
 c32:	02 c0       	rjmp	.+4      	; 0xc38 <free+0x11e>
 c34:	13 82       	std	Z+3, r1	; 0x03
 c36:	12 82       	std	Z+2, r1	; 0x02
 c38:	10 93 6a 01 	sts	0x016A, r17
 c3c:	00 93 69 01 	sts	0x0169, r16
 c40:	df 91       	pop	r29
 c42:	cf 91       	pop	r28
 c44:	1f 91       	pop	r17
 c46:	0f 91       	pop	r16
 c48:	08 95       	ret

00000c4a <strnlen_P>:
 c4a:	fc 01       	movw	r30, r24
 c4c:	05 90       	lpm	r0, Z+
 c4e:	61 50       	subi	r22, 0x01	; 1
 c50:	70 40       	sbci	r23, 0x00	; 0
 c52:	01 10       	cpse	r0, r1
 c54:	d8 f7       	brcc	.-10     	; 0xc4c <strnlen_P+0x2>
 c56:	80 95       	com	r24
 c58:	90 95       	com	r25
 c5a:	8e 0f       	add	r24, r30
 c5c:	9f 1f       	adc	r25, r31
 c5e:	08 95       	ret

00000c60 <memset>:
 c60:	dc 01       	movw	r26, r24
 c62:	01 c0       	rjmp	.+2      	; 0xc66 <memset+0x6>
 c64:	6d 93       	st	X+, r22
 c66:	41 50       	subi	r20, 0x01	; 1
 c68:	50 40       	sbci	r21, 0x00	; 0
 c6a:	e0 f7       	brcc	.-8      	; 0xc64 <memset+0x4>
 c6c:	08 95       	ret

00000c6e <strnlen>:
 c6e:	fc 01       	movw	r30, r24
 c70:	61 50       	subi	r22, 0x01	; 1
 c72:	70 40       	sbci	r23, 0x00	; 0
 c74:	01 90       	ld	r0, Z+
 c76:	01 10       	cpse	r0, r1
 c78:	d8 f7       	brcc	.-10     	; 0xc70 <strnlen+0x2>
 c7a:	80 95       	com	r24
 c7c:	90 95       	com	r25
 c7e:	8e 0f       	add	r24, r30
 c80:	9f 1f       	adc	r25, r31
 c82:	08 95       	ret

00000c84 <fputc>:
 c84:	0f 93       	push	r16
 c86:	1f 93       	push	r17
 c88:	cf 93       	push	r28
 c8a:	df 93       	push	r29
 c8c:	fb 01       	movw	r30, r22
 c8e:	23 81       	ldd	r18, Z+3	; 0x03
 c90:	21 fd       	sbrc	r18, 1
 c92:	03 c0       	rjmp	.+6      	; 0xc9a <fputc+0x16>
 c94:	8f ef       	ldi	r24, 0xFF	; 255
 c96:	9f ef       	ldi	r25, 0xFF	; 255
 c98:	28 c0       	rjmp	.+80     	; 0xcea <fputc+0x66>
 c9a:	22 ff       	sbrs	r18, 2
 c9c:	16 c0       	rjmp	.+44     	; 0xcca <fputc+0x46>
 c9e:	46 81       	ldd	r20, Z+6	; 0x06
 ca0:	57 81       	ldd	r21, Z+7	; 0x07
 ca2:	24 81       	ldd	r18, Z+4	; 0x04
 ca4:	35 81       	ldd	r19, Z+5	; 0x05
 ca6:	42 17       	cp	r20, r18
 ca8:	53 07       	cpc	r21, r19
 caa:	44 f4       	brge	.+16     	; 0xcbc <fputc+0x38>
 cac:	a0 81       	ld	r26, Z
 cae:	b1 81       	ldd	r27, Z+1	; 0x01
 cb0:	9d 01       	movw	r18, r26
 cb2:	2f 5f       	subi	r18, 0xFF	; 255
 cb4:	3f 4f       	sbci	r19, 0xFF	; 255
 cb6:	31 83       	std	Z+1, r19	; 0x01
 cb8:	20 83       	st	Z, r18
 cba:	8c 93       	st	X, r24
 cbc:	26 81       	ldd	r18, Z+6	; 0x06
 cbe:	37 81       	ldd	r19, Z+7	; 0x07
 cc0:	2f 5f       	subi	r18, 0xFF	; 255
 cc2:	3f 4f       	sbci	r19, 0xFF	; 255
 cc4:	37 83       	std	Z+7, r19	; 0x07
 cc6:	26 83       	std	Z+6, r18	; 0x06
 cc8:	10 c0       	rjmp	.+32     	; 0xcea <fputc+0x66>
 cca:	eb 01       	movw	r28, r22
 ccc:	09 2f       	mov	r16, r25
 cce:	18 2f       	mov	r17, r24
 cd0:	00 84       	ldd	r0, Z+8	; 0x08
 cd2:	f1 85       	ldd	r31, Z+9	; 0x09
 cd4:	e0 2d       	mov	r30, r0
 cd6:	09 95       	icall
 cd8:	89 2b       	or	r24, r25
 cda:	e1 f6       	brne	.-72     	; 0xc94 <fputc+0x10>
 cdc:	8e 81       	ldd	r24, Y+6	; 0x06
 cde:	9f 81       	ldd	r25, Y+7	; 0x07
 ce0:	01 96       	adiw	r24, 0x01	; 1
 ce2:	9f 83       	std	Y+7, r25	; 0x07
 ce4:	8e 83       	std	Y+6, r24	; 0x06
 ce6:	81 2f       	mov	r24, r17
 ce8:	90 2f       	mov	r25, r16
 cea:	df 91       	pop	r29
 cec:	cf 91       	pop	r28
 cee:	1f 91       	pop	r17
 cf0:	0f 91       	pop	r16
 cf2:	08 95       	ret

00000cf4 <__ultoa_invert>:
 cf4:	fa 01       	movw	r30, r20
 cf6:	aa 27       	eor	r26, r26
 cf8:	28 30       	cpi	r18, 0x08	; 8
 cfa:	51 f1       	breq	.+84     	; 0xd50 <__ultoa_invert+0x5c>
 cfc:	20 31       	cpi	r18, 0x10	; 16
 cfe:	81 f1       	breq	.+96     	; 0xd60 <__ultoa_invert+0x6c>
 d00:	e8 94       	clt
 d02:	6f 93       	push	r22
 d04:	6e 7f       	andi	r22, 0xFE	; 254
 d06:	6e 5f       	subi	r22, 0xFE	; 254
 d08:	7f 4f       	sbci	r23, 0xFF	; 255
 d0a:	8f 4f       	sbci	r24, 0xFF	; 255
 d0c:	9f 4f       	sbci	r25, 0xFF	; 255
 d0e:	af 4f       	sbci	r26, 0xFF	; 255
 d10:	b1 e0       	ldi	r27, 0x01	; 1
 d12:	3e d0       	rcall	.+124    	; 0xd90 <__ultoa_invert+0x9c>
 d14:	b4 e0       	ldi	r27, 0x04	; 4
 d16:	3c d0       	rcall	.+120    	; 0xd90 <__ultoa_invert+0x9c>
 d18:	67 0f       	add	r22, r23
 d1a:	78 1f       	adc	r23, r24
 d1c:	89 1f       	adc	r24, r25
 d1e:	9a 1f       	adc	r25, r26
 d20:	a1 1d       	adc	r26, r1
 d22:	68 0f       	add	r22, r24
 d24:	79 1f       	adc	r23, r25
 d26:	8a 1f       	adc	r24, r26
 d28:	91 1d       	adc	r25, r1
 d2a:	a1 1d       	adc	r26, r1
 d2c:	6a 0f       	add	r22, r26
 d2e:	71 1d       	adc	r23, r1
 d30:	81 1d       	adc	r24, r1
 d32:	91 1d       	adc	r25, r1
 d34:	a1 1d       	adc	r26, r1
 d36:	20 d0       	rcall	.+64     	; 0xd78 <__ultoa_invert+0x84>
 d38:	09 f4       	brne	.+2      	; 0xd3c <__ultoa_invert+0x48>
 d3a:	68 94       	set
 d3c:	3f 91       	pop	r19
 d3e:	2a e0       	ldi	r18, 0x0A	; 10
 d40:	26 9f       	mul	r18, r22
 d42:	11 24       	eor	r1, r1
 d44:	30 19       	sub	r19, r0
 d46:	30 5d       	subi	r19, 0xD0	; 208
 d48:	31 93       	st	Z+, r19
 d4a:	de f6       	brtc	.-74     	; 0xd02 <__ultoa_invert+0xe>
 d4c:	cf 01       	movw	r24, r30
 d4e:	08 95       	ret
 d50:	46 2f       	mov	r20, r22
 d52:	47 70       	andi	r20, 0x07	; 7
 d54:	40 5d       	subi	r20, 0xD0	; 208
 d56:	41 93       	st	Z+, r20
 d58:	b3 e0       	ldi	r27, 0x03	; 3
 d5a:	0f d0       	rcall	.+30     	; 0xd7a <__ultoa_invert+0x86>
 d5c:	c9 f7       	brne	.-14     	; 0xd50 <__ultoa_invert+0x5c>
 d5e:	f6 cf       	rjmp	.-20     	; 0xd4c <__ultoa_invert+0x58>
 d60:	46 2f       	mov	r20, r22
 d62:	4f 70       	andi	r20, 0x0F	; 15
 d64:	40 5d       	subi	r20, 0xD0	; 208
 d66:	4a 33       	cpi	r20, 0x3A	; 58
 d68:	18 f0       	brcs	.+6      	; 0xd70 <__ultoa_invert+0x7c>
 d6a:	49 5d       	subi	r20, 0xD9	; 217
 d6c:	31 fd       	sbrc	r19, 1
 d6e:	40 52       	subi	r20, 0x20	; 32
 d70:	41 93       	st	Z+, r20
 d72:	02 d0       	rcall	.+4      	; 0xd78 <__ultoa_invert+0x84>
 d74:	a9 f7       	brne	.-22     	; 0xd60 <__ultoa_invert+0x6c>
 d76:	ea cf       	rjmp	.-44     	; 0xd4c <__ultoa_invert+0x58>
 d78:	b4 e0       	ldi	r27, 0x04	; 4
 d7a:	a6 95       	lsr	r26
 d7c:	97 95       	ror	r25
 d7e:	87 95       	ror	r24
 d80:	77 95       	ror	r23
 d82:	67 95       	ror	r22
 d84:	ba 95       	dec	r27
 d86:	c9 f7       	brne	.-14     	; 0xd7a <__ultoa_invert+0x86>
 d88:	00 97       	sbiw	r24, 0x00	; 0
 d8a:	61 05       	cpc	r22, r1
 d8c:	71 05       	cpc	r23, r1
 d8e:	08 95       	ret
 d90:	9b 01       	movw	r18, r22
 d92:	ac 01       	movw	r20, r24
 d94:	0a 2e       	mov	r0, r26
 d96:	06 94       	lsr	r0
 d98:	57 95       	ror	r21
 d9a:	47 95       	ror	r20
 d9c:	37 95       	ror	r19
 d9e:	27 95       	ror	r18
 da0:	ba 95       	dec	r27
 da2:	c9 f7       	brne	.-14     	; 0xd96 <__ultoa_invert+0xa2>
 da4:	62 0f       	add	r22, r18
 da6:	73 1f       	adc	r23, r19
 da8:	84 1f       	adc	r24, r20
 daa:	95 1f       	adc	r25, r21
 dac:	a0 1d       	adc	r26, r0
 dae:	08 95       	ret

00000db0 <_exit>:
 db0:	f8 94       	cli

00000db2 <__stop_program>:
 db2:	ff cf       	rjmp	.-2      	; 0xdb2 <__stop_program>
