
Steering_wheel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00000dc6  00000e5a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dc6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000033  00800150  00800150  00000eaa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000eaa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f08  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000f48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c3a  00000000  00000000  00001050  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006ad  00000000  00000000  00001c8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009a0  00000000  00000000  00002337  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000021c  00000000  00000000  00002cd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000399  00000000  00000000  00002ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000692  00000000  00000000  0000328d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  0000391f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
   2:	00 00       	nop
   4:	64 c0       	rjmp	.+200    	; 0xce <__bad_interrupt>
   6:	00 00       	nop
   8:	62 c0       	rjmp	.+196    	; 0xce <__bad_interrupt>
   a:	00 00       	nop
   c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
   e:	00 00       	nop
  10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
  12:	00 00       	nop
  14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
  16:	00 00       	nop
  18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
  1a:	00 00       	nop
  1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
  1e:	00 00       	nop
  20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
  22:	00 00       	nop
  24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
  26:	00 00       	nop
  28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
  2a:	00 00       	nop
  2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
  2e:	00 00       	nop
  30:	4e c0       	rjmp	.+156    	; 0xce <__bad_interrupt>
  32:	00 00       	nop
  34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
  36:	00 00       	nop
  38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
  3a:	00 00       	nop
  3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
  3e:	00 00       	nop
  40:	46 c0       	rjmp	.+140    	; 0xce <__bad_interrupt>
  42:	00 00       	nop
  44:	44 c0       	rjmp	.+136    	; 0xce <__bad_interrupt>
  46:	00 00       	nop
  48:	81 c0       	rjmp	.+258    	; 0x14c <__vector_18>
  4a:	00 00       	nop
  4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
  4e:	00 00       	nop
  50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
  52:	00 00       	nop
  54:	3c c0       	rjmp	.+120    	; 0xce <__bad_interrupt>
  56:	00 00       	nop
  58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
  5a:	00 00       	nop
  5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
  5e:	00 00       	nop
  60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
  62:	00 00       	nop
  64:	34 c0       	rjmp	.+104    	; 0xce <__bad_interrupt>
  66:	00 00       	nop
  68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
  6a:	00 00       	nop
  6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
  6e:	00 00       	nop
  70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
  72:	00 00       	nop
  74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
  76:	00 00       	nop
  78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
  7a:	00 00       	nop
  7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
  7e:	00 00       	nop
  80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
  82:	00 00       	nop
  84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
  86:	00 00       	nop
  88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
  8a:	00 00       	nop
  8c:	20 c0       	rjmp	.+64     	; 0xce <__bad_interrupt>
  8e:	00 00       	nop
  90:	1e c0       	rjmp	.+60     	; 0xce <__bad_interrupt>
	...

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	11 e0       	ldi	r17, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	e6 ec       	ldi	r30, 0xC6	; 198
  a8:	fd e0       	ldi	r31, 0x0D	; 13
  aa:	00 e0       	ldi	r16, 0x00	; 0
  ac:	0b bf       	out	0x3b, r16	; 59
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
  b0:	07 90       	elpm	r0, Z+
  b2:	0d 92       	st	X+, r0
  b4:	a0 35       	cpi	r26, 0x50	; 80
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	a0 e5       	ldi	r26, 0x50	; 80
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	a3 38       	cpi	r26, 0x83	; 131
  c6:	b2 07       	cpc	r27, r18
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	61 d1       	rcall	.+706    	; 0x38e <main>
  cc:	7a c6       	rjmp	.+3316   	; 0xdc2 <_exit>

000000ce <__bad_interrupt>:
  ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <adc_init>:
 *  Author: Vilius
 */ 
#include "adc.h"

void adc_init( void) {
	clear_bit(DDRF, DDF0);
  d0:	80 98       	cbi	0x10, 0	; 16
	
	/* Voltage ref AVcc with external capacitor on AREF pin */
	set_bit(ADMUX, REFS0);
  d2:	ec e7       	ldi	r30, 0x7C	; 124
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	80 64       	ori	r24, 0x40	; 64
  da:	80 83       	st	Z, r24
	/* Select prescaler to 64 --> conversion f= 125kHz */
	set_bit(ADCSRA, ADPS2);
  dc:	ea e7       	ldi	r30, 0x7A	; 122
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	84 60       	ori	r24, 0x04	; 4
  e4:	80 83       	st	Z, r24
	set_bit(ADCSRA, ADPS1);
  e6:	80 81       	ld	r24, Z
  e8:	82 60       	ori	r24, 0x02	; 2
  ea:	80 83       	st	Z, r24
	/* Enable the ADC */
	set_bit(ADCSRA, ADEN);
  ec:	80 81       	ld	r24, Z
  ee:	80 68       	ori	r24, 0x80	; 128
  f0:	80 83       	st	Z, r24
  f2:	08 95       	ret

000000f4 <adc_sleep>:
	//set_bit(ADCSRA, ADIE);
}

void adc_sleep( void) {
	/* Wait for the conversion to complete */
	while(test_bit(ADCSRA, ADSC));
  f4:	ea e7       	ldi	r30, 0x7A	; 122
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	86 fd       	sbrc	r24, 6
  fc:	fd cf       	rjmp	.-6      	; 0xf8 <adc_sleep+0x4>
	/* Turn off the ADC */
	clear_bit(ADCSRA, ADEN);
  fe:	ea e7       	ldi	r30, 0x7A	; 122
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	8f 77       	andi	r24, 0x7F	; 127
 106:	80 83       	st	Z, r24
 108:	08 95       	ret

0000010a <adc_input>:
}

void adc_input(int ref, CAN_packet* p) {
	/*Select the reference channel */
	if (ref==SPEED)
 10a:	00 97       	sbiw	r24, 0x00	; 0
 10c:	29 f4       	brne	.+10     	; 0x118 <adc_input+0xe>
		ADMUX |= 0x00;
 10e:	ec e7       	ldi	r30, 0x7C	; 124
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	80 83       	st	Z, r24
 116:	07 c0       	rjmp	.+14     	; 0x126 <adc_input+0x1c>
	else if (ref==FANS)
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	29 f4       	brne	.+10     	; 0x126 <adc_input+0x1c>
		ADMUX |= 0x01;
 11c:	ec e7       	ldi	r30, 0x7C	; 124
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	81 60       	ori	r24, 0x01	; 1
 124:	80 83       	st	Z, r24
	/* Start the conversion */
	set_bit(ADCSRA, ADSC);
 126:	ea e7       	ldi	r30, 0x7A	; 122
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	80 64       	ori	r24, 0x40	; 64
 12e:	80 83       	st	Z, r24
	/* Wait for the conversion to complete */
	while(test_bit(ADCSRA, ADSC));
 130:	80 81       	ld	r24, Z
 132:	86 fd       	sbrc	r24, 6
 134:	fd cf       	rjmp	.-6      	; 0x130 <adc_input+0x26>
	p->data[1] = (ADC>>2);
 136:	80 91 78 00 	lds	r24, 0x0078
 13a:	90 91 79 00 	lds	r25, 0x0079
 13e:	96 95       	lsr	r25
 140:	87 95       	ror	r24
 142:	96 95       	lsr	r25
 144:	87 95       	ror	r24
 146:	fb 01       	movw	r30, r22
 148:	84 83       	std	Z+4, r24	; 0x04
 14a:	08 95       	ret

0000014c <__vector_18>:
		}
	CANGCON |= 0x02;
	CANGIE=(1<<ENIT) | (1<< ENRX);
}
	
void can_health(void) {
 14c:	1f 92       	push	r1
 14e:	0f 92       	push	r0
 150:	0f b6       	in	r0, 0x3f	; 63
 152:	0f 92       	push	r0
 154:	11 24       	eor	r1, r1
 156:	0b b6       	in	r0, 0x3b	; 59
 158:	0f 92       	push	r0
 15a:	2f 93       	push	r18
 15c:	3f 93       	push	r19
 15e:	4f 93       	push	r20
 160:	5f 93       	push	r21
 162:	6f 93       	push	r22
 164:	7f 93       	push	r23
 166:	8f 93       	push	r24
 168:	9f 93       	push	r25
 16a:	af 93       	push	r26
 16c:	bf 93       	push	r27
 16e:	cf 93       	push	r28
 170:	ef 93       	push	r30
 172:	ff 93       	push	r31
 174:	ed ee       	ldi	r30, 0xED	; 237
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	c0 81       	ld	r28, Z
 17a:	80 91 ec 00 	lds	r24, 0x00EC
 17e:	68 2f       	mov	r22, r24
 180:	70 e0       	ldi	r23, 0x00	; 0
 182:	80 7f       	andi	r24, 0xF0	; 240
 184:	80 83       	st	Z, r24
 186:	72 95       	swap	r23
 188:	62 95       	swap	r22
 18a:	6f 70       	andi	r22, 0x0F	; 15
 18c:	67 27       	eor	r22, r23
 18e:	7f 70       	andi	r23, 0x0F	; 15
 190:	67 27       	eor	r22, r23
 192:	80 91 ee 00 	lds	r24, 0x00EE
 196:	8f 75       	andi	r24, 0x5F	; 95
 198:	09 f0       	breq	.+2      	; 0x19c <__vector_18+0x50>
 19a:	98 95       	break
 19c:	20 91 f2 00 	lds	r18, 0x00F2
 1a0:	80 91 f3 00 	lds	r24, 0x00F3
 1a4:	e0 e5       	ldi	r30, 0x50	; 80
 1a6:	f1 e0       	ldi	r31, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	88 0f       	add	r24, r24
 1b0:	99 1f       	adc	r25, r25
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	22 95       	swap	r18
 1b8:	26 95       	lsr	r18
 1ba:	27 70       	andi	r18, 0x07	; 7
 1bc:	82 2b       	or	r24, r18
 1be:	91 83       	std	Z+1, r25	; 0x01
 1c0:	80 83       	st	Z, r24
 1c2:	80 91 ef 00 	lds	r24, 0x00EF
 1c6:	8f 70       	andi	r24, 0x0F	; 15
 1c8:	82 83       	std	Z+2, r24	; 0x02
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	00 97       	sbiw	r24, 0x00	; 0
 1ce:	59 f0       	breq	.+22     	; 0x1e6 <__vector_18+0x9a>
 1d0:	e3 e5       	ldi	r30, 0x53	; 83
 1d2:	f1 e0       	ldi	r31, 0x01	; 1
 1d4:	8d 5a       	subi	r24, 0xAD	; 173
 1d6:	9e 4f       	sbci	r25, 0xFE	; 254
 1d8:	aa ef       	ldi	r26, 0xFA	; 250
 1da:	b0 e0       	ldi	r27, 0x00	; 0
 1dc:	2c 91       	ld	r18, X
 1de:	21 93       	st	Z+, r18
 1e0:	e8 17       	cp	r30, r24
 1e2:	f9 07       	cpc	r31, r25
 1e4:	d9 f7       	brne	.-10     	; 0x1dc <__vector_18+0x90>
 1e6:	10 92 ee 00 	sts	0x00EE, r1
 1ea:	80 e8       	ldi	r24, 0x80	; 128
 1ec:	80 93 ef 00 	sts	0x00EF, r24
 1f0:	fb 01       	movw	r30, r22
 1f2:	ee 0f       	add	r30, r30
 1f4:	ff 1f       	adc	r31, r31
 1f6:	e5 5a       	subi	r30, 0xA5	; 165
 1f8:	fe 4f       	sbci	r31, 0xFE	; 254
 1fa:	01 90       	ld	r0, Z+
 1fc:	f0 81       	ld	r31, Z
 1fe:	e0 2d       	mov	r30, r0
 200:	80 e5       	ldi	r24, 0x50	; 80
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	09 95       	icall
 206:	c0 93 ed 00 	sts	0x00ED, r28
 20a:	ff 91       	pop	r31
 20c:	ef 91       	pop	r30
 20e:	cf 91       	pop	r28
 210:	bf 91       	pop	r27
 212:	af 91       	pop	r26
 214:	9f 91       	pop	r25
 216:	8f 91       	pop	r24
 218:	7f 91       	pop	r23
 21a:	6f 91       	pop	r22
 21c:	5f 91       	pop	r21
 21e:	4f 91       	pop	r20
 220:	3f 91       	pop	r19
 222:	2f 91       	pop	r18
 224:	0f 90       	pop	r0
 226:	0b be       	out	0x3b, r0	; 59
 228:	0f 90       	pop	r0
 22a:	0f be       	out	0x3f, r0	; 63
 22c:	0f 90       	pop	r0
 22e:	1f 90       	pop	r1
 230:	18 95       	reti

00000232 <can_tx>:
 232:	cf 93       	push	r28
 234:	df 93       	push	r29
 236:	fb 01       	movw	r30, r22
 238:	20 81       	ld	r18, Z
 23a:	31 81       	ldd	r19, Z+1	; 0x01
 23c:	21 15       	cp	r18, r1
 23e:	38 40       	sbci	r19, 0x08	; 8
 240:	08 f0       	brcs	.+2      	; 0x244 <can_tx+0x12>
 242:	98 95       	break
 244:	92 81       	ldd	r25, Z+2	; 0x02
 246:	99 30       	cpi	r25, 0x09	; 9
 248:	08 f0       	brcs	.+2      	; 0x24c <can_tx+0x1a>
 24a:	98 95       	break
 24c:	8f 30       	cpi	r24, 0x0F	; 15
 24e:	08 f0       	brcs	.+2      	; 0x252 <can_tx+0x20>
 250:	98 95       	break
 252:	82 95       	swap	r24
 254:	80 7f       	andi	r24, 0xF0	; 240
 256:	80 93 ed 00 	sts	0x00ED, r24
 25a:	80 91 ef 00 	lds	r24, 0x00EF
 25e:	80 7c       	andi	r24, 0xC0	; 192
 260:	21 f0       	breq	.+8      	; 0x26a <can_tx+0x38>
 262:	80 91 ee 00 	lds	r24, 0x00EE
 266:	86 ff       	sbrs	r24, 6
 268:	55 c0       	rjmp	.+170    	; 0x314 <can_tx+0xe2>
 26a:	10 92 ee 00 	sts	0x00EE, r1
 26e:	10 92 ef 00 	sts	0x00EF, r1
 272:	82 81       	ldd	r24, Z+2	; 0x02
 274:	8f 3f       	cpi	r24, 0xFF	; 255
 276:	61 f1       	breq	.+88     	; 0x2d0 <can_tx+0x9e>
 278:	80 81       	ld	r24, Z
 27a:	91 81       	ldd	r25, Z+1	; 0x01
 27c:	96 95       	lsr	r25
 27e:	87 95       	ror	r24
 280:	96 95       	lsr	r25
 282:	87 95       	ror	r24
 284:	96 95       	lsr	r25
 286:	87 95       	ror	r24
 288:	80 93 f3 00 	sts	0x00F3, r24
 28c:	80 81       	ld	r24, Z
 28e:	82 95       	swap	r24
 290:	88 0f       	add	r24, r24
 292:	80 7e       	andi	r24, 0xE0	; 224
 294:	80 93 f2 00 	sts	0x00F2, r24
 298:	10 92 f1 00 	sts	0x00F1, r1
 29c:	10 92 f0 00 	sts	0x00F0, r1
 2a0:	22 81       	ldd	r18, Z+2	; 0x02
 2a2:	22 23       	and	r18, r18
 2a4:	79 f0       	breq	.+30     	; 0x2c4 <can_tx+0x92>
 2a6:	df 01       	movw	r26, r30
 2a8:	13 96       	adiw	r26, 0x03	; 3
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	ca ef       	ldi	r28, 0xFA	; 250
 2b0:	d0 e0       	ldi	r29, 0x00	; 0
 2b2:	2d 91       	ld	r18, X+
 2b4:	28 83       	st	Y, r18
 2b6:	01 96       	adiw	r24, 0x01	; 1
 2b8:	22 81       	ldd	r18, Z+2	; 0x02
 2ba:	42 2f       	mov	r20, r18
 2bc:	50 e0       	ldi	r21, 0x00	; 0
 2be:	84 17       	cp	r24, r20
 2c0:	95 07       	cpc	r25, r21
 2c2:	b8 f3       	brcs	.-18     	; 0x2b2 <can_tx+0x80>
 2c4:	ef ee       	ldi	r30, 0xEF	; 239
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	80 81       	ld	r24, Z
 2ca:	28 2b       	or	r18, r24
 2cc:	20 83       	st	Z, r18
 2ce:	1b c0       	rjmp	.+54     	; 0x306 <can_tx+0xd4>
 2d0:	80 81       	ld	r24, Z
 2d2:	91 81       	ldd	r25, Z+1	; 0x01
 2d4:	96 95       	lsr	r25
 2d6:	87 95       	ror	r24
 2d8:	96 95       	lsr	r25
 2da:	87 95       	ror	r24
 2dc:	96 95       	lsr	r25
 2de:	87 95       	ror	r24
 2e0:	80 93 f3 00 	sts	0x00F3, r24
 2e4:	80 81       	ld	r24, Z
 2e6:	82 95       	swap	r24
 2e8:	88 0f       	add	r24, r24
 2ea:	80 7e       	andi	r24, 0xE0	; 224
 2ec:	80 93 f2 00 	sts	0x00F2, r24
 2f0:	10 92 f1 00 	sts	0x00F1, r1
 2f4:	84 e0       	ldi	r24, 0x04	; 4
 2f6:	80 93 f0 00 	sts	0x00F0, r24
 2fa:	af ee       	ldi	r26, 0xEF	; 239
 2fc:	b0 e0       	ldi	r27, 0x00	; 0
 2fe:	9c 91       	ld	r25, X
 300:	82 81       	ldd	r24, Z+2	; 0x02
 302:	89 2b       	or	r24, r25
 304:	8c 93       	st	X, r24
 306:	ef ee       	ldi	r30, 0xEF	; 239
 308:	f0 e0       	ldi	r31, 0x00	; 0
 30a:	80 81       	ld	r24, Z
 30c:	80 64       	ori	r24, 0x40	; 64
 30e:	80 83       	st	Z, r24
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	01 c0       	rjmp	.+2      	; 0x316 <can_tx+0xe4>
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	df 91       	pop	r29
 318:	cf 91       	pop	r28
 31a:	08 95       	ret

0000031c <can_init>:
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	86 e0       	ldi	r24, 0x06	; 6
 322:	80 93 e2 00 	sts	0x00E2, r24
 326:	8c e0       	ldi	r24, 0x0C	; 12
 328:	80 93 e3 00 	sts	0x00E3, r24
 32c:	8a e5       	ldi	r24, 0x5A	; 90
 32e:	80 93 e4 00 	sts	0x00E4, r24
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	cd ee       	ldi	r28, 0xED	; 237
 336:	d0 e0       	ldi	r29, 0x00	; 0
 338:	ae ee       	ldi	r26, 0xEE	; 238
 33a:	b0 e0       	ldi	r27, 0x00	; 0
 33c:	ef ee       	ldi	r30, 0xEF	; 239
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	98 2f       	mov	r25, r24
 342:	92 95       	swap	r25
 344:	90 7f       	andi	r25, 0xF0	; 240
 346:	98 83       	st	Y, r25
 348:	1c 92       	st	X, r1
 34a:	10 82       	st	Z, r1
 34c:	8f 5f       	subi	r24, 0xFF	; 255
 34e:	8f 30       	cpi	r24, 0x0F	; 15
 350:	b9 f7       	brne	.-18     	; 0x340 <can_init+0x24>
 352:	e8 ed       	ldi	r30, 0xD8	; 216
 354:	f0 e0       	ldi	r31, 0x00	; 0
 356:	80 81       	ld	r24, Z
 358:	82 60       	ori	r24, 0x02	; 2
 35a:	80 83       	st	Z, r24
 35c:	80 ea       	ldi	r24, 0xA0	; 160
 35e:	80 93 db 00 	sts	0x00DB, r24
 362:	df 91       	pop	r29
 364:	cf 91       	pop	r28
 366:	08 95       	ret

00000368 <can_packet_send>:
	*/
}

BOOL can_packet_send(char mob, CAN_packet *packet) {
	/* Clear global interrupts */
	cli();
 368:	f8 94       	cli
	BOOL result = can_tx(mob, packet);
 36a:	63 df       	rcall	.-314    	; 0x232 <can_tx>
	/* Set global interrupts */
	sei();
 36c:	78 94       	sei
	return result;
}
 36e:	08 95       	ret

00000370 <inits>:
	printf("\r\nInitialization complete");
}

void response(CAN_packet* p, unsigned int mob) {
	(void)mob;
	printf("\r\nReceived");
 370:	d5 df       	rcall	.-86     	; 0x31c <can_init>
 372:	61 e0       	ldi	r22, 0x01	; 1
 374:	83 e3       	ldi	r24, 0x33	; 51
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	bb d0       	rcall	.+374    	; 0x4f0 <USART_init>
 37a:	7b d0       	rcall	.+246    	; 0x472 <sw_init>
 37c:	a9 de       	rcall	.-686    	; 0xd0 <adc_init>
 37e:	86 e0       	ldi	r24, 0x06	; 6
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	9f 93       	push	r25
 384:	8f 93       	push	r24
 386:	22 d1       	rcall	.+580    	; 0x5cc <printf>
 388:	0f 90       	pop	r0
 38a:	0f 90       	pop	r0
 38c:	08 95       	ret

0000038e <main>:
}

int main(void)
{
 38e:	cf 93       	push	r28
 390:	df 93       	push	r29
 392:	cd b7       	in	r28, 0x3d	; 61
 394:	de b7       	in	r29, 0x3e	; 62
 396:	66 97       	sbiw	r28, 0x16	; 22
 398:	0f b6       	in	r0, 0x3f	; 63
 39a:	f8 94       	cli
 39c:	de bf       	out	0x3e, r29	; 62
 39e:	0f be       	out	0x3f, r0	; 63
 3a0:	cd bf       	out	0x3d, r28	; 61
	/* Make two CAN packets */
	CAN_packet current;
	CAN_packet updated;
	
	/* Initialize module and packets*/
	inits();
 3a2:	e6 df       	rcall	.-52     	; 0x370 <inits>
	
	/* Initialize packets */
	current.id = ID_steeringWheel;
 3a4:	2f e1       	ldi	r18, 0x1F	; 31
 3a6:	30 e0       	ldi	r19, 0x00	; 0
 3a8:	3a 83       	std	Y+2, r19	; 0x02
 3aa:	29 83       	std	Y+1, r18	; 0x01
	current.length = 2;
 3ac:	82 e0       	ldi	r24, 0x02	; 2
 3ae:	8b 83       	std	Y+3, r24	; 0x03
	updated.id = ID_steeringWheel;
 3b0:	3d 87       	std	Y+13, r19	; 0x0d
 3b2:	2c 87       	std	Y+12, r18	; 0x0c
	updated.length = 2;
 3b4:	8e 87       	std	Y+14, r24	; 0x0e
	sw_input(&current);
 3b6:	ce 01       	movw	r24, r28
 3b8:	01 96       	adiw	r24, 0x01	; 1
 3ba:	6a d0       	rcall	.+212    	; 0x490 <sw_input>
	sw_input(&updated);
 3bc:	ce 01       	movw	r24, r28
 3be:	0c 96       	adiw	r24, 0x0c	; 12
 3c0:	67 d0       	rcall	.+206    	; 0x490 <sw_input>
	adc_input(SPEED, &current);
 3c2:	be 01       	movw	r22, r28
 3c4:	6f 5f       	subi	r22, 0xFF	; 255
 3c6:	7f 4f       	sbci	r23, 0xFF	; 255
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	9e de       	rcall	.-708    	; 0x10a <adc_input>
	adc_input(SPEED, &updated);
 3ce:	be 01       	movw	r22, r28
 3d0:	64 5f       	subi	r22, 0xF4	; 244
 3d2:	7f 4f       	sbci	r23, 0xFF	; 255
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	98 de       	rcall	.-720    	; 0x10a <adc_input>
	adc_sleep();
 3da:	8c de       	rcall	.-744    	; 0xf4 <adc_sleep>
		/* Compare the two packets */
		different = memcmp(current.data, updated.data, 8);
		if (different) {
			/*printf("\r\nCurrent data[0] - %u",current.data[0]);
			*/
			printf("\r\nCurrent speed - %u",current.data[1]);
 3dc:	0f 2e       	mov	r0, r31
 3de:	fb e2       	ldi	r31, 0x2B	; 43
 3e0:	ef 2e       	mov	r14, r31
 3e2:	f1 e0       	ldi	r31, 0x01	; 1
 3e4:	ff 2e       	mov	r15, r31
 3e6:	f0 2d       	mov	r31, r0
			
			//printf("\r\nUpdated data[0] - %u",updated.data[0]);
			/* Send a message with new data */
			ret = can_packet_send(1, &updated);
			current = updated;
 3e8:	0f 2e       	mov	r0, r31
 3ea:	fb e0       	ldi	r31, 0x0B	; 11
 3ec:	df 2e       	mov	r13, r31
 3ee:	f0 2d       	mov	r31, r0
		}
		if (ret) {
			printf("\r\nMessage sent");
 3f0:	00 e4       	ldi	r16, 0x40	; 64
 3f2:	11 e0       	ldi	r17, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3f4:	2f ef       	ldi	r18, 0xFF	; 255
 3f6:	80 e7       	ldi	r24, 0x70	; 112
 3f8:	92 e0       	ldi	r25, 0x02	; 2
 3fa:	21 50       	subi	r18, 0x01	; 1
 3fc:	80 40       	sbci	r24, 0x00	; 0
 3fe:	90 40       	sbci	r25, 0x00	; 0
 400:	e1 f7       	brne	.-8      	; 0x3fa <main+0x6c>
 402:	00 c0       	rjmp	.+0      	; 0x404 <main+0x76>
 404:	00 00       	nop
	adc_sleep();
	
    for(;;) {
		_delay_ms(100);
		/* Update one CAN_packet */
		sw_input(&updated); 
 406:	ce 01       	movw	r24, r28
 408:	0c 96       	adiw	r24, 0x0c	; 12
 40a:	42 d0       	rcall	.+132    	; 0x490 <sw_input>
		adc_init();
 40c:	61 de       	rcall	.-830    	; 0xd0 <adc_init>
		adc_input(SPEED, &updated);
 40e:	be 01       	movw	r22, r28
 410:	64 5f       	subi	r22, 0xF4	; 244
 412:	7f 4f       	sbci	r23, 0xFF	; 255
 414:	80 e0       	ldi	r24, 0x00	; 0
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	78 de       	rcall	.-784    	; 0x10a <adc_input>
		adc_sleep();
 41a:	6c de       	rcall	.-808    	; 0xf4 <adc_sleep>
		/* Compare the two packets */
		different = memcmp(current.data, updated.data, 8);
 41c:	48 e0       	ldi	r20, 0x08	; 8
 41e:	50 e0       	ldi	r21, 0x00	; 0
 420:	be 01       	movw	r22, r28
 422:	61 5f       	subi	r22, 0xF1	; 241
 424:	7f 4f       	sbci	r23, 0xFF	; 255
 426:	ce 01       	movw	r24, r28
 428:	04 96       	adiw	r24, 0x04	; 4
 42a:	79 d0       	rcall	.+242    	; 0x51e <memcmp>
		if (different) {
 42c:	89 2b       	or	r24, r25
 42e:	f9 f0       	breq	.+62     	; 0x46e <main+0xe0>
			/*printf("\r\nCurrent data[0] - %u",current.data[0]);
			*/
			printf("\r\nCurrent speed - %u",current.data[1]);
 430:	8d 81       	ldd	r24, Y+5	; 0x05
 432:	1f 92       	push	r1
 434:	8f 93       	push	r24
 436:	ff 92       	push	r15
 438:	ef 92       	push	r14
 43a:	c8 d0       	rcall	.+400    	; 0x5cc <printf>
			
			//printf("\r\nUpdated data[0] - %u",updated.data[0]);
			/* Send a message with new data */
			ret = can_packet_send(1, &updated);
 43c:	be 01       	movw	r22, r28
 43e:	64 5f       	subi	r22, 0xF4	; 244
 440:	7f 4f       	sbci	r23, 0xFF	; 255
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	91 df       	rcall	.-222    	; 0x368 <can_packet_send>
			current = updated;
 446:	fe 01       	movw	r30, r28
 448:	3c 96       	adiw	r30, 0x0c	; 12
 44a:	de 01       	movw	r26, r28
 44c:	11 96       	adiw	r26, 0x01	; 1
 44e:	9d 2d       	mov	r25, r13
 450:	01 90       	ld	r0, Z+
 452:	0d 92       	st	X+, r0
 454:	9a 95       	dec	r25
 456:	e1 f7       	brne	.-8      	; 0x450 <main+0xc2>
		}
		if (ret) {
 458:	0f 90       	pop	r0
 45a:	0f 90       	pop	r0
 45c:	0f 90       	pop	r0
 45e:	0f 90       	pop	r0
 460:	88 23       	and	r24, r24
 462:	29 f0       	breq	.+10     	; 0x46e <main+0xe0>
			printf("\r\nMessage sent");
 464:	1f 93       	push	r17
 466:	0f 93       	push	r16
 468:	b1 d0       	rcall	.+354    	; 0x5cc <printf>
 46a:	0f 90       	pop	r0
 46c:	0f 90       	pop	r0
			ret = FALSE;
		}
 		//TODO: if successfully read, stop sending!
		asm("sleep");;
 46e:	88 95       	sleep
	}
 470:	c1 cf       	rjmp	.-126    	; 0x3f4 <main+0x66>

00000472 <sw_init>:
CAN_packet updated;

void sw_init( void) {	
	/* Indicators init */
	/* Set PE3 and PE4 as inputs */
	clear_bit(DDRE, DDE3);
 472:	6b 98       	cbi	0x0d, 3	; 13
	clear_bit(DDRE, DDE4);
 474:	6c 98       	cbi	0x0d, 4	; 13
	/* Set PE3 and PE4 as high (pull up res) */
	set_bit(PORTE, PE3);
 476:	73 9a       	sbi	0x0e, 3	; 14
	set_bit(PORTE, PE4);	
 478:	74 9a       	sbi	0x0e, 4	; 14
	
	/* Whiper init */
	clear_bit(DDRE, DDE5);
 47a:	6d 98       	cbi	0x0d, 5	; 13
	set_bit(PORTE, PE5);
 47c:	75 9a       	sbi	0x0e, 5	; 14
	
	/* Horn init */
	clear_bit(DDRB, DDB4);
 47e:	24 98       	cbi	0x04, 4	; 4
	set_bit(PORTB, PB4);
 480:	2c 9a       	sbi	0x05, 4	; 5
	
	/* Deadman */
	clear_bit(DDRB, DDB3);
 482:	23 98       	cbi	0x04, 3	; 4
	set_bit(PORTB, PB3);
 484:	2b 9a       	sbi	0x05, 3	; 5
	
	/* Speed potentiometer uses adc_init() */
	
	/* Cruise control */
	clear_bit(DDRB, DDB2);
 486:	22 98       	cbi	0x04, 2	; 4
	clear_bit(DDRB, DDB1);
 488:	21 98       	cbi	0x04, 1	; 4
	set_bit(PORTB, PB2);
 48a:	2a 9a       	sbi	0x05, 2	; 5
	set_bit(PORTB, PB1);	
 48c:	29 9a       	sbi	0x05, 1	; 5
 48e:	08 95       	ret

00000490 <sw_input>:
}

void sw_input( CAN_packet* p) {	
 490:	fc 01       	movw	r30, r24
	/* Initialize data */
	p->data[0] = 0x00;
 492:	13 82       	std	Z+3, r1	; 0x03
	/* Read right/left indicator */
	if(!test_bit(PINE, PE4))
 494:	64 99       	sbic	0x0c, 4	; 12
 496:	03 c0       	rjmp	.+6      	; 0x49e <sw_input+0xe>
		p->data[0] |= (1<<0);
 498:	81 e0       	ldi	r24, 0x01	; 1
 49a:	83 83       	std	Z+3, r24	; 0x03
 49c:	04 c0       	rjmp	.+8      	; 0x4a6 <sw_input+0x16>
	else if (!test_bit(PINE, PE3))
 49e:	63 99       	sbic	0x0c, 3	; 12
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <sw_input+0x16>
		p->data[0] |= (1<<1);	
 4a2:	82 e0       	ldi	r24, 0x02	; 2
 4a4:	83 83       	std	Z+3, r24	; 0x03
	/* Read cruise control */
	if(!test_bit(PINB, PB2))
 4a6:	1a 99       	sbic	0x03, 2	; 3
 4a8:	04 c0       	rjmp	.+8      	; 0x4b2 <sw_input+0x22>
		p->data[0] |= (1<<2);
 4aa:	83 81       	ldd	r24, Z+3	; 0x03
 4ac:	84 60       	ori	r24, 0x04	; 4
 4ae:	83 83       	std	Z+3, r24	; 0x03
 4b0:	05 c0       	rjmp	.+10     	; 0x4bc <sw_input+0x2c>
	else if(!test_bit(PINB, PB1))
 4b2:	19 99       	sbic	0x03, 1	; 3
 4b4:	03 c0       	rjmp	.+6      	; 0x4bc <sw_input+0x2c>
		p->data[0] |= (1<<3);	
 4b6:	83 81       	ldd	r24, Z+3	; 0x03
 4b8:	88 60       	ori	r24, 0x08	; 8
 4ba:	83 83       	std	Z+3, r24	; 0x03
	/* Read horn */
	//if (!test_bit(PINB, PB4))
	p->data[0] |= (1<<4);
 4bc:	83 81       	ldd	r24, Z+3	; 0x03
	/* Read whiper */
	//if (!test_bit(PINE, PE5))
	p->data[0] |= (1<<5);
 4be:	98 2f       	mov	r25, r24
 4c0:	90 63       	ori	r25, 0x30	; 48
 4c2:	93 83       	std	Z+3, r25	; 0x03
	/* Read deadman */
	if (!test_bit(PINB, PB3))
 4c4:	1b 99       	sbic	0x03, 3	; 3
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <sw_input+0x3c>
		p->data[0] |= (1<<6);
 4c8:	80 67       	ori	r24, 0x70	; 112
 4ca:	83 83       	std	Z+3, r24	; 0x03
 4cc:	08 95       	ret

000004ce <USART_tx>:
	fdevopen(USART_tx, USART_rx);
}

_Bool USART_tx(unsigned char data) {
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)));
 4ce:	e0 ec       	ldi	r30, 0xC0	; 192
 4d0:	f0 e0       	ldi	r31, 0x00	; 0
 4d2:	90 81       	ld	r25, Z
 4d4:	95 ff       	sbrs	r25, 5
 4d6:	fd cf       	rjmp	.-6      	; 0x4d2 <USART_tx+0x4>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 4d8:	80 93 c6 00 	sts	0x00C6, r24
	// T0D0 implement 
	return true;
}
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	08 95       	ret

000004e0 <USART_rx>:

unsigned char USART_rx(void) {
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)));
 4e0:	e0 ec       	ldi	r30, 0xC0	; 192
 4e2:	f0 e0       	ldi	r31, 0x00	; 0
 4e4:	80 81       	ld	r24, Z
 4e6:	88 23       	and	r24, r24
 4e8:	ec f7       	brge	.-6      	; 0x4e4 <USART_rx+0x4>
	/* Get and return received data from buffer */
	return UDR0;
 4ea:	80 91 c6 00 	lds	r24, 0x00C6
}
 4ee:	08 95       	ret

000004f0 <USART_init>:

/*! Initialize the serial communication
	baud is the baud rate */
void USART_init(unsigned int baud, _Bool onOff) {
	/* Set baud rate */
	UBRR0H = (unsigned char) (baud>>8);
 4f0:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char) baud;
 4f4:	80 93 c4 00 	sts	0x00C4, r24
	/* Set frame format: Asynchronous normal mode, 8data, no parity  1 stop bit */
	/*(0<<UMSEL0) | (0<<UPM0) | (0<<USBS0) | already set as Initial values */
	UCSR0C = (3<<UCSZ0);
 4f8:	86 e0       	ldi	r24, 0x06	; 6
 4fa:	80 93 c2 00 	sts	0x00C2, r24
	/* Enable receiver and transmitter */
	if (onOff) {
 4fe:	66 23       	and	r22, r22
 500:	41 f0       	breq	.+16     	; 0x512 <USART_init+0x22>
		set_bit(UCSR0B,	RXEN0);
 502:	e1 ec       	ldi	r30, 0xC1	; 193
 504:	f0 e0       	ldi	r31, 0x00	; 0
 506:	80 81       	ld	r24, Z
 508:	80 61       	ori	r24, 0x10	; 16
 50a:	80 83       	st	Z, r24
		set_bit(UCSR0B, TXEN0);
 50c:	80 81       	ld	r24, Z
 50e:	88 60       	ori	r24, 0x08	; 8
 510:	80 83       	st	Z, r24
	}
	/*!	enables using fprint() instead of USART_tx_string() */
	fdevopen(USART_tx, USART_rx);
 512:	60 e7       	ldi	r22, 0x70	; 112
 514:	72 e0       	ldi	r23, 0x02	; 2
 516:	87 e6       	ldi	r24, 0x67	; 103
 518:	92 e0       	ldi	r25, 0x02	; 2
 51a:	0e c0       	rjmp	.+28     	; 0x538 <fdevopen>
 51c:	08 95       	ret

0000051e <memcmp>:
 51e:	fb 01       	movw	r30, r22
 520:	dc 01       	movw	r26, r24
 522:	04 c0       	rjmp	.+8      	; 0x52c <memcmp+0xe>
 524:	8d 91       	ld	r24, X+
 526:	01 90       	ld	r0, Z+
 528:	80 19       	sub	r24, r0
 52a:	21 f4       	brne	.+8      	; 0x534 <memcmp+0x16>
 52c:	41 50       	subi	r20, 0x01	; 1
 52e:	50 40       	sbci	r21, 0x00	; 0
 530:	c8 f7       	brcc	.-14     	; 0x524 <memcmp+0x6>
 532:	88 1b       	sub	r24, r24
 534:	99 0b       	sbc	r25, r25
 536:	08 95       	ret

00000538 <fdevopen>:
 538:	0f 93       	push	r16
 53a:	1f 93       	push	r17
 53c:	cf 93       	push	r28
 53e:	df 93       	push	r29
 540:	00 97       	sbiw	r24, 0x00	; 0
 542:	31 f4       	brne	.+12     	; 0x550 <fdevopen+0x18>
 544:	61 15       	cp	r22, r1
 546:	71 05       	cpc	r23, r1
 548:	19 f4       	brne	.+6      	; 0x550 <fdevopen+0x18>
 54a:	80 e0       	ldi	r24, 0x00	; 0
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	39 c0       	rjmp	.+114    	; 0x5c2 <fdevopen+0x8a>
 550:	8b 01       	movw	r16, r22
 552:	ec 01       	movw	r28, r24
 554:	6e e0       	ldi	r22, 0x0E	; 14
 556:	70 e0       	ldi	r23, 0x00	; 0
 558:	81 e0       	ldi	r24, 0x01	; 1
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	38 d2       	rcall	.+1136   	; 0x9ce <calloc>
 55e:	fc 01       	movw	r30, r24
 560:	89 2b       	or	r24, r25
 562:	99 f3       	breq	.-26     	; 0x54a <fdevopen+0x12>
 564:	80 e8       	ldi	r24, 0x80	; 128
 566:	83 83       	std	Z+3, r24	; 0x03
 568:	01 15       	cp	r16, r1
 56a:	11 05       	cpc	r17, r1
 56c:	71 f0       	breq	.+28     	; 0x58a <fdevopen+0x52>
 56e:	13 87       	std	Z+11, r17	; 0x0b
 570:	02 87       	std	Z+10, r16	; 0x0a
 572:	81 e8       	ldi	r24, 0x81	; 129
 574:	83 83       	std	Z+3, r24	; 0x03
 576:	80 91 79 01 	lds	r24, 0x0179
 57a:	90 91 7a 01 	lds	r25, 0x017A
 57e:	89 2b       	or	r24, r25
 580:	21 f4       	brne	.+8      	; 0x58a <fdevopen+0x52>
 582:	f0 93 7a 01 	sts	0x017A, r31
 586:	e0 93 79 01 	sts	0x0179, r30
 58a:	20 97       	sbiw	r28, 0x00	; 0
 58c:	c9 f0       	breq	.+50     	; 0x5c0 <fdevopen+0x88>
 58e:	d1 87       	std	Z+9, r29	; 0x09
 590:	c0 87       	std	Z+8, r28	; 0x08
 592:	83 81       	ldd	r24, Z+3	; 0x03
 594:	82 60       	ori	r24, 0x02	; 2
 596:	83 83       	std	Z+3, r24	; 0x03
 598:	80 91 7b 01 	lds	r24, 0x017B
 59c:	90 91 7c 01 	lds	r25, 0x017C
 5a0:	89 2b       	or	r24, r25
 5a2:	71 f4       	brne	.+28     	; 0x5c0 <fdevopen+0x88>
 5a4:	f0 93 7c 01 	sts	0x017C, r31
 5a8:	e0 93 7b 01 	sts	0x017B, r30
 5ac:	80 91 7d 01 	lds	r24, 0x017D
 5b0:	90 91 7e 01 	lds	r25, 0x017E
 5b4:	89 2b       	or	r24, r25
 5b6:	21 f4       	brne	.+8      	; 0x5c0 <fdevopen+0x88>
 5b8:	f0 93 7e 01 	sts	0x017E, r31
 5bc:	e0 93 7d 01 	sts	0x017D, r30
 5c0:	cf 01       	movw	r24, r30
 5c2:	df 91       	pop	r29
 5c4:	cf 91       	pop	r28
 5c6:	1f 91       	pop	r17
 5c8:	0f 91       	pop	r16
 5ca:	08 95       	ret

000005cc <printf>:
 5cc:	cf 93       	push	r28
 5ce:	df 93       	push	r29
 5d0:	cd b7       	in	r28, 0x3d	; 61
 5d2:	de b7       	in	r29, 0x3e	; 62
 5d4:	ae 01       	movw	r20, r28
 5d6:	4b 5f       	subi	r20, 0xFB	; 251
 5d8:	5f 4f       	sbci	r21, 0xFF	; 255
 5da:	fa 01       	movw	r30, r20
 5dc:	61 91       	ld	r22, Z+
 5de:	71 91       	ld	r23, Z+
 5e0:	af 01       	movw	r20, r30
 5e2:	80 91 7b 01 	lds	r24, 0x017B
 5e6:	90 91 7c 01 	lds	r25, 0x017C
 5ea:	03 d0       	rcall	.+6      	; 0x5f2 <vfprintf>
 5ec:	df 91       	pop	r29
 5ee:	cf 91       	pop	r28
 5f0:	08 95       	ret

000005f2 <vfprintf>:
 5f2:	2f 92       	push	r2
 5f4:	3f 92       	push	r3
 5f6:	4f 92       	push	r4
 5f8:	5f 92       	push	r5
 5fa:	6f 92       	push	r6
 5fc:	7f 92       	push	r7
 5fe:	8f 92       	push	r8
 600:	9f 92       	push	r9
 602:	af 92       	push	r10
 604:	bf 92       	push	r11
 606:	cf 92       	push	r12
 608:	df 92       	push	r13
 60a:	ef 92       	push	r14
 60c:	ff 92       	push	r15
 60e:	0f 93       	push	r16
 610:	1f 93       	push	r17
 612:	cf 93       	push	r28
 614:	df 93       	push	r29
 616:	cd b7       	in	r28, 0x3d	; 61
 618:	de b7       	in	r29, 0x3e	; 62
 61a:	2c 97       	sbiw	r28, 0x0c	; 12
 61c:	0f b6       	in	r0, 0x3f	; 63
 61e:	f8 94       	cli
 620:	de bf       	out	0x3e, r29	; 62
 622:	0f be       	out	0x3f, r0	; 63
 624:	cd bf       	out	0x3d, r28	; 61
 626:	7c 01       	movw	r14, r24
 628:	6b 01       	movw	r12, r22
 62a:	8a 01       	movw	r16, r20
 62c:	fc 01       	movw	r30, r24
 62e:	17 82       	std	Z+7, r1	; 0x07
 630:	16 82       	std	Z+6, r1	; 0x06
 632:	83 81       	ldd	r24, Z+3	; 0x03
 634:	81 ff       	sbrs	r24, 1
 636:	b0 c1       	rjmp	.+864    	; 0x998 <vfprintf+0x3a6>
 638:	ce 01       	movw	r24, r28
 63a:	01 96       	adiw	r24, 0x01	; 1
 63c:	4c 01       	movw	r8, r24
 63e:	f7 01       	movw	r30, r14
 640:	93 81       	ldd	r25, Z+3	; 0x03
 642:	f6 01       	movw	r30, r12
 644:	93 fd       	sbrc	r25, 3
 646:	85 91       	lpm	r24, Z+
 648:	93 ff       	sbrs	r25, 3
 64a:	81 91       	ld	r24, Z+
 64c:	6f 01       	movw	r12, r30
 64e:	88 23       	and	r24, r24
 650:	09 f4       	brne	.+2      	; 0x654 <vfprintf+0x62>
 652:	9e c1       	rjmp	.+828    	; 0x990 <vfprintf+0x39e>
 654:	85 32       	cpi	r24, 0x25	; 37
 656:	39 f4       	brne	.+14     	; 0x666 <vfprintf+0x74>
 658:	93 fd       	sbrc	r25, 3
 65a:	85 91       	lpm	r24, Z+
 65c:	93 ff       	sbrs	r25, 3
 65e:	81 91       	ld	r24, Z+
 660:	6f 01       	movw	r12, r30
 662:	85 32       	cpi	r24, 0x25	; 37
 664:	21 f4       	brne	.+8      	; 0x66e <vfprintf+0x7c>
 666:	b7 01       	movw	r22, r14
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	15 d3       	rcall	.+1578   	; 0xc96 <fputc>
 66c:	e8 cf       	rjmp	.-48     	; 0x63e <vfprintf+0x4c>
 66e:	51 2c       	mov	r5, r1
 670:	31 2c       	mov	r3, r1
 672:	20 e0       	ldi	r18, 0x00	; 0
 674:	20 32       	cpi	r18, 0x20	; 32
 676:	a0 f4       	brcc	.+40     	; 0x6a0 <vfprintf+0xae>
 678:	8b 32       	cpi	r24, 0x2B	; 43
 67a:	69 f0       	breq	.+26     	; 0x696 <vfprintf+0xa4>
 67c:	30 f4       	brcc	.+12     	; 0x68a <vfprintf+0x98>
 67e:	80 32       	cpi	r24, 0x20	; 32
 680:	59 f0       	breq	.+22     	; 0x698 <vfprintf+0xa6>
 682:	83 32       	cpi	r24, 0x23	; 35
 684:	69 f4       	brne	.+26     	; 0x6a0 <vfprintf+0xae>
 686:	20 61       	ori	r18, 0x10	; 16
 688:	2c c0       	rjmp	.+88     	; 0x6e2 <vfprintf+0xf0>
 68a:	8d 32       	cpi	r24, 0x2D	; 45
 68c:	39 f0       	breq	.+14     	; 0x69c <vfprintf+0xaa>
 68e:	80 33       	cpi	r24, 0x30	; 48
 690:	39 f4       	brne	.+14     	; 0x6a0 <vfprintf+0xae>
 692:	21 60       	ori	r18, 0x01	; 1
 694:	26 c0       	rjmp	.+76     	; 0x6e2 <vfprintf+0xf0>
 696:	22 60       	ori	r18, 0x02	; 2
 698:	24 60       	ori	r18, 0x04	; 4
 69a:	23 c0       	rjmp	.+70     	; 0x6e2 <vfprintf+0xf0>
 69c:	28 60       	ori	r18, 0x08	; 8
 69e:	21 c0       	rjmp	.+66     	; 0x6e2 <vfprintf+0xf0>
 6a0:	27 fd       	sbrc	r18, 7
 6a2:	27 c0       	rjmp	.+78     	; 0x6f2 <vfprintf+0x100>
 6a4:	30 ed       	ldi	r19, 0xD0	; 208
 6a6:	38 0f       	add	r19, r24
 6a8:	3a 30       	cpi	r19, 0x0A	; 10
 6aa:	78 f4       	brcc	.+30     	; 0x6ca <vfprintf+0xd8>
 6ac:	26 ff       	sbrs	r18, 6
 6ae:	06 c0       	rjmp	.+12     	; 0x6bc <vfprintf+0xca>
 6b0:	fa e0       	ldi	r31, 0x0A	; 10
 6b2:	5f 9e       	mul	r5, r31
 6b4:	30 0d       	add	r19, r0
 6b6:	11 24       	eor	r1, r1
 6b8:	53 2e       	mov	r5, r19
 6ba:	13 c0       	rjmp	.+38     	; 0x6e2 <vfprintf+0xf0>
 6bc:	8a e0       	ldi	r24, 0x0A	; 10
 6be:	38 9e       	mul	r3, r24
 6c0:	30 0d       	add	r19, r0
 6c2:	11 24       	eor	r1, r1
 6c4:	33 2e       	mov	r3, r19
 6c6:	20 62       	ori	r18, 0x20	; 32
 6c8:	0c c0       	rjmp	.+24     	; 0x6e2 <vfprintf+0xf0>
 6ca:	8e 32       	cpi	r24, 0x2E	; 46
 6cc:	21 f4       	brne	.+8      	; 0x6d6 <vfprintf+0xe4>
 6ce:	26 fd       	sbrc	r18, 6
 6d0:	5f c1       	rjmp	.+702    	; 0x990 <vfprintf+0x39e>
 6d2:	20 64       	ori	r18, 0x40	; 64
 6d4:	06 c0       	rjmp	.+12     	; 0x6e2 <vfprintf+0xf0>
 6d6:	8c 36       	cpi	r24, 0x6C	; 108
 6d8:	11 f4       	brne	.+4      	; 0x6de <vfprintf+0xec>
 6da:	20 68       	ori	r18, 0x80	; 128
 6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <vfprintf+0xf0>
 6de:	88 36       	cpi	r24, 0x68	; 104
 6e0:	41 f4       	brne	.+16     	; 0x6f2 <vfprintf+0x100>
 6e2:	f6 01       	movw	r30, r12
 6e4:	93 fd       	sbrc	r25, 3
 6e6:	85 91       	lpm	r24, Z+
 6e8:	93 ff       	sbrs	r25, 3
 6ea:	81 91       	ld	r24, Z+
 6ec:	6f 01       	movw	r12, r30
 6ee:	81 11       	cpse	r24, r1
 6f0:	c1 cf       	rjmp	.-126    	; 0x674 <vfprintf+0x82>
 6f2:	98 2f       	mov	r25, r24
 6f4:	9f 7d       	andi	r25, 0xDF	; 223
 6f6:	95 54       	subi	r25, 0x45	; 69
 6f8:	93 30       	cpi	r25, 0x03	; 3
 6fa:	28 f4       	brcc	.+10     	; 0x706 <vfprintf+0x114>
 6fc:	0c 5f       	subi	r16, 0xFC	; 252
 6fe:	1f 4f       	sbci	r17, 0xFF	; 255
 700:	ff e3       	ldi	r31, 0x3F	; 63
 702:	f9 83       	std	Y+1, r31	; 0x01
 704:	0d c0       	rjmp	.+26     	; 0x720 <vfprintf+0x12e>
 706:	83 36       	cpi	r24, 0x63	; 99
 708:	31 f0       	breq	.+12     	; 0x716 <vfprintf+0x124>
 70a:	83 37       	cpi	r24, 0x73	; 115
 70c:	71 f0       	breq	.+28     	; 0x72a <vfprintf+0x138>
 70e:	83 35       	cpi	r24, 0x53	; 83
 710:	09 f0       	breq	.+2      	; 0x714 <vfprintf+0x122>
 712:	57 c0       	rjmp	.+174    	; 0x7c2 <vfprintf+0x1d0>
 714:	21 c0       	rjmp	.+66     	; 0x758 <vfprintf+0x166>
 716:	f8 01       	movw	r30, r16
 718:	80 81       	ld	r24, Z
 71a:	89 83       	std	Y+1, r24	; 0x01
 71c:	0e 5f       	subi	r16, 0xFE	; 254
 71e:	1f 4f       	sbci	r17, 0xFF	; 255
 720:	44 24       	eor	r4, r4
 722:	43 94       	inc	r4
 724:	51 2c       	mov	r5, r1
 726:	54 01       	movw	r10, r8
 728:	14 c0       	rjmp	.+40     	; 0x752 <vfprintf+0x160>
 72a:	38 01       	movw	r6, r16
 72c:	f2 e0       	ldi	r31, 0x02	; 2
 72e:	6f 0e       	add	r6, r31
 730:	71 1c       	adc	r7, r1
 732:	f8 01       	movw	r30, r16
 734:	a0 80       	ld	r10, Z
 736:	b1 80       	ldd	r11, Z+1	; 0x01
 738:	26 ff       	sbrs	r18, 6
 73a:	03 c0       	rjmp	.+6      	; 0x742 <vfprintf+0x150>
 73c:	65 2d       	mov	r22, r5
 73e:	70 e0       	ldi	r23, 0x00	; 0
 740:	02 c0       	rjmp	.+4      	; 0x746 <vfprintf+0x154>
 742:	6f ef       	ldi	r22, 0xFF	; 255
 744:	7f ef       	ldi	r23, 0xFF	; 255
 746:	c5 01       	movw	r24, r10
 748:	2c 87       	std	Y+12, r18	; 0x0c
 74a:	9a d2       	rcall	.+1332   	; 0xc80 <strnlen>
 74c:	2c 01       	movw	r4, r24
 74e:	83 01       	movw	r16, r6
 750:	2c 85       	ldd	r18, Y+12	; 0x0c
 752:	2f 77       	andi	r18, 0x7F	; 127
 754:	22 2e       	mov	r2, r18
 756:	16 c0       	rjmp	.+44     	; 0x784 <vfprintf+0x192>
 758:	38 01       	movw	r6, r16
 75a:	f2 e0       	ldi	r31, 0x02	; 2
 75c:	6f 0e       	add	r6, r31
 75e:	71 1c       	adc	r7, r1
 760:	f8 01       	movw	r30, r16
 762:	a0 80       	ld	r10, Z
 764:	b1 80       	ldd	r11, Z+1	; 0x01
 766:	26 ff       	sbrs	r18, 6
 768:	03 c0       	rjmp	.+6      	; 0x770 <vfprintf+0x17e>
 76a:	65 2d       	mov	r22, r5
 76c:	70 e0       	ldi	r23, 0x00	; 0
 76e:	02 c0       	rjmp	.+4      	; 0x774 <vfprintf+0x182>
 770:	6f ef       	ldi	r22, 0xFF	; 255
 772:	7f ef       	ldi	r23, 0xFF	; 255
 774:	c5 01       	movw	r24, r10
 776:	2c 87       	std	Y+12, r18	; 0x0c
 778:	71 d2       	rcall	.+1250   	; 0xc5c <strnlen_P>
 77a:	2c 01       	movw	r4, r24
 77c:	2c 85       	ldd	r18, Y+12	; 0x0c
 77e:	20 68       	ori	r18, 0x80	; 128
 780:	22 2e       	mov	r2, r18
 782:	83 01       	movw	r16, r6
 784:	23 fc       	sbrc	r2, 3
 786:	19 c0       	rjmp	.+50     	; 0x7ba <vfprintf+0x1c8>
 788:	83 2d       	mov	r24, r3
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	48 16       	cp	r4, r24
 78e:	59 06       	cpc	r5, r25
 790:	a0 f4       	brcc	.+40     	; 0x7ba <vfprintf+0x1c8>
 792:	b7 01       	movw	r22, r14
 794:	80 e2       	ldi	r24, 0x20	; 32
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	7e d2       	rcall	.+1276   	; 0xc96 <fputc>
 79a:	3a 94       	dec	r3
 79c:	f5 cf       	rjmp	.-22     	; 0x788 <vfprintf+0x196>
 79e:	f5 01       	movw	r30, r10
 7a0:	27 fc       	sbrc	r2, 7
 7a2:	85 91       	lpm	r24, Z+
 7a4:	27 fe       	sbrs	r2, 7
 7a6:	81 91       	ld	r24, Z+
 7a8:	5f 01       	movw	r10, r30
 7aa:	b7 01       	movw	r22, r14
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	73 d2       	rcall	.+1254   	; 0xc96 <fputc>
 7b0:	31 10       	cpse	r3, r1
 7b2:	3a 94       	dec	r3
 7b4:	f1 e0       	ldi	r31, 0x01	; 1
 7b6:	4f 1a       	sub	r4, r31
 7b8:	51 08       	sbc	r5, r1
 7ba:	41 14       	cp	r4, r1
 7bc:	51 04       	cpc	r5, r1
 7be:	79 f7       	brne	.-34     	; 0x79e <vfprintf+0x1ac>
 7c0:	de c0       	rjmp	.+444    	; 0x97e <vfprintf+0x38c>
 7c2:	84 36       	cpi	r24, 0x64	; 100
 7c4:	11 f0       	breq	.+4      	; 0x7ca <vfprintf+0x1d8>
 7c6:	89 36       	cpi	r24, 0x69	; 105
 7c8:	31 f5       	brne	.+76     	; 0x816 <vfprintf+0x224>
 7ca:	f8 01       	movw	r30, r16
 7cc:	27 ff       	sbrs	r18, 7
 7ce:	07 c0       	rjmp	.+14     	; 0x7de <vfprintf+0x1ec>
 7d0:	60 81       	ld	r22, Z
 7d2:	71 81       	ldd	r23, Z+1	; 0x01
 7d4:	82 81       	ldd	r24, Z+2	; 0x02
 7d6:	93 81       	ldd	r25, Z+3	; 0x03
 7d8:	0c 5f       	subi	r16, 0xFC	; 252
 7da:	1f 4f       	sbci	r17, 0xFF	; 255
 7dc:	08 c0       	rjmp	.+16     	; 0x7ee <vfprintf+0x1fc>
 7de:	60 81       	ld	r22, Z
 7e0:	71 81       	ldd	r23, Z+1	; 0x01
 7e2:	07 2e       	mov	r0, r23
 7e4:	00 0c       	add	r0, r0
 7e6:	88 0b       	sbc	r24, r24
 7e8:	99 0b       	sbc	r25, r25
 7ea:	0e 5f       	subi	r16, 0xFE	; 254
 7ec:	1f 4f       	sbci	r17, 0xFF	; 255
 7ee:	2f 76       	andi	r18, 0x6F	; 111
 7f0:	72 2e       	mov	r7, r18
 7f2:	97 ff       	sbrs	r25, 7
 7f4:	09 c0       	rjmp	.+18     	; 0x808 <vfprintf+0x216>
 7f6:	90 95       	com	r25
 7f8:	80 95       	com	r24
 7fa:	70 95       	com	r23
 7fc:	61 95       	neg	r22
 7fe:	7f 4f       	sbci	r23, 0xFF	; 255
 800:	8f 4f       	sbci	r24, 0xFF	; 255
 802:	9f 4f       	sbci	r25, 0xFF	; 255
 804:	20 68       	ori	r18, 0x80	; 128
 806:	72 2e       	mov	r7, r18
 808:	2a e0       	ldi	r18, 0x0A	; 10
 80a:	30 e0       	ldi	r19, 0x00	; 0
 80c:	a4 01       	movw	r20, r8
 80e:	7b d2       	rcall	.+1270   	; 0xd06 <__ultoa_invert>
 810:	a8 2e       	mov	r10, r24
 812:	a8 18       	sub	r10, r8
 814:	43 c0       	rjmp	.+134    	; 0x89c <vfprintf+0x2aa>
 816:	85 37       	cpi	r24, 0x75	; 117
 818:	29 f4       	brne	.+10     	; 0x824 <vfprintf+0x232>
 81a:	2f 7e       	andi	r18, 0xEF	; 239
 81c:	b2 2e       	mov	r11, r18
 81e:	2a e0       	ldi	r18, 0x0A	; 10
 820:	30 e0       	ldi	r19, 0x00	; 0
 822:	25 c0       	rjmp	.+74     	; 0x86e <vfprintf+0x27c>
 824:	f2 2f       	mov	r31, r18
 826:	f9 7f       	andi	r31, 0xF9	; 249
 828:	bf 2e       	mov	r11, r31
 82a:	8f 36       	cpi	r24, 0x6F	; 111
 82c:	c1 f0       	breq	.+48     	; 0x85e <vfprintf+0x26c>
 82e:	18 f4       	brcc	.+6      	; 0x836 <vfprintf+0x244>
 830:	88 35       	cpi	r24, 0x58	; 88
 832:	79 f0       	breq	.+30     	; 0x852 <vfprintf+0x260>
 834:	ad c0       	rjmp	.+346    	; 0x990 <vfprintf+0x39e>
 836:	80 37       	cpi	r24, 0x70	; 112
 838:	19 f0       	breq	.+6      	; 0x840 <vfprintf+0x24e>
 83a:	88 37       	cpi	r24, 0x78	; 120
 83c:	21 f0       	breq	.+8      	; 0x846 <vfprintf+0x254>
 83e:	a8 c0       	rjmp	.+336    	; 0x990 <vfprintf+0x39e>
 840:	2f 2f       	mov	r18, r31
 842:	20 61       	ori	r18, 0x10	; 16
 844:	b2 2e       	mov	r11, r18
 846:	b4 fe       	sbrs	r11, 4
 848:	0d c0       	rjmp	.+26     	; 0x864 <vfprintf+0x272>
 84a:	8b 2d       	mov	r24, r11
 84c:	84 60       	ori	r24, 0x04	; 4
 84e:	b8 2e       	mov	r11, r24
 850:	09 c0       	rjmp	.+18     	; 0x864 <vfprintf+0x272>
 852:	24 ff       	sbrs	r18, 4
 854:	0a c0       	rjmp	.+20     	; 0x86a <vfprintf+0x278>
 856:	9f 2f       	mov	r25, r31
 858:	96 60       	ori	r25, 0x06	; 6
 85a:	b9 2e       	mov	r11, r25
 85c:	06 c0       	rjmp	.+12     	; 0x86a <vfprintf+0x278>
 85e:	28 e0       	ldi	r18, 0x08	; 8
 860:	30 e0       	ldi	r19, 0x00	; 0
 862:	05 c0       	rjmp	.+10     	; 0x86e <vfprintf+0x27c>
 864:	20 e1       	ldi	r18, 0x10	; 16
 866:	30 e0       	ldi	r19, 0x00	; 0
 868:	02 c0       	rjmp	.+4      	; 0x86e <vfprintf+0x27c>
 86a:	20 e1       	ldi	r18, 0x10	; 16
 86c:	32 e0       	ldi	r19, 0x02	; 2
 86e:	f8 01       	movw	r30, r16
 870:	b7 fe       	sbrs	r11, 7
 872:	07 c0       	rjmp	.+14     	; 0x882 <vfprintf+0x290>
 874:	60 81       	ld	r22, Z
 876:	71 81       	ldd	r23, Z+1	; 0x01
 878:	82 81       	ldd	r24, Z+2	; 0x02
 87a:	93 81       	ldd	r25, Z+3	; 0x03
 87c:	0c 5f       	subi	r16, 0xFC	; 252
 87e:	1f 4f       	sbci	r17, 0xFF	; 255
 880:	06 c0       	rjmp	.+12     	; 0x88e <vfprintf+0x29c>
 882:	60 81       	ld	r22, Z
 884:	71 81       	ldd	r23, Z+1	; 0x01
 886:	80 e0       	ldi	r24, 0x00	; 0
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	0e 5f       	subi	r16, 0xFE	; 254
 88c:	1f 4f       	sbci	r17, 0xFF	; 255
 88e:	a4 01       	movw	r20, r8
 890:	3a d2       	rcall	.+1140   	; 0xd06 <__ultoa_invert>
 892:	a8 2e       	mov	r10, r24
 894:	a8 18       	sub	r10, r8
 896:	fb 2d       	mov	r31, r11
 898:	ff 77       	andi	r31, 0x7F	; 127
 89a:	7f 2e       	mov	r7, r31
 89c:	76 fe       	sbrs	r7, 6
 89e:	0b c0       	rjmp	.+22     	; 0x8b6 <vfprintf+0x2c4>
 8a0:	37 2d       	mov	r19, r7
 8a2:	3e 7f       	andi	r19, 0xFE	; 254
 8a4:	a5 14       	cp	r10, r5
 8a6:	50 f4       	brcc	.+20     	; 0x8bc <vfprintf+0x2ca>
 8a8:	74 fe       	sbrs	r7, 4
 8aa:	0a c0       	rjmp	.+20     	; 0x8c0 <vfprintf+0x2ce>
 8ac:	72 fc       	sbrc	r7, 2
 8ae:	08 c0       	rjmp	.+16     	; 0x8c0 <vfprintf+0x2ce>
 8b0:	37 2d       	mov	r19, r7
 8b2:	3e 7e       	andi	r19, 0xEE	; 238
 8b4:	05 c0       	rjmp	.+10     	; 0x8c0 <vfprintf+0x2ce>
 8b6:	ba 2c       	mov	r11, r10
 8b8:	37 2d       	mov	r19, r7
 8ba:	03 c0       	rjmp	.+6      	; 0x8c2 <vfprintf+0x2d0>
 8bc:	ba 2c       	mov	r11, r10
 8be:	01 c0       	rjmp	.+2      	; 0x8c2 <vfprintf+0x2d0>
 8c0:	b5 2c       	mov	r11, r5
 8c2:	34 ff       	sbrs	r19, 4
 8c4:	0d c0       	rjmp	.+26     	; 0x8e0 <vfprintf+0x2ee>
 8c6:	fe 01       	movw	r30, r28
 8c8:	ea 0d       	add	r30, r10
 8ca:	f1 1d       	adc	r31, r1
 8cc:	80 81       	ld	r24, Z
 8ce:	80 33       	cpi	r24, 0x30	; 48
 8d0:	11 f4       	brne	.+4      	; 0x8d6 <vfprintf+0x2e4>
 8d2:	39 7e       	andi	r19, 0xE9	; 233
 8d4:	09 c0       	rjmp	.+18     	; 0x8e8 <vfprintf+0x2f6>
 8d6:	32 ff       	sbrs	r19, 2
 8d8:	06 c0       	rjmp	.+12     	; 0x8e6 <vfprintf+0x2f4>
 8da:	b3 94       	inc	r11
 8dc:	b3 94       	inc	r11
 8de:	04 c0       	rjmp	.+8      	; 0x8e8 <vfprintf+0x2f6>
 8e0:	83 2f       	mov	r24, r19
 8e2:	86 78       	andi	r24, 0x86	; 134
 8e4:	09 f0       	breq	.+2      	; 0x8e8 <vfprintf+0x2f6>
 8e6:	b3 94       	inc	r11
 8e8:	33 fd       	sbrc	r19, 3
 8ea:	12 c0       	rjmp	.+36     	; 0x910 <vfprintf+0x31e>
 8ec:	30 ff       	sbrs	r19, 0
 8ee:	06 c0       	rjmp	.+12     	; 0x8fc <vfprintf+0x30a>
 8f0:	5a 2c       	mov	r5, r10
 8f2:	b3 14       	cp	r11, r3
 8f4:	18 f4       	brcc	.+6      	; 0x8fc <vfprintf+0x30a>
 8f6:	53 0c       	add	r5, r3
 8f8:	5b 18       	sub	r5, r11
 8fa:	b3 2c       	mov	r11, r3
 8fc:	b3 14       	cp	r11, r3
 8fe:	60 f4       	brcc	.+24     	; 0x918 <vfprintf+0x326>
 900:	b7 01       	movw	r22, r14
 902:	80 e2       	ldi	r24, 0x20	; 32
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	3c 87       	std	Y+12, r19	; 0x0c
 908:	c6 d1       	rcall	.+908    	; 0xc96 <fputc>
 90a:	b3 94       	inc	r11
 90c:	3c 85       	ldd	r19, Y+12	; 0x0c
 90e:	f6 cf       	rjmp	.-20     	; 0x8fc <vfprintf+0x30a>
 910:	b3 14       	cp	r11, r3
 912:	10 f4       	brcc	.+4      	; 0x918 <vfprintf+0x326>
 914:	3b 18       	sub	r3, r11
 916:	01 c0       	rjmp	.+2      	; 0x91a <vfprintf+0x328>
 918:	31 2c       	mov	r3, r1
 91a:	34 ff       	sbrs	r19, 4
 91c:	11 c0       	rjmp	.+34     	; 0x940 <vfprintf+0x34e>
 91e:	b7 01       	movw	r22, r14
 920:	80 e3       	ldi	r24, 0x30	; 48
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	3c 87       	std	Y+12, r19	; 0x0c
 926:	b7 d1       	rcall	.+878    	; 0xc96 <fputc>
 928:	3c 85       	ldd	r19, Y+12	; 0x0c
 92a:	32 ff       	sbrs	r19, 2
 92c:	16 c0       	rjmp	.+44     	; 0x95a <vfprintf+0x368>
 92e:	31 fd       	sbrc	r19, 1
 930:	03 c0       	rjmp	.+6      	; 0x938 <vfprintf+0x346>
 932:	88 e7       	ldi	r24, 0x78	; 120
 934:	90 e0       	ldi	r25, 0x00	; 0
 936:	02 c0       	rjmp	.+4      	; 0x93c <vfprintf+0x34a>
 938:	88 e5       	ldi	r24, 0x58	; 88
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	b7 01       	movw	r22, r14
 93e:	0c c0       	rjmp	.+24     	; 0x958 <vfprintf+0x366>
 940:	83 2f       	mov	r24, r19
 942:	86 78       	andi	r24, 0x86	; 134
 944:	51 f0       	breq	.+20     	; 0x95a <vfprintf+0x368>
 946:	31 ff       	sbrs	r19, 1
 948:	02 c0       	rjmp	.+4      	; 0x94e <vfprintf+0x35c>
 94a:	8b e2       	ldi	r24, 0x2B	; 43
 94c:	01 c0       	rjmp	.+2      	; 0x950 <vfprintf+0x35e>
 94e:	80 e2       	ldi	r24, 0x20	; 32
 950:	37 fd       	sbrc	r19, 7
 952:	8d e2       	ldi	r24, 0x2D	; 45
 954:	b7 01       	movw	r22, r14
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	9e d1       	rcall	.+828    	; 0xc96 <fputc>
 95a:	a5 14       	cp	r10, r5
 95c:	30 f4       	brcc	.+12     	; 0x96a <vfprintf+0x378>
 95e:	b7 01       	movw	r22, r14
 960:	80 e3       	ldi	r24, 0x30	; 48
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	98 d1       	rcall	.+816    	; 0xc96 <fputc>
 966:	5a 94       	dec	r5
 968:	f8 cf       	rjmp	.-16     	; 0x95a <vfprintf+0x368>
 96a:	aa 94       	dec	r10
 96c:	f4 01       	movw	r30, r8
 96e:	ea 0d       	add	r30, r10
 970:	f1 1d       	adc	r31, r1
 972:	80 81       	ld	r24, Z
 974:	b7 01       	movw	r22, r14
 976:	90 e0       	ldi	r25, 0x00	; 0
 978:	8e d1       	rcall	.+796    	; 0xc96 <fputc>
 97a:	a1 10       	cpse	r10, r1
 97c:	f6 cf       	rjmp	.-20     	; 0x96a <vfprintf+0x378>
 97e:	33 20       	and	r3, r3
 980:	09 f4       	brne	.+2      	; 0x984 <vfprintf+0x392>
 982:	5d ce       	rjmp	.-838    	; 0x63e <vfprintf+0x4c>
 984:	b7 01       	movw	r22, r14
 986:	80 e2       	ldi	r24, 0x20	; 32
 988:	90 e0       	ldi	r25, 0x00	; 0
 98a:	85 d1       	rcall	.+778    	; 0xc96 <fputc>
 98c:	3a 94       	dec	r3
 98e:	f7 cf       	rjmp	.-18     	; 0x97e <vfprintf+0x38c>
 990:	f7 01       	movw	r30, r14
 992:	86 81       	ldd	r24, Z+6	; 0x06
 994:	97 81       	ldd	r25, Z+7	; 0x07
 996:	02 c0       	rjmp	.+4      	; 0x99c <vfprintf+0x3aa>
 998:	8f ef       	ldi	r24, 0xFF	; 255
 99a:	9f ef       	ldi	r25, 0xFF	; 255
 99c:	2c 96       	adiw	r28, 0x0c	; 12
 99e:	0f b6       	in	r0, 0x3f	; 63
 9a0:	f8 94       	cli
 9a2:	de bf       	out	0x3e, r29	; 62
 9a4:	0f be       	out	0x3f, r0	; 63
 9a6:	cd bf       	out	0x3d, r28	; 61
 9a8:	df 91       	pop	r29
 9aa:	cf 91       	pop	r28
 9ac:	1f 91       	pop	r17
 9ae:	0f 91       	pop	r16
 9b0:	ff 90       	pop	r15
 9b2:	ef 90       	pop	r14
 9b4:	df 90       	pop	r13
 9b6:	cf 90       	pop	r12
 9b8:	bf 90       	pop	r11
 9ba:	af 90       	pop	r10
 9bc:	9f 90       	pop	r9
 9be:	8f 90       	pop	r8
 9c0:	7f 90       	pop	r7
 9c2:	6f 90       	pop	r6
 9c4:	5f 90       	pop	r5
 9c6:	4f 90       	pop	r4
 9c8:	3f 90       	pop	r3
 9ca:	2f 90       	pop	r2
 9cc:	08 95       	ret

000009ce <calloc>:
 9ce:	0f 93       	push	r16
 9d0:	1f 93       	push	r17
 9d2:	cf 93       	push	r28
 9d4:	df 93       	push	r29
 9d6:	86 9f       	mul	r24, r22
 9d8:	80 01       	movw	r16, r0
 9da:	87 9f       	mul	r24, r23
 9dc:	10 0d       	add	r17, r0
 9de:	96 9f       	mul	r25, r22
 9e0:	10 0d       	add	r17, r0
 9e2:	11 24       	eor	r1, r1
 9e4:	c8 01       	movw	r24, r16
 9e6:	0d d0       	rcall	.+26     	; 0xa02 <malloc>
 9e8:	ec 01       	movw	r28, r24
 9ea:	00 97       	sbiw	r24, 0x00	; 0
 9ec:	21 f0       	breq	.+8      	; 0x9f6 <calloc+0x28>
 9ee:	a8 01       	movw	r20, r16
 9f0:	60 e0       	ldi	r22, 0x00	; 0
 9f2:	70 e0       	ldi	r23, 0x00	; 0
 9f4:	3e d1       	rcall	.+636    	; 0xc72 <memset>
 9f6:	ce 01       	movw	r24, r28
 9f8:	df 91       	pop	r29
 9fa:	cf 91       	pop	r28
 9fc:	1f 91       	pop	r17
 9fe:	0f 91       	pop	r16
 a00:	08 95       	ret

00000a02 <malloc>:
 a02:	cf 93       	push	r28
 a04:	df 93       	push	r29
 a06:	82 30       	cpi	r24, 0x02	; 2
 a08:	91 05       	cpc	r25, r1
 a0a:	10 f4       	brcc	.+4      	; 0xa10 <malloc+0xe>
 a0c:	82 e0       	ldi	r24, 0x02	; 2
 a0e:	90 e0       	ldi	r25, 0x00	; 0
 a10:	e0 91 81 01 	lds	r30, 0x0181
 a14:	f0 91 82 01 	lds	r31, 0x0182
 a18:	20 e0       	ldi	r18, 0x00	; 0
 a1a:	30 e0       	ldi	r19, 0x00	; 0
 a1c:	c0 e0       	ldi	r28, 0x00	; 0
 a1e:	d0 e0       	ldi	r29, 0x00	; 0
 a20:	30 97       	sbiw	r30, 0x00	; 0
 a22:	11 f1       	breq	.+68     	; 0xa68 <malloc+0x66>
 a24:	40 81       	ld	r20, Z
 a26:	51 81       	ldd	r21, Z+1	; 0x01
 a28:	48 17       	cp	r20, r24
 a2a:	59 07       	cpc	r21, r25
 a2c:	c0 f0       	brcs	.+48     	; 0xa5e <malloc+0x5c>
 a2e:	48 17       	cp	r20, r24
 a30:	59 07       	cpc	r21, r25
 a32:	61 f4       	brne	.+24     	; 0xa4c <malloc+0x4a>
 a34:	82 81       	ldd	r24, Z+2	; 0x02
 a36:	93 81       	ldd	r25, Z+3	; 0x03
 a38:	20 97       	sbiw	r28, 0x00	; 0
 a3a:	19 f0       	breq	.+6      	; 0xa42 <malloc+0x40>
 a3c:	9b 83       	std	Y+3, r25	; 0x03
 a3e:	8a 83       	std	Y+2, r24	; 0x02
 a40:	2b c0       	rjmp	.+86     	; 0xa98 <malloc+0x96>
 a42:	90 93 82 01 	sts	0x0182, r25
 a46:	80 93 81 01 	sts	0x0181, r24
 a4a:	26 c0       	rjmp	.+76     	; 0xa98 <malloc+0x96>
 a4c:	21 15       	cp	r18, r1
 a4e:	31 05       	cpc	r19, r1
 a50:	19 f0       	breq	.+6      	; 0xa58 <malloc+0x56>
 a52:	42 17       	cp	r20, r18
 a54:	53 07       	cpc	r21, r19
 a56:	18 f4       	brcc	.+6      	; 0xa5e <malloc+0x5c>
 a58:	9a 01       	movw	r18, r20
 a5a:	be 01       	movw	r22, r28
 a5c:	df 01       	movw	r26, r30
 a5e:	ef 01       	movw	r28, r30
 a60:	02 80       	ldd	r0, Z+2	; 0x02
 a62:	f3 81       	ldd	r31, Z+3	; 0x03
 a64:	e0 2d       	mov	r30, r0
 a66:	dc cf       	rjmp	.-72     	; 0xa20 <malloc+0x1e>
 a68:	21 15       	cp	r18, r1
 a6a:	31 05       	cpc	r19, r1
 a6c:	09 f1       	breq	.+66     	; 0xab0 <malloc+0xae>
 a6e:	28 1b       	sub	r18, r24
 a70:	39 0b       	sbc	r19, r25
 a72:	24 30       	cpi	r18, 0x04	; 4
 a74:	31 05       	cpc	r19, r1
 a76:	90 f4       	brcc	.+36     	; 0xa9c <malloc+0x9a>
 a78:	12 96       	adiw	r26, 0x02	; 2
 a7a:	8d 91       	ld	r24, X+
 a7c:	9c 91       	ld	r25, X
 a7e:	13 97       	sbiw	r26, 0x03	; 3
 a80:	61 15       	cp	r22, r1
 a82:	71 05       	cpc	r23, r1
 a84:	21 f0       	breq	.+8      	; 0xa8e <malloc+0x8c>
 a86:	fb 01       	movw	r30, r22
 a88:	93 83       	std	Z+3, r25	; 0x03
 a8a:	82 83       	std	Z+2, r24	; 0x02
 a8c:	04 c0       	rjmp	.+8      	; 0xa96 <malloc+0x94>
 a8e:	90 93 82 01 	sts	0x0182, r25
 a92:	80 93 81 01 	sts	0x0181, r24
 a96:	fd 01       	movw	r30, r26
 a98:	32 96       	adiw	r30, 0x02	; 2
 a9a:	44 c0       	rjmp	.+136    	; 0xb24 <malloc+0x122>
 a9c:	fd 01       	movw	r30, r26
 a9e:	e2 0f       	add	r30, r18
 aa0:	f3 1f       	adc	r31, r19
 aa2:	81 93       	st	Z+, r24
 aa4:	91 93       	st	Z+, r25
 aa6:	22 50       	subi	r18, 0x02	; 2
 aa8:	31 09       	sbc	r19, r1
 aaa:	2d 93       	st	X+, r18
 aac:	3c 93       	st	X, r19
 aae:	3a c0       	rjmp	.+116    	; 0xb24 <malloc+0x122>
 ab0:	20 91 7f 01 	lds	r18, 0x017F
 ab4:	30 91 80 01 	lds	r19, 0x0180
 ab8:	23 2b       	or	r18, r19
 aba:	41 f4       	brne	.+16     	; 0xacc <malloc+0xca>
 abc:	20 91 02 01 	lds	r18, 0x0102
 ac0:	30 91 03 01 	lds	r19, 0x0103
 ac4:	30 93 80 01 	sts	0x0180, r19
 ac8:	20 93 7f 01 	sts	0x017F, r18
 acc:	20 91 00 01 	lds	r18, 0x0100
 ad0:	30 91 01 01 	lds	r19, 0x0101
 ad4:	21 15       	cp	r18, r1
 ad6:	31 05       	cpc	r19, r1
 ad8:	41 f4       	brne	.+16     	; 0xaea <malloc+0xe8>
 ada:	2d b7       	in	r18, 0x3d	; 61
 adc:	3e b7       	in	r19, 0x3e	; 62
 ade:	40 91 04 01 	lds	r20, 0x0104
 ae2:	50 91 05 01 	lds	r21, 0x0105
 ae6:	24 1b       	sub	r18, r20
 ae8:	35 0b       	sbc	r19, r21
 aea:	e0 91 7f 01 	lds	r30, 0x017F
 aee:	f0 91 80 01 	lds	r31, 0x0180
 af2:	e2 17       	cp	r30, r18
 af4:	f3 07       	cpc	r31, r19
 af6:	a0 f4       	brcc	.+40     	; 0xb20 <malloc+0x11e>
 af8:	2e 1b       	sub	r18, r30
 afa:	3f 0b       	sbc	r19, r31
 afc:	28 17       	cp	r18, r24
 afe:	39 07       	cpc	r19, r25
 b00:	78 f0       	brcs	.+30     	; 0xb20 <malloc+0x11e>
 b02:	ac 01       	movw	r20, r24
 b04:	4e 5f       	subi	r20, 0xFE	; 254
 b06:	5f 4f       	sbci	r21, 0xFF	; 255
 b08:	24 17       	cp	r18, r20
 b0a:	35 07       	cpc	r19, r21
 b0c:	48 f0       	brcs	.+18     	; 0xb20 <malloc+0x11e>
 b0e:	4e 0f       	add	r20, r30
 b10:	5f 1f       	adc	r21, r31
 b12:	50 93 80 01 	sts	0x0180, r21
 b16:	40 93 7f 01 	sts	0x017F, r20
 b1a:	81 93       	st	Z+, r24
 b1c:	91 93       	st	Z+, r25
 b1e:	02 c0       	rjmp	.+4      	; 0xb24 <malloc+0x122>
 b20:	e0 e0       	ldi	r30, 0x00	; 0
 b22:	f0 e0       	ldi	r31, 0x00	; 0
 b24:	cf 01       	movw	r24, r30
 b26:	df 91       	pop	r29
 b28:	cf 91       	pop	r28
 b2a:	08 95       	ret

00000b2c <free>:
 b2c:	0f 93       	push	r16
 b2e:	1f 93       	push	r17
 b30:	cf 93       	push	r28
 b32:	df 93       	push	r29
 b34:	00 97       	sbiw	r24, 0x00	; 0
 b36:	09 f4       	brne	.+2      	; 0xb3a <free+0xe>
 b38:	8c c0       	rjmp	.+280    	; 0xc52 <free+0x126>
 b3a:	fc 01       	movw	r30, r24
 b3c:	32 97       	sbiw	r30, 0x02	; 2
 b3e:	13 82       	std	Z+3, r1	; 0x03
 b40:	12 82       	std	Z+2, r1	; 0x02
 b42:	00 91 81 01 	lds	r16, 0x0181
 b46:	10 91 82 01 	lds	r17, 0x0182
 b4a:	01 15       	cp	r16, r1
 b4c:	11 05       	cpc	r17, r1
 b4e:	81 f4       	brne	.+32     	; 0xb70 <free+0x44>
 b50:	20 81       	ld	r18, Z
 b52:	31 81       	ldd	r19, Z+1	; 0x01
 b54:	82 0f       	add	r24, r18
 b56:	93 1f       	adc	r25, r19
 b58:	20 91 7f 01 	lds	r18, 0x017F
 b5c:	30 91 80 01 	lds	r19, 0x0180
 b60:	28 17       	cp	r18, r24
 b62:	39 07       	cpc	r19, r25
 b64:	79 f5       	brne	.+94     	; 0xbc4 <free+0x98>
 b66:	f0 93 80 01 	sts	0x0180, r31
 b6a:	e0 93 7f 01 	sts	0x017F, r30
 b6e:	71 c0       	rjmp	.+226    	; 0xc52 <free+0x126>
 b70:	d8 01       	movw	r26, r16
 b72:	40 e0       	ldi	r20, 0x00	; 0
 b74:	50 e0       	ldi	r21, 0x00	; 0
 b76:	ae 17       	cp	r26, r30
 b78:	bf 07       	cpc	r27, r31
 b7a:	50 f4       	brcc	.+20     	; 0xb90 <free+0x64>
 b7c:	12 96       	adiw	r26, 0x02	; 2
 b7e:	2d 91       	ld	r18, X+
 b80:	3c 91       	ld	r19, X
 b82:	13 97       	sbiw	r26, 0x03	; 3
 b84:	ad 01       	movw	r20, r26
 b86:	21 15       	cp	r18, r1
 b88:	31 05       	cpc	r19, r1
 b8a:	09 f1       	breq	.+66     	; 0xbce <free+0xa2>
 b8c:	d9 01       	movw	r26, r18
 b8e:	f3 cf       	rjmp	.-26     	; 0xb76 <free+0x4a>
 b90:	9d 01       	movw	r18, r26
 b92:	da 01       	movw	r26, r20
 b94:	33 83       	std	Z+3, r19	; 0x03
 b96:	22 83       	std	Z+2, r18	; 0x02
 b98:	60 81       	ld	r22, Z
 b9a:	71 81       	ldd	r23, Z+1	; 0x01
 b9c:	86 0f       	add	r24, r22
 b9e:	97 1f       	adc	r25, r23
 ba0:	82 17       	cp	r24, r18
 ba2:	93 07       	cpc	r25, r19
 ba4:	69 f4       	brne	.+26     	; 0xbc0 <free+0x94>
 ba6:	ec 01       	movw	r28, r24
 ba8:	28 81       	ld	r18, Y
 baa:	39 81       	ldd	r19, Y+1	; 0x01
 bac:	26 0f       	add	r18, r22
 bae:	37 1f       	adc	r19, r23
 bb0:	2e 5f       	subi	r18, 0xFE	; 254
 bb2:	3f 4f       	sbci	r19, 0xFF	; 255
 bb4:	31 83       	std	Z+1, r19	; 0x01
 bb6:	20 83       	st	Z, r18
 bb8:	8a 81       	ldd	r24, Y+2	; 0x02
 bba:	9b 81       	ldd	r25, Y+3	; 0x03
 bbc:	93 83       	std	Z+3, r25	; 0x03
 bbe:	82 83       	std	Z+2, r24	; 0x02
 bc0:	45 2b       	or	r20, r21
 bc2:	29 f4       	brne	.+10     	; 0xbce <free+0xa2>
 bc4:	f0 93 82 01 	sts	0x0182, r31
 bc8:	e0 93 81 01 	sts	0x0181, r30
 bcc:	42 c0       	rjmp	.+132    	; 0xc52 <free+0x126>
 bce:	13 96       	adiw	r26, 0x03	; 3
 bd0:	fc 93       	st	X, r31
 bd2:	ee 93       	st	-X, r30
 bd4:	12 97       	sbiw	r26, 0x02	; 2
 bd6:	ed 01       	movw	r28, r26
 bd8:	49 91       	ld	r20, Y+
 bda:	59 91       	ld	r21, Y+
 bdc:	9e 01       	movw	r18, r28
 bde:	24 0f       	add	r18, r20
 be0:	35 1f       	adc	r19, r21
 be2:	e2 17       	cp	r30, r18
 be4:	f3 07       	cpc	r31, r19
 be6:	71 f4       	brne	.+28     	; 0xc04 <free+0xd8>
 be8:	80 81       	ld	r24, Z
 bea:	91 81       	ldd	r25, Z+1	; 0x01
 bec:	84 0f       	add	r24, r20
 bee:	95 1f       	adc	r25, r21
 bf0:	02 96       	adiw	r24, 0x02	; 2
 bf2:	11 96       	adiw	r26, 0x01	; 1
 bf4:	9c 93       	st	X, r25
 bf6:	8e 93       	st	-X, r24
 bf8:	82 81       	ldd	r24, Z+2	; 0x02
 bfa:	93 81       	ldd	r25, Z+3	; 0x03
 bfc:	13 96       	adiw	r26, 0x03	; 3
 bfe:	9c 93       	st	X, r25
 c00:	8e 93       	st	-X, r24
 c02:	12 97       	sbiw	r26, 0x02	; 2
 c04:	e0 e0       	ldi	r30, 0x00	; 0
 c06:	f0 e0       	ldi	r31, 0x00	; 0
 c08:	d8 01       	movw	r26, r16
 c0a:	12 96       	adiw	r26, 0x02	; 2
 c0c:	8d 91       	ld	r24, X+
 c0e:	9c 91       	ld	r25, X
 c10:	13 97       	sbiw	r26, 0x03	; 3
 c12:	00 97       	sbiw	r24, 0x00	; 0
 c14:	19 f0       	breq	.+6      	; 0xc1c <free+0xf0>
 c16:	f8 01       	movw	r30, r16
 c18:	8c 01       	movw	r16, r24
 c1a:	f6 cf       	rjmp	.-20     	; 0xc08 <free+0xdc>
 c1c:	8d 91       	ld	r24, X+
 c1e:	9c 91       	ld	r25, X
 c20:	98 01       	movw	r18, r16
 c22:	2e 5f       	subi	r18, 0xFE	; 254
 c24:	3f 4f       	sbci	r19, 0xFF	; 255
 c26:	82 0f       	add	r24, r18
 c28:	93 1f       	adc	r25, r19
 c2a:	20 91 7f 01 	lds	r18, 0x017F
 c2e:	30 91 80 01 	lds	r19, 0x0180
 c32:	28 17       	cp	r18, r24
 c34:	39 07       	cpc	r19, r25
 c36:	69 f4       	brne	.+26     	; 0xc52 <free+0x126>
 c38:	30 97       	sbiw	r30, 0x00	; 0
 c3a:	29 f4       	brne	.+10     	; 0xc46 <free+0x11a>
 c3c:	10 92 82 01 	sts	0x0182, r1
 c40:	10 92 81 01 	sts	0x0181, r1
 c44:	02 c0       	rjmp	.+4      	; 0xc4a <free+0x11e>
 c46:	13 82       	std	Z+3, r1	; 0x03
 c48:	12 82       	std	Z+2, r1	; 0x02
 c4a:	10 93 80 01 	sts	0x0180, r17
 c4e:	00 93 7f 01 	sts	0x017F, r16
 c52:	df 91       	pop	r29
 c54:	cf 91       	pop	r28
 c56:	1f 91       	pop	r17
 c58:	0f 91       	pop	r16
 c5a:	08 95       	ret

00000c5c <strnlen_P>:
 c5c:	fc 01       	movw	r30, r24
 c5e:	05 90       	lpm	r0, Z+
 c60:	61 50       	subi	r22, 0x01	; 1
 c62:	70 40       	sbci	r23, 0x00	; 0
 c64:	01 10       	cpse	r0, r1
 c66:	d8 f7       	brcc	.-10     	; 0xc5e <strnlen_P+0x2>
 c68:	80 95       	com	r24
 c6a:	90 95       	com	r25
 c6c:	8e 0f       	add	r24, r30
 c6e:	9f 1f       	adc	r25, r31
 c70:	08 95       	ret

00000c72 <memset>:
 c72:	dc 01       	movw	r26, r24
 c74:	01 c0       	rjmp	.+2      	; 0xc78 <memset+0x6>
 c76:	6d 93       	st	X+, r22
 c78:	41 50       	subi	r20, 0x01	; 1
 c7a:	50 40       	sbci	r21, 0x00	; 0
 c7c:	e0 f7       	brcc	.-8      	; 0xc76 <memset+0x4>
 c7e:	08 95       	ret

00000c80 <strnlen>:
 c80:	fc 01       	movw	r30, r24
 c82:	61 50       	subi	r22, 0x01	; 1
 c84:	70 40       	sbci	r23, 0x00	; 0
 c86:	01 90       	ld	r0, Z+
 c88:	01 10       	cpse	r0, r1
 c8a:	d8 f7       	brcc	.-10     	; 0xc82 <strnlen+0x2>
 c8c:	80 95       	com	r24
 c8e:	90 95       	com	r25
 c90:	8e 0f       	add	r24, r30
 c92:	9f 1f       	adc	r25, r31
 c94:	08 95       	ret

00000c96 <fputc>:
 c96:	0f 93       	push	r16
 c98:	1f 93       	push	r17
 c9a:	cf 93       	push	r28
 c9c:	df 93       	push	r29
 c9e:	fb 01       	movw	r30, r22
 ca0:	23 81       	ldd	r18, Z+3	; 0x03
 ca2:	21 fd       	sbrc	r18, 1
 ca4:	03 c0       	rjmp	.+6      	; 0xcac <fputc+0x16>
 ca6:	8f ef       	ldi	r24, 0xFF	; 255
 ca8:	9f ef       	ldi	r25, 0xFF	; 255
 caa:	28 c0       	rjmp	.+80     	; 0xcfc <fputc+0x66>
 cac:	22 ff       	sbrs	r18, 2
 cae:	16 c0       	rjmp	.+44     	; 0xcdc <fputc+0x46>
 cb0:	46 81       	ldd	r20, Z+6	; 0x06
 cb2:	57 81       	ldd	r21, Z+7	; 0x07
 cb4:	24 81       	ldd	r18, Z+4	; 0x04
 cb6:	35 81       	ldd	r19, Z+5	; 0x05
 cb8:	42 17       	cp	r20, r18
 cba:	53 07       	cpc	r21, r19
 cbc:	44 f4       	brge	.+16     	; 0xcce <fputc+0x38>
 cbe:	a0 81       	ld	r26, Z
 cc0:	b1 81       	ldd	r27, Z+1	; 0x01
 cc2:	9d 01       	movw	r18, r26
 cc4:	2f 5f       	subi	r18, 0xFF	; 255
 cc6:	3f 4f       	sbci	r19, 0xFF	; 255
 cc8:	31 83       	std	Z+1, r19	; 0x01
 cca:	20 83       	st	Z, r18
 ccc:	8c 93       	st	X, r24
 cce:	26 81       	ldd	r18, Z+6	; 0x06
 cd0:	37 81       	ldd	r19, Z+7	; 0x07
 cd2:	2f 5f       	subi	r18, 0xFF	; 255
 cd4:	3f 4f       	sbci	r19, 0xFF	; 255
 cd6:	37 83       	std	Z+7, r19	; 0x07
 cd8:	26 83       	std	Z+6, r18	; 0x06
 cda:	10 c0       	rjmp	.+32     	; 0xcfc <fputc+0x66>
 cdc:	eb 01       	movw	r28, r22
 cde:	09 2f       	mov	r16, r25
 ce0:	18 2f       	mov	r17, r24
 ce2:	00 84       	ldd	r0, Z+8	; 0x08
 ce4:	f1 85       	ldd	r31, Z+9	; 0x09
 ce6:	e0 2d       	mov	r30, r0
 ce8:	09 95       	icall
 cea:	89 2b       	or	r24, r25
 cec:	e1 f6       	brne	.-72     	; 0xca6 <fputc+0x10>
 cee:	8e 81       	ldd	r24, Y+6	; 0x06
 cf0:	9f 81       	ldd	r25, Y+7	; 0x07
 cf2:	01 96       	adiw	r24, 0x01	; 1
 cf4:	9f 83       	std	Y+7, r25	; 0x07
 cf6:	8e 83       	std	Y+6, r24	; 0x06
 cf8:	81 2f       	mov	r24, r17
 cfa:	90 2f       	mov	r25, r16
 cfc:	df 91       	pop	r29
 cfe:	cf 91       	pop	r28
 d00:	1f 91       	pop	r17
 d02:	0f 91       	pop	r16
 d04:	08 95       	ret

00000d06 <__ultoa_invert>:
 d06:	fa 01       	movw	r30, r20
 d08:	aa 27       	eor	r26, r26
 d0a:	28 30       	cpi	r18, 0x08	; 8
 d0c:	51 f1       	breq	.+84     	; 0xd62 <__ultoa_invert+0x5c>
 d0e:	20 31       	cpi	r18, 0x10	; 16
 d10:	81 f1       	breq	.+96     	; 0xd72 <__ultoa_invert+0x6c>
 d12:	e8 94       	clt
 d14:	6f 93       	push	r22
 d16:	6e 7f       	andi	r22, 0xFE	; 254
 d18:	6e 5f       	subi	r22, 0xFE	; 254
 d1a:	7f 4f       	sbci	r23, 0xFF	; 255
 d1c:	8f 4f       	sbci	r24, 0xFF	; 255
 d1e:	9f 4f       	sbci	r25, 0xFF	; 255
 d20:	af 4f       	sbci	r26, 0xFF	; 255
 d22:	b1 e0       	ldi	r27, 0x01	; 1
 d24:	3e d0       	rcall	.+124    	; 0xda2 <__ultoa_invert+0x9c>
 d26:	b4 e0       	ldi	r27, 0x04	; 4
 d28:	3c d0       	rcall	.+120    	; 0xda2 <__ultoa_invert+0x9c>
 d2a:	67 0f       	add	r22, r23
 d2c:	78 1f       	adc	r23, r24
 d2e:	89 1f       	adc	r24, r25
 d30:	9a 1f       	adc	r25, r26
 d32:	a1 1d       	adc	r26, r1
 d34:	68 0f       	add	r22, r24
 d36:	79 1f       	adc	r23, r25
 d38:	8a 1f       	adc	r24, r26
 d3a:	91 1d       	adc	r25, r1
 d3c:	a1 1d       	adc	r26, r1
 d3e:	6a 0f       	add	r22, r26
 d40:	71 1d       	adc	r23, r1
 d42:	81 1d       	adc	r24, r1
 d44:	91 1d       	adc	r25, r1
 d46:	a1 1d       	adc	r26, r1
 d48:	20 d0       	rcall	.+64     	; 0xd8a <__ultoa_invert+0x84>
 d4a:	09 f4       	brne	.+2      	; 0xd4e <__ultoa_invert+0x48>
 d4c:	68 94       	set
 d4e:	3f 91       	pop	r19
 d50:	2a e0       	ldi	r18, 0x0A	; 10
 d52:	26 9f       	mul	r18, r22
 d54:	11 24       	eor	r1, r1
 d56:	30 19       	sub	r19, r0
 d58:	30 5d       	subi	r19, 0xD0	; 208
 d5a:	31 93       	st	Z+, r19
 d5c:	de f6       	brtc	.-74     	; 0xd14 <__ultoa_invert+0xe>
 d5e:	cf 01       	movw	r24, r30
 d60:	08 95       	ret
 d62:	46 2f       	mov	r20, r22
 d64:	47 70       	andi	r20, 0x07	; 7
 d66:	40 5d       	subi	r20, 0xD0	; 208
 d68:	41 93       	st	Z+, r20
 d6a:	b3 e0       	ldi	r27, 0x03	; 3
 d6c:	0f d0       	rcall	.+30     	; 0xd8c <__ultoa_invert+0x86>
 d6e:	c9 f7       	brne	.-14     	; 0xd62 <__ultoa_invert+0x5c>
 d70:	f6 cf       	rjmp	.-20     	; 0xd5e <__ultoa_invert+0x58>
 d72:	46 2f       	mov	r20, r22
 d74:	4f 70       	andi	r20, 0x0F	; 15
 d76:	40 5d       	subi	r20, 0xD0	; 208
 d78:	4a 33       	cpi	r20, 0x3A	; 58
 d7a:	18 f0       	brcs	.+6      	; 0xd82 <__ultoa_invert+0x7c>
 d7c:	49 5d       	subi	r20, 0xD9	; 217
 d7e:	31 fd       	sbrc	r19, 1
 d80:	40 52       	subi	r20, 0x20	; 32
 d82:	41 93       	st	Z+, r20
 d84:	02 d0       	rcall	.+4      	; 0xd8a <__ultoa_invert+0x84>
 d86:	a9 f7       	brne	.-22     	; 0xd72 <__ultoa_invert+0x6c>
 d88:	ea cf       	rjmp	.-44     	; 0xd5e <__ultoa_invert+0x58>
 d8a:	b4 e0       	ldi	r27, 0x04	; 4
 d8c:	a6 95       	lsr	r26
 d8e:	97 95       	ror	r25
 d90:	87 95       	ror	r24
 d92:	77 95       	ror	r23
 d94:	67 95       	ror	r22
 d96:	ba 95       	dec	r27
 d98:	c9 f7       	brne	.-14     	; 0xd8c <__ultoa_invert+0x86>
 d9a:	00 97       	sbiw	r24, 0x00	; 0
 d9c:	61 05       	cpc	r22, r1
 d9e:	71 05       	cpc	r23, r1
 da0:	08 95       	ret
 da2:	9b 01       	movw	r18, r22
 da4:	ac 01       	movw	r20, r24
 da6:	0a 2e       	mov	r0, r26
 da8:	06 94       	lsr	r0
 daa:	57 95       	ror	r21
 dac:	47 95       	ror	r20
 dae:	37 95       	ror	r19
 db0:	27 95       	ror	r18
 db2:	ba 95       	dec	r27
 db4:	c9 f7       	brne	.-14     	; 0xda8 <__ultoa_invert+0xa2>
 db6:	62 0f       	add	r22, r18
 db8:	73 1f       	adc	r23, r19
 dba:	84 1f       	adc	r24, r20
 dbc:	95 1f       	adc	r25, r21
 dbe:	a0 1d       	adc	r26, r0
 dc0:	08 95       	ret

00000dc2 <_exit>:
 dc2:	f8 94       	cli

00000dc4 <__stop_program>:
 dc4:	ff cf       	rjmp	.-2      	; 0xdc4 <__stop_program>
