
Steering_wheel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00000d98  00000e2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d98  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000033  0080013a  0080013a  00000e66  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e66  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ec4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000f04  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ce7  00000000  00000000  00001034  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000716  00000000  00000000  00001d1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009ff  00000000  00000000  00002431  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000025c  00000000  00000000  00002e30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003b9  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000679  00000000  00000000  00003445  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00003abe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
   2:	00 00       	nop
   4:	64 c0       	rjmp	.+200    	; 0xce <__bad_interrupt>
   6:	00 00       	nop
   8:	62 c0       	rjmp	.+196    	; 0xce <__bad_interrupt>
   a:	00 00       	nop
   c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
   e:	00 00       	nop
  10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
  12:	00 00       	nop
  14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
  16:	00 00       	nop
  18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
  1a:	00 00       	nop
  1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
  1e:	00 00       	nop
  20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
  22:	00 00       	nop
  24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
  26:	00 00       	nop
  28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
  2a:	00 00       	nop
  2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
  2e:	00 00       	nop
  30:	4e c0       	rjmp	.+156    	; 0xce <__bad_interrupt>
  32:	00 00       	nop
  34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
  36:	00 00       	nop
  38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
  3a:	00 00       	nop
  3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
  3e:	00 00       	nop
  40:	46 c0       	rjmp	.+140    	; 0xce <__bad_interrupt>
  42:	00 00       	nop
  44:	23 c2       	rjmp	.+1094   	; 0x48c <__vector_17>
  46:	00 00       	nop
  48:	7d c0       	rjmp	.+250    	; 0x144 <__vector_18>
  4a:	00 00       	nop
  4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
  4e:	00 00       	nop
  50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
  52:	00 00       	nop
  54:	3c c0       	rjmp	.+120    	; 0xce <__bad_interrupt>
  56:	00 00       	nop
  58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
  5a:	00 00       	nop
  5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
  5e:	00 00       	nop
  60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
  62:	00 00       	nop
  64:	34 c0       	rjmp	.+104    	; 0xce <__bad_interrupt>
  66:	00 00       	nop
  68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
  6a:	00 00       	nop
  6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
  6e:	00 00       	nop
  70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
  72:	00 00       	nop
  74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
  76:	00 00       	nop
  78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
  7a:	00 00       	nop
  7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
  7e:	00 00       	nop
  80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
  82:	00 00       	nop
  84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
  86:	00 00       	nop
  88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
  8a:	00 00       	nop
  8c:	20 c0       	rjmp	.+64     	; 0xce <__bad_interrupt>
  8e:	00 00       	nop
  90:	1e c0       	rjmp	.+60     	; 0xce <__bad_interrupt>
	...

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	11 e0       	ldi	r17, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	e8 e9       	ldi	r30, 0x98	; 152
  a8:	fd e0       	ldi	r31, 0x0D	; 13
  aa:	00 e0       	ldi	r16, 0x00	; 0
  ac:	0b bf       	out	0x3b, r16	; 59
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
  b0:	07 90       	elpm	r0, Z+
  b2:	0d 92       	st	X+, r0
  b4:	aa 33       	cpi	r26, 0x3A	; 58
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	aa e3       	ldi	r26, 0x3A	; 58
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	ad 36       	cpi	r26, 0x6D	; 109
  c6:	b2 07       	cpc	r27, r18
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	5e d1       	rcall	.+700    	; 0x388 <main>
  cc:	63 c6       	rjmp	.+3270   	; 0xd94 <_exit>

000000ce <__bad_interrupt>:
  ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <adc_init>:
 *  Author: Vilius
 */ 
#include "adc.h"

void adc_init( void) {
	clear_bit(DDRF, DDF0);
  d0:	80 98       	cbi	0x10, 0	; 16
	
	/* Voltage ref AVcc with external capacitor on AREF pin */
	set_bit(ADMUX, REFS0);
  d2:	ec e7       	ldi	r30, 0x7C	; 124
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	80 64       	ori	r24, 0x40	; 64
  da:	80 83       	st	Z, r24
	/* Select prescaler to 64 --> conversion f= 125kHz */
	set_bit(ADCSRA, ADPS2);
  dc:	ea e7       	ldi	r30, 0x7A	; 122
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	84 60       	ori	r24, 0x04	; 4
  e4:	80 83       	st	Z, r24
	set_bit(ADCSRA, ADPS1);
  e6:	80 81       	ld	r24, Z
  e8:	82 60       	ori	r24, 0x02	; 2
  ea:	80 83       	st	Z, r24
	/* Enable the ADC */
	set_bit(ADCSRA, ADEN);
  ec:	80 81       	ld	r24, Z
  ee:	80 68       	ori	r24, 0x80	; 128
  f0:	80 83       	st	Z, r24
  f2:	08 95       	ret

000000f4 <adc_sleep>:
	//set_bit(ADCSRA, ADIE);
}

void adc_sleep( void) {
	/* Wait for the conversion to complete */
	while(test_bit(ADCSRA, ADSC));
  f4:	ea e7       	ldi	r30, 0x7A	; 122
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	86 fd       	sbrc	r24, 6
  fc:	fd cf       	rjmp	.-6      	; 0xf8 <adc_sleep+0x4>
	/* Turn off the ADC */
	clear_bit(ADCSRA, ADEN);
  fe:	ea e7       	ldi	r30, 0x7A	; 122
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	8f 77       	andi	r24, 0x7F	; 127
 106:	80 83       	st	Z, r24
 108:	08 95       	ret

0000010a <adc_input>:
}

void adc_input(int ref, CAN_packet* p) {
	/*Select the reference channel */
	if (ref==SPEED)
 10a:	00 97       	sbiw	r24, 0x00	; 0
 10c:	29 f4       	brne	.+10     	; 0x118 <adc_input+0xe>
		ADMUX |= 0x00;
 10e:	ec e7       	ldi	r30, 0x7C	; 124
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	80 83       	st	Z, r24
 116:	07 c0       	rjmp	.+14     	; 0x126 <adc_input+0x1c>
	else if (ref==FANS)
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	29 f4       	brne	.+10     	; 0x126 <adc_input+0x1c>
		ADMUX |= 0x01;
 11c:	ec e7       	ldi	r30, 0x7C	; 124
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	81 60       	ori	r24, 0x01	; 1
 124:	80 83       	st	Z, r24
	/* Start the conversion */
	set_bit(ADCSRA, ADSC);
 126:	ea e7       	ldi	r30, 0x7A	; 122
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	80 64       	ori	r24, 0x40	; 64
 12e:	80 83       	st	Z, r24
	/* Wait for the conversion to complete */
	while(test_bit(ADCSRA, ADSC));
 130:	80 81       	ld	r24, Z
 132:	86 fd       	sbrc	r24, 6
 134:	fd cf       	rjmp	.-6      	; 0x130 <adc_input+0x26>
	p->data[1] = ADC;
 136:	80 91 78 00 	lds	r24, 0x0078
 13a:	90 91 79 00 	lds	r25, 0x0079
 13e:	fb 01       	movw	r30, r22
 140:	84 83       	std	Z+4, r24	; 0x04
 142:	08 95       	ret

00000144 <__vector_18>:
		}
	CANGCON |= 0x02;
	CANGIE=(1<<ENIT) | (1<< ENRX);
}
	
void can_health(void) {
 144:	1f 92       	push	r1
 146:	0f 92       	push	r0
 148:	0f b6       	in	r0, 0x3f	; 63
 14a:	0f 92       	push	r0
 14c:	11 24       	eor	r1, r1
 14e:	0b b6       	in	r0, 0x3b	; 59
 150:	0f 92       	push	r0
 152:	2f 93       	push	r18
 154:	3f 93       	push	r19
 156:	4f 93       	push	r20
 158:	5f 93       	push	r21
 15a:	6f 93       	push	r22
 15c:	7f 93       	push	r23
 15e:	8f 93       	push	r24
 160:	9f 93       	push	r25
 162:	af 93       	push	r26
 164:	bf 93       	push	r27
 166:	cf 93       	push	r28
 168:	ef 93       	push	r30
 16a:	ff 93       	push	r31
 16c:	ed ee       	ldi	r30, 0xED	; 237
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	c0 81       	ld	r28, Z
 172:	80 91 ec 00 	lds	r24, 0x00EC
 176:	68 2f       	mov	r22, r24
 178:	70 e0       	ldi	r23, 0x00	; 0
 17a:	80 7f       	andi	r24, 0xF0	; 240
 17c:	80 83       	st	Z, r24
 17e:	72 95       	swap	r23
 180:	62 95       	swap	r22
 182:	6f 70       	andi	r22, 0x0F	; 15
 184:	67 27       	eor	r22, r23
 186:	7f 70       	andi	r23, 0x0F	; 15
 188:	67 27       	eor	r22, r23
 18a:	80 91 ee 00 	lds	r24, 0x00EE
 18e:	8f 75       	andi	r24, 0x5F	; 95
 190:	09 f0       	breq	.+2      	; 0x194 <__vector_18+0x50>
 192:	98 95       	break
 194:	20 91 f2 00 	lds	r18, 0x00F2
 198:	80 91 f3 00 	lds	r24, 0x00F3
 19c:	ea e3       	ldi	r30, 0x3A	; 58
 19e:	f1 e0       	ldi	r31, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	88 0f       	add	r24, r24
 1a4:	99 1f       	adc	r25, r25
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	22 95       	swap	r18
 1b0:	26 95       	lsr	r18
 1b2:	27 70       	andi	r18, 0x07	; 7
 1b4:	82 2b       	or	r24, r18
 1b6:	91 83       	std	Z+1, r25	; 0x01
 1b8:	80 83       	st	Z, r24
 1ba:	80 91 ef 00 	lds	r24, 0x00EF
 1be:	8f 70       	andi	r24, 0x0F	; 15
 1c0:	82 83       	std	Z+2, r24	; 0x02
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	00 97       	sbiw	r24, 0x00	; 0
 1c6:	59 f0       	breq	.+22     	; 0x1de <__vector_18+0x9a>
 1c8:	ed e3       	ldi	r30, 0x3D	; 61
 1ca:	f1 e0       	ldi	r31, 0x01	; 1
 1cc:	83 5c       	subi	r24, 0xC3	; 195
 1ce:	9e 4f       	sbci	r25, 0xFE	; 254
 1d0:	aa ef       	ldi	r26, 0xFA	; 250
 1d2:	b0 e0       	ldi	r27, 0x00	; 0
 1d4:	2c 91       	ld	r18, X
 1d6:	21 93       	st	Z+, r18
 1d8:	e8 17       	cp	r30, r24
 1da:	f9 07       	cpc	r31, r25
 1dc:	d9 f7       	brne	.-10     	; 0x1d4 <__vector_18+0x90>
 1de:	10 92 ee 00 	sts	0x00EE, r1
 1e2:	80 e8       	ldi	r24, 0x80	; 128
 1e4:	80 93 ef 00 	sts	0x00EF, r24
 1e8:	fb 01       	movw	r30, r22
 1ea:	ee 0f       	add	r30, r30
 1ec:	ff 1f       	adc	r31, r31
 1ee:	eb 5b       	subi	r30, 0xBB	; 187
 1f0:	fe 4f       	sbci	r31, 0xFE	; 254
 1f2:	01 90       	ld	r0, Z+
 1f4:	f0 81       	ld	r31, Z
 1f6:	e0 2d       	mov	r30, r0
 1f8:	8a e3       	ldi	r24, 0x3A	; 58
 1fa:	91 e0       	ldi	r25, 0x01	; 1
 1fc:	09 95       	icall
 1fe:	c0 93 ed 00 	sts	0x00ED, r28
 202:	ff 91       	pop	r31
 204:	ef 91       	pop	r30
 206:	cf 91       	pop	r28
 208:	bf 91       	pop	r27
 20a:	af 91       	pop	r26
 20c:	9f 91       	pop	r25
 20e:	8f 91       	pop	r24
 210:	7f 91       	pop	r23
 212:	6f 91       	pop	r22
 214:	5f 91       	pop	r21
 216:	4f 91       	pop	r20
 218:	3f 91       	pop	r19
 21a:	2f 91       	pop	r18
 21c:	0f 90       	pop	r0
 21e:	0b be       	out	0x3b, r0	; 59
 220:	0f 90       	pop	r0
 222:	0f be       	out	0x3f, r0	; 63
 224:	0f 90       	pop	r0
 226:	1f 90       	pop	r1
 228:	18 95       	reti

0000022a <can_tx>:
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	fb 01       	movw	r30, r22
 230:	20 81       	ld	r18, Z
 232:	31 81       	ldd	r19, Z+1	; 0x01
 234:	21 15       	cp	r18, r1
 236:	38 40       	sbci	r19, 0x08	; 8
 238:	08 f0       	brcs	.+2      	; 0x23c <can_tx+0x12>
 23a:	98 95       	break
 23c:	92 81       	ldd	r25, Z+2	; 0x02
 23e:	99 30       	cpi	r25, 0x09	; 9
 240:	08 f0       	brcs	.+2      	; 0x244 <can_tx+0x1a>
 242:	98 95       	break
 244:	8f 30       	cpi	r24, 0x0F	; 15
 246:	08 f0       	brcs	.+2      	; 0x24a <can_tx+0x20>
 248:	98 95       	break
 24a:	82 95       	swap	r24
 24c:	80 7f       	andi	r24, 0xF0	; 240
 24e:	80 93 ed 00 	sts	0x00ED, r24
 252:	80 91 ef 00 	lds	r24, 0x00EF
 256:	80 7c       	andi	r24, 0xC0	; 192
 258:	21 f0       	breq	.+8      	; 0x262 <can_tx+0x38>
 25a:	80 91 ee 00 	lds	r24, 0x00EE
 25e:	86 ff       	sbrs	r24, 6
 260:	55 c0       	rjmp	.+170    	; 0x30c <can_tx+0xe2>
 262:	10 92 ee 00 	sts	0x00EE, r1
 266:	10 92 ef 00 	sts	0x00EF, r1
 26a:	82 81       	ldd	r24, Z+2	; 0x02
 26c:	8f 3f       	cpi	r24, 0xFF	; 255
 26e:	61 f1       	breq	.+88     	; 0x2c8 <can_tx+0x9e>
 270:	80 81       	ld	r24, Z
 272:	91 81       	ldd	r25, Z+1	; 0x01
 274:	96 95       	lsr	r25
 276:	87 95       	ror	r24
 278:	96 95       	lsr	r25
 27a:	87 95       	ror	r24
 27c:	96 95       	lsr	r25
 27e:	87 95       	ror	r24
 280:	80 93 f3 00 	sts	0x00F3, r24
 284:	80 81       	ld	r24, Z
 286:	82 95       	swap	r24
 288:	88 0f       	add	r24, r24
 28a:	80 7e       	andi	r24, 0xE0	; 224
 28c:	80 93 f2 00 	sts	0x00F2, r24
 290:	10 92 f1 00 	sts	0x00F1, r1
 294:	10 92 f0 00 	sts	0x00F0, r1
 298:	22 81       	ldd	r18, Z+2	; 0x02
 29a:	22 23       	and	r18, r18
 29c:	79 f0       	breq	.+30     	; 0x2bc <can_tx+0x92>
 29e:	df 01       	movw	r26, r30
 2a0:	13 96       	adiw	r26, 0x03	; 3
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	ca ef       	ldi	r28, 0xFA	; 250
 2a8:	d0 e0       	ldi	r29, 0x00	; 0
 2aa:	2d 91       	ld	r18, X+
 2ac:	28 83       	st	Y, r18
 2ae:	01 96       	adiw	r24, 0x01	; 1
 2b0:	22 81       	ldd	r18, Z+2	; 0x02
 2b2:	42 2f       	mov	r20, r18
 2b4:	50 e0       	ldi	r21, 0x00	; 0
 2b6:	84 17       	cp	r24, r20
 2b8:	95 07       	cpc	r25, r21
 2ba:	b8 f3       	brcs	.-18     	; 0x2aa <can_tx+0x80>
 2bc:	ef ee       	ldi	r30, 0xEF	; 239
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	80 81       	ld	r24, Z
 2c2:	28 2b       	or	r18, r24
 2c4:	20 83       	st	Z, r18
 2c6:	1b c0       	rjmp	.+54     	; 0x2fe <can_tx+0xd4>
 2c8:	80 81       	ld	r24, Z
 2ca:	91 81       	ldd	r25, Z+1	; 0x01
 2cc:	96 95       	lsr	r25
 2ce:	87 95       	ror	r24
 2d0:	96 95       	lsr	r25
 2d2:	87 95       	ror	r24
 2d4:	96 95       	lsr	r25
 2d6:	87 95       	ror	r24
 2d8:	80 93 f3 00 	sts	0x00F3, r24
 2dc:	80 81       	ld	r24, Z
 2de:	82 95       	swap	r24
 2e0:	88 0f       	add	r24, r24
 2e2:	80 7e       	andi	r24, 0xE0	; 224
 2e4:	80 93 f2 00 	sts	0x00F2, r24
 2e8:	10 92 f1 00 	sts	0x00F1, r1
 2ec:	84 e0       	ldi	r24, 0x04	; 4
 2ee:	80 93 f0 00 	sts	0x00F0, r24
 2f2:	af ee       	ldi	r26, 0xEF	; 239
 2f4:	b0 e0       	ldi	r27, 0x00	; 0
 2f6:	9c 91       	ld	r25, X
 2f8:	82 81       	ldd	r24, Z+2	; 0x02
 2fa:	89 2b       	or	r24, r25
 2fc:	8c 93       	st	X, r24
 2fe:	ef ee       	ldi	r30, 0xEF	; 239
 300:	f0 e0       	ldi	r31, 0x00	; 0
 302:	80 81       	ld	r24, Z
 304:	80 64       	ori	r24, 0x40	; 64
 306:	80 83       	st	Z, r24
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	01 c0       	rjmp	.+2      	; 0x30e <can_tx+0xe4>
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	08 95       	ret

00000314 <can_init>:
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	86 e0       	ldi	r24, 0x06	; 6
 31a:	80 93 e2 00 	sts	0x00E2, r24
 31e:	8c e0       	ldi	r24, 0x0C	; 12
 320:	80 93 e3 00 	sts	0x00E3, r24
 324:	8a e5       	ldi	r24, 0x5A	; 90
 326:	80 93 e4 00 	sts	0x00E4, r24
 32a:	80 e0       	ldi	r24, 0x00	; 0
 32c:	cd ee       	ldi	r28, 0xED	; 237
 32e:	d0 e0       	ldi	r29, 0x00	; 0
 330:	ae ee       	ldi	r26, 0xEE	; 238
 332:	b0 e0       	ldi	r27, 0x00	; 0
 334:	ef ee       	ldi	r30, 0xEF	; 239
 336:	f0 e0       	ldi	r31, 0x00	; 0
 338:	98 2f       	mov	r25, r24
 33a:	92 95       	swap	r25
 33c:	90 7f       	andi	r25, 0xF0	; 240
 33e:	98 83       	st	Y, r25
 340:	1c 92       	st	X, r1
 342:	10 82       	st	Z, r1
 344:	8f 5f       	subi	r24, 0xFF	; 255
 346:	8f 30       	cpi	r24, 0x0F	; 15
 348:	b9 f7       	brne	.-18     	; 0x338 <can_init+0x24>
 34a:	e8 ed       	ldi	r30, 0xD8	; 216
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	82 60       	ori	r24, 0x02	; 2
 352:	80 83       	st	Z, r24
 354:	80 ea       	ldi	r24, 0xA0	; 160
 356:	80 93 db 00 	sts	0x00DB, r24
 35a:	df 91       	pop	r29
 35c:	cf 91       	pop	r28
 35e:	08 95       	ret

00000360 <can_packet_send>:
	*/
}

BOOL can_packet_send(char mob, CAN_packet *packet) {
	/* Clear global interrupts */
	cli();
 360:	f8 94       	cli
	BOOL result = can_tx(mob, packet);
 362:	63 df       	rcall	.-314    	; 0x22a <can_tx>
	/* Set global interrupts */
	sei();
 364:	78 94       	sei
	return result;
}
 366:	08 95       	ret

00000368 <inits>:
	printf("\r\nInitialization complete");
}

void response(CAN_packet* p, unsigned int mob) {
	(void)mob;
	printf("\r\nReceived");
 368:	d5 df       	rcall	.-86     	; 0x314 <can_init>
 36a:	61 e0       	ldi	r22, 0x01	; 1
 36c:	83 e3       	ldi	r24, 0x33	; 51
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	a8 d0       	rcall	.+336    	; 0x4c2 <USART_init>
 372:	80 d0       	rcall	.+256    	; 0x474 <timer0_init>
 374:	6b d0       	rcall	.+214    	; 0x44c <sw_init>
 376:	ac de       	rcall	.-680    	; 0xd0 <adc_init>
 378:	86 e0       	ldi	r24, 0x06	; 6
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	9f 93       	push	r25
 37e:	8f 93       	push	r24
 380:	0e d1       	rcall	.+540    	; 0x59e <printf>
 382:	0f 90       	pop	r0
 384:	0f 90       	pop	r0
 386:	08 95       	ret

00000388 <main>:
}

int main(void)
{
 388:	cf 93       	push	r28
 38a:	df 93       	push	r29
 38c:	cd b7       	in	r28, 0x3d	; 61
 38e:	de b7       	in	r29, 0x3e	; 62
 390:	66 97       	sbiw	r28, 0x16	; 22
 392:	0f b6       	in	r0, 0x3f	; 63
 394:	f8 94       	cli
 396:	de bf       	out	0x3e, r29	; 62
 398:	0f be       	out	0x3f, r0	; 63
 39a:	cd bf       	out	0x3d, r28	; 61
	/* Make two CAN packets */
	CAN_packet current;
	CAN_packet updated;
	
	/* Initialize module and packets*/
	inits();
 39c:	e5 df       	rcall	.-54     	; 0x368 <inits>
	
	/* Initialize packets */
	current.id = ID_steeringWheel;
 39e:	2f e1       	ldi	r18, 0x1F	; 31
 3a0:	30 e0       	ldi	r19, 0x00	; 0
 3a2:	3a 83       	std	Y+2, r19	; 0x02
 3a4:	29 83       	std	Y+1, r18	; 0x01
	current.length = 1;
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	8b 83       	std	Y+3, r24	; 0x03
	updated.id = ID_steeringWheel;
 3aa:	3d 87       	std	Y+13, r19	; 0x0d
 3ac:	2c 87       	std	Y+12, r18	; 0x0c
	updated.length = 1;
 3ae:	8e 87       	std	Y+14, r24	; 0x0e
	sw_input(&current);
 3b0:	ce 01       	movw	r24, r28
 3b2:	01 96       	adiw	r24, 0x01	; 1
 3b4:	50 d0       	rcall	.+160    	; 0x456 <sw_input>
	sw_input(&updated);
 3b6:	ce 01       	movw	r24, r28
 3b8:	0c 96       	adiw	r24, 0x0c	; 12
 3ba:	4d d0       	rcall	.+154    	; 0x456 <sw_input>
	adc_input(SPEED, &current);
 3bc:	be 01       	movw	r22, r28
 3be:	6f 5f       	subi	r22, 0xFF	; 255
 3c0:	7f 4f       	sbci	r23, 0xFF	; 255
 3c2:	80 e0       	ldi	r24, 0x00	; 0
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	a1 de       	rcall	.-702    	; 0x10a <adc_input>
	adc_input(SPEED, &updated);
 3c8:	be 01       	movw	r22, r28
 3ca:	64 5f       	subi	r22, 0xF4	; 244
 3cc:	7f 4f       	sbci	r23, 0xFF	; 255
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	9b de       	rcall	.-714    	; 0x10a <adc_input>
	adc_sleep();
 3d4:	8f de       	rcall	.-738    	; 0xf4 <adc_sleep>
			printf("\r\nCurrent speed - %u",current.data[1]);
			printf("\r\nUpdated data[0] - %u",updated.data[0]);
			*/
			/* Send a message with new data */
			ret = can_packet_send(1, &updated);
			current = updated;
 3d6:	0f 2e       	mov	r0, r31
 3d8:	fb e0       	ldi	r31, 0x0B	; 11
 3da:	ff 2e       	mov	r15, r31
 3dc:	f0 2d       	mov	r31, r0
		}
		if (ret) {
			printf("\r\nMessage sent");
 3de:	0b e2       	ldi	r16, 0x2B	; 43
 3e0:	11 e0       	ldi	r17, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3e2:	2f ef       	ldi	r18, 0xFF	; 255
 3e4:	80 e7       	ldi	r24, 0x70	; 112
 3e6:	92 e0       	ldi	r25, 0x02	; 2
 3e8:	21 50       	subi	r18, 0x01	; 1
 3ea:	80 40       	sbci	r24, 0x00	; 0
 3ec:	90 40       	sbci	r25, 0x00	; 0
 3ee:	e1 f7       	brne	.-8      	; 0x3e8 <main+0x60>
 3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <main+0x6a>
 3f2:	00 00       	nop
	adc_sleep();
	
    for(;;) {
		_delay_ms(100);
		/* Update one CAN_packet */
		sw_input(&updated); 
 3f4:	ce 01       	movw	r24, r28
 3f6:	0c 96       	adiw	r24, 0x0c	; 12
 3f8:	2e d0       	rcall	.+92     	; 0x456 <sw_input>
		adc_init();
 3fa:	6a de       	rcall	.-812    	; 0xd0 <adc_init>
		adc_input(FANS, &updated);
 3fc:	be 01       	movw	r22, r28
 3fe:	64 5f       	subi	r22, 0xF4	; 244
 400:	7f 4f       	sbci	r23, 0xFF	; 255
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	81 de       	rcall	.-766    	; 0x10a <adc_input>
		adc_sleep();
 408:	75 de       	rcall	.-790    	; 0xf4 <adc_sleep>
		/* Compare the two packets */
		different = memcmp(current.data, updated.data, 8);
 40a:	48 e0       	ldi	r20, 0x08	; 8
 40c:	50 e0       	ldi	r21, 0x00	; 0
 40e:	be 01       	movw	r22, r28
 410:	61 5f       	subi	r22, 0xF1	; 241
 412:	7f 4f       	sbci	r23, 0xFF	; 255
 414:	ce 01       	movw	r24, r28
 416:	04 96       	adiw	r24, 0x04	; 4
 418:	6b d0       	rcall	.+214    	; 0x4f0 <memcmp>
		if (different) {
 41a:	89 2b       	or	r24, r25
 41c:	a9 f0       	breq	.+42     	; 0x448 <main+0xc0>
			/*printf("\r\nCurrent data[0] - %u",current.data[0]);
			printf("\r\nCurrent speed - %u",current.data[1]);
			printf("\r\nUpdated data[0] - %u",updated.data[0]);
			*/
			/* Send a message with new data */
			ret = can_packet_send(1, &updated);
 41e:	be 01       	movw	r22, r28
 420:	64 5f       	subi	r22, 0xF4	; 244
 422:	7f 4f       	sbci	r23, 0xFF	; 255
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	9c df       	rcall	.-200    	; 0x360 <can_packet_send>
			current = updated;
 428:	fe 01       	movw	r30, r28
 42a:	3c 96       	adiw	r30, 0x0c	; 12
 42c:	de 01       	movw	r26, r28
 42e:	11 96       	adiw	r26, 0x01	; 1
 430:	9f 2d       	mov	r25, r15
 432:	01 90       	ld	r0, Z+
 434:	0d 92       	st	X+, r0
 436:	9a 95       	dec	r25
 438:	e1 f7       	brne	.-8      	; 0x432 <main+0xaa>
		}
		if (ret) {
 43a:	88 23       	and	r24, r24
 43c:	29 f0       	breq	.+10     	; 0x448 <main+0xc0>
			printf("\r\nMessage sent");
 43e:	1f 93       	push	r17
 440:	0f 93       	push	r16
 442:	ad d0       	rcall	.+346    	; 0x59e <printf>
 444:	0f 90       	pop	r0
 446:	0f 90       	pop	r0
			ret = FALSE;
		}
 		//TODO: if successfully read, stop sending!
		asm("sleep");;
 448:	88 95       	sleep
	}
 44a:	cb cf       	rjmp	.-106    	; 0x3e2 <main+0x5a>

0000044c <sw_init>:
CAN_packet current;
CAN_packet updated;

void sw_init( void) {	
	/* Set PE3 and PE4 as inputs */
	clear_bit(DDRE, DDE3);
 44c:	6b 98       	cbi	0x0d, 3	; 13
	clear_bit(DDRE, DDE4);
 44e:	6c 98       	cbi	0x0d, 4	; 13
	/* Set PE3 and PE4 as high (pull up res) */
	set_bit(PORTE, PE3);
 450:	73 9a       	sbi	0x0e, 3	; 14
	set_bit(PORTE, PE4);	
 452:	74 9a       	sbi	0x0e, 4	; 14
 454:	08 95       	ret

00000456 <sw_input>:
}

void sw_input( CAN_packet* p) {	
	/* Read left/right indicator */
	if(!test_bit(PINE, PE4))
 456:	64 99       	sbic	0x0c, 4	; 12
 458:	04 c0       	rjmp	.+8      	; 0x462 <sw_input+0xc>
		p->data[0] = (1<<2);
 45a:	24 e0       	ldi	r18, 0x04	; 4
 45c:	fc 01       	movw	r30, r24
 45e:	23 83       	std	Z+3, r18	; 0x03
 460:	08 95       	ret
	else if (!test_bit(PINE, PE3))
 462:	63 99       	sbic	0x0c, 3	; 12
 464:	04 c0       	rjmp	.+8      	; 0x46e <sw_input+0x18>
		p->data[0] = (1<<3);
 466:	28 e0       	ldi	r18, 0x08	; 8
 468:	fc 01       	movw	r30, r24
 46a:	23 83       	std	Z+3, r18	; 0x03
 46c:	08 95       	ret
	else
		p->data[0] = 0;
 46e:	fc 01       	movw	r30, r24
 470:	13 82       	std	Z+3, r1	; 0x03
 472:	08 95       	ret

00000474 <timer0_init>:

#include "timer0.h"

void timer0_init( void) {
	/* clk/1024 */
	set_bit(TCCR0A, CS02);
 474:	84 b5       	in	r24, 0x24	; 36
 476:	84 60       	ori	r24, 0x04	; 4
 478:	84 bd       	out	0x24, r24	; 36
	set_bit(TCCR0A, CS00);
 47a:	84 b5       	in	r24, 0x24	; 36
 47c:	81 60       	ori	r24, 0x01	; 1
 47e:	84 bd       	out	0x24, r24	; 36
	/* Enable timer overflow */
	set_bit(TIMSK0, TOIE0);
 480:	ee e6       	ldi	r30, 0x6E	; 110
 482:	f0 e0       	ldi	r31, 0x00	; 0
 484:	80 81       	ld	r24, Z
 486:	81 60       	ori	r24, 0x01	; 1
 488:	80 83       	st	Z, r24
 48a:	08 95       	ret

0000048c <__vector_17>:
}

ISR(TIMER0_OVF_vect) {
 48c:	1f 92       	push	r1
 48e:	0f 92       	push	r0
 490:	0f b6       	in	r0, 0x3f	; 63
 492:	0f 92       	push	r0
 494:	11 24       	eor	r1, r1
	
	
 496:	0f 90       	pop	r0
 498:	0f be       	out	0x3f, r0	; 63
 49a:	0f 90       	pop	r0
 49c:	1f 90       	pop	r1
 49e:	18 95       	reti

000004a0 <USART_tx>:
	fdevopen(USART_tx, USART_rx);
}

_Bool USART_tx(unsigned char data) {
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)));
 4a0:	e0 ec       	ldi	r30, 0xC0	; 192
 4a2:	f0 e0       	ldi	r31, 0x00	; 0
 4a4:	90 81       	ld	r25, Z
 4a6:	95 ff       	sbrs	r25, 5
 4a8:	fd cf       	rjmp	.-6      	; 0x4a4 <USART_tx+0x4>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 4aa:	80 93 c6 00 	sts	0x00C6, r24
	// T0D0 implement 
	return true;
}
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	08 95       	ret

000004b2 <USART_rx>:

unsigned char USART_rx(void) {
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)));
 4b2:	e0 ec       	ldi	r30, 0xC0	; 192
 4b4:	f0 e0       	ldi	r31, 0x00	; 0
 4b6:	80 81       	ld	r24, Z
 4b8:	88 23       	and	r24, r24
 4ba:	ec f7       	brge	.-6      	; 0x4b6 <USART_rx+0x4>
	/* Get and return received data from buffer */
	return UDR0;
 4bc:	80 91 c6 00 	lds	r24, 0x00C6
}
 4c0:	08 95       	ret

000004c2 <USART_init>:

/*! Initialize the serial communication
	baud is the baud rate */
void USART_init(unsigned int baud, _Bool onOff) {
	/* Set baud rate */
	UBRR0H = (unsigned char) (baud>>8);
 4c2:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char) baud;
 4c6:	80 93 c4 00 	sts	0x00C4, r24
	/* Set frame format: Asynchronous normal mode, 8data, no parity  1 stop bit */
	/*(0<<UMSEL0) | (0<<UPM0) | (0<<USBS0) | already set as Initial values */
	UCSR0C = (3<<UCSZ0);
 4ca:	86 e0       	ldi	r24, 0x06	; 6
 4cc:	80 93 c2 00 	sts	0x00C2, r24
	/* Enable receiver and transmitter */
	if (onOff) {
 4d0:	66 23       	and	r22, r22
 4d2:	41 f0       	breq	.+16     	; 0x4e4 <USART_init+0x22>
		set_bit(UCSR0B,	RXEN0);
 4d4:	e1 ec       	ldi	r30, 0xC1	; 193
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	80 81       	ld	r24, Z
 4da:	80 61       	ori	r24, 0x10	; 16
 4dc:	80 83       	st	Z, r24
		set_bit(UCSR0B, TXEN0);
 4de:	80 81       	ld	r24, Z
 4e0:	88 60       	ori	r24, 0x08	; 8
 4e2:	80 83       	st	Z, r24
	}
	/*!	enables using fprint() instead of USART_tx_string() */
	fdevopen(USART_tx, USART_rx);
 4e4:	69 e5       	ldi	r22, 0x59	; 89
 4e6:	72 e0       	ldi	r23, 0x02	; 2
 4e8:	80 e5       	ldi	r24, 0x50	; 80
 4ea:	92 e0       	ldi	r25, 0x02	; 2
 4ec:	0e c0       	rjmp	.+28     	; 0x50a <fdevopen>
 4ee:	08 95       	ret

000004f0 <memcmp>:
 4f0:	fb 01       	movw	r30, r22
 4f2:	dc 01       	movw	r26, r24
 4f4:	04 c0       	rjmp	.+8      	; 0x4fe <memcmp+0xe>
 4f6:	8d 91       	ld	r24, X+
 4f8:	01 90       	ld	r0, Z+
 4fa:	80 19       	sub	r24, r0
 4fc:	21 f4       	brne	.+8      	; 0x506 <memcmp+0x16>
 4fe:	41 50       	subi	r20, 0x01	; 1
 500:	50 40       	sbci	r21, 0x00	; 0
 502:	c8 f7       	brcc	.-14     	; 0x4f6 <memcmp+0x6>
 504:	88 1b       	sub	r24, r24
 506:	99 0b       	sbc	r25, r25
 508:	08 95       	ret

0000050a <fdevopen>:
 50a:	0f 93       	push	r16
 50c:	1f 93       	push	r17
 50e:	cf 93       	push	r28
 510:	df 93       	push	r29
 512:	00 97       	sbiw	r24, 0x00	; 0
 514:	31 f4       	brne	.+12     	; 0x522 <fdevopen+0x18>
 516:	61 15       	cp	r22, r1
 518:	71 05       	cpc	r23, r1
 51a:	19 f4       	brne	.+6      	; 0x522 <fdevopen+0x18>
 51c:	80 e0       	ldi	r24, 0x00	; 0
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	39 c0       	rjmp	.+114    	; 0x594 <fdevopen+0x8a>
 522:	8b 01       	movw	r16, r22
 524:	ec 01       	movw	r28, r24
 526:	6e e0       	ldi	r22, 0x0E	; 14
 528:	70 e0       	ldi	r23, 0x00	; 0
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	38 d2       	rcall	.+1136   	; 0x9a0 <calloc>
 530:	fc 01       	movw	r30, r24
 532:	89 2b       	or	r24, r25
 534:	99 f3       	breq	.-26     	; 0x51c <fdevopen+0x12>
 536:	80 e8       	ldi	r24, 0x80	; 128
 538:	83 83       	std	Z+3, r24	; 0x03
 53a:	01 15       	cp	r16, r1
 53c:	11 05       	cpc	r17, r1
 53e:	71 f0       	breq	.+28     	; 0x55c <fdevopen+0x52>
 540:	13 87       	std	Z+11, r17	; 0x0b
 542:	02 87       	std	Z+10, r16	; 0x0a
 544:	81 e8       	ldi	r24, 0x81	; 129
 546:	83 83       	std	Z+3, r24	; 0x03
 548:	80 91 63 01 	lds	r24, 0x0163
 54c:	90 91 64 01 	lds	r25, 0x0164
 550:	89 2b       	or	r24, r25
 552:	21 f4       	brne	.+8      	; 0x55c <fdevopen+0x52>
 554:	f0 93 64 01 	sts	0x0164, r31
 558:	e0 93 63 01 	sts	0x0163, r30
 55c:	20 97       	sbiw	r28, 0x00	; 0
 55e:	c9 f0       	breq	.+50     	; 0x592 <fdevopen+0x88>
 560:	d1 87       	std	Z+9, r29	; 0x09
 562:	c0 87       	std	Z+8, r28	; 0x08
 564:	83 81       	ldd	r24, Z+3	; 0x03
 566:	82 60       	ori	r24, 0x02	; 2
 568:	83 83       	std	Z+3, r24	; 0x03
 56a:	80 91 65 01 	lds	r24, 0x0165
 56e:	90 91 66 01 	lds	r25, 0x0166
 572:	89 2b       	or	r24, r25
 574:	71 f4       	brne	.+28     	; 0x592 <fdevopen+0x88>
 576:	f0 93 66 01 	sts	0x0166, r31
 57a:	e0 93 65 01 	sts	0x0165, r30
 57e:	80 91 67 01 	lds	r24, 0x0167
 582:	90 91 68 01 	lds	r25, 0x0168
 586:	89 2b       	or	r24, r25
 588:	21 f4       	brne	.+8      	; 0x592 <fdevopen+0x88>
 58a:	f0 93 68 01 	sts	0x0168, r31
 58e:	e0 93 67 01 	sts	0x0167, r30
 592:	cf 01       	movw	r24, r30
 594:	df 91       	pop	r29
 596:	cf 91       	pop	r28
 598:	1f 91       	pop	r17
 59a:	0f 91       	pop	r16
 59c:	08 95       	ret

0000059e <printf>:
 59e:	cf 93       	push	r28
 5a0:	df 93       	push	r29
 5a2:	cd b7       	in	r28, 0x3d	; 61
 5a4:	de b7       	in	r29, 0x3e	; 62
 5a6:	ae 01       	movw	r20, r28
 5a8:	4b 5f       	subi	r20, 0xFB	; 251
 5aa:	5f 4f       	sbci	r21, 0xFF	; 255
 5ac:	fa 01       	movw	r30, r20
 5ae:	61 91       	ld	r22, Z+
 5b0:	71 91       	ld	r23, Z+
 5b2:	af 01       	movw	r20, r30
 5b4:	80 91 65 01 	lds	r24, 0x0165
 5b8:	90 91 66 01 	lds	r25, 0x0166
 5bc:	03 d0       	rcall	.+6      	; 0x5c4 <vfprintf>
 5be:	df 91       	pop	r29
 5c0:	cf 91       	pop	r28
 5c2:	08 95       	ret

000005c4 <vfprintf>:
 5c4:	2f 92       	push	r2
 5c6:	3f 92       	push	r3
 5c8:	4f 92       	push	r4
 5ca:	5f 92       	push	r5
 5cc:	6f 92       	push	r6
 5ce:	7f 92       	push	r7
 5d0:	8f 92       	push	r8
 5d2:	9f 92       	push	r9
 5d4:	af 92       	push	r10
 5d6:	bf 92       	push	r11
 5d8:	cf 92       	push	r12
 5da:	df 92       	push	r13
 5dc:	ef 92       	push	r14
 5de:	ff 92       	push	r15
 5e0:	0f 93       	push	r16
 5e2:	1f 93       	push	r17
 5e4:	cf 93       	push	r28
 5e6:	df 93       	push	r29
 5e8:	cd b7       	in	r28, 0x3d	; 61
 5ea:	de b7       	in	r29, 0x3e	; 62
 5ec:	2c 97       	sbiw	r28, 0x0c	; 12
 5ee:	0f b6       	in	r0, 0x3f	; 63
 5f0:	f8 94       	cli
 5f2:	de bf       	out	0x3e, r29	; 62
 5f4:	0f be       	out	0x3f, r0	; 63
 5f6:	cd bf       	out	0x3d, r28	; 61
 5f8:	7c 01       	movw	r14, r24
 5fa:	6b 01       	movw	r12, r22
 5fc:	8a 01       	movw	r16, r20
 5fe:	fc 01       	movw	r30, r24
 600:	17 82       	std	Z+7, r1	; 0x07
 602:	16 82       	std	Z+6, r1	; 0x06
 604:	83 81       	ldd	r24, Z+3	; 0x03
 606:	81 ff       	sbrs	r24, 1
 608:	b0 c1       	rjmp	.+864    	; 0x96a <vfprintf+0x3a6>
 60a:	ce 01       	movw	r24, r28
 60c:	01 96       	adiw	r24, 0x01	; 1
 60e:	4c 01       	movw	r8, r24
 610:	f7 01       	movw	r30, r14
 612:	93 81       	ldd	r25, Z+3	; 0x03
 614:	f6 01       	movw	r30, r12
 616:	93 fd       	sbrc	r25, 3
 618:	85 91       	lpm	r24, Z+
 61a:	93 ff       	sbrs	r25, 3
 61c:	81 91       	ld	r24, Z+
 61e:	6f 01       	movw	r12, r30
 620:	88 23       	and	r24, r24
 622:	09 f4       	brne	.+2      	; 0x626 <vfprintf+0x62>
 624:	9e c1       	rjmp	.+828    	; 0x962 <vfprintf+0x39e>
 626:	85 32       	cpi	r24, 0x25	; 37
 628:	39 f4       	brne	.+14     	; 0x638 <vfprintf+0x74>
 62a:	93 fd       	sbrc	r25, 3
 62c:	85 91       	lpm	r24, Z+
 62e:	93 ff       	sbrs	r25, 3
 630:	81 91       	ld	r24, Z+
 632:	6f 01       	movw	r12, r30
 634:	85 32       	cpi	r24, 0x25	; 37
 636:	21 f4       	brne	.+8      	; 0x640 <vfprintf+0x7c>
 638:	b7 01       	movw	r22, r14
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	15 d3       	rcall	.+1578   	; 0xc68 <fputc>
 63e:	e8 cf       	rjmp	.-48     	; 0x610 <vfprintf+0x4c>
 640:	51 2c       	mov	r5, r1
 642:	31 2c       	mov	r3, r1
 644:	20 e0       	ldi	r18, 0x00	; 0
 646:	20 32       	cpi	r18, 0x20	; 32
 648:	a0 f4       	brcc	.+40     	; 0x672 <vfprintf+0xae>
 64a:	8b 32       	cpi	r24, 0x2B	; 43
 64c:	69 f0       	breq	.+26     	; 0x668 <vfprintf+0xa4>
 64e:	30 f4       	brcc	.+12     	; 0x65c <vfprintf+0x98>
 650:	80 32       	cpi	r24, 0x20	; 32
 652:	59 f0       	breq	.+22     	; 0x66a <vfprintf+0xa6>
 654:	83 32       	cpi	r24, 0x23	; 35
 656:	69 f4       	brne	.+26     	; 0x672 <vfprintf+0xae>
 658:	20 61       	ori	r18, 0x10	; 16
 65a:	2c c0       	rjmp	.+88     	; 0x6b4 <vfprintf+0xf0>
 65c:	8d 32       	cpi	r24, 0x2D	; 45
 65e:	39 f0       	breq	.+14     	; 0x66e <vfprintf+0xaa>
 660:	80 33       	cpi	r24, 0x30	; 48
 662:	39 f4       	brne	.+14     	; 0x672 <vfprintf+0xae>
 664:	21 60       	ori	r18, 0x01	; 1
 666:	26 c0       	rjmp	.+76     	; 0x6b4 <vfprintf+0xf0>
 668:	22 60       	ori	r18, 0x02	; 2
 66a:	24 60       	ori	r18, 0x04	; 4
 66c:	23 c0       	rjmp	.+70     	; 0x6b4 <vfprintf+0xf0>
 66e:	28 60       	ori	r18, 0x08	; 8
 670:	21 c0       	rjmp	.+66     	; 0x6b4 <vfprintf+0xf0>
 672:	27 fd       	sbrc	r18, 7
 674:	27 c0       	rjmp	.+78     	; 0x6c4 <vfprintf+0x100>
 676:	30 ed       	ldi	r19, 0xD0	; 208
 678:	38 0f       	add	r19, r24
 67a:	3a 30       	cpi	r19, 0x0A	; 10
 67c:	78 f4       	brcc	.+30     	; 0x69c <vfprintf+0xd8>
 67e:	26 ff       	sbrs	r18, 6
 680:	06 c0       	rjmp	.+12     	; 0x68e <vfprintf+0xca>
 682:	fa e0       	ldi	r31, 0x0A	; 10
 684:	5f 9e       	mul	r5, r31
 686:	30 0d       	add	r19, r0
 688:	11 24       	eor	r1, r1
 68a:	53 2e       	mov	r5, r19
 68c:	13 c0       	rjmp	.+38     	; 0x6b4 <vfprintf+0xf0>
 68e:	8a e0       	ldi	r24, 0x0A	; 10
 690:	38 9e       	mul	r3, r24
 692:	30 0d       	add	r19, r0
 694:	11 24       	eor	r1, r1
 696:	33 2e       	mov	r3, r19
 698:	20 62       	ori	r18, 0x20	; 32
 69a:	0c c0       	rjmp	.+24     	; 0x6b4 <vfprintf+0xf0>
 69c:	8e 32       	cpi	r24, 0x2E	; 46
 69e:	21 f4       	brne	.+8      	; 0x6a8 <vfprintf+0xe4>
 6a0:	26 fd       	sbrc	r18, 6
 6a2:	5f c1       	rjmp	.+702    	; 0x962 <vfprintf+0x39e>
 6a4:	20 64       	ori	r18, 0x40	; 64
 6a6:	06 c0       	rjmp	.+12     	; 0x6b4 <vfprintf+0xf0>
 6a8:	8c 36       	cpi	r24, 0x6C	; 108
 6aa:	11 f4       	brne	.+4      	; 0x6b0 <vfprintf+0xec>
 6ac:	20 68       	ori	r18, 0x80	; 128
 6ae:	02 c0       	rjmp	.+4      	; 0x6b4 <vfprintf+0xf0>
 6b0:	88 36       	cpi	r24, 0x68	; 104
 6b2:	41 f4       	brne	.+16     	; 0x6c4 <vfprintf+0x100>
 6b4:	f6 01       	movw	r30, r12
 6b6:	93 fd       	sbrc	r25, 3
 6b8:	85 91       	lpm	r24, Z+
 6ba:	93 ff       	sbrs	r25, 3
 6bc:	81 91       	ld	r24, Z+
 6be:	6f 01       	movw	r12, r30
 6c0:	81 11       	cpse	r24, r1
 6c2:	c1 cf       	rjmp	.-126    	; 0x646 <vfprintf+0x82>
 6c4:	98 2f       	mov	r25, r24
 6c6:	9f 7d       	andi	r25, 0xDF	; 223
 6c8:	95 54       	subi	r25, 0x45	; 69
 6ca:	93 30       	cpi	r25, 0x03	; 3
 6cc:	28 f4       	brcc	.+10     	; 0x6d8 <vfprintf+0x114>
 6ce:	0c 5f       	subi	r16, 0xFC	; 252
 6d0:	1f 4f       	sbci	r17, 0xFF	; 255
 6d2:	ff e3       	ldi	r31, 0x3F	; 63
 6d4:	f9 83       	std	Y+1, r31	; 0x01
 6d6:	0d c0       	rjmp	.+26     	; 0x6f2 <vfprintf+0x12e>
 6d8:	83 36       	cpi	r24, 0x63	; 99
 6da:	31 f0       	breq	.+12     	; 0x6e8 <vfprintf+0x124>
 6dc:	83 37       	cpi	r24, 0x73	; 115
 6de:	71 f0       	breq	.+28     	; 0x6fc <vfprintf+0x138>
 6e0:	83 35       	cpi	r24, 0x53	; 83
 6e2:	09 f0       	breq	.+2      	; 0x6e6 <vfprintf+0x122>
 6e4:	57 c0       	rjmp	.+174    	; 0x794 <vfprintf+0x1d0>
 6e6:	21 c0       	rjmp	.+66     	; 0x72a <vfprintf+0x166>
 6e8:	f8 01       	movw	r30, r16
 6ea:	80 81       	ld	r24, Z
 6ec:	89 83       	std	Y+1, r24	; 0x01
 6ee:	0e 5f       	subi	r16, 0xFE	; 254
 6f0:	1f 4f       	sbci	r17, 0xFF	; 255
 6f2:	44 24       	eor	r4, r4
 6f4:	43 94       	inc	r4
 6f6:	51 2c       	mov	r5, r1
 6f8:	54 01       	movw	r10, r8
 6fa:	14 c0       	rjmp	.+40     	; 0x724 <vfprintf+0x160>
 6fc:	38 01       	movw	r6, r16
 6fe:	f2 e0       	ldi	r31, 0x02	; 2
 700:	6f 0e       	add	r6, r31
 702:	71 1c       	adc	r7, r1
 704:	f8 01       	movw	r30, r16
 706:	a0 80       	ld	r10, Z
 708:	b1 80       	ldd	r11, Z+1	; 0x01
 70a:	26 ff       	sbrs	r18, 6
 70c:	03 c0       	rjmp	.+6      	; 0x714 <vfprintf+0x150>
 70e:	65 2d       	mov	r22, r5
 710:	70 e0       	ldi	r23, 0x00	; 0
 712:	02 c0       	rjmp	.+4      	; 0x718 <vfprintf+0x154>
 714:	6f ef       	ldi	r22, 0xFF	; 255
 716:	7f ef       	ldi	r23, 0xFF	; 255
 718:	c5 01       	movw	r24, r10
 71a:	2c 87       	std	Y+12, r18	; 0x0c
 71c:	9a d2       	rcall	.+1332   	; 0xc52 <strnlen>
 71e:	2c 01       	movw	r4, r24
 720:	83 01       	movw	r16, r6
 722:	2c 85       	ldd	r18, Y+12	; 0x0c
 724:	2f 77       	andi	r18, 0x7F	; 127
 726:	22 2e       	mov	r2, r18
 728:	16 c0       	rjmp	.+44     	; 0x756 <vfprintf+0x192>
 72a:	38 01       	movw	r6, r16
 72c:	f2 e0       	ldi	r31, 0x02	; 2
 72e:	6f 0e       	add	r6, r31
 730:	71 1c       	adc	r7, r1
 732:	f8 01       	movw	r30, r16
 734:	a0 80       	ld	r10, Z
 736:	b1 80       	ldd	r11, Z+1	; 0x01
 738:	26 ff       	sbrs	r18, 6
 73a:	03 c0       	rjmp	.+6      	; 0x742 <vfprintf+0x17e>
 73c:	65 2d       	mov	r22, r5
 73e:	70 e0       	ldi	r23, 0x00	; 0
 740:	02 c0       	rjmp	.+4      	; 0x746 <vfprintf+0x182>
 742:	6f ef       	ldi	r22, 0xFF	; 255
 744:	7f ef       	ldi	r23, 0xFF	; 255
 746:	c5 01       	movw	r24, r10
 748:	2c 87       	std	Y+12, r18	; 0x0c
 74a:	71 d2       	rcall	.+1250   	; 0xc2e <strnlen_P>
 74c:	2c 01       	movw	r4, r24
 74e:	2c 85       	ldd	r18, Y+12	; 0x0c
 750:	20 68       	ori	r18, 0x80	; 128
 752:	22 2e       	mov	r2, r18
 754:	83 01       	movw	r16, r6
 756:	23 fc       	sbrc	r2, 3
 758:	19 c0       	rjmp	.+50     	; 0x78c <vfprintf+0x1c8>
 75a:	83 2d       	mov	r24, r3
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	48 16       	cp	r4, r24
 760:	59 06       	cpc	r5, r25
 762:	a0 f4       	brcc	.+40     	; 0x78c <vfprintf+0x1c8>
 764:	b7 01       	movw	r22, r14
 766:	80 e2       	ldi	r24, 0x20	; 32
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	7e d2       	rcall	.+1276   	; 0xc68 <fputc>
 76c:	3a 94       	dec	r3
 76e:	f5 cf       	rjmp	.-22     	; 0x75a <vfprintf+0x196>
 770:	f5 01       	movw	r30, r10
 772:	27 fc       	sbrc	r2, 7
 774:	85 91       	lpm	r24, Z+
 776:	27 fe       	sbrs	r2, 7
 778:	81 91       	ld	r24, Z+
 77a:	5f 01       	movw	r10, r30
 77c:	b7 01       	movw	r22, r14
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	73 d2       	rcall	.+1254   	; 0xc68 <fputc>
 782:	31 10       	cpse	r3, r1
 784:	3a 94       	dec	r3
 786:	f1 e0       	ldi	r31, 0x01	; 1
 788:	4f 1a       	sub	r4, r31
 78a:	51 08       	sbc	r5, r1
 78c:	41 14       	cp	r4, r1
 78e:	51 04       	cpc	r5, r1
 790:	79 f7       	brne	.-34     	; 0x770 <vfprintf+0x1ac>
 792:	de c0       	rjmp	.+444    	; 0x950 <vfprintf+0x38c>
 794:	84 36       	cpi	r24, 0x64	; 100
 796:	11 f0       	breq	.+4      	; 0x79c <vfprintf+0x1d8>
 798:	89 36       	cpi	r24, 0x69	; 105
 79a:	31 f5       	brne	.+76     	; 0x7e8 <vfprintf+0x224>
 79c:	f8 01       	movw	r30, r16
 79e:	27 ff       	sbrs	r18, 7
 7a0:	07 c0       	rjmp	.+14     	; 0x7b0 <vfprintf+0x1ec>
 7a2:	60 81       	ld	r22, Z
 7a4:	71 81       	ldd	r23, Z+1	; 0x01
 7a6:	82 81       	ldd	r24, Z+2	; 0x02
 7a8:	93 81       	ldd	r25, Z+3	; 0x03
 7aa:	0c 5f       	subi	r16, 0xFC	; 252
 7ac:	1f 4f       	sbci	r17, 0xFF	; 255
 7ae:	08 c0       	rjmp	.+16     	; 0x7c0 <vfprintf+0x1fc>
 7b0:	60 81       	ld	r22, Z
 7b2:	71 81       	ldd	r23, Z+1	; 0x01
 7b4:	07 2e       	mov	r0, r23
 7b6:	00 0c       	add	r0, r0
 7b8:	88 0b       	sbc	r24, r24
 7ba:	99 0b       	sbc	r25, r25
 7bc:	0e 5f       	subi	r16, 0xFE	; 254
 7be:	1f 4f       	sbci	r17, 0xFF	; 255
 7c0:	2f 76       	andi	r18, 0x6F	; 111
 7c2:	72 2e       	mov	r7, r18
 7c4:	97 ff       	sbrs	r25, 7
 7c6:	09 c0       	rjmp	.+18     	; 0x7da <vfprintf+0x216>
 7c8:	90 95       	com	r25
 7ca:	80 95       	com	r24
 7cc:	70 95       	com	r23
 7ce:	61 95       	neg	r22
 7d0:	7f 4f       	sbci	r23, 0xFF	; 255
 7d2:	8f 4f       	sbci	r24, 0xFF	; 255
 7d4:	9f 4f       	sbci	r25, 0xFF	; 255
 7d6:	20 68       	ori	r18, 0x80	; 128
 7d8:	72 2e       	mov	r7, r18
 7da:	2a e0       	ldi	r18, 0x0A	; 10
 7dc:	30 e0       	ldi	r19, 0x00	; 0
 7de:	a4 01       	movw	r20, r8
 7e0:	7b d2       	rcall	.+1270   	; 0xcd8 <__ultoa_invert>
 7e2:	a8 2e       	mov	r10, r24
 7e4:	a8 18       	sub	r10, r8
 7e6:	43 c0       	rjmp	.+134    	; 0x86e <vfprintf+0x2aa>
 7e8:	85 37       	cpi	r24, 0x75	; 117
 7ea:	29 f4       	brne	.+10     	; 0x7f6 <vfprintf+0x232>
 7ec:	2f 7e       	andi	r18, 0xEF	; 239
 7ee:	b2 2e       	mov	r11, r18
 7f0:	2a e0       	ldi	r18, 0x0A	; 10
 7f2:	30 e0       	ldi	r19, 0x00	; 0
 7f4:	25 c0       	rjmp	.+74     	; 0x840 <vfprintf+0x27c>
 7f6:	f2 2f       	mov	r31, r18
 7f8:	f9 7f       	andi	r31, 0xF9	; 249
 7fa:	bf 2e       	mov	r11, r31
 7fc:	8f 36       	cpi	r24, 0x6F	; 111
 7fe:	c1 f0       	breq	.+48     	; 0x830 <vfprintf+0x26c>
 800:	18 f4       	brcc	.+6      	; 0x808 <vfprintf+0x244>
 802:	88 35       	cpi	r24, 0x58	; 88
 804:	79 f0       	breq	.+30     	; 0x824 <vfprintf+0x260>
 806:	ad c0       	rjmp	.+346    	; 0x962 <vfprintf+0x39e>
 808:	80 37       	cpi	r24, 0x70	; 112
 80a:	19 f0       	breq	.+6      	; 0x812 <vfprintf+0x24e>
 80c:	88 37       	cpi	r24, 0x78	; 120
 80e:	21 f0       	breq	.+8      	; 0x818 <vfprintf+0x254>
 810:	a8 c0       	rjmp	.+336    	; 0x962 <vfprintf+0x39e>
 812:	2f 2f       	mov	r18, r31
 814:	20 61       	ori	r18, 0x10	; 16
 816:	b2 2e       	mov	r11, r18
 818:	b4 fe       	sbrs	r11, 4
 81a:	0d c0       	rjmp	.+26     	; 0x836 <vfprintf+0x272>
 81c:	8b 2d       	mov	r24, r11
 81e:	84 60       	ori	r24, 0x04	; 4
 820:	b8 2e       	mov	r11, r24
 822:	09 c0       	rjmp	.+18     	; 0x836 <vfprintf+0x272>
 824:	24 ff       	sbrs	r18, 4
 826:	0a c0       	rjmp	.+20     	; 0x83c <vfprintf+0x278>
 828:	9f 2f       	mov	r25, r31
 82a:	96 60       	ori	r25, 0x06	; 6
 82c:	b9 2e       	mov	r11, r25
 82e:	06 c0       	rjmp	.+12     	; 0x83c <vfprintf+0x278>
 830:	28 e0       	ldi	r18, 0x08	; 8
 832:	30 e0       	ldi	r19, 0x00	; 0
 834:	05 c0       	rjmp	.+10     	; 0x840 <vfprintf+0x27c>
 836:	20 e1       	ldi	r18, 0x10	; 16
 838:	30 e0       	ldi	r19, 0x00	; 0
 83a:	02 c0       	rjmp	.+4      	; 0x840 <vfprintf+0x27c>
 83c:	20 e1       	ldi	r18, 0x10	; 16
 83e:	32 e0       	ldi	r19, 0x02	; 2
 840:	f8 01       	movw	r30, r16
 842:	b7 fe       	sbrs	r11, 7
 844:	07 c0       	rjmp	.+14     	; 0x854 <vfprintf+0x290>
 846:	60 81       	ld	r22, Z
 848:	71 81       	ldd	r23, Z+1	; 0x01
 84a:	82 81       	ldd	r24, Z+2	; 0x02
 84c:	93 81       	ldd	r25, Z+3	; 0x03
 84e:	0c 5f       	subi	r16, 0xFC	; 252
 850:	1f 4f       	sbci	r17, 0xFF	; 255
 852:	06 c0       	rjmp	.+12     	; 0x860 <vfprintf+0x29c>
 854:	60 81       	ld	r22, Z
 856:	71 81       	ldd	r23, Z+1	; 0x01
 858:	80 e0       	ldi	r24, 0x00	; 0
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	0e 5f       	subi	r16, 0xFE	; 254
 85e:	1f 4f       	sbci	r17, 0xFF	; 255
 860:	a4 01       	movw	r20, r8
 862:	3a d2       	rcall	.+1140   	; 0xcd8 <__ultoa_invert>
 864:	a8 2e       	mov	r10, r24
 866:	a8 18       	sub	r10, r8
 868:	fb 2d       	mov	r31, r11
 86a:	ff 77       	andi	r31, 0x7F	; 127
 86c:	7f 2e       	mov	r7, r31
 86e:	76 fe       	sbrs	r7, 6
 870:	0b c0       	rjmp	.+22     	; 0x888 <vfprintf+0x2c4>
 872:	37 2d       	mov	r19, r7
 874:	3e 7f       	andi	r19, 0xFE	; 254
 876:	a5 14       	cp	r10, r5
 878:	50 f4       	brcc	.+20     	; 0x88e <vfprintf+0x2ca>
 87a:	74 fe       	sbrs	r7, 4
 87c:	0a c0       	rjmp	.+20     	; 0x892 <vfprintf+0x2ce>
 87e:	72 fc       	sbrc	r7, 2
 880:	08 c0       	rjmp	.+16     	; 0x892 <vfprintf+0x2ce>
 882:	37 2d       	mov	r19, r7
 884:	3e 7e       	andi	r19, 0xEE	; 238
 886:	05 c0       	rjmp	.+10     	; 0x892 <vfprintf+0x2ce>
 888:	ba 2c       	mov	r11, r10
 88a:	37 2d       	mov	r19, r7
 88c:	03 c0       	rjmp	.+6      	; 0x894 <vfprintf+0x2d0>
 88e:	ba 2c       	mov	r11, r10
 890:	01 c0       	rjmp	.+2      	; 0x894 <vfprintf+0x2d0>
 892:	b5 2c       	mov	r11, r5
 894:	34 ff       	sbrs	r19, 4
 896:	0d c0       	rjmp	.+26     	; 0x8b2 <vfprintf+0x2ee>
 898:	fe 01       	movw	r30, r28
 89a:	ea 0d       	add	r30, r10
 89c:	f1 1d       	adc	r31, r1
 89e:	80 81       	ld	r24, Z
 8a0:	80 33       	cpi	r24, 0x30	; 48
 8a2:	11 f4       	brne	.+4      	; 0x8a8 <vfprintf+0x2e4>
 8a4:	39 7e       	andi	r19, 0xE9	; 233
 8a6:	09 c0       	rjmp	.+18     	; 0x8ba <vfprintf+0x2f6>
 8a8:	32 ff       	sbrs	r19, 2
 8aa:	06 c0       	rjmp	.+12     	; 0x8b8 <vfprintf+0x2f4>
 8ac:	b3 94       	inc	r11
 8ae:	b3 94       	inc	r11
 8b0:	04 c0       	rjmp	.+8      	; 0x8ba <vfprintf+0x2f6>
 8b2:	83 2f       	mov	r24, r19
 8b4:	86 78       	andi	r24, 0x86	; 134
 8b6:	09 f0       	breq	.+2      	; 0x8ba <vfprintf+0x2f6>
 8b8:	b3 94       	inc	r11
 8ba:	33 fd       	sbrc	r19, 3
 8bc:	12 c0       	rjmp	.+36     	; 0x8e2 <vfprintf+0x31e>
 8be:	30 ff       	sbrs	r19, 0
 8c0:	06 c0       	rjmp	.+12     	; 0x8ce <vfprintf+0x30a>
 8c2:	5a 2c       	mov	r5, r10
 8c4:	b3 14       	cp	r11, r3
 8c6:	18 f4       	brcc	.+6      	; 0x8ce <vfprintf+0x30a>
 8c8:	53 0c       	add	r5, r3
 8ca:	5b 18       	sub	r5, r11
 8cc:	b3 2c       	mov	r11, r3
 8ce:	b3 14       	cp	r11, r3
 8d0:	60 f4       	brcc	.+24     	; 0x8ea <vfprintf+0x326>
 8d2:	b7 01       	movw	r22, r14
 8d4:	80 e2       	ldi	r24, 0x20	; 32
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	3c 87       	std	Y+12, r19	; 0x0c
 8da:	c6 d1       	rcall	.+908    	; 0xc68 <fputc>
 8dc:	b3 94       	inc	r11
 8de:	3c 85       	ldd	r19, Y+12	; 0x0c
 8e0:	f6 cf       	rjmp	.-20     	; 0x8ce <vfprintf+0x30a>
 8e2:	b3 14       	cp	r11, r3
 8e4:	10 f4       	brcc	.+4      	; 0x8ea <vfprintf+0x326>
 8e6:	3b 18       	sub	r3, r11
 8e8:	01 c0       	rjmp	.+2      	; 0x8ec <vfprintf+0x328>
 8ea:	31 2c       	mov	r3, r1
 8ec:	34 ff       	sbrs	r19, 4
 8ee:	11 c0       	rjmp	.+34     	; 0x912 <vfprintf+0x34e>
 8f0:	b7 01       	movw	r22, r14
 8f2:	80 e3       	ldi	r24, 0x30	; 48
 8f4:	90 e0       	ldi	r25, 0x00	; 0
 8f6:	3c 87       	std	Y+12, r19	; 0x0c
 8f8:	b7 d1       	rcall	.+878    	; 0xc68 <fputc>
 8fa:	3c 85       	ldd	r19, Y+12	; 0x0c
 8fc:	32 ff       	sbrs	r19, 2
 8fe:	16 c0       	rjmp	.+44     	; 0x92c <vfprintf+0x368>
 900:	31 fd       	sbrc	r19, 1
 902:	03 c0       	rjmp	.+6      	; 0x90a <vfprintf+0x346>
 904:	88 e7       	ldi	r24, 0x78	; 120
 906:	90 e0       	ldi	r25, 0x00	; 0
 908:	02 c0       	rjmp	.+4      	; 0x90e <vfprintf+0x34a>
 90a:	88 e5       	ldi	r24, 0x58	; 88
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	b7 01       	movw	r22, r14
 910:	0c c0       	rjmp	.+24     	; 0x92a <vfprintf+0x366>
 912:	83 2f       	mov	r24, r19
 914:	86 78       	andi	r24, 0x86	; 134
 916:	51 f0       	breq	.+20     	; 0x92c <vfprintf+0x368>
 918:	31 ff       	sbrs	r19, 1
 91a:	02 c0       	rjmp	.+4      	; 0x920 <vfprintf+0x35c>
 91c:	8b e2       	ldi	r24, 0x2B	; 43
 91e:	01 c0       	rjmp	.+2      	; 0x922 <vfprintf+0x35e>
 920:	80 e2       	ldi	r24, 0x20	; 32
 922:	37 fd       	sbrc	r19, 7
 924:	8d e2       	ldi	r24, 0x2D	; 45
 926:	b7 01       	movw	r22, r14
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	9e d1       	rcall	.+828    	; 0xc68 <fputc>
 92c:	a5 14       	cp	r10, r5
 92e:	30 f4       	brcc	.+12     	; 0x93c <vfprintf+0x378>
 930:	b7 01       	movw	r22, r14
 932:	80 e3       	ldi	r24, 0x30	; 48
 934:	90 e0       	ldi	r25, 0x00	; 0
 936:	98 d1       	rcall	.+816    	; 0xc68 <fputc>
 938:	5a 94       	dec	r5
 93a:	f8 cf       	rjmp	.-16     	; 0x92c <vfprintf+0x368>
 93c:	aa 94       	dec	r10
 93e:	f4 01       	movw	r30, r8
 940:	ea 0d       	add	r30, r10
 942:	f1 1d       	adc	r31, r1
 944:	80 81       	ld	r24, Z
 946:	b7 01       	movw	r22, r14
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	8e d1       	rcall	.+796    	; 0xc68 <fputc>
 94c:	a1 10       	cpse	r10, r1
 94e:	f6 cf       	rjmp	.-20     	; 0x93c <vfprintf+0x378>
 950:	33 20       	and	r3, r3
 952:	09 f4       	brne	.+2      	; 0x956 <vfprintf+0x392>
 954:	5d ce       	rjmp	.-838    	; 0x610 <vfprintf+0x4c>
 956:	b7 01       	movw	r22, r14
 958:	80 e2       	ldi	r24, 0x20	; 32
 95a:	90 e0       	ldi	r25, 0x00	; 0
 95c:	85 d1       	rcall	.+778    	; 0xc68 <fputc>
 95e:	3a 94       	dec	r3
 960:	f7 cf       	rjmp	.-18     	; 0x950 <vfprintf+0x38c>
 962:	f7 01       	movw	r30, r14
 964:	86 81       	ldd	r24, Z+6	; 0x06
 966:	97 81       	ldd	r25, Z+7	; 0x07
 968:	02 c0       	rjmp	.+4      	; 0x96e <vfprintf+0x3aa>
 96a:	8f ef       	ldi	r24, 0xFF	; 255
 96c:	9f ef       	ldi	r25, 0xFF	; 255
 96e:	2c 96       	adiw	r28, 0x0c	; 12
 970:	0f b6       	in	r0, 0x3f	; 63
 972:	f8 94       	cli
 974:	de bf       	out	0x3e, r29	; 62
 976:	0f be       	out	0x3f, r0	; 63
 978:	cd bf       	out	0x3d, r28	; 61
 97a:	df 91       	pop	r29
 97c:	cf 91       	pop	r28
 97e:	1f 91       	pop	r17
 980:	0f 91       	pop	r16
 982:	ff 90       	pop	r15
 984:	ef 90       	pop	r14
 986:	df 90       	pop	r13
 988:	cf 90       	pop	r12
 98a:	bf 90       	pop	r11
 98c:	af 90       	pop	r10
 98e:	9f 90       	pop	r9
 990:	8f 90       	pop	r8
 992:	7f 90       	pop	r7
 994:	6f 90       	pop	r6
 996:	5f 90       	pop	r5
 998:	4f 90       	pop	r4
 99a:	3f 90       	pop	r3
 99c:	2f 90       	pop	r2
 99e:	08 95       	ret

000009a0 <calloc>:
 9a0:	0f 93       	push	r16
 9a2:	1f 93       	push	r17
 9a4:	cf 93       	push	r28
 9a6:	df 93       	push	r29
 9a8:	86 9f       	mul	r24, r22
 9aa:	80 01       	movw	r16, r0
 9ac:	87 9f       	mul	r24, r23
 9ae:	10 0d       	add	r17, r0
 9b0:	96 9f       	mul	r25, r22
 9b2:	10 0d       	add	r17, r0
 9b4:	11 24       	eor	r1, r1
 9b6:	c8 01       	movw	r24, r16
 9b8:	0d d0       	rcall	.+26     	; 0x9d4 <malloc>
 9ba:	ec 01       	movw	r28, r24
 9bc:	00 97       	sbiw	r24, 0x00	; 0
 9be:	21 f0       	breq	.+8      	; 0x9c8 <calloc+0x28>
 9c0:	a8 01       	movw	r20, r16
 9c2:	60 e0       	ldi	r22, 0x00	; 0
 9c4:	70 e0       	ldi	r23, 0x00	; 0
 9c6:	3e d1       	rcall	.+636    	; 0xc44 <memset>
 9c8:	ce 01       	movw	r24, r28
 9ca:	df 91       	pop	r29
 9cc:	cf 91       	pop	r28
 9ce:	1f 91       	pop	r17
 9d0:	0f 91       	pop	r16
 9d2:	08 95       	ret

000009d4 <malloc>:
 9d4:	cf 93       	push	r28
 9d6:	df 93       	push	r29
 9d8:	82 30       	cpi	r24, 0x02	; 2
 9da:	91 05       	cpc	r25, r1
 9dc:	10 f4       	brcc	.+4      	; 0x9e2 <malloc+0xe>
 9de:	82 e0       	ldi	r24, 0x02	; 2
 9e0:	90 e0       	ldi	r25, 0x00	; 0
 9e2:	e0 91 6b 01 	lds	r30, 0x016B
 9e6:	f0 91 6c 01 	lds	r31, 0x016C
 9ea:	20 e0       	ldi	r18, 0x00	; 0
 9ec:	30 e0       	ldi	r19, 0x00	; 0
 9ee:	c0 e0       	ldi	r28, 0x00	; 0
 9f0:	d0 e0       	ldi	r29, 0x00	; 0
 9f2:	30 97       	sbiw	r30, 0x00	; 0
 9f4:	11 f1       	breq	.+68     	; 0xa3a <malloc+0x66>
 9f6:	40 81       	ld	r20, Z
 9f8:	51 81       	ldd	r21, Z+1	; 0x01
 9fa:	48 17       	cp	r20, r24
 9fc:	59 07       	cpc	r21, r25
 9fe:	c0 f0       	brcs	.+48     	; 0xa30 <malloc+0x5c>
 a00:	48 17       	cp	r20, r24
 a02:	59 07       	cpc	r21, r25
 a04:	61 f4       	brne	.+24     	; 0xa1e <malloc+0x4a>
 a06:	82 81       	ldd	r24, Z+2	; 0x02
 a08:	93 81       	ldd	r25, Z+3	; 0x03
 a0a:	20 97       	sbiw	r28, 0x00	; 0
 a0c:	19 f0       	breq	.+6      	; 0xa14 <malloc+0x40>
 a0e:	9b 83       	std	Y+3, r25	; 0x03
 a10:	8a 83       	std	Y+2, r24	; 0x02
 a12:	2b c0       	rjmp	.+86     	; 0xa6a <malloc+0x96>
 a14:	90 93 6c 01 	sts	0x016C, r25
 a18:	80 93 6b 01 	sts	0x016B, r24
 a1c:	26 c0       	rjmp	.+76     	; 0xa6a <malloc+0x96>
 a1e:	21 15       	cp	r18, r1
 a20:	31 05       	cpc	r19, r1
 a22:	19 f0       	breq	.+6      	; 0xa2a <malloc+0x56>
 a24:	42 17       	cp	r20, r18
 a26:	53 07       	cpc	r21, r19
 a28:	18 f4       	brcc	.+6      	; 0xa30 <malloc+0x5c>
 a2a:	9a 01       	movw	r18, r20
 a2c:	be 01       	movw	r22, r28
 a2e:	df 01       	movw	r26, r30
 a30:	ef 01       	movw	r28, r30
 a32:	02 80       	ldd	r0, Z+2	; 0x02
 a34:	f3 81       	ldd	r31, Z+3	; 0x03
 a36:	e0 2d       	mov	r30, r0
 a38:	dc cf       	rjmp	.-72     	; 0x9f2 <malloc+0x1e>
 a3a:	21 15       	cp	r18, r1
 a3c:	31 05       	cpc	r19, r1
 a3e:	09 f1       	breq	.+66     	; 0xa82 <malloc+0xae>
 a40:	28 1b       	sub	r18, r24
 a42:	39 0b       	sbc	r19, r25
 a44:	24 30       	cpi	r18, 0x04	; 4
 a46:	31 05       	cpc	r19, r1
 a48:	90 f4       	brcc	.+36     	; 0xa6e <malloc+0x9a>
 a4a:	12 96       	adiw	r26, 0x02	; 2
 a4c:	8d 91       	ld	r24, X+
 a4e:	9c 91       	ld	r25, X
 a50:	13 97       	sbiw	r26, 0x03	; 3
 a52:	61 15       	cp	r22, r1
 a54:	71 05       	cpc	r23, r1
 a56:	21 f0       	breq	.+8      	; 0xa60 <malloc+0x8c>
 a58:	fb 01       	movw	r30, r22
 a5a:	93 83       	std	Z+3, r25	; 0x03
 a5c:	82 83       	std	Z+2, r24	; 0x02
 a5e:	04 c0       	rjmp	.+8      	; 0xa68 <malloc+0x94>
 a60:	90 93 6c 01 	sts	0x016C, r25
 a64:	80 93 6b 01 	sts	0x016B, r24
 a68:	fd 01       	movw	r30, r26
 a6a:	32 96       	adiw	r30, 0x02	; 2
 a6c:	44 c0       	rjmp	.+136    	; 0xaf6 <malloc+0x122>
 a6e:	fd 01       	movw	r30, r26
 a70:	e2 0f       	add	r30, r18
 a72:	f3 1f       	adc	r31, r19
 a74:	81 93       	st	Z+, r24
 a76:	91 93       	st	Z+, r25
 a78:	22 50       	subi	r18, 0x02	; 2
 a7a:	31 09       	sbc	r19, r1
 a7c:	2d 93       	st	X+, r18
 a7e:	3c 93       	st	X, r19
 a80:	3a c0       	rjmp	.+116    	; 0xaf6 <malloc+0x122>
 a82:	20 91 69 01 	lds	r18, 0x0169
 a86:	30 91 6a 01 	lds	r19, 0x016A
 a8a:	23 2b       	or	r18, r19
 a8c:	41 f4       	brne	.+16     	; 0xa9e <malloc+0xca>
 a8e:	20 91 02 01 	lds	r18, 0x0102
 a92:	30 91 03 01 	lds	r19, 0x0103
 a96:	30 93 6a 01 	sts	0x016A, r19
 a9a:	20 93 69 01 	sts	0x0169, r18
 a9e:	20 91 00 01 	lds	r18, 0x0100
 aa2:	30 91 01 01 	lds	r19, 0x0101
 aa6:	21 15       	cp	r18, r1
 aa8:	31 05       	cpc	r19, r1
 aaa:	41 f4       	brne	.+16     	; 0xabc <malloc+0xe8>
 aac:	2d b7       	in	r18, 0x3d	; 61
 aae:	3e b7       	in	r19, 0x3e	; 62
 ab0:	40 91 04 01 	lds	r20, 0x0104
 ab4:	50 91 05 01 	lds	r21, 0x0105
 ab8:	24 1b       	sub	r18, r20
 aba:	35 0b       	sbc	r19, r21
 abc:	e0 91 69 01 	lds	r30, 0x0169
 ac0:	f0 91 6a 01 	lds	r31, 0x016A
 ac4:	e2 17       	cp	r30, r18
 ac6:	f3 07       	cpc	r31, r19
 ac8:	a0 f4       	brcc	.+40     	; 0xaf2 <malloc+0x11e>
 aca:	2e 1b       	sub	r18, r30
 acc:	3f 0b       	sbc	r19, r31
 ace:	28 17       	cp	r18, r24
 ad0:	39 07       	cpc	r19, r25
 ad2:	78 f0       	brcs	.+30     	; 0xaf2 <malloc+0x11e>
 ad4:	ac 01       	movw	r20, r24
 ad6:	4e 5f       	subi	r20, 0xFE	; 254
 ad8:	5f 4f       	sbci	r21, 0xFF	; 255
 ada:	24 17       	cp	r18, r20
 adc:	35 07       	cpc	r19, r21
 ade:	48 f0       	brcs	.+18     	; 0xaf2 <malloc+0x11e>
 ae0:	4e 0f       	add	r20, r30
 ae2:	5f 1f       	adc	r21, r31
 ae4:	50 93 6a 01 	sts	0x016A, r21
 ae8:	40 93 69 01 	sts	0x0169, r20
 aec:	81 93       	st	Z+, r24
 aee:	91 93       	st	Z+, r25
 af0:	02 c0       	rjmp	.+4      	; 0xaf6 <malloc+0x122>
 af2:	e0 e0       	ldi	r30, 0x00	; 0
 af4:	f0 e0       	ldi	r31, 0x00	; 0
 af6:	cf 01       	movw	r24, r30
 af8:	df 91       	pop	r29
 afa:	cf 91       	pop	r28
 afc:	08 95       	ret

00000afe <free>:
 afe:	0f 93       	push	r16
 b00:	1f 93       	push	r17
 b02:	cf 93       	push	r28
 b04:	df 93       	push	r29
 b06:	00 97       	sbiw	r24, 0x00	; 0
 b08:	09 f4       	brne	.+2      	; 0xb0c <free+0xe>
 b0a:	8c c0       	rjmp	.+280    	; 0xc24 <free+0x126>
 b0c:	fc 01       	movw	r30, r24
 b0e:	32 97       	sbiw	r30, 0x02	; 2
 b10:	13 82       	std	Z+3, r1	; 0x03
 b12:	12 82       	std	Z+2, r1	; 0x02
 b14:	00 91 6b 01 	lds	r16, 0x016B
 b18:	10 91 6c 01 	lds	r17, 0x016C
 b1c:	01 15       	cp	r16, r1
 b1e:	11 05       	cpc	r17, r1
 b20:	81 f4       	brne	.+32     	; 0xb42 <free+0x44>
 b22:	20 81       	ld	r18, Z
 b24:	31 81       	ldd	r19, Z+1	; 0x01
 b26:	82 0f       	add	r24, r18
 b28:	93 1f       	adc	r25, r19
 b2a:	20 91 69 01 	lds	r18, 0x0169
 b2e:	30 91 6a 01 	lds	r19, 0x016A
 b32:	28 17       	cp	r18, r24
 b34:	39 07       	cpc	r19, r25
 b36:	79 f5       	brne	.+94     	; 0xb96 <free+0x98>
 b38:	f0 93 6a 01 	sts	0x016A, r31
 b3c:	e0 93 69 01 	sts	0x0169, r30
 b40:	71 c0       	rjmp	.+226    	; 0xc24 <free+0x126>
 b42:	d8 01       	movw	r26, r16
 b44:	40 e0       	ldi	r20, 0x00	; 0
 b46:	50 e0       	ldi	r21, 0x00	; 0
 b48:	ae 17       	cp	r26, r30
 b4a:	bf 07       	cpc	r27, r31
 b4c:	50 f4       	brcc	.+20     	; 0xb62 <free+0x64>
 b4e:	12 96       	adiw	r26, 0x02	; 2
 b50:	2d 91       	ld	r18, X+
 b52:	3c 91       	ld	r19, X
 b54:	13 97       	sbiw	r26, 0x03	; 3
 b56:	ad 01       	movw	r20, r26
 b58:	21 15       	cp	r18, r1
 b5a:	31 05       	cpc	r19, r1
 b5c:	09 f1       	breq	.+66     	; 0xba0 <free+0xa2>
 b5e:	d9 01       	movw	r26, r18
 b60:	f3 cf       	rjmp	.-26     	; 0xb48 <free+0x4a>
 b62:	9d 01       	movw	r18, r26
 b64:	da 01       	movw	r26, r20
 b66:	33 83       	std	Z+3, r19	; 0x03
 b68:	22 83       	std	Z+2, r18	; 0x02
 b6a:	60 81       	ld	r22, Z
 b6c:	71 81       	ldd	r23, Z+1	; 0x01
 b6e:	86 0f       	add	r24, r22
 b70:	97 1f       	adc	r25, r23
 b72:	82 17       	cp	r24, r18
 b74:	93 07       	cpc	r25, r19
 b76:	69 f4       	brne	.+26     	; 0xb92 <free+0x94>
 b78:	ec 01       	movw	r28, r24
 b7a:	28 81       	ld	r18, Y
 b7c:	39 81       	ldd	r19, Y+1	; 0x01
 b7e:	26 0f       	add	r18, r22
 b80:	37 1f       	adc	r19, r23
 b82:	2e 5f       	subi	r18, 0xFE	; 254
 b84:	3f 4f       	sbci	r19, 0xFF	; 255
 b86:	31 83       	std	Z+1, r19	; 0x01
 b88:	20 83       	st	Z, r18
 b8a:	8a 81       	ldd	r24, Y+2	; 0x02
 b8c:	9b 81       	ldd	r25, Y+3	; 0x03
 b8e:	93 83       	std	Z+3, r25	; 0x03
 b90:	82 83       	std	Z+2, r24	; 0x02
 b92:	45 2b       	or	r20, r21
 b94:	29 f4       	brne	.+10     	; 0xba0 <free+0xa2>
 b96:	f0 93 6c 01 	sts	0x016C, r31
 b9a:	e0 93 6b 01 	sts	0x016B, r30
 b9e:	42 c0       	rjmp	.+132    	; 0xc24 <free+0x126>
 ba0:	13 96       	adiw	r26, 0x03	; 3
 ba2:	fc 93       	st	X, r31
 ba4:	ee 93       	st	-X, r30
 ba6:	12 97       	sbiw	r26, 0x02	; 2
 ba8:	ed 01       	movw	r28, r26
 baa:	49 91       	ld	r20, Y+
 bac:	59 91       	ld	r21, Y+
 bae:	9e 01       	movw	r18, r28
 bb0:	24 0f       	add	r18, r20
 bb2:	35 1f       	adc	r19, r21
 bb4:	e2 17       	cp	r30, r18
 bb6:	f3 07       	cpc	r31, r19
 bb8:	71 f4       	brne	.+28     	; 0xbd6 <free+0xd8>
 bba:	80 81       	ld	r24, Z
 bbc:	91 81       	ldd	r25, Z+1	; 0x01
 bbe:	84 0f       	add	r24, r20
 bc0:	95 1f       	adc	r25, r21
 bc2:	02 96       	adiw	r24, 0x02	; 2
 bc4:	11 96       	adiw	r26, 0x01	; 1
 bc6:	9c 93       	st	X, r25
 bc8:	8e 93       	st	-X, r24
 bca:	82 81       	ldd	r24, Z+2	; 0x02
 bcc:	93 81       	ldd	r25, Z+3	; 0x03
 bce:	13 96       	adiw	r26, 0x03	; 3
 bd0:	9c 93       	st	X, r25
 bd2:	8e 93       	st	-X, r24
 bd4:	12 97       	sbiw	r26, 0x02	; 2
 bd6:	e0 e0       	ldi	r30, 0x00	; 0
 bd8:	f0 e0       	ldi	r31, 0x00	; 0
 bda:	d8 01       	movw	r26, r16
 bdc:	12 96       	adiw	r26, 0x02	; 2
 bde:	8d 91       	ld	r24, X+
 be0:	9c 91       	ld	r25, X
 be2:	13 97       	sbiw	r26, 0x03	; 3
 be4:	00 97       	sbiw	r24, 0x00	; 0
 be6:	19 f0       	breq	.+6      	; 0xbee <free+0xf0>
 be8:	f8 01       	movw	r30, r16
 bea:	8c 01       	movw	r16, r24
 bec:	f6 cf       	rjmp	.-20     	; 0xbda <free+0xdc>
 bee:	8d 91       	ld	r24, X+
 bf0:	9c 91       	ld	r25, X
 bf2:	98 01       	movw	r18, r16
 bf4:	2e 5f       	subi	r18, 0xFE	; 254
 bf6:	3f 4f       	sbci	r19, 0xFF	; 255
 bf8:	82 0f       	add	r24, r18
 bfa:	93 1f       	adc	r25, r19
 bfc:	20 91 69 01 	lds	r18, 0x0169
 c00:	30 91 6a 01 	lds	r19, 0x016A
 c04:	28 17       	cp	r18, r24
 c06:	39 07       	cpc	r19, r25
 c08:	69 f4       	brne	.+26     	; 0xc24 <free+0x126>
 c0a:	30 97       	sbiw	r30, 0x00	; 0
 c0c:	29 f4       	brne	.+10     	; 0xc18 <free+0x11a>
 c0e:	10 92 6c 01 	sts	0x016C, r1
 c12:	10 92 6b 01 	sts	0x016B, r1
 c16:	02 c0       	rjmp	.+4      	; 0xc1c <free+0x11e>
 c18:	13 82       	std	Z+3, r1	; 0x03
 c1a:	12 82       	std	Z+2, r1	; 0x02
 c1c:	10 93 6a 01 	sts	0x016A, r17
 c20:	00 93 69 01 	sts	0x0169, r16
 c24:	df 91       	pop	r29
 c26:	cf 91       	pop	r28
 c28:	1f 91       	pop	r17
 c2a:	0f 91       	pop	r16
 c2c:	08 95       	ret

00000c2e <strnlen_P>:
 c2e:	fc 01       	movw	r30, r24
 c30:	05 90       	lpm	r0, Z+
 c32:	61 50       	subi	r22, 0x01	; 1
 c34:	70 40       	sbci	r23, 0x00	; 0
 c36:	01 10       	cpse	r0, r1
 c38:	d8 f7       	brcc	.-10     	; 0xc30 <strnlen_P+0x2>
 c3a:	80 95       	com	r24
 c3c:	90 95       	com	r25
 c3e:	8e 0f       	add	r24, r30
 c40:	9f 1f       	adc	r25, r31
 c42:	08 95       	ret

00000c44 <memset>:
 c44:	dc 01       	movw	r26, r24
 c46:	01 c0       	rjmp	.+2      	; 0xc4a <memset+0x6>
 c48:	6d 93       	st	X+, r22
 c4a:	41 50       	subi	r20, 0x01	; 1
 c4c:	50 40       	sbci	r21, 0x00	; 0
 c4e:	e0 f7       	brcc	.-8      	; 0xc48 <memset+0x4>
 c50:	08 95       	ret

00000c52 <strnlen>:
 c52:	fc 01       	movw	r30, r24
 c54:	61 50       	subi	r22, 0x01	; 1
 c56:	70 40       	sbci	r23, 0x00	; 0
 c58:	01 90       	ld	r0, Z+
 c5a:	01 10       	cpse	r0, r1
 c5c:	d8 f7       	brcc	.-10     	; 0xc54 <strnlen+0x2>
 c5e:	80 95       	com	r24
 c60:	90 95       	com	r25
 c62:	8e 0f       	add	r24, r30
 c64:	9f 1f       	adc	r25, r31
 c66:	08 95       	ret

00000c68 <fputc>:
 c68:	0f 93       	push	r16
 c6a:	1f 93       	push	r17
 c6c:	cf 93       	push	r28
 c6e:	df 93       	push	r29
 c70:	fb 01       	movw	r30, r22
 c72:	23 81       	ldd	r18, Z+3	; 0x03
 c74:	21 fd       	sbrc	r18, 1
 c76:	03 c0       	rjmp	.+6      	; 0xc7e <fputc+0x16>
 c78:	8f ef       	ldi	r24, 0xFF	; 255
 c7a:	9f ef       	ldi	r25, 0xFF	; 255
 c7c:	28 c0       	rjmp	.+80     	; 0xcce <fputc+0x66>
 c7e:	22 ff       	sbrs	r18, 2
 c80:	16 c0       	rjmp	.+44     	; 0xcae <fputc+0x46>
 c82:	46 81       	ldd	r20, Z+6	; 0x06
 c84:	57 81       	ldd	r21, Z+7	; 0x07
 c86:	24 81       	ldd	r18, Z+4	; 0x04
 c88:	35 81       	ldd	r19, Z+5	; 0x05
 c8a:	42 17       	cp	r20, r18
 c8c:	53 07       	cpc	r21, r19
 c8e:	44 f4       	brge	.+16     	; 0xca0 <fputc+0x38>
 c90:	a0 81       	ld	r26, Z
 c92:	b1 81       	ldd	r27, Z+1	; 0x01
 c94:	9d 01       	movw	r18, r26
 c96:	2f 5f       	subi	r18, 0xFF	; 255
 c98:	3f 4f       	sbci	r19, 0xFF	; 255
 c9a:	31 83       	std	Z+1, r19	; 0x01
 c9c:	20 83       	st	Z, r18
 c9e:	8c 93       	st	X, r24
 ca0:	26 81       	ldd	r18, Z+6	; 0x06
 ca2:	37 81       	ldd	r19, Z+7	; 0x07
 ca4:	2f 5f       	subi	r18, 0xFF	; 255
 ca6:	3f 4f       	sbci	r19, 0xFF	; 255
 ca8:	37 83       	std	Z+7, r19	; 0x07
 caa:	26 83       	std	Z+6, r18	; 0x06
 cac:	10 c0       	rjmp	.+32     	; 0xcce <fputc+0x66>
 cae:	eb 01       	movw	r28, r22
 cb0:	09 2f       	mov	r16, r25
 cb2:	18 2f       	mov	r17, r24
 cb4:	00 84       	ldd	r0, Z+8	; 0x08
 cb6:	f1 85       	ldd	r31, Z+9	; 0x09
 cb8:	e0 2d       	mov	r30, r0
 cba:	09 95       	icall
 cbc:	89 2b       	or	r24, r25
 cbe:	e1 f6       	brne	.-72     	; 0xc78 <fputc+0x10>
 cc0:	8e 81       	ldd	r24, Y+6	; 0x06
 cc2:	9f 81       	ldd	r25, Y+7	; 0x07
 cc4:	01 96       	adiw	r24, 0x01	; 1
 cc6:	9f 83       	std	Y+7, r25	; 0x07
 cc8:	8e 83       	std	Y+6, r24	; 0x06
 cca:	81 2f       	mov	r24, r17
 ccc:	90 2f       	mov	r25, r16
 cce:	df 91       	pop	r29
 cd0:	cf 91       	pop	r28
 cd2:	1f 91       	pop	r17
 cd4:	0f 91       	pop	r16
 cd6:	08 95       	ret

00000cd8 <__ultoa_invert>:
 cd8:	fa 01       	movw	r30, r20
 cda:	aa 27       	eor	r26, r26
 cdc:	28 30       	cpi	r18, 0x08	; 8
 cde:	51 f1       	breq	.+84     	; 0xd34 <__ultoa_invert+0x5c>
 ce0:	20 31       	cpi	r18, 0x10	; 16
 ce2:	81 f1       	breq	.+96     	; 0xd44 <__ultoa_invert+0x6c>
 ce4:	e8 94       	clt
 ce6:	6f 93       	push	r22
 ce8:	6e 7f       	andi	r22, 0xFE	; 254
 cea:	6e 5f       	subi	r22, 0xFE	; 254
 cec:	7f 4f       	sbci	r23, 0xFF	; 255
 cee:	8f 4f       	sbci	r24, 0xFF	; 255
 cf0:	9f 4f       	sbci	r25, 0xFF	; 255
 cf2:	af 4f       	sbci	r26, 0xFF	; 255
 cf4:	b1 e0       	ldi	r27, 0x01	; 1
 cf6:	3e d0       	rcall	.+124    	; 0xd74 <__ultoa_invert+0x9c>
 cf8:	b4 e0       	ldi	r27, 0x04	; 4
 cfa:	3c d0       	rcall	.+120    	; 0xd74 <__ultoa_invert+0x9c>
 cfc:	67 0f       	add	r22, r23
 cfe:	78 1f       	adc	r23, r24
 d00:	89 1f       	adc	r24, r25
 d02:	9a 1f       	adc	r25, r26
 d04:	a1 1d       	adc	r26, r1
 d06:	68 0f       	add	r22, r24
 d08:	79 1f       	adc	r23, r25
 d0a:	8a 1f       	adc	r24, r26
 d0c:	91 1d       	adc	r25, r1
 d0e:	a1 1d       	adc	r26, r1
 d10:	6a 0f       	add	r22, r26
 d12:	71 1d       	adc	r23, r1
 d14:	81 1d       	adc	r24, r1
 d16:	91 1d       	adc	r25, r1
 d18:	a1 1d       	adc	r26, r1
 d1a:	20 d0       	rcall	.+64     	; 0xd5c <__ultoa_invert+0x84>
 d1c:	09 f4       	brne	.+2      	; 0xd20 <__ultoa_invert+0x48>
 d1e:	68 94       	set
 d20:	3f 91       	pop	r19
 d22:	2a e0       	ldi	r18, 0x0A	; 10
 d24:	26 9f       	mul	r18, r22
 d26:	11 24       	eor	r1, r1
 d28:	30 19       	sub	r19, r0
 d2a:	30 5d       	subi	r19, 0xD0	; 208
 d2c:	31 93       	st	Z+, r19
 d2e:	de f6       	brtc	.-74     	; 0xce6 <__ultoa_invert+0xe>
 d30:	cf 01       	movw	r24, r30
 d32:	08 95       	ret
 d34:	46 2f       	mov	r20, r22
 d36:	47 70       	andi	r20, 0x07	; 7
 d38:	40 5d       	subi	r20, 0xD0	; 208
 d3a:	41 93       	st	Z+, r20
 d3c:	b3 e0       	ldi	r27, 0x03	; 3
 d3e:	0f d0       	rcall	.+30     	; 0xd5e <__ultoa_invert+0x86>
 d40:	c9 f7       	brne	.-14     	; 0xd34 <__ultoa_invert+0x5c>
 d42:	f6 cf       	rjmp	.-20     	; 0xd30 <__ultoa_invert+0x58>
 d44:	46 2f       	mov	r20, r22
 d46:	4f 70       	andi	r20, 0x0F	; 15
 d48:	40 5d       	subi	r20, 0xD0	; 208
 d4a:	4a 33       	cpi	r20, 0x3A	; 58
 d4c:	18 f0       	brcs	.+6      	; 0xd54 <__ultoa_invert+0x7c>
 d4e:	49 5d       	subi	r20, 0xD9	; 217
 d50:	31 fd       	sbrc	r19, 1
 d52:	40 52       	subi	r20, 0x20	; 32
 d54:	41 93       	st	Z+, r20
 d56:	02 d0       	rcall	.+4      	; 0xd5c <__ultoa_invert+0x84>
 d58:	a9 f7       	brne	.-22     	; 0xd44 <__ultoa_invert+0x6c>
 d5a:	ea cf       	rjmp	.-44     	; 0xd30 <__ultoa_invert+0x58>
 d5c:	b4 e0       	ldi	r27, 0x04	; 4
 d5e:	a6 95       	lsr	r26
 d60:	97 95       	ror	r25
 d62:	87 95       	ror	r24
 d64:	77 95       	ror	r23
 d66:	67 95       	ror	r22
 d68:	ba 95       	dec	r27
 d6a:	c9 f7       	brne	.-14     	; 0xd5e <__ultoa_invert+0x86>
 d6c:	00 97       	sbiw	r24, 0x00	; 0
 d6e:	61 05       	cpc	r22, r1
 d70:	71 05       	cpc	r23, r1
 d72:	08 95       	ret
 d74:	9b 01       	movw	r18, r22
 d76:	ac 01       	movw	r20, r24
 d78:	0a 2e       	mov	r0, r26
 d7a:	06 94       	lsr	r0
 d7c:	57 95       	ror	r21
 d7e:	47 95       	ror	r20
 d80:	37 95       	ror	r19
 d82:	27 95       	ror	r18
 d84:	ba 95       	dec	r27
 d86:	c9 f7       	brne	.-14     	; 0xd7a <__ultoa_invert+0xa2>
 d88:	62 0f       	add	r22, r18
 d8a:	73 1f       	adc	r23, r19
 d8c:	84 1f       	adc	r24, r20
 d8e:	95 1f       	adc	r25, r21
 d90:	a0 1d       	adc	r26, r0
 d92:	08 95       	ret

00000d94 <_exit>:
 d94:	f8 94       	cli

00000d96 <__stop_program>:
 d96:	ff cf       	rjmp	.-2      	; 0xd96 <__stop_program>
