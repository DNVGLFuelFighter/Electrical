
Steering_wheel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  00000dae  00000e42  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000033  00800130  00800130  00000e72  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e72  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ed0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000f10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b76  00000000  00000000  00001010  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000062d  00000000  00000000  00001b86  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000930  00000000  00000000  000021b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00002ae4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000357  00000000  00000000  00002ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000060a  00000000  00000000  0000303b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003645  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
   2:	00 00       	nop
   4:	64 c0       	rjmp	.+200    	; 0xce <__bad_interrupt>
   6:	00 00       	nop
   8:	62 c0       	rjmp	.+196    	; 0xce <__bad_interrupt>
   a:	00 00       	nop
   c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
   e:	00 00       	nop
  10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
  12:	00 00       	nop
  14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
  16:	00 00       	nop
  18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
  1a:	00 00       	nop
  1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
  1e:	00 00       	nop
  20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
  22:	00 00       	nop
  24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
  26:	00 00       	nop
  28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
  2a:	00 00       	nop
  2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
  2e:	00 00       	nop
  30:	4e c0       	rjmp	.+156    	; 0xce <__bad_interrupt>
  32:	00 00       	nop
  34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
  36:	00 00       	nop
  38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
  3a:	00 00       	nop
  3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
  3e:	00 00       	nop
  40:	46 c0       	rjmp	.+140    	; 0xce <__bad_interrupt>
  42:	00 00       	nop
  44:	44 c0       	rjmp	.+136    	; 0xce <__bad_interrupt>
  46:	00 00       	nop
  48:	81 c0       	rjmp	.+258    	; 0x14c <__vector_18>
  4a:	00 00       	nop
  4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
  4e:	00 00       	nop
  50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
  52:	00 00       	nop
  54:	3c c0       	rjmp	.+120    	; 0xce <__bad_interrupt>
  56:	00 00       	nop
  58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
  5a:	00 00       	nop
  5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
  5e:	00 00       	nop
  60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
  62:	00 00       	nop
  64:	34 c0       	rjmp	.+104    	; 0xce <__bad_interrupt>
  66:	00 00       	nop
  68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
  6a:	00 00       	nop
  6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
  6e:	00 00       	nop
  70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
  72:	00 00       	nop
  74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
  76:	00 00       	nop
  78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
  7a:	00 00       	nop
  7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
  7e:	00 00       	nop
  80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
  82:	00 00       	nop
  84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
  86:	00 00       	nop
  88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
  8a:	00 00       	nop
  8c:	20 c0       	rjmp	.+64     	; 0xce <__bad_interrupt>
  8e:	00 00       	nop
  90:	1e c0       	rjmp	.+60     	; 0xce <__bad_interrupt>
	...

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	11 e0       	ldi	r17, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	ee ea       	ldi	r30, 0xAE	; 174
  a8:	fd e0       	ldi	r31, 0x0D	; 13
  aa:	00 e0       	ldi	r16, 0x00	; 0
  ac:	0b bf       	out	0x3b, r16	; 59
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
  b0:	07 90       	elpm	r0, Z+
  b2:	0d 92       	st	X+, r0
  b4:	a0 33       	cpi	r26, 0x30	; 48
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	a0 e3       	ldi	r26, 0x30	; 48
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	a3 36       	cpi	r26, 0x63	; 99
  c6:	b2 07       	cpc	r27, r18
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	62 d1       	rcall	.+708    	; 0x390 <main>
  cc:	6e c6       	rjmp	.+3292   	; 0xdaa <_exit>

000000ce <__bad_interrupt>:
  ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <adc_init>:
 *  Author: Vilius
 */ 
#include "adc.h"

void adc_init( void) {
	clear_bit(DDRF, DDF0);
  d0:	80 98       	cbi	0x10, 0	; 16
	
	/* Voltage ref AVcc with external capacitor on AREF pin */
	set_bit(ADMUX, REFS0);
  d2:	ec e7       	ldi	r30, 0x7C	; 124
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	80 64       	ori	r24, 0x40	; 64
  da:	80 83       	st	Z, r24
	/* Select prescaler to 64 --> conversion f= 125kHz */
	set_bit(ADCSRA, ADPS2);
  dc:	ea e7       	ldi	r30, 0x7A	; 122
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	84 60       	ori	r24, 0x04	; 4
  e4:	80 83       	st	Z, r24
	set_bit(ADCSRA, ADPS1);
  e6:	80 81       	ld	r24, Z
  e8:	82 60       	ori	r24, 0x02	; 2
  ea:	80 83       	st	Z, r24
	/* Enable the ADC */
	set_bit(ADCSRA, ADEN);
  ec:	80 81       	ld	r24, Z
  ee:	80 68       	ori	r24, 0x80	; 128
  f0:	80 83       	st	Z, r24
  f2:	08 95       	ret

000000f4 <adc_sleep>:
	//set_bit(ADCSRA, ADIE);
}

void adc_sleep( void) {
	/* Wait for the conversion to complete */
	while(test_bit(ADCSRA, ADSC));
  f4:	ea e7       	ldi	r30, 0x7A	; 122
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	86 fd       	sbrc	r24, 6
  fc:	fd cf       	rjmp	.-6      	; 0xf8 <adc_sleep+0x4>
	/* Turn off the ADC */
	clear_bit(ADCSRA, ADEN);
  fe:	ea e7       	ldi	r30, 0x7A	; 122
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	8f 77       	andi	r24, 0x7F	; 127
 106:	80 83       	st	Z, r24
 108:	08 95       	ret

0000010a <adc_input>:
}

void adc_input(int ref, CAN_packet* p) {
	/*Select the reference channel */
	if (ref==SPEED)
 10a:	00 97       	sbiw	r24, 0x00	; 0
 10c:	29 f4       	brne	.+10     	; 0x118 <adc_input+0xe>
		ADMUX |= 0x00;
 10e:	ec e7       	ldi	r30, 0x7C	; 124
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	80 83       	st	Z, r24
 116:	07 c0       	rjmp	.+14     	; 0x126 <adc_input+0x1c>
	else if (ref==FANS)
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	29 f4       	brne	.+10     	; 0x126 <adc_input+0x1c>
		ADMUX |= 0x01;
 11c:	ec e7       	ldi	r30, 0x7C	; 124
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	81 60       	ori	r24, 0x01	; 1
 124:	80 83       	st	Z, r24
	/* Start the conversion */
	set_bit(ADCSRA, ADSC);
 126:	ea e7       	ldi	r30, 0x7A	; 122
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	80 64       	ori	r24, 0x40	; 64
 12e:	80 83       	st	Z, r24
	/* Wait for the conversion to complete */
	while(test_bit(ADCSRA, ADSC));
 130:	80 81       	ld	r24, Z
 132:	86 fd       	sbrc	r24, 6
 134:	fd cf       	rjmp	.-6      	; 0x130 <adc_input+0x26>
	p->data[1] = (ADC>>2); // left shift to fit into 8-bit msg
 136:	80 91 78 00 	lds	r24, 0x0078
 13a:	90 91 79 00 	lds	r25, 0x0079
 13e:	96 95       	lsr	r25
 140:	87 95       	ror	r24
 142:	96 95       	lsr	r25
 144:	87 95       	ror	r24
 146:	fb 01       	movw	r30, r22
 148:	84 83       	std	Z+4, r24	; 0x04
 14a:	08 95       	ret

0000014c <__vector_18>:
		}
	CANGCON |= 0x02;
	CANGIE=(1<<ENIT) | (1<< ENRX);
}
	
void can_health(void) {
 14c:	1f 92       	push	r1
 14e:	0f 92       	push	r0
 150:	0f b6       	in	r0, 0x3f	; 63
 152:	0f 92       	push	r0
 154:	11 24       	eor	r1, r1
 156:	0b b6       	in	r0, 0x3b	; 59
 158:	0f 92       	push	r0
 15a:	2f 93       	push	r18
 15c:	3f 93       	push	r19
 15e:	4f 93       	push	r20
 160:	5f 93       	push	r21
 162:	6f 93       	push	r22
 164:	7f 93       	push	r23
 166:	8f 93       	push	r24
 168:	9f 93       	push	r25
 16a:	af 93       	push	r26
 16c:	bf 93       	push	r27
 16e:	cf 93       	push	r28
 170:	ef 93       	push	r30
 172:	ff 93       	push	r31
 174:	ed ee       	ldi	r30, 0xED	; 237
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	c0 81       	ld	r28, Z
 17a:	80 91 ec 00 	lds	r24, 0x00EC
 17e:	68 2f       	mov	r22, r24
 180:	70 e0       	ldi	r23, 0x00	; 0
 182:	80 7f       	andi	r24, 0xF0	; 240
 184:	80 83       	st	Z, r24
 186:	72 95       	swap	r23
 188:	62 95       	swap	r22
 18a:	6f 70       	andi	r22, 0x0F	; 15
 18c:	67 27       	eor	r22, r23
 18e:	7f 70       	andi	r23, 0x0F	; 15
 190:	67 27       	eor	r22, r23
 192:	80 91 ee 00 	lds	r24, 0x00EE
 196:	8f 75       	andi	r24, 0x5F	; 95
 198:	09 f0       	breq	.+2      	; 0x19c <__vector_18+0x50>
 19a:	98 95       	break
 19c:	20 91 f2 00 	lds	r18, 0x00F2
 1a0:	80 91 f3 00 	lds	r24, 0x00F3
 1a4:	e0 e3       	ldi	r30, 0x30	; 48
 1a6:	f1 e0       	ldi	r31, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	88 0f       	add	r24, r24
 1b0:	99 1f       	adc	r25, r25
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	22 95       	swap	r18
 1b8:	26 95       	lsr	r18
 1ba:	27 70       	andi	r18, 0x07	; 7
 1bc:	82 2b       	or	r24, r18
 1be:	91 83       	std	Z+1, r25	; 0x01
 1c0:	80 83       	st	Z, r24
 1c2:	80 91 ef 00 	lds	r24, 0x00EF
 1c6:	8f 70       	andi	r24, 0x0F	; 15
 1c8:	82 83       	std	Z+2, r24	; 0x02
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	00 97       	sbiw	r24, 0x00	; 0
 1ce:	59 f0       	breq	.+22     	; 0x1e6 <__vector_18+0x9a>
 1d0:	e3 e3       	ldi	r30, 0x33	; 51
 1d2:	f1 e0       	ldi	r31, 0x01	; 1
 1d4:	8d 5c       	subi	r24, 0xCD	; 205
 1d6:	9e 4f       	sbci	r25, 0xFE	; 254
 1d8:	aa ef       	ldi	r26, 0xFA	; 250
 1da:	b0 e0       	ldi	r27, 0x00	; 0
 1dc:	2c 91       	ld	r18, X
 1de:	21 93       	st	Z+, r18
 1e0:	e8 17       	cp	r30, r24
 1e2:	f9 07       	cpc	r31, r25
 1e4:	d9 f7       	brne	.-10     	; 0x1dc <__vector_18+0x90>
 1e6:	10 92 ee 00 	sts	0x00EE, r1
 1ea:	80 e8       	ldi	r24, 0x80	; 128
 1ec:	80 93 ef 00 	sts	0x00EF, r24
 1f0:	fb 01       	movw	r30, r22
 1f2:	ee 0f       	add	r30, r30
 1f4:	ff 1f       	adc	r31, r31
 1f6:	e5 5c       	subi	r30, 0xC5	; 197
 1f8:	fe 4f       	sbci	r31, 0xFE	; 254
 1fa:	01 90       	ld	r0, Z+
 1fc:	f0 81       	ld	r31, Z
 1fe:	e0 2d       	mov	r30, r0
 200:	80 e3       	ldi	r24, 0x30	; 48
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	09 95       	icall
 206:	c0 93 ed 00 	sts	0x00ED, r28
 20a:	ff 91       	pop	r31
 20c:	ef 91       	pop	r30
 20e:	cf 91       	pop	r28
 210:	bf 91       	pop	r27
 212:	af 91       	pop	r26
 214:	9f 91       	pop	r25
 216:	8f 91       	pop	r24
 218:	7f 91       	pop	r23
 21a:	6f 91       	pop	r22
 21c:	5f 91       	pop	r21
 21e:	4f 91       	pop	r20
 220:	3f 91       	pop	r19
 222:	2f 91       	pop	r18
 224:	0f 90       	pop	r0
 226:	0b be       	out	0x3b, r0	; 59
 228:	0f 90       	pop	r0
 22a:	0f be       	out	0x3f, r0	; 63
 22c:	0f 90       	pop	r0
 22e:	1f 90       	pop	r1
 230:	18 95       	reti

00000232 <can_tx>:
 232:	cf 93       	push	r28
 234:	df 93       	push	r29
 236:	fb 01       	movw	r30, r22
 238:	20 81       	ld	r18, Z
 23a:	31 81       	ldd	r19, Z+1	; 0x01
 23c:	21 15       	cp	r18, r1
 23e:	38 40       	sbci	r19, 0x08	; 8
 240:	08 f0       	brcs	.+2      	; 0x244 <can_tx+0x12>
 242:	98 95       	break
 244:	92 81       	ldd	r25, Z+2	; 0x02
 246:	99 30       	cpi	r25, 0x09	; 9
 248:	08 f0       	brcs	.+2      	; 0x24c <can_tx+0x1a>
 24a:	98 95       	break
 24c:	8f 30       	cpi	r24, 0x0F	; 15
 24e:	08 f0       	brcs	.+2      	; 0x252 <can_tx+0x20>
 250:	98 95       	break
 252:	82 95       	swap	r24
 254:	80 7f       	andi	r24, 0xF0	; 240
 256:	80 93 ed 00 	sts	0x00ED, r24
 25a:	80 91 ef 00 	lds	r24, 0x00EF
 25e:	80 7c       	andi	r24, 0xC0	; 192
 260:	21 f0       	breq	.+8      	; 0x26a <can_tx+0x38>
 262:	80 91 ee 00 	lds	r24, 0x00EE
 266:	86 ff       	sbrs	r24, 6
 268:	55 c0       	rjmp	.+170    	; 0x314 <can_tx+0xe2>
 26a:	10 92 ee 00 	sts	0x00EE, r1
 26e:	10 92 ef 00 	sts	0x00EF, r1
 272:	82 81       	ldd	r24, Z+2	; 0x02
 274:	8f 3f       	cpi	r24, 0xFF	; 255
 276:	61 f1       	breq	.+88     	; 0x2d0 <can_tx+0x9e>
 278:	80 81       	ld	r24, Z
 27a:	91 81       	ldd	r25, Z+1	; 0x01
 27c:	96 95       	lsr	r25
 27e:	87 95       	ror	r24
 280:	96 95       	lsr	r25
 282:	87 95       	ror	r24
 284:	96 95       	lsr	r25
 286:	87 95       	ror	r24
 288:	80 93 f3 00 	sts	0x00F3, r24
 28c:	80 81       	ld	r24, Z
 28e:	82 95       	swap	r24
 290:	88 0f       	add	r24, r24
 292:	80 7e       	andi	r24, 0xE0	; 224
 294:	80 93 f2 00 	sts	0x00F2, r24
 298:	10 92 f1 00 	sts	0x00F1, r1
 29c:	10 92 f0 00 	sts	0x00F0, r1
 2a0:	22 81       	ldd	r18, Z+2	; 0x02
 2a2:	22 23       	and	r18, r18
 2a4:	79 f0       	breq	.+30     	; 0x2c4 <can_tx+0x92>
 2a6:	df 01       	movw	r26, r30
 2a8:	13 96       	adiw	r26, 0x03	; 3
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	ca ef       	ldi	r28, 0xFA	; 250
 2b0:	d0 e0       	ldi	r29, 0x00	; 0
 2b2:	2d 91       	ld	r18, X+
 2b4:	28 83       	st	Y, r18
 2b6:	01 96       	adiw	r24, 0x01	; 1
 2b8:	22 81       	ldd	r18, Z+2	; 0x02
 2ba:	42 2f       	mov	r20, r18
 2bc:	50 e0       	ldi	r21, 0x00	; 0
 2be:	84 17       	cp	r24, r20
 2c0:	95 07       	cpc	r25, r21
 2c2:	b8 f3       	brcs	.-18     	; 0x2b2 <can_tx+0x80>
 2c4:	ef ee       	ldi	r30, 0xEF	; 239
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	80 81       	ld	r24, Z
 2ca:	28 2b       	or	r18, r24
 2cc:	20 83       	st	Z, r18
 2ce:	1b c0       	rjmp	.+54     	; 0x306 <can_tx+0xd4>
 2d0:	80 81       	ld	r24, Z
 2d2:	91 81       	ldd	r25, Z+1	; 0x01
 2d4:	96 95       	lsr	r25
 2d6:	87 95       	ror	r24
 2d8:	96 95       	lsr	r25
 2da:	87 95       	ror	r24
 2dc:	96 95       	lsr	r25
 2de:	87 95       	ror	r24
 2e0:	80 93 f3 00 	sts	0x00F3, r24
 2e4:	80 81       	ld	r24, Z
 2e6:	82 95       	swap	r24
 2e8:	88 0f       	add	r24, r24
 2ea:	80 7e       	andi	r24, 0xE0	; 224
 2ec:	80 93 f2 00 	sts	0x00F2, r24
 2f0:	10 92 f1 00 	sts	0x00F1, r1
 2f4:	84 e0       	ldi	r24, 0x04	; 4
 2f6:	80 93 f0 00 	sts	0x00F0, r24
 2fa:	af ee       	ldi	r26, 0xEF	; 239
 2fc:	b0 e0       	ldi	r27, 0x00	; 0
 2fe:	9c 91       	ld	r25, X
 300:	82 81       	ldd	r24, Z+2	; 0x02
 302:	89 2b       	or	r24, r25
 304:	8c 93       	st	X, r24
 306:	ef ee       	ldi	r30, 0xEF	; 239
 308:	f0 e0       	ldi	r31, 0x00	; 0
 30a:	80 81       	ld	r24, Z
 30c:	80 64       	ori	r24, 0x40	; 64
 30e:	80 83       	st	Z, r24
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	01 c0       	rjmp	.+2      	; 0x316 <can_tx+0xe4>
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	df 91       	pop	r29
 318:	cf 91       	pop	r28
 31a:	08 95       	ret

0000031c <can_init>:
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	86 e0       	ldi	r24, 0x06	; 6
 322:	80 93 e2 00 	sts	0x00E2, r24
 326:	8c e0       	ldi	r24, 0x0C	; 12
 328:	80 93 e3 00 	sts	0x00E3, r24
 32c:	8a e5       	ldi	r24, 0x5A	; 90
 32e:	80 93 e4 00 	sts	0x00E4, r24
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	cd ee       	ldi	r28, 0xED	; 237
 336:	d0 e0       	ldi	r29, 0x00	; 0
 338:	ae ee       	ldi	r26, 0xEE	; 238
 33a:	b0 e0       	ldi	r27, 0x00	; 0
 33c:	ef ee       	ldi	r30, 0xEF	; 239
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	98 2f       	mov	r25, r24
 342:	92 95       	swap	r25
 344:	90 7f       	andi	r25, 0xF0	; 240
 346:	98 83       	st	Y, r25
 348:	1c 92       	st	X, r1
 34a:	10 82       	st	Z, r1
 34c:	8f 5f       	subi	r24, 0xFF	; 255
 34e:	8f 30       	cpi	r24, 0x0F	; 15
 350:	b9 f7       	brne	.-18     	; 0x340 <can_init+0x24>
 352:	e8 ed       	ldi	r30, 0xD8	; 216
 354:	f0 e0       	ldi	r31, 0x00	; 0
 356:	80 81       	ld	r24, Z
 358:	82 60       	ori	r24, 0x02	; 2
 35a:	80 83       	st	Z, r24
 35c:	80 ea       	ldi	r24, 0xA0	; 160
 35e:	80 93 db 00 	sts	0x00DB, r24
 362:	df 91       	pop	r29
 364:	cf 91       	pop	r28
 366:	08 95       	ret

00000368 <can_packet_send>:
	*/
}

BOOL can_packet_send(char mob, CAN_packet *packet) {
	/* Clear global interrupts */
	cli();
 368:	f8 94       	cli
	BOOL result = can_tx(mob, packet);
 36a:	63 df       	rcall	.-314    	; 0x232 <can_tx>
	/* Set global interrupts */
	sei();
 36c:	78 94       	sei
	return result;
}
 36e:	08 95       	ret

00000370 <inits>:
#include <avr/io.h>
#include <util/delay.h>
#include <stdio.h>

void inits( void) {
	can_init();
 370:	d5 df       	rcall	.-86     	; 0x31c <can_init>
	USART_init(MYUBRR, true);
 372:	61 e0       	ldi	r22, 0x01	; 1
 374:	83 e3       	ldi	r24, 0x33	; 51
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	af d0       	rcall	.+350    	; 0x4d8 <USART_init>
	sw_init();
 37a:	68 d0       	rcall	.+208    	; 0x44c <sw_init>
	adc_init();
 37c:	a9 de       	rcall	.-686    	; 0xd0 <adc_init>
	printf("\r\nInitialization complete");
 37e:	86 e0       	ldi	r24, 0x06	; 6
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	9f 93       	push	r25
 384:	8f 93       	push	r24
 386:	16 d1       	rcall	.+556    	; 0x5b4 <printf>
	set_bit(DDRB, PB6);
 388:	26 9a       	sbi	0x04, 6	; 4
 38a:	0f 90       	pop	r0
 38c:	0f 90       	pop	r0
 38e:	08 95       	ret

00000390 <main>:
}

int main(void)
{
 390:	cf 93       	push	r28
 392:	df 93       	push	r29
 394:	cd b7       	in	r28, 0x3d	; 61
 396:	de b7       	in	r29, 0x3e	; 62
 398:	66 97       	sbiw	r28, 0x16	; 22
 39a:	0f b6       	in	r0, 0x3f	; 63
 39c:	f8 94       	cli
 39e:	de bf       	out	0x3e, r29	; 62
 3a0:	0f be       	out	0x3f, r0	; 63
 3a2:	cd bf       	out	0x3d, r28	; 61
	/* Make two CAN packets */
	CAN_packet current_msg;
	CAN_packet updated_msg;
	
	/* Initialize module and packets*/
	inits();
 3a4:	e5 df       	rcall	.-54     	; 0x370 <inits>
	
	/* Initialize packets */
	current_msg.id = ID_steeringWheel;
 3a6:	25 e0       	ldi	r18, 0x05	; 5
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	3a 83       	std	Y+2, r19	; 0x02
 3ac:	29 83       	std	Y+1, r18	; 0x01
	current_msg.length = 1;
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	8b 83       	std	Y+3, r24	; 0x03
	updated_msg.id = ID_steeringWheel;
 3b2:	3d 87       	std	Y+13, r19	; 0x0d
 3b4:	2c 87       	std	Y+12, r18	; 0x0c
	updated_msg.length = 1;
 3b6:	8e 87       	std	Y+14, r24	; 0x0e
	sw_input(&current_msg);
 3b8:	ce 01       	movw	r24, r28
 3ba:	01 96       	adiw	r24, 0x01	; 1
 3bc:	56 d0       	rcall	.+172    	; 0x46a <sw_input>
	sw_input(&updated_msg);
 3be:	ce 01       	movw	r24, r28
 3c0:	0c 96       	adiw	r24, 0x0c	; 12
 3c2:	53 d0       	rcall	.+166    	; 0x46a <sw_input>
	adc_input(SPEED, &current_msg);
 3c4:	be 01       	movw	r22, r28
 3c6:	6f 5f       	subi	r22, 0xFF	; 255
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	9d de       	rcall	.-710    	; 0x10a <adc_input>
	adc_input(SPEED, &updated_msg);
 3d0:	be 01       	movw	r22, r28
 3d2:	64 5f       	subi	r22, 0xF4	; 244
 3d4:	7f 4f       	sbci	r23, 0xFF	; 255
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	97 de       	rcall	.-722    	; 0x10a <adc_input>
	adc_sleep();
 3dc:	8b de       	rcall	.-746    	; 0xf4 <adc_sleep>
	
	updated_msg.data[0] = 0b010000;
 3de:	80 e1       	ldi	r24, 0x10	; 16
 3e0:	8f 87       	std	Y+15, r24	; 0x0f
		/* Compare the two packets */
		different = memcmp(current_msg.data, updated_msg.data, 8);
		if (different) {			
			/* Send a message with new data */
			ret = can_packet_send(1, &updated_msg);
			current_msg = updated_msg;
 3e2:	0f 2e       	mov	r0, r31
 3e4:	fb e0       	ldi	r31, 0x0B	; 11
 3e6:	ff 2e       	mov	r15, r31
 3e8:	f0 2d       	mov	r31, r0
		}
		//ret = can_packet_send(1, &updated_msg);
		
		if (ret) {
			printf("\r\nMessage sent");
 3ea:	00 e2       	ldi	r16, 0x20	; 32
 3ec:	11 e0       	ldi	r17, 0x01	; 1
	
	updated_msg.data[0] = 0b010000;
    for(;;) {
		
		/* Update one CAN_packet */
		sw_input(&updated_msg); 
 3ee:	ce 01       	movw	r24, r28
 3f0:	0c 96       	adiw	r24, 0x0c	; 12
 3f2:	3b d0       	rcall	.+118    	; 0x46a <sw_input>
		adc_init();
 3f4:	6d de       	rcall	.-806    	; 0xd0 <adc_init>
		adc_input(SPEED, &updated_msg);
 3f6:	be 01       	movw	r22, r28
 3f8:	64 5f       	subi	r22, 0xF4	; 244
 3fa:	7f 4f       	sbci	r23, 0xFF	; 255
 3fc:	80 e0       	ldi	r24, 0x00	; 0
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	84 de       	rcall	.-760    	; 0x10a <adc_input>
		adc_sleep();
 402:	78 de       	rcall	.-784    	; 0xf4 <adc_sleep>
		/* Compare the two packets */
		different = memcmp(current_msg.data, updated_msg.data, 8);
 404:	48 e0       	ldi	r20, 0x08	; 8
 406:	50 e0       	ldi	r21, 0x00	; 0
 408:	be 01       	movw	r22, r28
 40a:	61 5f       	subi	r22, 0xF1	; 241
 40c:	7f 4f       	sbci	r23, 0xFF	; 255
 40e:	ce 01       	movw	r24, r28
 410:	04 96       	adiw	r24, 0x04	; 4
 412:	79 d0       	rcall	.+242    	; 0x506 <memcmp>
		if (different) {			
 414:	89 2b       	or	r24, r25
 416:	b9 f0       	breq	.+46     	; 0x446 <main+0xb6>
			/* Send a message with new data */
			ret = can_packet_send(1, &updated_msg);
 418:	be 01       	movw	r22, r28
 41a:	64 5f       	subi	r22, 0xF4	; 244
 41c:	7f 4f       	sbci	r23, 0xFF	; 255
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	a3 df       	rcall	.-186    	; 0x368 <can_packet_send>
			current_msg = updated_msg;
 422:	fe 01       	movw	r30, r28
 424:	3c 96       	adiw	r30, 0x0c	; 12
 426:	de 01       	movw	r26, r28
 428:	11 96       	adiw	r26, 0x01	; 1
 42a:	9f 2d       	mov	r25, r15
 42c:	01 90       	ld	r0, Z+
 42e:	0d 92       	st	X+, r0
 430:	9a 95       	dec	r25
 432:	e1 f7       	brne	.-8      	; 0x42c <main+0x9c>
		}
		//ret = can_packet_send(1, &updated_msg);
		
		if (ret) {
 434:	88 23       	and	r24, r24
 436:	39 f0       	breq	.+14     	; 0x446 <main+0xb6>
			printf("\r\nMessage sent");
 438:	1f 93       	push	r17
 43a:	0f 93       	push	r16
 43c:	bb d0       	rcall	.+374    	; 0x5b4 <printf>
			set_bit(DDRB, PB7);
 43e:	27 9a       	sbi	0x04, 7	; 4
 440:	0f 90       	pop	r0
 442:	0f 90       	pop	r0
 444:	01 c0       	rjmp	.+2      	; 0x448 <main+0xb8>
			ret = FALSE;
		} else
			clear_bit(DDRB, PB7);
 446:	27 98       	cbi	0x04, 7	; 4
 		//TODO: if successfully read, stop sending!
		asm("sleep");;
 448:	88 95       	sleep
	}
 44a:	d1 cf       	rjmp	.-94     	; 0x3ee <main+0x5e>

0000044c <sw_init>:
CAN_packet updated;

void sw_init( void) {	
	/* Indicators init */
	/* Set PE3 and PE4 as inputs */
	clear_bit(DDRE, DDE3);
 44c:	6b 98       	cbi	0x0d, 3	; 13
	clear_bit(DDRE, DDE4);
 44e:	6c 98       	cbi	0x0d, 4	; 13
	/* Set PE3 and PE4 as high (pull up res) */
	set_bit(PORTE, PE3);
 450:	73 9a       	sbi	0x0e, 3	; 14
	set_bit(PORTE, PE4);	
 452:	74 9a       	sbi	0x0e, 4	; 14
	
	/* Whiper init */
	clear_bit(DDRE, DDE5);
 454:	6d 98       	cbi	0x0d, 5	; 13
	set_bit(PORTE, PE5);
 456:	75 9a       	sbi	0x0e, 5	; 14
	
	/* Horn init */
	clear_bit(DDRB, DDB4);
 458:	24 98       	cbi	0x04, 4	; 4
	set_bit(PORTB, PB4);
 45a:	2c 9a       	sbi	0x05, 4	; 5
	
	/* Deadman */
	clear_bit(DDRB, DDB3);
 45c:	23 98       	cbi	0x04, 3	; 4
	set_bit(PORTB, PB3);
 45e:	2b 9a       	sbi	0x05, 3	; 5
	
	/* Speed potentiometer uses adc_init() */
	
	/* Cruise control */
	clear_bit(DDRB, DDB2);
 460:	22 98       	cbi	0x04, 2	; 4
	clear_bit(DDRB, DDB1);
 462:	21 98       	cbi	0x04, 1	; 4
	set_bit(PORTB, PB2);
 464:	2a 9a       	sbi	0x05, 2	; 5
	set_bit(PORTB, PB1);	
 466:	29 9a       	sbi	0x05, 1	; 5
 468:	08 95       	ret

0000046a <sw_input>:
}

void sw_input( CAN_packet* p) {	
 46a:	fc 01       	movw	r30, r24
	/* Initialize data */
	p->data[0] = 0x00;
 46c:	13 82       	std	Z+3, r1	; 0x03
	/* Read right/left indicator */
	if(!test_bit(PINE, PE4))
 46e:	64 99       	sbic	0x0c, 4	; 12
 470:	03 c0       	rjmp	.+6      	; 0x478 <sw_input+0xe>
		p->data[0] |= (1<<0);
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	83 83       	std	Z+3, r24	; 0x03
 476:	04 c0       	rjmp	.+8      	; 0x480 <sw_input+0x16>
	else if (!test_bit(PINE, PE3))
 478:	63 99       	sbic	0x0c, 3	; 12
 47a:	02 c0       	rjmp	.+4      	; 0x480 <sw_input+0x16>
		p->data[0] |= (1<<1);	
 47c:	82 e0       	ldi	r24, 0x02	; 2
 47e:	83 83       	std	Z+3, r24	; 0x03
	/* Read cruise control */
	if(!test_bit(PINB, PB2))
 480:	1a 99       	sbic	0x03, 2	; 3
 482:	04 c0       	rjmp	.+8      	; 0x48c <sw_input+0x22>
		p->data[0] |= (1<<2);
 484:	83 81       	ldd	r24, Z+3	; 0x03
 486:	84 60       	ori	r24, 0x04	; 4
 488:	83 83       	std	Z+3, r24	; 0x03
 48a:	05 c0       	rjmp	.+10     	; 0x496 <sw_input+0x2c>
	else if(!test_bit(PINB, PB1))
 48c:	19 99       	sbic	0x03, 1	; 3
 48e:	03 c0       	rjmp	.+6      	; 0x496 <sw_input+0x2c>
		p->data[0] |= (1<<3);	
 490:	83 81       	ldd	r24, Z+3	; 0x03
 492:	88 60       	ori	r24, 0x08	; 8
 494:	83 83       	std	Z+3, r24	; 0x03
	/* Read horn */
	if (!test_bit(PINB, PB4))
 496:	1c 99       	sbic	0x03, 4	; 3
 498:	03 c0       	rjmp	.+6      	; 0x4a0 <sw_input+0x36>
		p->data[0] |= (1<<4);
 49a:	83 81       	ldd	r24, Z+3	; 0x03
 49c:	80 61       	ori	r24, 0x10	; 16
 49e:	83 83       	std	Z+3, r24	; 0x03
	/* Read whiper */
	if (!test_bit(PINE, PE5))
 4a0:	65 99       	sbic	0x0c, 5	; 12
 4a2:	03 c0       	rjmp	.+6      	; 0x4aa <sw_input+0x40>
		p->data[0] |= (1<<5);
 4a4:	83 81       	ldd	r24, Z+3	; 0x03
 4a6:	80 62       	ori	r24, 0x20	; 32
 4a8:	83 83       	std	Z+3, r24	; 0x03
	/* Read deadman */
	if (!test_bit(PINB, PB3))
 4aa:	1b 99       	sbic	0x03, 3	; 3
 4ac:	03 c0       	rjmp	.+6      	; 0x4b4 <sw_input+0x4a>
		p->data[0] |= (1<<6);
 4ae:	83 81       	ldd	r24, Z+3	; 0x03
 4b0:	80 64       	ori	r24, 0x40	; 64
 4b2:	83 83       	std	Z+3, r24	; 0x03
 4b4:	08 95       	ret

000004b6 <USART_tx>:
	fdevopen(USART_tx, USART_rx);
}

_Bool USART_tx(unsigned char data) {
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)));
 4b6:	e0 ec       	ldi	r30, 0xC0	; 192
 4b8:	f0 e0       	ldi	r31, 0x00	; 0
 4ba:	90 81       	ld	r25, Z
 4bc:	95 ff       	sbrs	r25, 5
 4be:	fd cf       	rjmp	.-6      	; 0x4ba <USART_tx+0x4>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 4c0:	80 93 c6 00 	sts	0x00C6, r24
	// T0D0 implement 
	return true;
}
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	08 95       	ret

000004c8 <USART_rx>:

unsigned char USART_rx(void) {
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)));
 4c8:	e0 ec       	ldi	r30, 0xC0	; 192
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	80 81       	ld	r24, Z
 4ce:	88 23       	and	r24, r24
 4d0:	ec f7       	brge	.-6      	; 0x4cc <USART_rx+0x4>
	/* Get and return received data from buffer */
	return UDR0;
 4d2:	80 91 c6 00 	lds	r24, 0x00C6
}
 4d6:	08 95       	ret

000004d8 <USART_init>:

/*! Initialize the serial communication
	baud is the baud rate */
void USART_init(unsigned int baud, _Bool onOff) {
	/* Set baud rate */
	UBRR0H = (unsigned char) (baud>>8);
 4d8:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char) baud;
 4dc:	80 93 c4 00 	sts	0x00C4, r24
	/* Set frame format: Asynchronous normal mode, 8data, no parity  1 stop bit */
	/*(0<<UMSEL0) | (0<<UPM0) | (0<<USBS0) | already set as Initial values */
	UCSR0C = (3<<UCSZ0);
 4e0:	86 e0       	ldi	r24, 0x06	; 6
 4e2:	80 93 c2 00 	sts	0x00C2, r24
	/* Enable receiver and transmitter */
	if (onOff) {
 4e6:	66 23       	and	r22, r22
 4e8:	41 f0       	breq	.+16     	; 0x4fa <USART_init+0x22>
		set_bit(UCSR0B,	RXEN0);
 4ea:	e1 ec       	ldi	r30, 0xC1	; 193
 4ec:	f0 e0       	ldi	r31, 0x00	; 0
 4ee:	80 81       	ld	r24, Z
 4f0:	80 61       	ori	r24, 0x10	; 16
 4f2:	80 83       	st	Z, r24
		set_bit(UCSR0B, TXEN0);
 4f4:	80 81       	ld	r24, Z
 4f6:	88 60       	ori	r24, 0x08	; 8
 4f8:	80 83       	st	Z, r24
	}
	/*!	enables using fprint() instead of USART_tx_string() */
	fdevopen(USART_tx, USART_rx);
 4fa:	64 e6       	ldi	r22, 0x64	; 100
 4fc:	72 e0       	ldi	r23, 0x02	; 2
 4fe:	8b e5       	ldi	r24, 0x5B	; 91
 500:	92 e0       	ldi	r25, 0x02	; 2
 502:	0e c0       	rjmp	.+28     	; 0x520 <fdevopen>
 504:	08 95       	ret

00000506 <memcmp>:
 506:	fb 01       	movw	r30, r22
 508:	dc 01       	movw	r26, r24
 50a:	04 c0       	rjmp	.+8      	; 0x514 <memcmp+0xe>
 50c:	8d 91       	ld	r24, X+
 50e:	01 90       	ld	r0, Z+
 510:	80 19       	sub	r24, r0
 512:	21 f4       	brne	.+8      	; 0x51c <memcmp+0x16>
 514:	41 50       	subi	r20, 0x01	; 1
 516:	50 40       	sbci	r21, 0x00	; 0
 518:	c8 f7       	brcc	.-14     	; 0x50c <memcmp+0x6>
 51a:	88 1b       	sub	r24, r24
 51c:	99 0b       	sbc	r25, r25
 51e:	08 95       	ret

00000520 <fdevopen>:
 520:	0f 93       	push	r16
 522:	1f 93       	push	r17
 524:	cf 93       	push	r28
 526:	df 93       	push	r29
 528:	00 97       	sbiw	r24, 0x00	; 0
 52a:	31 f4       	brne	.+12     	; 0x538 <fdevopen+0x18>
 52c:	61 15       	cp	r22, r1
 52e:	71 05       	cpc	r23, r1
 530:	19 f4       	brne	.+6      	; 0x538 <fdevopen+0x18>
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	39 c0       	rjmp	.+114    	; 0x5aa <fdevopen+0x8a>
 538:	8b 01       	movw	r16, r22
 53a:	ec 01       	movw	r28, r24
 53c:	6e e0       	ldi	r22, 0x0E	; 14
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	81 e0       	ldi	r24, 0x01	; 1
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	38 d2       	rcall	.+1136   	; 0x9b6 <calloc>
 546:	fc 01       	movw	r30, r24
 548:	89 2b       	or	r24, r25
 54a:	99 f3       	breq	.-26     	; 0x532 <fdevopen+0x12>
 54c:	80 e8       	ldi	r24, 0x80	; 128
 54e:	83 83       	std	Z+3, r24	; 0x03
 550:	01 15       	cp	r16, r1
 552:	11 05       	cpc	r17, r1
 554:	71 f0       	breq	.+28     	; 0x572 <fdevopen+0x52>
 556:	13 87       	std	Z+11, r17	; 0x0b
 558:	02 87       	std	Z+10, r16	; 0x0a
 55a:	81 e8       	ldi	r24, 0x81	; 129
 55c:	83 83       	std	Z+3, r24	; 0x03
 55e:	80 91 59 01 	lds	r24, 0x0159
 562:	90 91 5a 01 	lds	r25, 0x015A
 566:	89 2b       	or	r24, r25
 568:	21 f4       	brne	.+8      	; 0x572 <fdevopen+0x52>
 56a:	f0 93 5a 01 	sts	0x015A, r31
 56e:	e0 93 59 01 	sts	0x0159, r30
 572:	20 97       	sbiw	r28, 0x00	; 0
 574:	c9 f0       	breq	.+50     	; 0x5a8 <fdevopen+0x88>
 576:	d1 87       	std	Z+9, r29	; 0x09
 578:	c0 87       	std	Z+8, r28	; 0x08
 57a:	83 81       	ldd	r24, Z+3	; 0x03
 57c:	82 60       	ori	r24, 0x02	; 2
 57e:	83 83       	std	Z+3, r24	; 0x03
 580:	80 91 5b 01 	lds	r24, 0x015B
 584:	90 91 5c 01 	lds	r25, 0x015C
 588:	89 2b       	or	r24, r25
 58a:	71 f4       	brne	.+28     	; 0x5a8 <fdevopen+0x88>
 58c:	f0 93 5c 01 	sts	0x015C, r31
 590:	e0 93 5b 01 	sts	0x015B, r30
 594:	80 91 5d 01 	lds	r24, 0x015D
 598:	90 91 5e 01 	lds	r25, 0x015E
 59c:	89 2b       	or	r24, r25
 59e:	21 f4       	brne	.+8      	; 0x5a8 <fdevopen+0x88>
 5a0:	f0 93 5e 01 	sts	0x015E, r31
 5a4:	e0 93 5d 01 	sts	0x015D, r30
 5a8:	cf 01       	movw	r24, r30
 5aa:	df 91       	pop	r29
 5ac:	cf 91       	pop	r28
 5ae:	1f 91       	pop	r17
 5b0:	0f 91       	pop	r16
 5b2:	08 95       	ret

000005b4 <printf>:
 5b4:	cf 93       	push	r28
 5b6:	df 93       	push	r29
 5b8:	cd b7       	in	r28, 0x3d	; 61
 5ba:	de b7       	in	r29, 0x3e	; 62
 5bc:	ae 01       	movw	r20, r28
 5be:	4b 5f       	subi	r20, 0xFB	; 251
 5c0:	5f 4f       	sbci	r21, 0xFF	; 255
 5c2:	fa 01       	movw	r30, r20
 5c4:	61 91       	ld	r22, Z+
 5c6:	71 91       	ld	r23, Z+
 5c8:	af 01       	movw	r20, r30
 5ca:	80 91 5b 01 	lds	r24, 0x015B
 5ce:	90 91 5c 01 	lds	r25, 0x015C
 5d2:	03 d0       	rcall	.+6      	; 0x5da <vfprintf>
 5d4:	df 91       	pop	r29
 5d6:	cf 91       	pop	r28
 5d8:	08 95       	ret

000005da <vfprintf>:
 5da:	2f 92       	push	r2
 5dc:	3f 92       	push	r3
 5de:	4f 92       	push	r4
 5e0:	5f 92       	push	r5
 5e2:	6f 92       	push	r6
 5e4:	7f 92       	push	r7
 5e6:	8f 92       	push	r8
 5e8:	9f 92       	push	r9
 5ea:	af 92       	push	r10
 5ec:	bf 92       	push	r11
 5ee:	cf 92       	push	r12
 5f0:	df 92       	push	r13
 5f2:	ef 92       	push	r14
 5f4:	ff 92       	push	r15
 5f6:	0f 93       	push	r16
 5f8:	1f 93       	push	r17
 5fa:	cf 93       	push	r28
 5fc:	df 93       	push	r29
 5fe:	cd b7       	in	r28, 0x3d	; 61
 600:	de b7       	in	r29, 0x3e	; 62
 602:	2c 97       	sbiw	r28, 0x0c	; 12
 604:	0f b6       	in	r0, 0x3f	; 63
 606:	f8 94       	cli
 608:	de bf       	out	0x3e, r29	; 62
 60a:	0f be       	out	0x3f, r0	; 63
 60c:	cd bf       	out	0x3d, r28	; 61
 60e:	7c 01       	movw	r14, r24
 610:	6b 01       	movw	r12, r22
 612:	8a 01       	movw	r16, r20
 614:	fc 01       	movw	r30, r24
 616:	17 82       	std	Z+7, r1	; 0x07
 618:	16 82       	std	Z+6, r1	; 0x06
 61a:	83 81       	ldd	r24, Z+3	; 0x03
 61c:	81 ff       	sbrs	r24, 1
 61e:	b0 c1       	rjmp	.+864    	; 0x980 <vfprintf+0x3a6>
 620:	ce 01       	movw	r24, r28
 622:	01 96       	adiw	r24, 0x01	; 1
 624:	4c 01       	movw	r8, r24
 626:	f7 01       	movw	r30, r14
 628:	93 81       	ldd	r25, Z+3	; 0x03
 62a:	f6 01       	movw	r30, r12
 62c:	93 fd       	sbrc	r25, 3
 62e:	85 91       	lpm	r24, Z+
 630:	93 ff       	sbrs	r25, 3
 632:	81 91       	ld	r24, Z+
 634:	6f 01       	movw	r12, r30
 636:	88 23       	and	r24, r24
 638:	09 f4       	brne	.+2      	; 0x63c <vfprintf+0x62>
 63a:	9e c1       	rjmp	.+828    	; 0x978 <vfprintf+0x39e>
 63c:	85 32       	cpi	r24, 0x25	; 37
 63e:	39 f4       	brne	.+14     	; 0x64e <vfprintf+0x74>
 640:	93 fd       	sbrc	r25, 3
 642:	85 91       	lpm	r24, Z+
 644:	93 ff       	sbrs	r25, 3
 646:	81 91       	ld	r24, Z+
 648:	6f 01       	movw	r12, r30
 64a:	85 32       	cpi	r24, 0x25	; 37
 64c:	21 f4       	brne	.+8      	; 0x656 <vfprintf+0x7c>
 64e:	b7 01       	movw	r22, r14
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	15 d3       	rcall	.+1578   	; 0xc7e <fputc>
 654:	e8 cf       	rjmp	.-48     	; 0x626 <vfprintf+0x4c>
 656:	51 2c       	mov	r5, r1
 658:	31 2c       	mov	r3, r1
 65a:	20 e0       	ldi	r18, 0x00	; 0
 65c:	20 32       	cpi	r18, 0x20	; 32
 65e:	a0 f4       	brcc	.+40     	; 0x688 <vfprintf+0xae>
 660:	8b 32       	cpi	r24, 0x2B	; 43
 662:	69 f0       	breq	.+26     	; 0x67e <vfprintf+0xa4>
 664:	30 f4       	brcc	.+12     	; 0x672 <vfprintf+0x98>
 666:	80 32       	cpi	r24, 0x20	; 32
 668:	59 f0       	breq	.+22     	; 0x680 <vfprintf+0xa6>
 66a:	83 32       	cpi	r24, 0x23	; 35
 66c:	69 f4       	brne	.+26     	; 0x688 <vfprintf+0xae>
 66e:	20 61       	ori	r18, 0x10	; 16
 670:	2c c0       	rjmp	.+88     	; 0x6ca <vfprintf+0xf0>
 672:	8d 32       	cpi	r24, 0x2D	; 45
 674:	39 f0       	breq	.+14     	; 0x684 <vfprintf+0xaa>
 676:	80 33       	cpi	r24, 0x30	; 48
 678:	39 f4       	brne	.+14     	; 0x688 <vfprintf+0xae>
 67a:	21 60       	ori	r18, 0x01	; 1
 67c:	26 c0       	rjmp	.+76     	; 0x6ca <vfprintf+0xf0>
 67e:	22 60       	ori	r18, 0x02	; 2
 680:	24 60       	ori	r18, 0x04	; 4
 682:	23 c0       	rjmp	.+70     	; 0x6ca <vfprintf+0xf0>
 684:	28 60       	ori	r18, 0x08	; 8
 686:	21 c0       	rjmp	.+66     	; 0x6ca <vfprintf+0xf0>
 688:	27 fd       	sbrc	r18, 7
 68a:	27 c0       	rjmp	.+78     	; 0x6da <vfprintf+0x100>
 68c:	30 ed       	ldi	r19, 0xD0	; 208
 68e:	38 0f       	add	r19, r24
 690:	3a 30       	cpi	r19, 0x0A	; 10
 692:	78 f4       	brcc	.+30     	; 0x6b2 <vfprintf+0xd8>
 694:	26 ff       	sbrs	r18, 6
 696:	06 c0       	rjmp	.+12     	; 0x6a4 <vfprintf+0xca>
 698:	fa e0       	ldi	r31, 0x0A	; 10
 69a:	5f 9e       	mul	r5, r31
 69c:	30 0d       	add	r19, r0
 69e:	11 24       	eor	r1, r1
 6a0:	53 2e       	mov	r5, r19
 6a2:	13 c0       	rjmp	.+38     	; 0x6ca <vfprintf+0xf0>
 6a4:	8a e0       	ldi	r24, 0x0A	; 10
 6a6:	38 9e       	mul	r3, r24
 6a8:	30 0d       	add	r19, r0
 6aa:	11 24       	eor	r1, r1
 6ac:	33 2e       	mov	r3, r19
 6ae:	20 62       	ori	r18, 0x20	; 32
 6b0:	0c c0       	rjmp	.+24     	; 0x6ca <vfprintf+0xf0>
 6b2:	8e 32       	cpi	r24, 0x2E	; 46
 6b4:	21 f4       	brne	.+8      	; 0x6be <vfprintf+0xe4>
 6b6:	26 fd       	sbrc	r18, 6
 6b8:	5f c1       	rjmp	.+702    	; 0x978 <vfprintf+0x39e>
 6ba:	20 64       	ori	r18, 0x40	; 64
 6bc:	06 c0       	rjmp	.+12     	; 0x6ca <vfprintf+0xf0>
 6be:	8c 36       	cpi	r24, 0x6C	; 108
 6c0:	11 f4       	brne	.+4      	; 0x6c6 <vfprintf+0xec>
 6c2:	20 68       	ori	r18, 0x80	; 128
 6c4:	02 c0       	rjmp	.+4      	; 0x6ca <vfprintf+0xf0>
 6c6:	88 36       	cpi	r24, 0x68	; 104
 6c8:	41 f4       	brne	.+16     	; 0x6da <vfprintf+0x100>
 6ca:	f6 01       	movw	r30, r12
 6cc:	93 fd       	sbrc	r25, 3
 6ce:	85 91       	lpm	r24, Z+
 6d0:	93 ff       	sbrs	r25, 3
 6d2:	81 91       	ld	r24, Z+
 6d4:	6f 01       	movw	r12, r30
 6d6:	81 11       	cpse	r24, r1
 6d8:	c1 cf       	rjmp	.-126    	; 0x65c <vfprintf+0x82>
 6da:	98 2f       	mov	r25, r24
 6dc:	9f 7d       	andi	r25, 0xDF	; 223
 6de:	95 54       	subi	r25, 0x45	; 69
 6e0:	93 30       	cpi	r25, 0x03	; 3
 6e2:	28 f4       	brcc	.+10     	; 0x6ee <vfprintf+0x114>
 6e4:	0c 5f       	subi	r16, 0xFC	; 252
 6e6:	1f 4f       	sbci	r17, 0xFF	; 255
 6e8:	ff e3       	ldi	r31, 0x3F	; 63
 6ea:	f9 83       	std	Y+1, r31	; 0x01
 6ec:	0d c0       	rjmp	.+26     	; 0x708 <vfprintf+0x12e>
 6ee:	83 36       	cpi	r24, 0x63	; 99
 6f0:	31 f0       	breq	.+12     	; 0x6fe <vfprintf+0x124>
 6f2:	83 37       	cpi	r24, 0x73	; 115
 6f4:	71 f0       	breq	.+28     	; 0x712 <vfprintf+0x138>
 6f6:	83 35       	cpi	r24, 0x53	; 83
 6f8:	09 f0       	breq	.+2      	; 0x6fc <vfprintf+0x122>
 6fa:	57 c0       	rjmp	.+174    	; 0x7aa <vfprintf+0x1d0>
 6fc:	21 c0       	rjmp	.+66     	; 0x740 <vfprintf+0x166>
 6fe:	f8 01       	movw	r30, r16
 700:	80 81       	ld	r24, Z
 702:	89 83       	std	Y+1, r24	; 0x01
 704:	0e 5f       	subi	r16, 0xFE	; 254
 706:	1f 4f       	sbci	r17, 0xFF	; 255
 708:	44 24       	eor	r4, r4
 70a:	43 94       	inc	r4
 70c:	51 2c       	mov	r5, r1
 70e:	54 01       	movw	r10, r8
 710:	14 c0       	rjmp	.+40     	; 0x73a <vfprintf+0x160>
 712:	38 01       	movw	r6, r16
 714:	f2 e0       	ldi	r31, 0x02	; 2
 716:	6f 0e       	add	r6, r31
 718:	71 1c       	adc	r7, r1
 71a:	f8 01       	movw	r30, r16
 71c:	a0 80       	ld	r10, Z
 71e:	b1 80       	ldd	r11, Z+1	; 0x01
 720:	26 ff       	sbrs	r18, 6
 722:	03 c0       	rjmp	.+6      	; 0x72a <vfprintf+0x150>
 724:	65 2d       	mov	r22, r5
 726:	70 e0       	ldi	r23, 0x00	; 0
 728:	02 c0       	rjmp	.+4      	; 0x72e <vfprintf+0x154>
 72a:	6f ef       	ldi	r22, 0xFF	; 255
 72c:	7f ef       	ldi	r23, 0xFF	; 255
 72e:	c5 01       	movw	r24, r10
 730:	2c 87       	std	Y+12, r18	; 0x0c
 732:	9a d2       	rcall	.+1332   	; 0xc68 <strnlen>
 734:	2c 01       	movw	r4, r24
 736:	83 01       	movw	r16, r6
 738:	2c 85       	ldd	r18, Y+12	; 0x0c
 73a:	2f 77       	andi	r18, 0x7F	; 127
 73c:	22 2e       	mov	r2, r18
 73e:	16 c0       	rjmp	.+44     	; 0x76c <vfprintf+0x192>
 740:	38 01       	movw	r6, r16
 742:	f2 e0       	ldi	r31, 0x02	; 2
 744:	6f 0e       	add	r6, r31
 746:	71 1c       	adc	r7, r1
 748:	f8 01       	movw	r30, r16
 74a:	a0 80       	ld	r10, Z
 74c:	b1 80       	ldd	r11, Z+1	; 0x01
 74e:	26 ff       	sbrs	r18, 6
 750:	03 c0       	rjmp	.+6      	; 0x758 <vfprintf+0x17e>
 752:	65 2d       	mov	r22, r5
 754:	70 e0       	ldi	r23, 0x00	; 0
 756:	02 c0       	rjmp	.+4      	; 0x75c <vfprintf+0x182>
 758:	6f ef       	ldi	r22, 0xFF	; 255
 75a:	7f ef       	ldi	r23, 0xFF	; 255
 75c:	c5 01       	movw	r24, r10
 75e:	2c 87       	std	Y+12, r18	; 0x0c
 760:	71 d2       	rcall	.+1250   	; 0xc44 <strnlen_P>
 762:	2c 01       	movw	r4, r24
 764:	2c 85       	ldd	r18, Y+12	; 0x0c
 766:	20 68       	ori	r18, 0x80	; 128
 768:	22 2e       	mov	r2, r18
 76a:	83 01       	movw	r16, r6
 76c:	23 fc       	sbrc	r2, 3
 76e:	19 c0       	rjmp	.+50     	; 0x7a2 <vfprintf+0x1c8>
 770:	83 2d       	mov	r24, r3
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	48 16       	cp	r4, r24
 776:	59 06       	cpc	r5, r25
 778:	a0 f4       	brcc	.+40     	; 0x7a2 <vfprintf+0x1c8>
 77a:	b7 01       	movw	r22, r14
 77c:	80 e2       	ldi	r24, 0x20	; 32
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	7e d2       	rcall	.+1276   	; 0xc7e <fputc>
 782:	3a 94       	dec	r3
 784:	f5 cf       	rjmp	.-22     	; 0x770 <vfprintf+0x196>
 786:	f5 01       	movw	r30, r10
 788:	27 fc       	sbrc	r2, 7
 78a:	85 91       	lpm	r24, Z+
 78c:	27 fe       	sbrs	r2, 7
 78e:	81 91       	ld	r24, Z+
 790:	5f 01       	movw	r10, r30
 792:	b7 01       	movw	r22, r14
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	73 d2       	rcall	.+1254   	; 0xc7e <fputc>
 798:	31 10       	cpse	r3, r1
 79a:	3a 94       	dec	r3
 79c:	f1 e0       	ldi	r31, 0x01	; 1
 79e:	4f 1a       	sub	r4, r31
 7a0:	51 08       	sbc	r5, r1
 7a2:	41 14       	cp	r4, r1
 7a4:	51 04       	cpc	r5, r1
 7a6:	79 f7       	brne	.-34     	; 0x786 <vfprintf+0x1ac>
 7a8:	de c0       	rjmp	.+444    	; 0x966 <vfprintf+0x38c>
 7aa:	84 36       	cpi	r24, 0x64	; 100
 7ac:	11 f0       	breq	.+4      	; 0x7b2 <vfprintf+0x1d8>
 7ae:	89 36       	cpi	r24, 0x69	; 105
 7b0:	31 f5       	brne	.+76     	; 0x7fe <vfprintf+0x224>
 7b2:	f8 01       	movw	r30, r16
 7b4:	27 ff       	sbrs	r18, 7
 7b6:	07 c0       	rjmp	.+14     	; 0x7c6 <vfprintf+0x1ec>
 7b8:	60 81       	ld	r22, Z
 7ba:	71 81       	ldd	r23, Z+1	; 0x01
 7bc:	82 81       	ldd	r24, Z+2	; 0x02
 7be:	93 81       	ldd	r25, Z+3	; 0x03
 7c0:	0c 5f       	subi	r16, 0xFC	; 252
 7c2:	1f 4f       	sbci	r17, 0xFF	; 255
 7c4:	08 c0       	rjmp	.+16     	; 0x7d6 <vfprintf+0x1fc>
 7c6:	60 81       	ld	r22, Z
 7c8:	71 81       	ldd	r23, Z+1	; 0x01
 7ca:	07 2e       	mov	r0, r23
 7cc:	00 0c       	add	r0, r0
 7ce:	88 0b       	sbc	r24, r24
 7d0:	99 0b       	sbc	r25, r25
 7d2:	0e 5f       	subi	r16, 0xFE	; 254
 7d4:	1f 4f       	sbci	r17, 0xFF	; 255
 7d6:	2f 76       	andi	r18, 0x6F	; 111
 7d8:	72 2e       	mov	r7, r18
 7da:	97 ff       	sbrs	r25, 7
 7dc:	09 c0       	rjmp	.+18     	; 0x7f0 <vfprintf+0x216>
 7de:	90 95       	com	r25
 7e0:	80 95       	com	r24
 7e2:	70 95       	com	r23
 7e4:	61 95       	neg	r22
 7e6:	7f 4f       	sbci	r23, 0xFF	; 255
 7e8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ea:	9f 4f       	sbci	r25, 0xFF	; 255
 7ec:	20 68       	ori	r18, 0x80	; 128
 7ee:	72 2e       	mov	r7, r18
 7f0:	2a e0       	ldi	r18, 0x0A	; 10
 7f2:	30 e0       	ldi	r19, 0x00	; 0
 7f4:	a4 01       	movw	r20, r8
 7f6:	7b d2       	rcall	.+1270   	; 0xcee <__ultoa_invert>
 7f8:	a8 2e       	mov	r10, r24
 7fa:	a8 18       	sub	r10, r8
 7fc:	43 c0       	rjmp	.+134    	; 0x884 <vfprintf+0x2aa>
 7fe:	85 37       	cpi	r24, 0x75	; 117
 800:	29 f4       	brne	.+10     	; 0x80c <vfprintf+0x232>
 802:	2f 7e       	andi	r18, 0xEF	; 239
 804:	b2 2e       	mov	r11, r18
 806:	2a e0       	ldi	r18, 0x0A	; 10
 808:	30 e0       	ldi	r19, 0x00	; 0
 80a:	25 c0       	rjmp	.+74     	; 0x856 <vfprintf+0x27c>
 80c:	f2 2f       	mov	r31, r18
 80e:	f9 7f       	andi	r31, 0xF9	; 249
 810:	bf 2e       	mov	r11, r31
 812:	8f 36       	cpi	r24, 0x6F	; 111
 814:	c1 f0       	breq	.+48     	; 0x846 <vfprintf+0x26c>
 816:	18 f4       	brcc	.+6      	; 0x81e <vfprintf+0x244>
 818:	88 35       	cpi	r24, 0x58	; 88
 81a:	79 f0       	breq	.+30     	; 0x83a <vfprintf+0x260>
 81c:	ad c0       	rjmp	.+346    	; 0x978 <vfprintf+0x39e>
 81e:	80 37       	cpi	r24, 0x70	; 112
 820:	19 f0       	breq	.+6      	; 0x828 <vfprintf+0x24e>
 822:	88 37       	cpi	r24, 0x78	; 120
 824:	21 f0       	breq	.+8      	; 0x82e <vfprintf+0x254>
 826:	a8 c0       	rjmp	.+336    	; 0x978 <vfprintf+0x39e>
 828:	2f 2f       	mov	r18, r31
 82a:	20 61       	ori	r18, 0x10	; 16
 82c:	b2 2e       	mov	r11, r18
 82e:	b4 fe       	sbrs	r11, 4
 830:	0d c0       	rjmp	.+26     	; 0x84c <vfprintf+0x272>
 832:	8b 2d       	mov	r24, r11
 834:	84 60       	ori	r24, 0x04	; 4
 836:	b8 2e       	mov	r11, r24
 838:	09 c0       	rjmp	.+18     	; 0x84c <vfprintf+0x272>
 83a:	24 ff       	sbrs	r18, 4
 83c:	0a c0       	rjmp	.+20     	; 0x852 <vfprintf+0x278>
 83e:	9f 2f       	mov	r25, r31
 840:	96 60       	ori	r25, 0x06	; 6
 842:	b9 2e       	mov	r11, r25
 844:	06 c0       	rjmp	.+12     	; 0x852 <vfprintf+0x278>
 846:	28 e0       	ldi	r18, 0x08	; 8
 848:	30 e0       	ldi	r19, 0x00	; 0
 84a:	05 c0       	rjmp	.+10     	; 0x856 <vfprintf+0x27c>
 84c:	20 e1       	ldi	r18, 0x10	; 16
 84e:	30 e0       	ldi	r19, 0x00	; 0
 850:	02 c0       	rjmp	.+4      	; 0x856 <vfprintf+0x27c>
 852:	20 e1       	ldi	r18, 0x10	; 16
 854:	32 e0       	ldi	r19, 0x02	; 2
 856:	f8 01       	movw	r30, r16
 858:	b7 fe       	sbrs	r11, 7
 85a:	07 c0       	rjmp	.+14     	; 0x86a <vfprintf+0x290>
 85c:	60 81       	ld	r22, Z
 85e:	71 81       	ldd	r23, Z+1	; 0x01
 860:	82 81       	ldd	r24, Z+2	; 0x02
 862:	93 81       	ldd	r25, Z+3	; 0x03
 864:	0c 5f       	subi	r16, 0xFC	; 252
 866:	1f 4f       	sbci	r17, 0xFF	; 255
 868:	06 c0       	rjmp	.+12     	; 0x876 <vfprintf+0x29c>
 86a:	60 81       	ld	r22, Z
 86c:	71 81       	ldd	r23, Z+1	; 0x01
 86e:	80 e0       	ldi	r24, 0x00	; 0
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	0e 5f       	subi	r16, 0xFE	; 254
 874:	1f 4f       	sbci	r17, 0xFF	; 255
 876:	a4 01       	movw	r20, r8
 878:	3a d2       	rcall	.+1140   	; 0xcee <__ultoa_invert>
 87a:	a8 2e       	mov	r10, r24
 87c:	a8 18       	sub	r10, r8
 87e:	fb 2d       	mov	r31, r11
 880:	ff 77       	andi	r31, 0x7F	; 127
 882:	7f 2e       	mov	r7, r31
 884:	76 fe       	sbrs	r7, 6
 886:	0b c0       	rjmp	.+22     	; 0x89e <vfprintf+0x2c4>
 888:	37 2d       	mov	r19, r7
 88a:	3e 7f       	andi	r19, 0xFE	; 254
 88c:	a5 14       	cp	r10, r5
 88e:	50 f4       	brcc	.+20     	; 0x8a4 <vfprintf+0x2ca>
 890:	74 fe       	sbrs	r7, 4
 892:	0a c0       	rjmp	.+20     	; 0x8a8 <vfprintf+0x2ce>
 894:	72 fc       	sbrc	r7, 2
 896:	08 c0       	rjmp	.+16     	; 0x8a8 <vfprintf+0x2ce>
 898:	37 2d       	mov	r19, r7
 89a:	3e 7e       	andi	r19, 0xEE	; 238
 89c:	05 c0       	rjmp	.+10     	; 0x8a8 <vfprintf+0x2ce>
 89e:	ba 2c       	mov	r11, r10
 8a0:	37 2d       	mov	r19, r7
 8a2:	03 c0       	rjmp	.+6      	; 0x8aa <vfprintf+0x2d0>
 8a4:	ba 2c       	mov	r11, r10
 8a6:	01 c0       	rjmp	.+2      	; 0x8aa <vfprintf+0x2d0>
 8a8:	b5 2c       	mov	r11, r5
 8aa:	34 ff       	sbrs	r19, 4
 8ac:	0d c0       	rjmp	.+26     	; 0x8c8 <vfprintf+0x2ee>
 8ae:	fe 01       	movw	r30, r28
 8b0:	ea 0d       	add	r30, r10
 8b2:	f1 1d       	adc	r31, r1
 8b4:	80 81       	ld	r24, Z
 8b6:	80 33       	cpi	r24, 0x30	; 48
 8b8:	11 f4       	brne	.+4      	; 0x8be <vfprintf+0x2e4>
 8ba:	39 7e       	andi	r19, 0xE9	; 233
 8bc:	09 c0       	rjmp	.+18     	; 0x8d0 <vfprintf+0x2f6>
 8be:	32 ff       	sbrs	r19, 2
 8c0:	06 c0       	rjmp	.+12     	; 0x8ce <vfprintf+0x2f4>
 8c2:	b3 94       	inc	r11
 8c4:	b3 94       	inc	r11
 8c6:	04 c0       	rjmp	.+8      	; 0x8d0 <vfprintf+0x2f6>
 8c8:	83 2f       	mov	r24, r19
 8ca:	86 78       	andi	r24, 0x86	; 134
 8cc:	09 f0       	breq	.+2      	; 0x8d0 <vfprintf+0x2f6>
 8ce:	b3 94       	inc	r11
 8d0:	33 fd       	sbrc	r19, 3
 8d2:	12 c0       	rjmp	.+36     	; 0x8f8 <vfprintf+0x31e>
 8d4:	30 ff       	sbrs	r19, 0
 8d6:	06 c0       	rjmp	.+12     	; 0x8e4 <vfprintf+0x30a>
 8d8:	5a 2c       	mov	r5, r10
 8da:	b3 14       	cp	r11, r3
 8dc:	18 f4       	brcc	.+6      	; 0x8e4 <vfprintf+0x30a>
 8de:	53 0c       	add	r5, r3
 8e0:	5b 18       	sub	r5, r11
 8e2:	b3 2c       	mov	r11, r3
 8e4:	b3 14       	cp	r11, r3
 8e6:	60 f4       	brcc	.+24     	; 0x900 <vfprintf+0x326>
 8e8:	b7 01       	movw	r22, r14
 8ea:	80 e2       	ldi	r24, 0x20	; 32
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	3c 87       	std	Y+12, r19	; 0x0c
 8f0:	c6 d1       	rcall	.+908    	; 0xc7e <fputc>
 8f2:	b3 94       	inc	r11
 8f4:	3c 85       	ldd	r19, Y+12	; 0x0c
 8f6:	f6 cf       	rjmp	.-20     	; 0x8e4 <vfprintf+0x30a>
 8f8:	b3 14       	cp	r11, r3
 8fa:	10 f4       	brcc	.+4      	; 0x900 <vfprintf+0x326>
 8fc:	3b 18       	sub	r3, r11
 8fe:	01 c0       	rjmp	.+2      	; 0x902 <vfprintf+0x328>
 900:	31 2c       	mov	r3, r1
 902:	34 ff       	sbrs	r19, 4
 904:	11 c0       	rjmp	.+34     	; 0x928 <vfprintf+0x34e>
 906:	b7 01       	movw	r22, r14
 908:	80 e3       	ldi	r24, 0x30	; 48
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	3c 87       	std	Y+12, r19	; 0x0c
 90e:	b7 d1       	rcall	.+878    	; 0xc7e <fputc>
 910:	3c 85       	ldd	r19, Y+12	; 0x0c
 912:	32 ff       	sbrs	r19, 2
 914:	16 c0       	rjmp	.+44     	; 0x942 <vfprintf+0x368>
 916:	31 fd       	sbrc	r19, 1
 918:	03 c0       	rjmp	.+6      	; 0x920 <vfprintf+0x346>
 91a:	88 e7       	ldi	r24, 0x78	; 120
 91c:	90 e0       	ldi	r25, 0x00	; 0
 91e:	02 c0       	rjmp	.+4      	; 0x924 <vfprintf+0x34a>
 920:	88 e5       	ldi	r24, 0x58	; 88
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	b7 01       	movw	r22, r14
 926:	0c c0       	rjmp	.+24     	; 0x940 <vfprintf+0x366>
 928:	83 2f       	mov	r24, r19
 92a:	86 78       	andi	r24, 0x86	; 134
 92c:	51 f0       	breq	.+20     	; 0x942 <vfprintf+0x368>
 92e:	31 ff       	sbrs	r19, 1
 930:	02 c0       	rjmp	.+4      	; 0x936 <vfprintf+0x35c>
 932:	8b e2       	ldi	r24, 0x2B	; 43
 934:	01 c0       	rjmp	.+2      	; 0x938 <vfprintf+0x35e>
 936:	80 e2       	ldi	r24, 0x20	; 32
 938:	37 fd       	sbrc	r19, 7
 93a:	8d e2       	ldi	r24, 0x2D	; 45
 93c:	b7 01       	movw	r22, r14
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	9e d1       	rcall	.+828    	; 0xc7e <fputc>
 942:	a5 14       	cp	r10, r5
 944:	30 f4       	brcc	.+12     	; 0x952 <vfprintf+0x378>
 946:	b7 01       	movw	r22, r14
 948:	80 e3       	ldi	r24, 0x30	; 48
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	98 d1       	rcall	.+816    	; 0xc7e <fputc>
 94e:	5a 94       	dec	r5
 950:	f8 cf       	rjmp	.-16     	; 0x942 <vfprintf+0x368>
 952:	aa 94       	dec	r10
 954:	f4 01       	movw	r30, r8
 956:	ea 0d       	add	r30, r10
 958:	f1 1d       	adc	r31, r1
 95a:	80 81       	ld	r24, Z
 95c:	b7 01       	movw	r22, r14
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	8e d1       	rcall	.+796    	; 0xc7e <fputc>
 962:	a1 10       	cpse	r10, r1
 964:	f6 cf       	rjmp	.-20     	; 0x952 <vfprintf+0x378>
 966:	33 20       	and	r3, r3
 968:	09 f4       	brne	.+2      	; 0x96c <vfprintf+0x392>
 96a:	5d ce       	rjmp	.-838    	; 0x626 <vfprintf+0x4c>
 96c:	b7 01       	movw	r22, r14
 96e:	80 e2       	ldi	r24, 0x20	; 32
 970:	90 e0       	ldi	r25, 0x00	; 0
 972:	85 d1       	rcall	.+778    	; 0xc7e <fputc>
 974:	3a 94       	dec	r3
 976:	f7 cf       	rjmp	.-18     	; 0x966 <vfprintf+0x38c>
 978:	f7 01       	movw	r30, r14
 97a:	86 81       	ldd	r24, Z+6	; 0x06
 97c:	97 81       	ldd	r25, Z+7	; 0x07
 97e:	02 c0       	rjmp	.+4      	; 0x984 <vfprintf+0x3aa>
 980:	8f ef       	ldi	r24, 0xFF	; 255
 982:	9f ef       	ldi	r25, 0xFF	; 255
 984:	2c 96       	adiw	r28, 0x0c	; 12
 986:	0f b6       	in	r0, 0x3f	; 63
 988:	f8 94       	cli
 98a:	de bf       	out	0x3e, r29	; 62
 98c:	0f be       	out	0x3f, r0	; 63
 98e:	cd bf       	out	0x3d, r28	; 61
 990:	df 91       	pop	r29
 992:	cf 91       	pop	r28
 994:	1f 91       	pop	r17
 996:	0f 91       	pop	r16
 998:	ff 90       	pop	r15
 99a:	ef 90       	pop	r14
 99c:	df 90       	pop	r13
 99e:	cf 90       	pop	r12
 9a0:	bf 90       	pop	r11
 9a2:	af 90       	pop	r10
 9a4:	9f 90       	pop	r9
 9a6:	8f 90       	pop	r8
 9a8:	7f 90       	pop	r7
 9aa:	6f 90       	pop	r6
 9ac:	5f 90       	pop	r5
 9ae:	4f 90       	pop	r4
 9b0:	3f 90       	pop	r3
 9b2:	2f 90       	pop	r2
 9b4:	08 95       	ret

000009b6 <calloc>:
 9b6:	0f 93       	push	r16
 9b8:	1f 93       	push	r17
 9ba:	cf 93       	push	r28
 9bc:	df 93       	push	r29
 9be:	86 9f       	mul	r24, r22
 9c0:	80 01       	movw	r16, r0
 9c2:	87 9f       	mul	r24, r23
 9c4:	10 0d       	add	r17, r0
 9c6:	96 9f       	mul	r25, r22
 9c8:	10 0d       	add	r17, r0
 9ca:	11 24       	eor	r1, r1
 9cc:	c8 01       	movw	r24, r16
 9ce:	0d d0       	rcall	.+26     	; 0x9ea <malloc>
 9d0:	ec 01       	movw	r28, r24
 9d2:	00 97       	sbiw	r24, 0x00	; 0
 9d4:	21 f0       	breq	.+8      	; 0x9de <calloc+0x28>
 9d6:	a8 01       	movw	r20, r16
 9d8:	60 e0       	ldi	r22, 0x00	; 0
 9da:	70 e0       	ldi	r23, 0x00	; 0
 9dc:	3e d1       	rcall	.+636    	; 0xc5a <memset>
 9de:	ce 01       	movw	r24, r28
 9e0:	df 91       	pop	r29
 9e2:	cf 91       	pop	r28
 9e4:	1f 91       	pop	r17
 9e6:	0f 91       	pop	r16
 9e8:	08 95       	ret

000009ea <malloc>:
 9ea:	cf 93       	push	r28
 9ec:	df 93       	push	r29
 9ee:	82 30       	cpi	r24, 0x02	; 2
 9f0:	91 05       	cpc	r25, r1
 9f2:	10 f4       	brcc	.+4      	; 0x9f8 <malloc+0xe>
 9f4:	82 e0       	ldi	r24, 0x02	; 2
 9f6:	90 e0       	ldi	r25, 0x00	; 0
 9f8:	e0 91 61 01 	lds	r30, 0x0161
 9fc:	f0 91 62 01 	lds	r31, 0x0162
 a00:	20 e0       	ldi	r18, 0x00	; 0
 a02:	30 e0       	ldi	r19, 0x00	; 0
 a04:	c0 e0       	ldi	r28, 0x00	; 0
 a06:	d0 e0       	ldi	r29, 0x00	; 0
 a08:	30 97       	sbiw	r30, 0x00	; 0
 a0a:	11 f1       	breq	.+68     	; 0xa50 <malloc+0x66>
 a0c:	40 81       	ld	r20, Z
 a0e:	51 81       	ldd	r21, Z+1	; 0x01
 a10:	48 17       	cp	r20, r24
 a12:	59 07       	cpc	r21, r25
 a14:	c0 f0       	brcs	.+48     	; 0xa46 <malloc+0x5c>
 a16:	48 17       	cp	r20, r24
 a18:	59 07       	cpc	r21, r25
 a1a:	61 f4       	brne	.+24     	; 0xa34 <malloc+0x4a>
 a1c:	82 81       	ldd	r24, Z+2	; 0x02
 a1e:	93 81       	ldd	r25, Z+3	; 0x03
 a20:	20 97       	sbiw	r28, 0x00	; 0
 a22:	19 f0       	breq	.+6      	; 0xa2a <malloc+0x40>
 a24:	9b 83       	std	Y+3, r25	; 0x03
 a26:	8a 83       	std	Y+2, r24	; 0x02
 a28:	2b c0       	rjmp	.+86     	; 0xa80 <malloc+0x96>
 a2a:	90 93 62 01 	sts	0x0162, r25
 a2e:	80 93 61 01 	sts	0x0161, r24
 a32:	26 c0       	rjmp	.+76     	; 0xa80 <malloc+0x96>
 a34:	21 15       	cp	r18, r1
 a36:	31 05       	cpc	r19, r1
 a38:	19 f0       	breq	.+6      	; 0xa40 <malloc+0x56>
 a3a:	42 17       	cp	r20, r18
 a3c:	53 07       	cpc	r21, r19
 a3e:	18 f4       	brcc	.+6      	; 0xa46 <malloc+0x5c>
 a40:	9a 01       	movw	r18, r20
 a42:	be 01       	movw	r22, r28
 a44:	df 01       	movw	r26, r30
 a46:	ef 01       	movw	r28, r30
 a48:	02 80       	ldd	r0, Z+2	; 0x02
 a4a:	f3 81       	ldd	r31, Z+3	; 0x03
 a4c:	e0 2d       	mov	r30, r0
 a4e:	dc cf       	rjmp	.-72     	; 0xa08 <malloc+0x1e>
 a50:	21 15       	cp	r18, r1
 a52:	31 05       	cpc	r19, r1
 a54:	09 f1       	breq	.+66     	; 0xa98 <malloc+0xae>
 a56:	28 1b       	sub	r18, r24
 a58:	39 0b       	sbc	r19, r25
 a5a:	24 30       	cpi	r18, 0x04	; 4
 a5c:	31 05       	cpc	r19, r1
 a5e:	90 f4       	brcc	.+36     	; 0xa84 <malloc+0x9a>
 a60:	12 96       	adiw	r26, 0x02	; 2
 a62:	8d 91       	ld	r24, X+
 a64:	9c 91       	ld	r25, X
 a66:	13 97       	sbiw	r26, 0x03	; 3
 a68:	61 15       	cp	r22, r1
 a6a:	71 05       	cpc	r23, r1
 a6c:	21 f0       	breq	.+8      	; 0xa76 <malloc+0x8c>
 a6e:	fb 01       	movw	r30, r22
 a70:	93 83       	std	Z+3, r25	; 0x03
 a72:	82 83       	std	Z+2, r24	; 0x02
 a74:	04 c0       	rjmp	.+8      	; 0xa7e <malloc+0x94>
 a76:	90 93 62 01 	sts	0x0162, r25
 a7a:	80 93 61 01 	sts	0x0161, r24
 a7e:	fd 01       	movw	r30, r26
 a80:	32 96       	adiw	r30, 0x02	; 2
 a82:	44 c0       	rjmp	.+136    	; 0xb0c <malloc+0x122>
 a84:	fd 01       	movw	r30, r26
 a86:	e2 0f       	add	r30, r18
 a88:	f3 1f       	adc	r31, r19
 a8a:	81 93       	st	Z+, r24
 a8c:	91 93       	st	Z+, r25
 a8e:	22 50       	subi	r18, 0x02	; 2
 a90:	31 09       	sbc	r19, r1
 a92:	2d 93       	st	X+, r18
 a94:	3c 93       	st	X, r19
 a96:	3a c0       	rjmp	.+116    	; 0xb0c <malloc+0x122>
 a98:	20 91 5f 01 	lds	r18, 0x015F
 a9c:	30 91 60 01 	lds	r19, 0x0160
 aa0:	23 2b       	or	r18, r19
 aa2:	41 f4       	brne	.+16     	; 0xab4 <malloc+0xca>
 aa4:	20 91 02 01 	lds	r18, 0x0102
 aa8:	30 91 03 01 	lds	r19, 0x0103
 aac:	30 93 60 01 	sts	0x0160, r19
 ab0:	20 93 5f 01 	sts	0x015F, r18
 ab4:	20 91 00 01 	lds	r18, 0x0100
 ab8:	30 91 01 01 	lds	r19, 0x0101
 abc:	21 15       	cp	r18, r1
 abe:	31 05       	cpc	r19, r1
 ac0:	41 f4       	brne	.+16     	; 0xad2 <malloc+0xe8>
 ac2:	2d b7       	in	r18, 0x3d	; 61
 ac4:	3e b7       	in	r19, 0x3e	; 62
 ac6:	40 91 04 01 	lds	r20, 0x0104
 aca:	50 91 05 01 	lds	r21, 0x0105
 ace:	24 1b       	sub	r18, r20
 ad0:	35 0b       	sbc	r19, r21
 ad2:	e0 91 5f 01 	lds	r30, 0x015F
 ad6:	f0 91 60 01 	lds	r31, 0x0160
 ada:	e2 17       	cp	r30, r18
 adc:	f3 07       	cpc	r31, r19
 ade:	a0 f4       	brcc	.+40     	; 0xb08 <malloc+0x11e>
 ae0:	2e 1b       	sub	r18, r30
 ae2:	3f 0b       	sbc	r19, r31
 ae4:	28 17       	cp	r18, r24
 ae6:	39 07       	cpc	r19, r25
 ae8:	78 f0       	brcs	.+30     	; 0xb08 <malloc+0x11e>
 aea:	ac 01       	movw	r20, r24
 aec:	4e 5f       	subi	r20, 0xFE	; 254
 aee:	5f 4f       	sbci	r21, 0xFF	; 255
 af0:	24 17       	cp	r18, r20
 af2:	35 07       	cpc	r19, r21
 af4:	48 f0       	brcs	.+18     	; 0xb08 <malloc+0x11e>
 af6:	4e 0f       	add	r20, r30
 af8:	5f 1f       	adc	r21, r31
 afa:	50 93 60 01 	sts	0x0160, r21
 afe:	40 93 5f 01 	sts	0x015F, r20
 b02:	81 93       	st	Z+, r24
 b04:	91 93       	st	Z+, r25
 b06:	02 c0       	rjmp	.+4      	; 0xb0c <malloc+0x122>
 b08:	e0 e0       	ldi	r30, 0x00	; 0
 b0a:	f0 e0       	ldi	r31, 0x00	; 0
 b0c:	cf 01       	movw	r24, r30
 b0e:	df 91       	pop	r29
 b10:	cf 91       	pop	r28
 b12:	08 95       	ret

00000b14 <free>:
 b14:	0f 93       	push	r16
 b16:	1f 93       	push	r17
 b18:	cf 93       	push	r28
 b1a:	df 93       	push	r29
 b1c:	00 97       	sbiw	r24, 0x00	; 0
 b1e:	09 f4       	brne	.+2      	; 0xb22 <free+0xe>
 b20:	8c c0       	rjmp	.+280    	; 0xc3a <free+0x126>
 b22:	fc 01       	movw	r30, r24
 b24:	32 97       	sbiw	r30, 0x02	; 2
 b26:	13 82       	std	Z+3, r1	; 0x03
 b28:	12 82       	std	Z+2, r1	; 0x02
 b2a:	00 91 61 01 	lds	r16, 0x0161
 b2e:	10 91 62 01 	lds	r17, 0x0162
 b32:	01 15       	cp	r16, r1
 b34:	11 05       	cpc	r17, r1
 b36:	81 f4       	brne	.+32     	; 0xb58 <free+0x44>
 b38:	20 81       	ld	r18, Z
 b3a:	31 81       	ldd	r19, Z+1	; 0x01
 b3c:	82 0f       	add	r24, r18
 b3e:	93 1f       	adc	r25, r19
 b40:	20 91 5f 01 	lds	r18, 0x015F
 b44:	30 91 60 01 	lds	r19, 0x0160
 b48:	28 17       	cp	r18, r24
 b4a:	39 07       	cpc	r19, r25
 b4c:	79 f5       	brne	.+94     	; 0xbac <free+0x98>
 b4e:	f0 93 60 01 	sts	0x0160, r31
 b52:	e0 93 5f 01 	sts	0x015F, r30
 b56:	71 c0       	rjmp	.+226    	; 0xc3a <free+0x126>
 b58:	d8 01       	movw	r26, r16
 b5a:	40 e0       	ldi	r20, 0x00	; 0
 b5c:	50 e0       	ldi	r21, 0x00	; 0
 b5e:	ae 17       	cp	r26, r30
 b60:	bf 07       	cpc	r27, r31
 b62:	50 f4       	brcc	.+20     	; 0xb78 <free+0x64>
 b64:	12 96       	adiw	r26, 0x02	; 2
 b66:	2d 91       	ld	r18, X+
 b68:	3c 91       	ld	r19, X
 b6a:	13 97       	sbiw	r26, 0x03	; 3
 b6c:	ad 01       	movw	r20, r26
 b6e:	21 15       	cp	r18, r1
 b70:	31 05       	cpc	r19, r1
 b72:	09 f1       	breq	.+66     	; 0xbb6 <free+0xa2>
 b74:	d9 01       	movw	r26, r18
 b76:	f3 cf       	rjmp	.-26     	; 0xb5e <free+0x4a>
 b78:	9d 01       	movw	r18, r26
 b7a:	da 01       	movw	r26, r20
 b7c:	33 83       	std	Z+3, r19	; 0x03
 b7e:	22 83       	std	Z+2, r18	; 0x02
 b80:	60 81       	ld	r22, Z
 b82:	71 81       	ldd	r23, Z+1	; 0x01
 b84:	86 0f       	add	r24, r22
 b86:	97 1f       	adc	r25, r23
 b88:	82 17       	cp	r24, r18
 b8a:	93 07       	cpc	r25, r19
 b8c:	69 f4       	brne	.+26     	; 0xba8 <free+0x94>
 b8e:	ec 01       	movw	r28, r24
 b90:	28 81       	ld	r18, Y
 b92:	39 81       	ldd	r19, Y+1	; 0x01
 b94:	26 0f       	add	r18, r22
 b96:	37 1f       	adc	r19, r23
 b98:	2e 5f       	subi	r18, 0xFE	; 254
 b9a:	3f 4f       	sbci	r19, 0xFF	; 255
 b9c:	31 83       	std	Z+1, r19	; 0x01
 b9e:	20 83       	st	Z, r18
 ba0:	8a 81       	ldd	r24, Y+2	; 0x02
 ba2:	9b 81       	ldd	r25, Y+3	; 0x03
 ba4:	93 83       	std	Z+3, r25	; 0x03
 ba6:	82 83       	std	Z+2, r24	; 0x02
 ba8:	45 2b       	or	r20, r21
 baa:	29 f4       	brne	.+10     	; 0xbb6 <free+0xa2>
 bac:	f0 93 62 01 	sts	0x0162, r31
 bb0:	e0 93 61 01 	sts	0x0161, r30
 bb4:	42 c0       	rjmp	.+132    	; 0xc3a <free+0x126>
 bb6:	13 96       	adiw	r26, 0x03	; 3
 bb8:	fc 93       	st	X, r31
 bba:	ee 93       	st	-X, r30
 bbc:	12 97       	sbiw	r26, 0x02	; 2
 bbe:	ed 01       	movw	r28, r26
 bc0:	49 91       	ld	r20, Y+
 bc2:	59 91       	ld	r21, Y+
 bc4:	9e 01       	movw	r18, r28
 bc6:	24 0f       	add	r18, r20
 bc8:	35 1f       	adc	r19, r21
 bca:	e2 17       	cp	r30, r18
 bcc:	f3 07       	cpc	r31, r19
 bce:	71 f4       	brne	.+28     	; 0xbec <free+0xd8>
 bd0:	80 81       	ld	r24, Z
 bd2:	91 81       	ldd	r25, Z+1	; 0x01
 bd4:	84 0f       	add	r24, r20
 bd6:	95 1f       	adc	r25, r21
 bd8:	02 96       	adiw	r24, 0x02	; 2
 bda:	11 96       	adiw	r26, 0x01	; 1
 bdc:	9c 93       	st	X, r25
 bde:	8e 93       	st	-X, r24
 be0:	82 81       	ldd	r24, Z+2	; 0x02
 be2:	93 81       	ldd	r25, Z+3	; 0x03
 be4:	13 96       	adiw	r26, 0x03	; 3
 be6:	9c 93       	st	X, r25
 be8:	8e 93       	st	-X, r24
 bea:	12 97       	sbiw	r26, 0x02	; 2
 bec:	e0 e0       	ldi	r30, 0x00	; 0
 bee:	f0 e0       	ldi	r31, 0x00	; 0
 bf0:	d8 01       	movw	r26, r16
 bf2:	12 96       	adiw	r26, 0x02	; 2
 bf4:	8d 91       	ld	r24, X+
 bf6:	9c 91       	ld	r25, X
 bf8:	13 97       	sbiw	r26, 0x03	; 3
 bfa:	00 97       	sbiw	r24, 0x00	; 0
 bfc:	19 f0       	breq	.+6      	; 0xc04 <free+0xf0>
 bfe:	f8 01       	movw	r30, r16
 c00:	8c 01       	movw	r16, r24
 c02:	f6 cf       	rjmp	.-20     	; 0xbf0 <free+0xdc>
 c04:	8d 91       	ld	r24, X+
 c06:	9c 91       	ld	r25, X
 c08:	98 01       	movw	r18, r16
 c0a:	2e 5f       	subi	r18, 0xFE	; 254
 c0c:	3f 4f       	sbci	r19, 0xFF	; 255
 c0e:	82 0f       	add	r24, r18
 c10:	93 1f       	adc	r25, r19
 c12:	20 91 5f 01 	lds	r18, 0x015F
 c16:	30 91 60 01 	lds	r19, 0x0160
 c1a:	28 17       	cp	r18, r24
 c1c:	39 07       	cpc	r19, r25
 c1e:	69 f4       	brne	.+26     	; 0xc3a <free+0x126>
 c20:	30 97       	sbiw	r30, 0x00	; 0
 c22:	29 f4       	brne	.+10     	; 0xc2e <free+0x11a>
 c24:	10 92 62 01 	sts	0x0162, r1
 c28:	10 92 61 01 	sts	0x0161, r1
 c2c:	02 c0       	rjmp	.+4      	; 0xc32 <free+0x11e>
 c2e:	13 82       	std	Z+3, r1	; 0x03
 c30:	12 82       	std	Z+2, r1	; 0x02
 c32:	10 93 60 01 	sts	0x0160, r17
 c36:	00 93 5f 01 	sts	0x015F, r16
 c3a:	df 91       	pop	r29
 c3c:	cf 91       	pop	r28
 c3e:	1f 91       	pop	r17
 c40:	0f 91       	pop	r16
 c42:	08 95       	ret

00000c44 <strnlen_P>:
 c44:	fc 01       	movw	r30, r24
 c46:	05 90       	lpm	r0, Z+
 c48:	61 50       	subi	r22, 0x01	; 1
 c4a:	70 40       	sbci	r23, 0x00	; 0
 c4c:	01 10       	cpse	r0, r1
 c4e:	d8 f7       	brcc	.-10     	; 0xc46 <strnlen_P+0x2>
 c50:	80 95       	com	r24
 c52:	90 95       	com	r25
 c54:	8e 0f       	add	r24, r30
 c56:	9f 1f       	adc	r25, r31
 c58:	08 95       	ret

00000c5a <memset>:
 c5a:	dc 01       	movw	r26, r24
 c5c:	01 c0       	rjmp	.+2      	; 0xc60 <memset+0x6>
 c5e:	6d 93       	st	X+, r22
 c60:	41 50       	subi	r20, 0x01	; 1
 c62:	50 40       	sbci	r21, 0x00	; 0
 c64:	e0 f7       	brcc	.-8      	; 0xc5e <memset+0x4>
 c66:	08 95       	ret

00000c68 <strnlen>:
 c68:	fc 01       	movw	r30, r24
 c6a:	61 50       	subi	r22, 0x01	; 1
 c6c:	70 40       	sbci	r23, 0x00	; 0
 c6e:	01 90       	ld	r0, Z+
 c70:	01 10       	cpse	r0, r1
 c72:	d8 f7       	brcc	.-10     	; 0xc6a <strnlen+0x2>
 c74:	80 95       	com	r24
 c76:	90 95       	com	r25
 c78:	8e 0f       	add	r24, r30
 c7a:	9f 1f       	adc	r25, r31
 c7c:	08 95       	ret

00000c7e <fputc>:
 c7e:	0f 93       	push	r16
 c80:	1f 93       	push	r17
 c82:	cf 93       	push	r28
 c84:	df 93       	push	r29
 c86:	fb 01       	movw	r30, r22
 c88:	23 81       	ldd	r18, Z+3	; 0x03
 c8a:	21 fd       	sbrc	r18, 1
 c8c:	03 c0       	rjmp	.+6      	; 0xc94 <fputc+0x16>
 c8e:	8f ef       	ldi	r24, 0xFF	; 255
 c90:	9f ef       	ldi	r25, 0xFF	; 255
 c92:	28 c0       	rjmp	.+80     	; 0xce4 <fputc+0x66>
 c94:	22 ff       	sbrs	r18, 2
 c96:	16 c0       	rjmp	.+44     	; 0xcc4 <fputc+0x46>
 c98:	46 81       	ldd	r20, Z+6	; 0x06
 c9a:	57 81       	ldd	r21, Z+7	; 0x07
 c9c:	24 81       	ldd	r18, Z+4	; 0x04
 c9e:	35 81       	ldd	r19, Z+5	; 0x05
 ca0:	42 17       	cp	r20, r18
 ca2:	53 07       	cpc	r21, r19
 ca4:	44 f4       	brge	.+16     	; 0xcb6 <fputc+0x38>
 ca6:	a0 81       	ld	r26, Z
 ca8:	b1 81       	ldd	r27, Z+1	; 0x01
 caa:	9d 01       	movw	r18, r26
 cac:	2f 5f       	subi	r18, 0xFF	; 255
 cae:	3f 4f       	sbci	r19, 0xFF	; 255
 cb0:	31 83       	std	Z+1, r19	; 0x01
 cb2:	20 83       	st	Z, r18
 cb4:	8c 93       	st	X, r24
 cb6:	26 81       	ldd	r18, Z+6	; 0x06
 cb8:	37 81       	ldd	r19, Z+7	; 0x07
 cba:	2f 5f       	subi	r18, 0xFF	; 255
 cbc:	3f 4f       	sbci	r19, 0xFF	; 255
 cbe:	37 83       	std	Z+7, r19	; 0x07
 cc0:	26 83       	std	Z+6, r18	; 0x06
 cc2:	10 c0       	rjmp	.+32     	; 0xce4 <fputc+0x66>
 cc4:	eb 01       	movw	r28, r22
 cc6:	09 2f       	mov	r16, r25
 cc8:	18 2f       	mov	r17, r24
 cca:	00 84       	ldd	r0, Z+8	; 0x08
 ccc:	f1 85       	ldd	r31, Z+9	; 0x09
 cce:	e0 2d       	mov	r30, r0
 cd0:	09 95       	icall
 cd2:	89 2b       	or	r24, r25
 cd4:	e1 f6       	brne	.-72     	; 0xc8e <fputc+0x10>
 cd6:	8e 81       	ldd	r24, Y+6	; 0x06
 cd8:	9f 81       	ldd	r25, Y+7	; 0x07
 cda:	01 96       	adiw	r24, 0x01	; 1
 cdc:	9f 83       	std	Y+7, r25	; 0x07
 cde:	8e 83       	std	Y+6, r24	; 0x06
 ce0:	81 2f       	mov	r24, r17
 ce2:	90 2f       	mov	r25, r16
 ce4:	df 91       	pop	r29
 ce6:	cf 91       	pop	r28
 ce8:	1f 91       	pop	r17
 cea:	0f 91       	pop	r16
 cec:	08 95       	ret

00000cee <__ultoa_invert>:
 cee:	fa 01       	movw	r30, r20
 cf0:	aa 27       	eor	r26, r26
 cf2:	28 30       	cpi	r18, 0x08	; 8
 cf4:	51 f1       	breq	.+84     	; 0xd4a <__ultoa_invert+0x5c>
 cf6:	20 31       	cpi	r18, 0x10	; 16
 cf8:	81 f1       	breq	.+96     	; 0xd5a <__ultoa_invert+0x6c>
 cfa:	e8 94       	clt
 cfc:	6f 93       	push	r22
 cfe:	6e 7f       	andi	r22, 0xFE	; 254
 d00:	6e 5f       	subi	r22, 0xFE	; 254
 d02:	7f 4f       	sbci	r23, 0xFF	; 255
 d04:	8f 4f       	sbci	r24, 0xFF	; 255
 d06:	9f 4f       	sbci	r25, 0xFF	; 255
 d08:	af 4f       	sbci	r26, 0xFF	; 255
 d0a:	b1 e0       	ldi	r27, 0x01	; 1
 d0c:	3e d0       	rcall	.+124    	; 0xd8a <__ultoa_invert+0x9c>
 d0e:	b4 e0       	ldi	r27, 0x04	; 4
 d10:	3c d0       	rcall	.+120    	; 0xd8a <__ultoa_invert+0x9c>
 d12:	67 0f       	add	r22, r23
 d14:	78 1f       	adc	r23, r24
 d16:	89 1f       	adc	r24, r25
 d18:	9a 1f       	adc	r25, r26
 d1a:	a1 1d       	adc	r26, r1
 d1c:	68 0f       	add	r22, r24
 d1e:	79 1f       	adc	r23, r25
 d20:	8a 1f       	adc	r24, r26
 d22:	91 1d       	adc	r25, r1
 d24:	a1 1d       	adc	r26, r1
 d26:	6a 0f       	add	r22, r26
 d28:	71 1d       	adc	r23, r1
 d2a:	81 1d       	adc	r24, r1
 d2c:	91 1d       	adc	r25, r1
 d2e:	a1 1d       	adc	r26, r1
 d30:	20 d0       	rcall	.+64     	; 0xd72 <__ultoa_invert+0x84>
 d32:	09 f4       	brne	.+2      	; 0xd36 <__ultoa_invert+0x48>
 d34:	68 94       	set
 d36:	3f 91       	pop	r19
 d38:	2a e0       	ldi	r18, 0x0A	; 10
 d3a:	26 9f       	mul	r18, r22
 d3c:	11 24       	eor	r1, r1
 d3e:	30 19       	sub	r19, r0
 d40:	30 5d       	subi	r19, 0xD0	; 208
 d42:	31 93       	st	Z+, r19
 d44:	de f6       	brtc	.-74     	; 0xcfc <__ultoa_invert+0xe>
 d46:	cf 01       	movw	r24, r30
 d48:	08 95       	ret
 d4a:	46 2f       	mov	r20, r22
 d4c:	47 70       	andi	r20, 0x07	; 7
 d4e:	40 5d       	subi	r20, 0xD0	; 208
 d50:	41 93       	st	Z+, r20
 d52:	b3 e0       	ldi	r27, 0x03	; 3
 d54:	0f d0       	rcall	.+30     	; 0xd74 <__ultoa_invert+0x86>
 d56:	c9 f7       	brne	.-14     	; 0xd4a <__ultoa_invert+0x5c>
 d58:	f6 cf       	rjmp	.-20     	; 0xd46 <__ultoa_invert+0x58>
 d5a:	46 2f       	mov	r20, r22
 d5c:	4f 70       	andi	r20, 0x0F	; 15
 d5e:	40 5d       	subi	r20, 0xD0	; 208
 d60:	4a 33       	cpi	r20, 0x3A	; 58
 d62:	18 f0       	brcs	.+6      	; 0xd6a <__ultoa_invert+0x7c>
 d64:	49 5d       	subi	r20, 0xD9	; 217
 d66:	31 fd       	sbrc	r19, 1
 d68:	40 52       	subi	r20, 0x20	; 32
 d6a:	41 93       	st	Z+, r20
 d6c:	02 d0       	rcall	.+4      	; 0xd72 <__ultoa_invert+0x84>
 d6e:	a9 f7       	brne	.-22     	; 0xd5a <__ultoa_invert+0x6c>
 d70:	ea cf       	rjmp	.-44     	; 0xd46 <__ultoa_invert+0x58>
 d72:	b4 e0       	ldi	r27, 0x04	; 4
 d74:	a6 95       	lsr	r26
 d76:	97 95       	ror	r25
 d78:	87 95       	ror	r24
 d7a:	77 95       	ror	r23
 d7c:	67 95       	ror	r22
 d7e:	ba 95       	dec	r27
 d80:	c9 f7       	brne	.-14     	; 0xd74 <__ultoa_invert+0x86>
 d82:	00 97       	sbiw	r24, 0x00	; 0
 d84:	61 05       	cpc	r22, r1
 d86:	71 05       	cpc	r23, r1
 d88:	08 95       	ret
 d8a:	9b 01       	movw	r18, r22
 d8c:	ac 01       	movw	r20, r24
 d8e:	0a 2e       	mov	r0, r26
 d90:	06 94       	lsr	r0
 d92:	57 95       	ror	r21
 d94:	47 95       	ror	r20
 d96:	37 95       	ror	r19
 d98:	27 95       	ror	r18
 d9a:	ba 95       	dec	r27
 d9c:	c9 f7       	brne	.-14     	; 0xd90 <__ultoa_invert+0xa2>
 d9e:	62 0f       	add	r22, r18
 da0:	73 1f       	adc	r23, r19
 da2:	84 1f       	adc	r24, r20
 da4:	95 1f       	adc	r25, r21
 da6:	a0 1d       	adc	r26, r0
 da8:	08 95       	ret

00000daa <_exit>:
 daa:	f8 94       	cli

00000dac <__stop_program>:
 dac:	ff cf       	rjmp	.-2      	; 0xdac <__stop_program>
