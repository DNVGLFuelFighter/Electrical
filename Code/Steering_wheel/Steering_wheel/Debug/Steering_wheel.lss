
Steering_wheel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  00000d8c  00000e20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000033  00800140  00800140  00000e60  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e60  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ebc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b78  00000000  00000000  00000ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006ad  00000000  00000000  00001b74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000088f  00000000  00000000  00002221  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000250  00000000  00000000  00002ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000341  00000000  00000000  00002d00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007d8  00000000  00000000  00003041  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003819  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
   2:	00 00       	nop
   4:	64 c0       	rjmp	.+200    	; 0xce <__bad_interrupt>
   6:	00 00       	nop
   8:	62 c0       	rjmp	.+196    	; 0xce <__bad_interrupt>
   a:	00 00       	nop
   c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
   e:	00 00       	nop
  10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
  12:	00 00       	nop
  14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
  16:	00 00       	nop
  18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
  1a:	00 00       	nop
  1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
  1e:	00 00       	nop
  20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
  22:	00 00       	nop
  24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
  26:	00 00       	nop
  28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
  2a:	00 00       	nop
  2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
  2e:	00 00       	nop
  30:	4e c0       	rjmp	.+156    	; 0xce <__bad_interrupt>
  32:	00 00       	nop
  34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
  36:	00 00       	nop
  38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
  3a:	00 00       	nop
  3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
  3e:	00 00       	nop
  40:	46 c0       	rjmp	.+140    	; 0xce <__bad_interrupt>
  42:	00 00       	nop
  44:	1d c2       	rjmp	.+1082   	; 0x480 <__vector_17>
  46:	00 00       	nop
  48:	43 c0       	rjmp	.+134    	; 0xd0 <__vector_18>
  4a:	00 00       	nop
  4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
  4e:	00 00       	nop
  50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
  52:	00 00       	nop
  54:	3c c0       	rjmp	.+120    	; 0xce <__bad_interrupt>
  56:	00 00       	nop
  58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
  5a:	00 00       	nop
  5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
  5e:	00 00       	nop
  60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
  62:	00 00       	nop
  64:	34 c0       	rjmp	.+104    	; 0xce <__bad_interrupt>
  66:	00 00       	nop
  68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
  6a:	00 00       	nop
  6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
  6e:	00 00       	nop
  70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
  72:	00 00       	nop
  74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
  76:	00 00       	nop
  78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
  7a:	00 00       	nop
  7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
  7e:	00 00       	nop
  80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
  82:	00 00       	nop
  84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
  86:	00 00       	nop
  88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
  8a:	00 00       	nop
  8c:	20 c0       	rjmp	.+64     	; 0xce <__bad_interrupt>
  8e:	00 00       	nop
  90:	1e c0       	rjmp	.+60     	; 0xce <__bad_interrupt>
	...

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	11 e0       	ldi	r17, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	ec e8       	ldi	r30, 0x8C	; 140
  a8:	fd e0       	ldi	r31, 0x0D	; 13
  aa:	00 e0       	ldi	r16, 0x00	; 0
  ac:	0b bf       	out	0x3b, r16	; 59
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
  b0:	07 90       	elpm	r0, Z+
  b2:	0d 92       	st	X+, r0
  b4:	a0 34       	cpi	r26, 0x40	; 64
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	a0 e4       	ldi	r26, 0x40	; 64
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	a3 37       	cpi	r26, 0x73	; 115
  c6:	b2 07       	cpc	r27, r18
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	2f d1       	rcall	.+606    	; 0x32a <main>
  cc:	5d c6       	rjmp	.+3258   	; 0xd88 <_exit>

000000ce <__bad_interrupt>:
  ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <__vector_18>:
		}
	CANGCON |= 0x02;
	CANGIE=(1<<ENIT) | (1<< ENRX);
}
	
void can_health(void) {
  d0:	1f 92       	push	r1
  d2:	0f 92       	push	r0
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	0f 92       	push	r0
  d8:	11 24       	eor	r1, r1
  da:	0b b6       	in	r0, 0x3b	; 59
  dc:	0f 92       	push	r0
  de:	2f 93       	push	r18
  e0:	3f 93       	push	r19
  e2:	4f 93       	push	r20
  e4:	5f 93       	push	r21
  e6:	6f 93       	push	r22
  e8:	7f 93       	push	r23
  ea:	8f 93       	push	r24
  ec:	9f 93       	push	r25
  ee:	af 93       	push	r26
  f0:	bf 93       	push	r27
  f2:	cf 93       	push	r28
  f4:	ef 93       	push	r30
  f6:	ff 93       	push	r31
  f8:	ed ee       	ldi	r30, 0xED	; 237
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	c0 81       	ld	r28, Z
  fe:	80 91 ec 00 	lds	r24, 0x00EC
 102:	68 2f       	mov	r22, r24
 104:	70 e0       	ldi	r23, 0x00	; 0
 106:	80 7f       	andi	r24, 0xF0	; 240
 108:	80 83       	st	Z, r24
 10a:	72 95       	swap	r23
 10c:	62 95       	swap	r22
 10e:	6f 70       	andi	r22, 0x0F	; 15
 110:	67 27       	eor	r22, r23
 112:	7f 70       	andi	r23, 0x0F	; 15
 114:	67 27       	eor	r22, r23
 116:	80 91 ee 00 	lds	r24, 0x00EE
 11a:	8f 75       	andi	r24, 0x5F	; 95
 11c:	09 f0       	breq	.+2      	; 0x120 <__vector_18+0x50>
 11e:	98 95       	break
 120:	20 91 f2 00 	lds	r18, 0x00F2
 124:	80 91 f3 00 	lds	r24, 0x00F3
 128:	e0 e4       	ldi	r30, 0x40	; 64
 12a:	f1 e0       	ldi	r31, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	22 95       	swap	r18
 13c:	26 95       	lsr	r18
 13e:	27 70       	andi	r18, 0x07	; 7
 140:	82 2b       	or	r24, r18
 142:	91 83       	std	Z+1, r25	; 0x01
 144:	80 83       	st	Z, r24
 146:	80 91 ef 00 	lds	r24, 0x00EF
 14a:	8f 70       	andi	r24, 0x0F	; 15
 14c:	82 83       	std	Z+2, r24	; 0x02
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	00 97       	sbiw	r24, 0x00	; 0
 152:	59 f0       	breq	.+22     	; 0x16a <__vector_18+0x9a>
 154:	e3 e4       	ldi	r30, 0x43	; 67
 156:	f1 e0       	ldi	r31, 0x01	; 1
 158:	8d 5b       	subi	r24, 0xBD	; 189
 15a:	9e 4f       	sbci	r25, 0xFE	; 254
 15c:	aa ef       	ldi	r26, 0xFA	; 250
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	2c 91       	ld	r18, X
 162:	21 93       	st	Z+, r18
 164:	e8 17       	cp	r30, r24
 166:	f9 07       	cpc	r31, r25
 168:	d9 f7       	brne	.-10     	; 0x160 <__vector_18+0x90>
 16a:	10 92 ee 00 	sts	0x00EE, r1
 16e:	80 e8       	ldi	r24, 0x80	; 128
 170:	80 93 ef 00 	sts	0x00EF, r24
 174:	fb 01       	movw	r30, r22
 176:	ee 0f       	add	r30, r30
 178:	ff 1f       	adc	r31, r31
 17a:	e5 5b       	subi	r30, 0xB5	; 181
 17c:	fe 4f       	sbci	r31, 0xFE	; 254
 17e:	01 90       	ld	r0, Z+
 180:	f0 81       	ld	r31, Z
 182:	e0 2d       	mov	r30, r0
 184:	80 e4       	ldi	r24, 0x40	; 64
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	09 95       	icall
 18a:	c0 93 ed 00 	sts	0x00ED, r28
 18e:	ff 91       	pop	r31
 190:	ef 91       	pop	r30
 192:	cf 91       	pop	r28
 194:	bf 91       	pop	r27
 196:	af 91       	pop	r26
 198:	9f 91       	pop	r25
 19a:	8f 91       	pop	r24
 19c:	7f 91       	pop	r23
 19e:	6f 91       	pop	r22
 1a0:	5f 91       	pop	r21
 1a2:	4f 91       	pop	r20
 1a4:	3f 91       	pop	r19
 1a6:	2f 91       	pop	r18
 1a8:	0f 90       	pop	r0
 1aa:	0b be       	out	0x3b, r0	; 59
 1ac:	0f 90       	pop	r0
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	0f 90       	pop	r0
 1b2:	1f 90       	pop	r1
 1b4:	18 95       	reti

000001b6 <can_tx>:
 1b6:	cf 93       	push	r28
 1b8:	df 93       	push	r29
 1ba:	fb 01       	movw	r30, r22
 1bc:	20 81       	ld	r18, Z
 1be:	31 81       	ldd	r19, Z+1	; 0x01
 1c0:	21 15       	cp	r18, r1
 1c2:	38 40       	sbci	r19, 0x08	; 8
 1c4:	08 f0       	brcs	.+2      	; 0x1c8 <can_tx+0x12>
 1c6:	98 95       	break
 1c8:	92 81       	ldd	r25, Z+2	; 0x02
 1ca:	99 30       	cpi	r25, 0x09	; 9
 1cc:	08 f0       	brcs	.+2      	; 0x1d0 <can_tx+0x1a>
 1ce:	98 95       	break
 1d0:	8f 30       	cpi	r24, 0x0F	; 15
 1d2:	08 f0       	brcs	.+2      	; 0x1d6 <can_tx+0x20>
 1d4:	98 95       	break
 1d6:	82 95       	swap	r24
 1d8:	80 7f       	andi	r24, 0xF0	; 240
 1da:	80 93 ed 00 	sts	0x00ED, r24
 1de:	80 91 ef 00 	lds	r24, 0x00EF
 1e2:	80 7c       	andi	r24, 0xC0	; 192
 1e4:	21 f0       	breq	.+8      	; 0x1ee <can_tx+0x38>
 1e6:	80 91 ee 00 	lds	r24, 0x00EE
 1ea:	86 ff       	sbrs	r24, 6
 1ec:	55 c0       	rjmp	.+170    	; 0x298 <can_tx+0xe2>
 1ee:	10 92 ee 00 	sts	0x00EE, r1
 1f2:	10 92 ef 00 	sts	0x00EF, r1
 1f6:	82 81       	ldd	r24, Z+2	; 0x02
 1f8:	8f 3f       	cpi	r24, 0xFF	; 255
 1fa:	61 f1       	breq	.+88     	; 0x254 <can_tx+0x9e>
 1fc:	80 81       	ld	r24, Z
 1fe:	91 81       	ldd	r25, Z+1	; 0x01
 200:	96 95       	lsr	r25
 202:	87 95       	ror	r24
 204:	96 95       	lsr	r25
 206:	87 95       	ror	r24
 208:	96 95       	lsr	r25
 20a:	87 95       	ror	r24
 20c:	80 93 f3 00 	sts	0x00F3, r24
 210:	80 81       	ld	r24, Z
 212:	82 95       	swap	r24
 214:	88 0f       	add	r24, r24
 216:	80 7e       	andi	r24, 0xE0	; 224
 218:	80 93 f2 00 	sts	0x00F2, r24
 21c:	10 92 f1 00 	sts	0x00F1, r1
 220:	10 92 f0 00 	sts	0x00F0, r1
 224:	22 81       	ldd	r18, Z+2	; 0x02
 226:	22 23       	and	r18, r18
 228:	79 f0       	breq	.+30     	; 0x248 <can_tx+0x92>
 22a:	df 01       	movw	r26, r30
 22c:	13 96       	adiw	r26, 0x03	; 3
 22e:	80 e0       	ldi	r24, 0x00	; 0
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	ca ef       	ldi	r28, 0xFA	; 250
 234:	d0 e0       	ldi	r29, 0x00	; 0
 236:	2d 91       	ld	r18, X+
 238:	28 83       	st	Y, r18
 23a:	01 96       	adiw	r24, 0x01	; 1
 23c:	22 81       	ldd	r18, Z+2	; 0x02
 23e:	42 2f       	mov	r20, r18
 240:	50 e0       	ldi	r21, 0x00	; 0
 242:	84 17       	cp	r24, r20
 244:	95 07       	cpc	r25, r21
 246:	b8 f3       	brcs	.-18     	; 0x236 <can_tx+0x80>
 248:	ef ee       	ldi	r30, 0xEF	; 239
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	80 81       	ld	r24, Z
 24e:	28 2b       	or	r18, r24
 250:	20 83       	st	Z, r18
 252:	1b c0       	rjmp	.+54     	; 0x28a <can_tx+0xd4>
 254:	80 81       	ld	r24, Z
 256:	91 81       	ldd	r25, Z+1	; 0x01
 258:	96 95       	lsr	r25
 25a:	87 95       	ror	r24
 25c:	96 95       	lsr	r25
 25e:	87 95       	ror	r24
 260:	96 95       	lsr	r25
 262:	87 95       	ror	r24
 264:	80 93 f3 00 	sts	0x00F3, r24
 268:	80 81       	ld	r24, Z
 26a:	82 95       	swap	r24
 26c:	88 0f       	add	r24, r24
 26e:	80 7e       	andi	r24, 0xE0	; 224
 270:	80 93 f2 00 	sts	0x00F2, r24
 274:	10 92 f1 00 	sts	0x00F1, r1
 278:	84 e0       	ldi	r24, 0x04	; 4
 27a:	80 93 f0 00 	sts	0x00F0, r24
 27e:	af ee       	ldi	r26, 0xEF	; 239
 280:	b0 e0       	ldi	r27, 0x00	; 0
 282:	9c 91       	ld	r25, X
 284:	82 81       	ldd	r24, Z+2	; 0x02
 286:	89 2b       	or	r24, r25
 288:	8c 93       	st	X, r24
 28a:	ef ee       	ldi	r30, 0xEF	; 239
 28c:	f0 e0       	ldi	r31, 0x00	; 0
 28e:	80 81       	ld	r24, Z
 290:	80 64       	ori	r24, 0x40	; 64
 292:	80 83       	st	Z, r24
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	01 c0       	rjmp	.+2      	; 0x29a <can_tx+0xe4>
 298:	80 e0       	ldi	r24, 0x00	; 0
 29a:	df 91       	pop	r29
 29c:	cf 91       	pop	r28
 29e:	08 95       	ret

000002a0 <can_init>:
 2a0:	cf 93       	push	r28
 2a2:	df 93       	push	r29
 2a4:	86 e0       	ldi	r24, 0x06	; 6
 2a6:	80 93 e2 00 	sts	0x00E2, r24
 2aa:	8c e0       	ldi	r24, 0x0C	; 12
 2ac:	80 93 e3 00 	sts	0x00E3, r24
 2b0:	8a e5       	ldi	r24, 0x5A	; 90
 2b2:	80 93 e4 00 	sts	0x00E4, r24
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	cd ee       	ldi	r28, 0xED	; 237
 2ba:	d0 e0       	ldi	r29, 0x00	; 0
 2bc:	ae ee       	ldi	r26, 0xEE	; 238
 2be:	b0 e0       	ldi	r27, 0x00	; 0
 2c0:	ef ee       	ldi	r30, 0xEF	; 239
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	98 2f       	mov	r25, r24
 2c6:	92 95       	swap	r25
 2c8:	90 7f       	andi	r25, 0xF0	; 240
 2ca:	98 83       	st	Y, r25
 2cc:	1c 92       	st	X, r1
 2ce:	10 82       	st	Z, r1
 2d0:	8f 5f       	subi	r24, 0xFF	; 255
 2d2:	8f 30       	cpi	r24, 0x0F	; 15
 2d4:	b9 f7       	brne	.-18     	; 0x2c4 <can_init+0x24>
 2d6:	e8 ed       	ldi	r30, 0xD8	; 216
 2d8:	f0 e0       	ldi	r31, 0x00	; 0
 2da:	80 81       	ld	r24, Z
 2dc:	82 60       	ori	r24, 0x02	; 2
 2de:	80 83       	st	Z, r24
 2e0:	80 ea       	ldi	r24, 0xA0	; 160
 2e2:	80 93 db 00 	sts	0x00DB, r24
 2e6:	df 91       	pop	r29
 2e8:	cf 91       	pop	r28
 2ea:	08 95       	ret

000002ec <can_packet_send>:
	*/
}

BOOL can_packet_send(char mob, CAN_packet *packet) {
	/* Clear global interrupts */
	cli();
 2ec:	f8 94       	cli
	BOOL result = can_tx(mob, packet);
 2ee:	63 df       	rcall	.-314    	; 0x1b6 <can_tx>
	/* Set global interrupts */
	sei();
 2f0:	78 94       	sei
	return result;
}
 2f2:	08 95       	ret

000002f4 <inits>:
	printf("\r\nInitialization complete");
}

void response(CAN_packet* p, unsigned int mob) {
	(void)mob;
	printf("\r\nReceived");
 2f4:	0f 93       	push	r16
 2f6:	1f 93       	push	r17
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	ec 01       	movw	r28, r24
 2fe:	8b 01       	movw	r16, r22
 300:	cf df       	rcall	.-98     	; 0x2a0 <can_init>
 302:	61 e0       	ldi	r22, 0x01	; 1
 304:	83 e3       	ldi	r24, 0x33	; 51
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	d6 d0       	rcall	.+428    	; 0x4b6 <USART_init>
 30a:	ae d0       	rcall	.+348    	; 0x468 <timer0_init>
 30c:	b8 01       	movw	r22, r16
 30e:	ce 01       	movw	r24, r28
 310:	78 d0       	rcall	.+240    	; 0x402 <sw_init>
 312:	86 e0       	ldi	r24, 0x06	; 6
 314:	91 e0       	ldi	r25, 0x01	; 1
 316:	9f 93       	push	r25
 318:	8f 93       	push	r24
 31a:	3b d1       	rcall	.+630    	; 0x592 <printf>
 31c:	0f 90       	pop	r0
 31e:	0f 90       	pop	r0
 320:	df 91       	pop	r29
 322:	cf 91       	pop	r28
 324:	1f 91       	pop	r17
 326:	0f 91       	pop	r16
 328:	08 95       	ret

0000032a <main>:
}


int main(void)
{
 32a:	cf 93       	push	r28
 32c:	df 93       	push	r29
 32e:	cd b7       	in	r28, 0x3d	; 61
 330:	de b7       	in	r29, 0x3e	; 62
 332:	a1 97       	sbiw	r28, 0x21	; 33
 334:	0f b6       	in	r0, 0x3f	; 63
 336:	f8 94       	cli
 338:	de bf       	out	0x3e, r29	; 62
 33a:	0f be       	out	0x3f, r0	; 63
 33c:	cd bf       	out	0x3d, r28	; 61
	/* Make two CAN packets */
	CAN_packet current;
	CAN_packet updated;
	
	/* Initialize module */
	inits(&current, &updated);
 33e:	be 01       	movw	r22, r28
 340:	64 5f       	subi	r22, 0xF4	; 244
 342:	7f 4f       	sbci	r23, 0xFF	; 255
 344:	ce 01       	movw	r24, r28
 346:	01 96       	adiw	r24, 0x01	; 1
 348:	d5 df       	rcall	.-86     	; 0x2f4 <inits>
	
	DDRB = 0x00;
 34a:	14 b8       	out	0x04, r1	; 4
	PORTB = 0xff;
 34c:	8f ef       	ldi	r24, 0xFF	; 255
 34e:	85 b9       	out	0x05, r24	; 5
    for(;;) {
		_delay_ms(100);
		/* Write input to CAN_packet "current" */
		updated = sw_input(); 
 350:	1b e0       	ldi	r17, 0x0B	; 11
			/* Send a message with new data */
			ret = can_packet_send(1, &updated);
			current = updated;
		}
		if (ret) {
			printf("\r\nDead man's switch");
 352:	0f 2e       	mov	r0, r31
 354:	fb e2       	ldi	r31, 0x2B	; 43
 356:	ef 2e       	mov	r14, r31
 358:	f1 e0       	ldi	r31, 0x01	; 1
 35a:	ff 2e       	mov	r15, r31
 35c:	f0 2d       	mov	r31, r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 35e:	2f ef       	ldi	r18, 0xFF	; 255
 360:	80 e7       	ldi	r24, 0x70	; 112
 362:	92 e0       	ldi	r25, 0x02	; 2
 364:	21 50       	subi	r18, 0x01	; 1
 366:	80 40       	sbci	r24, 0x00	; 0
 368:	90 40       	sbci	r25, 0x00	; 0
 36a:	e1 f7       	brne	.-8      	; 0x364 <main+0x3a>
 36c:	00 c0       	rjmp	.+0      	; 0x36e <main+0x44>
 36e:	00 00       	nop
	DDRB = 0x00;
	PORTB = 0xff;
    for(;;) {
		_delay_ms(100);
		/* Write input to CAN_packet "current" */
		updated = sw_input(); 
 370:	ce 01       	movw	r24, r28
 372:	47 96       	adiw	r24, 0x17	; 23
 374:	2a d0       	rcall	.+84     	; 0x3ca <sw_input>
 376:	fe 01       	movw	r30, r28
 378:	77 96       	adiw	r30, 0x17	; 23
 37a:	de 01       	movw	r26, r28
 37c:	1c 96       	adiw	r26, 0x0c	; 12
 37e:	81 2f       	mov	r24, r17
 380:	01 90       	ld	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	8a 95       	dec	r24
 386:	e1 f7       	brne	.-8      	; 0x380 <main+0x56>
		/* Compare the two packets */
		different = memcmp(current.data, updated.data, 8);
 388:	48 e0       	ldi	r20, 0x08	; 8
 38a:	50 e0       	ldi	r21, 0x00	; 0
 38c:	be 01       	movw	r22, r28
 38e:	61 5f       	subi	r22, 0xF1	; 241
 390:	7f 4f       	sbci	r23, 0xFF	; 255
 392:	ce 01       	movw	r24, r28
 394:	04 96       	adiw	r24, 0x04	; 4
 396:	a6 d0       	rcall	.+332    	; 0x4e4 <memcmp>
		if (different) {
 398:	89 2b       	or	r24, r25
 39a:	a9 f0       	breq	.+42     	; 0x3c6 <main+0x9c>
			/* Send a message with new data */
			ret = can_packet_send(1, &updated);
 39c:	be 01       	movw	r22, r28
 39e:	64 5f       	subi	r22, 0xF4	; 244
 3a0:	7f 4f       	sbci	r23, 0xFF	; 255
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	a3 df       	rcall	.-186    	; 0x2ec <can_packet_send>
			current = updated;
 3a6:	fe 01       	movw	r30, r28
 3a8:	3c 96       	adiw	r30, 0x0c	; 12
 3aa:	de 01       	movw	r26, r28
 3ac:	11 96       	adiw	r26, 0x01	; 1
 3ae:	91 2f       	mov	r25, r17
 3b0:	01 90       	ld	r0, Z+
 3b2:	0d 92       	st	X+, r0
 3b4:	9a 95       	dec	r25
 3b6:	e1 f7       	brne	.-8      	; 0x3b0 <main+0x86>
		}
		if (ret) {
 3b8:	88 23       	and	r24, r24
 3ba:	29 f0       	breq	.+10     	; 0x3c6 <main+0x9c>
			printf("\r\nDead man's switch");
 3bc:	ff 92       	push	r15
 3be:	ef 92       	push	r14
 3c0:	e8 d0       	rcall	.+464    	; 0x592 <printf>
 3c2:	0f 90       	pop	r0
 3c4:	0f 90       	pop	r0
			ret = FALSE;
		}
		//TODO: if successfully read, stop sending!
		asm("sleep");;
 3c6:	88 95       	sleep
	}
 3c8:	ca cf       	rjmp	.-108    	; 0x35e <main+0x34>

000003ca <sw_input>:
void sw_init( CAN_packet *current, CAN_packet *updated) {
	*current = sw_input();
	*updated = sw_input();
}

CAN_packet sw_input( void) {
 3ca:	fc 01       	movw	r30, r24
	CAN_packet message;
	message.id = ID_steeringWheel;
	message.length = 2;
	
	/* Read deadmans button */
	if(!test_bit(PINB, PB4)) {
 3cc:	1c 9b       	sbis	0x03, 4	; 3
 3ce:	02 c0       	rjmp	.+4      	; 0x3d4 <sw_input+0xa>
		message.data[0] = 15;
	} else {
		message.data[0] = 0;
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	01 c0       	rjmp	.+2      	; 0x3d6 <sw_input+0xc>
	message.id = ID_steeringWheel;
	message.length = 2;
	
	/* Read deadmans button */
	if(!test_bit(PINB, PB4)) {
		message.data[0] = 15;
 3d4:	9f e0       	ldi	r25, 0x0F	; 15
	message.data[5] = 5;
	message.data[6] = 6;
	message.data[7] = 7;
	message.data[8] = 8; //  a problem!
	
	return message;
 3d6:	2f e1       	ldi	r18, 0x1F	; 31
 3d8:	30 e0       	ldi	r19, 0x00	; 0
 3da:	31 83       	std	Z+1, r19	; 0x01
 3dc:	20 83       	st	Z, r18
 3de:	82 e0       	ldi	r24, 0x02	; 2
 3e0:	82 83       	std	Z+2, r24	; 0x02
 3e2:	93 83       	std	Z+3, r25	; 0x03
 3e4:	91 e0       	ldi	r25, 0x01	; 1
 3e6:	94 83       	std	Z+4, r25	; 0x04
 3e8:	85 83       	std	Z+5, r24	; 0x05
 3ea:	83 e0       	ldi	r24, 0x03	; 3
 3ec:	86 83       	std	Z+6, r24	; 0x06
 3ee:	84 e0       	ldi	r24, 0x04	; 4
 3f0:	87 83       	std	Z+7, r24	; 0x07
 3f2:	85 e0       	ldi	r24, 0x05	; 5
 3f4:	80 87       	std	Z+8, r24	; 0x08
 3f6:	86 e0       	ldi	r24, 0x06	; 6
 3f8:	81 87       	std	Z+9, r24	; 0x09
 3fa:	87 e0       	ldi	r24, 0x07	; 7
 3fc:	82 87       	std	Z+10, r24	; 0x0a
}
 3fe:	cf 01       	movw	r24, r30
 400:	08 95       	ret

00000402 <sw_init>:


CAN_packet current;
CAN_packet updated;

void sw_init( CAN_packet *current, CAN_packet *updated) {
 402:	ef 92       	push	r14
 404:	ff 92       	push	r15
 406:	0f 93       	push	r16
 408:	1f 93       	push	r17
 40a:	cf 93       	push	r28
 40c:	df 93       	push	r29
 40e:	cd b7       	in	r28, 0x3d	; 61
 410:	de b7       	in	r29, 0x3e	; 62
 412:	2b 97       	sbiw	r28, 0x0b	; 11
 414:	0f b6       	in	r0, 0x3f	; 63
 416:	f8 94       	cli
 418:	de bf       	out	0x3e, r29	; 62
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	cd bf       	out	0x3d, r28	; 61
 41e:	7c 01       	movw	r14, r24
 420:	8b 01       	movw	r16, r22
	*current = sw_input();
 422:	ce 01       	movw	r24, r28
 424:	01 96       	adiw	r24, 0x01	; 1
 426:	d1 df       	rcall	.-94     	; 0x3ca <sw_input>
 428:	9b e0       	ldi	r25, 0x0B	; 11
 42a:	fe 01       	movw	r30, r28
 42c:	31 96       	adiw	r30, 0x01	; 1
 42e:	d7 01       	movw	r26, r14
 430:	01 90       	ld	r0, Z+
 432:	0d 92       	st	X+, r0
 434:	9a 95       	dec	r25
 436:	e1 f7       	brne	.-8      	; 0x430 <sw_init+0x2e>
	*updated = sw_input();
 438:	ce 01       	movw	r24, r28
 43a:	01 96       	adiw	r24, 0x01	; 1
 43c:	c6 df       	rcall	.-116    	; 0x3ca <sw_input>
 43e:	8b e0       	ldi	r24, 0x0B	; 11
 440:	fe 01       	movw	r30, r28
 442:	31 96       	adiw	r30, 0x01	; 1
 444:	d8 01       	movw	r26, r16
 446:	01 90       	ld	r0, Z+
 448:	0d 92       	st	X+, r0
 44a:	8a 95       	dec	r24
 44c:	e1 f7       	brne	.-8      	; 0x446 <sw_init+0x44>
}
 44e:	2b 96       	adiw	r28, 0x0b	; 11
 450:	0f b6       	in	r0, 0x3f	; 63
 452:	f8 94       	cli
 454:	de bf       	out	0x3e, r29	; 62
 456:	0f be       	out	0x3f, r0	; 63
 458:	cd bf       	out	0x3d, r28	; 61
 45a:	df 91       	pop	r29
 45c:	cf 91       	pop	r28
 45e:	1f 91       	pop	r17
 460:	0f 91       	pop	r16
 462:	ff 90       	pop	r15
 464:	ef 90       	pop	r14
 466:	08 95       	ret

00000468 <timer0_init>:

#include "timer0.h"

void timer0_init( void) {
	/* clk/1024 */
	set_bit(TCCR0A, CS02);
 468:	84 b5       	in	r24, 0x24	; 36
 46a:	84 60       	ori	r24, 0x04	; 4
 46c:	84 bd       	out	0x24, r24	; 36
	set_bit(TCCR0A, CS00);
 46e:	84 b5       	in	r24, 0x24	; 36
 470:	81 60       	ori	r24, 0x01	; 1
 472:	84 bd       	out	0x24, r24	; 36
	/* Enable timer overflow */
	set_bit(TIMSK0, TOIE0);
 474:	ee e6       	ldi	r30, 0x6E	; 110
 476:	f0 e0       	ldi	r31, 0x00	; 0
 478:	80 81       	ld	r24, Z
 47a:	81 60       	ori	r24, 0x01	; 1
 47c:	80 83       	st	Z, r24
 47e:	08 95       	ret

00000480 <__vector_17>:
}

ISR(TIMER0_OVF_vect) {
 480:	1f 92       	push	r1
 482:	0f 92       	push	r0
 484:	0f b6       	in	r0, 0x3f	; 63
 486:	0f 92       	push	r0
 488:	11 24       	eor	r1, r1
	
	
 48a:	0f 90       	pop	r0
 48c:	0f be       	out	0x3f, r0	; 63
 48e:	0f 90       	pop	r0
 490:	1f 90       	pop	r1
 492:	18 95       	reti

00000494 <USART_tx>:
	fdevopen(USART_tx, USART_rx);
}

_Bool USART_tx(unsigned char data) {
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)));
 494:	e0 ec       	ldi	r30, 0xC0	; 192
 496:	f0 e0       	ldi	r31, 0x00	; 0
 498:	90 81       	ld	r25, Z
 49a:	95 ff       	sbrs	r25, 5
 49c:	fd cf       	rjmp	.-6      	; 0x498 <USART_tx+0x4>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 49e:	80 93 c6 00 	sts	0x00C6, r24
	// T0D0 implement 
	return true;
}
 4a2:	81 e0       	ldi	r24, 0x01	; 1
 4a4:	08 95       	ret

000004a6 <USART_rx>:

unsigned char USART_rx(void) {
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)));
 4a6:	e0 ec       	ldi	r30, 0xC0	; 192
 4a8:	f0 e0       	ldi	r31, 0x00	; 0
 4aa:	80 81       	ld	r24, Z
 4ac:	88 23       	and	r24, r24
 4ae:	ec f7       	brge	.-6      	; 0x4aa <USART_rx+0x4>
	/* Get and return received data from buffer */
	return UDR0;
 4b0:	80 91 c6 00 	lds	r24, 0x00C6
}
 4b4:	08 95       	ret

000004b6 <USART_init>:

/*! Initialize the serial communication
	baud is the baud rate */
void USART_init(unsigned int baud, _Bool onOff) {
	/* Set baud rate */
	UBRR0H = (unsigned char) (baud>>8);
 4b6:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char) baud;
 4ba:	80 93 c4 00 	sts	0x00C4, r24
	/* Set frame format: Asynchronous normal mode, 8data, no parity  1 stop bit */
	/*(0<<UMSEL0) | (0<<UPM0) | (0<<USBS0) | already set as Initial values */
	UCSR0C = (3<<UCSZ0);
 4be:	86 e0       	ldi	r24, 0x06	; 6
 4c0:	80 93 c2 00 	sts	0x00C2, r24
	/* Enable receiver and transmitter */
	if (onOff) {
 4c4:	66 23       	and	r22, r22
 4c6:	41 f0       	breq	.+16     	; 0x4d8 <USART_init+0x22>
		set_bit(UCSR0B,	RXEN0);
 4c8:	e1 ec       	ldi	r30, 0xC1	; 193
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	80 81       	ld	r24, Z
 4ce:	80 61       	ori	r24, 0x10	; 16
 4d0:	80 83       	st	Z, r24
		set_bit(UCSR0B, TXEN0);
 4d2:	80 81       	ld	r24, Z
 4d4:	88 60       	ori	r24, 0x08	; 8
 4d6:	80 83       	st	Z, r24
	}
	/*!	enables using fprint() instead of USART_tx_string() */
	fdevopen(USART_tx, USART_rx);
 4d8:	63 e5       	ldi	r22, 0x53	; 83
 4da:	72 e0       	ldi	r23, 0x02	; 2
 4dc:	8a e4       	ldi	r24, 0x4A	; 74
 4de:	92 e0       	ldi	r25, 0x02	; 2
 4e0:	0e c0       	rjmp	.+28     	; 0x4fe <fdevopen>
 4e2:	08 95       	ret

000004e4 <memcmp>:
 4e4:	fb 01       	movw	r30, r22
 4e6:	dc 01       	movw	r26, r24
 4e8:	04 c0       	rjmp	.+8      	; 0x4f2 <memcmp+0xe>
 4ea:	8d 91       	ld	r24, X+
 4ec:	01 90       	ld	r0, Z+
 4ee:	80 19       	sub	r24, r0
 4f0:	21 f4       	brne	.+8      	; 0x4fa <memcmp+0x16>
 4f2:	41 50       	subi	r20, 0x01	; 1
 4f4:	50 40       	sbci	r21, 0x00	; 0
 4f6:	c8 f7       	brcc	.-14     	; 0x4ea <memcmp+0x6>
 4f8:	88 1b       	sub	r24, r24
 4fa:	99 0b       	sbc	r25, r25
 4fc:	08 95       	ret

000004fe <fdevopen>:
 4fe:	0f 93       	push	r16
 500:	1f 93       	push	r17
 502:	cf 93       	push	r28
 504:	df 93       	push	r29
 506:	00 97       	sbiw	r24, 0x00	; 0
 508:	31 f4       	brne	.+12     	; 0x516 <fdevopen+0x18>
 50a:	61 15       	cp	r22, r1
 50c:	71 05       	cpc	r23, r1
 50e:	19 f4       	brne	.+6      	; 0x516 <fdevopen+0x18>
 510:	80 e0       	ldi	r24, 0x00	; 0
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	39 c0       	rjmp	.+114    	; 0x588 <fdevopen+0x8a>
 516:	8b 01       	movw	r16, r22
 518:	ec 01       	movw	r28, r24
 51a:	6e e0       	ldi	r22, 0x0E	; 14
 51c:	70 e0       	ldi	r23, 0x00	; 0
 51e:	81 e0       	ldi	r24, 0x01	; 1
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	38 d2       	rcall	.+1136   	; 0x994 <calloc>
 524:	fc 01       	movw	r30, r24
 526:	89 2b       	or	r24, r25
 528:	99 f3       	breq	.-26     	; 0x510 <fdevopen+0x12>
 52a:	80 e8       	ldi	r24, 0x80	; 128
 52c:	83 83       	std	Z+3, r24	; 0x03
 52e:	01 15       	cp	r16, r1
 530:	11 05       	cpc	r17, r1
 532:	71 f0       	breq	.+28     	; 0x550 <fdevopen+0x52>
 534:	13 87       	std	Z+11, r17	; 0x0b
 536:	02 87       	std	Z+10, r16	; 0x0a
 538:	81 e8       	ldi	r24, 0x81	; 129
 53a:	83 83       	std	Z+3, r24	; 0x03
 53c:	80 91 69 01 	lds	r24, 0x0169
 540:	90 91 6a 01 	lds	r25, 0x016A
 544:	89 2b       	or	r24, r25
 546:	21 f4       	brne	.+8      	; 0x550 <fdevopen+0x52>
 548:	f0 93 6a 01 	sts	0x016A, r31
 54c:	e0 93 69 01 	sts	0x0169, r30
 550:	20 97       	sbiw	r28, 0x00	; 0
 552:	c9 f0       	breq	.+50     	; 0x586 <fdevopen+0x88>
 554:	d1 87       	std	Z+9, r29	; 0x09
 556:	c0 87       	std	Z+8, r28	; 0x08
 558:	83 81       	ldd	r24, Z+3	; 0x03
 55a:	82 60       	ori	r24, 0x02	; 2
 55c:	83 83       	std	Z+3, r24	; 0x03
 55e:	80 91 6b 01 	lds	r24, 0x016B
 562:	90 91 6c 01 	lds	r25, 0x016C
 566:	89 2b       	or	r24, r25
 568:	71 f4       	brne	.+28     	; 0x586 <fdevopen+0x88>
 56a:	f0 93 6c 01 	sts	0x016C, r31
 56e:	e0 93 6b 01 	sts	0x016B, r30
 572:	80 91 6d 01 	lds	r24, 0x016D
 576:	90 91 6e 01 	lds	r25, 0x016E
 57a:	89 2b       	or	r24, r25
 57c:	21 f4       	brne	.+8      	; 0x586 <fdevopen+0x88>
 57e:	f0 93 6e 01 	sts	0x016E, r31
 582:	e0 93 6d 01 	sts	0x016D, r30
 586:	cf 01       	movw	r24, r30
 588:	df 91       	pop	r29
 58a:	cf 91       	pop	r28
 58c:	1f 91       	pop	r17
 58e:	0f 91       	pop	r16
 590:	08 95       	ret

00000592 <printf>:
 592:	cf 93       	push	r28
 594:	df 93       	push	r29
 596:	cd b7       	in	r28, 0x3d	; 61
 598:	de b7       	in	r29, 0x3e	; 62
 59a:	ae 01       	movw	r20, r28
 59c:	4b 5f       	subi	r20, 0xFB	; 251
 59e:	5f 4f       	sbci	r21, 0xFF	; 255
 5a0:	fa 01       	movw	r30, r20
 5a2:	61 91       	ld	r22, Z+
 5a4:	71 91       	ld	r23, Z+
 5a6:	af 01       	movw	r20, r30
 5a8:	80 91 6b 01 	lds	r24, 0x016B
 5ac:	90 91 6c 01 	lds	r25, 0x016C
 5b0:	03 d0       	rcall	.+6      	; 0x5b8 <vfprintf>
 5b2:	df 91       	pop	r29
 5b4:	cf 91       	pop	r28
 5b6:	08 95       	ret

000005b8 <vfprintf>:
 5b8:	2f 92       	push	r2
 5ba:	3f 92       	push	r3
 5bc:	4f 92       	push	r4
 5be:	5f 92       	push	r5
 5c0:	6f 92       	push	r6
 5c2:	7f 92       	push	r7
 5c4:	8f 92       	push	r8
 5c6:	9f 92       	push	r9
 5c8:	af 92       	push	r10
 5ca:	bf 92       	push	r11
 5cc:	cf 92       	push	r12
 5ce:	df 92       	push	r13
 5d0:	ef 92       	push	r14
 5d2:	ff 92       	push	r15
 5d4:	0f 93       	push	r16
 5d6:	1f 93       	push	r17
 5d8:	cf 93       	push	r28
 5da:	df 93       	push	r29
 5dc:	cd b7       	in	r28, 0x3d	; 61
 5de:	de b7       	in	r29, 0x3e	; 62
 5e0:	2c 97       	sbiw	r28, 0x0c	; 12
 5e2:	0f b6       	in	r0, 0x3f	; 63
 5e4:	f8 94       	cli
 5e6:	de bf       	out	0x3e, r29	; 62
 5e8:	0f be       	out	0x3f, r0	; 63
 5ea:	cd bf       	out	0x3d, r28	; 61
 5ec:	7c 01       	movw	r14, r24
 5ee:	6b 01       	movw	r12, r22
 5f0:	8a 01       	movw	r16, r20
 5f2:	fc 01       	movw	r30, r24
 5f4:	17 82       	std	Z+7, r1	; 0x07
 5f6:	16 82       	std	Z+6, r1	; 0x06
 5f8:	83 81       	ldd	r24, Z+3	; 0x03
 5fa:	81 ff       	sbrs	r24, 1
 5fc:	b0 c1       	rjmp	.+864    	; 0x95e <vfprintf+0x3a6>
 5fe:	ce 01       	movw	r24, r28
 600:	01 96       	adiw	r24, 0x01	; 1
 602:	4c 01       	movw	r8, r24
 604:	f7 01       	movw	r30, r14
 606:	93 81       	ldd	r25, Z+3	; 0x03
 608:	f6 01       	movw	r30, r12
 60a:	93 fd       	sbrc	r25, 3
 60c:	85 91       	lpm	r24, Z+
 60e:	93 ff       	sbrs	r25, 3
 610:	81 91       	ld	r24, Z+
 612:	6f 01       	movw	r12, r30
 614:	88 23       	and	r24, r24
 616:	09 f4       	brne	.+2      	; 0x61a <vfprintf+0x62>
 618:	9e c1       	rjmp	.+828    	; 0x956 <vfprintf+0x39e>
 61a:	85 32       	cpi	r24, 0x25	; 37
 61c:	39 f4       	brne	.+14     	; 0x62c <vfprintf+0x74>
 61e:	93 fd       	sbrc	r25, 3
 620:	85 91       	lpm	r24, Z+
 622:	93 ff       	sbrs	r25, 3
 624:	81 91       	ld	r24, Z+
 626:	6f 01       	movw	r12, r30
 628:	85 32       	cpi	r24, 0x25	; 37
 62a:	21 f4       	brne	.+8      	; 0x634 <vfprintf+0x7c>
 62c:	b7 01       	movw	r22, r14
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	15 d3       	rcall	.+1578   	; 0xc5c <fputc>
 632:	e8 cf       	rjmp	.-48     	; 0x604 <vfprintf+0x4c>
 634:	51 2c       	mov	r5, r1
 636:	31 2c       	mov	r3, r1
 638:	20 e0       	ldi	r18, 0x00	; 0
 63a:	20 32       	cpi	r18, 0x20	; 32
 63c:	a0 f4       	brcc	.+40     	; 0x666 <vfprintf+0xae>
 63e:	8b 32       	cpi	r24, 0x2B	; 43
 640:	69 f0       	breq	.+26     	; 0x65c <vfprintf+0xa4>
 642:	30 f4       	brcc	.+12     	; 0x650 <vfprintf+0x98>
 644:	80 32       	cpi	r24, 0x20	; 32
 646:	59 f0       	breq	.+22     	; 0x65e <vfprintf+0xa6>
 648:	83 32       	cpi	r24, 0x23	; 35
 64a:	69 f4       	brne	.+26     	; 0x666 <vfprintf+0xae>
 64c:	20 61       	ori	r18, 0x10	; 16
 64e:	2c c0       	rjmp	.+88     	; 0x6a8 <vfprintf+0xf0>
 650:	8d 32       	cpi	r24, 0x2D	; 45
 652:	39 f0       	breq	.+14     	; 0x662 <vfprintf+0xaa>
 654:	80 33       	cpi	r24, 0x30	; 48
 656:	39 f4       	brne	.+14     	; 0x666 <vfprintf+0xae>
 658:	21 60       	ori	r18, 0x01	; 1
 65a:	26 c0       	rjmp	.+76     	; 0x6a8 <vfprintf+0xf0>
 65c:	22 60       	ori	r18, 0x02	; 2
 65e:	24 60       	ori	r18, 0x04	; 4
 660:	23 c0       	rjmp	.+70     	; 0x6a8 <vfprintf+0xf0>
 662:	28 60       	ori	r18, 0x08	; 8
 664:	21 c0       	rjmp	.+66     	; 0x6a8 <vfprintf+0xf0>
 666:	27 fd       	sbrc	r18, 7
 668:	27 c0       	rjmp	.+78     	; 0x6b8 <vfprintf+0x100>
 66a:	30 ed       	ldi	r19, 0xD0	; 208
 66c:	38 0f       	add	r19, r24
 66e:	3a 30       	cpi	r19, 0x0A	; 10
 670:	78 f4       	brcc	.+30     	; 0x690 <vfprintf+0xd8>
 672:	26 ff       	sbrs	r18, 6
 674:	06 c0       	rjmp	.+12     	; 0x682 <vfprintf+0xca>
 676:	fa e0       	ldi	r31, 0x0A	; 10
 678:	5f 9e       	mul	r5, r31
 67a:	30 0d       	add	r19, r0
 67c:	11 24       	eor	r1, r1
 67e:	53 2e       	mov	r5, r19
 680:	13 c0       	rjmp	.+38     	; 0x6a8 <vfprintf+0xf0>
 682:	8a e0       	ldi	r24, 0x0A	; 10
 684:	38 9e       	mul	r3, r24
 686:	30 0d       	add	r19, r0
 688:	11 24       	eor	r1, r1
 68a:	33 2e       	mov	r3, r19
 68c:	20 62       	ori	r18, 0x20	; 32
 68e:	0c c0       	rjmp	.+24     	; 0x6a8 <vfprintf+0xf0>
 690:	8e 32       	cpi	r24, 0x2E	; 46
 692:	21 f4       	brne	.+8      	; 0x69c <vfprintf+0xe4>
 694:	26 fd       	sbrc	r18, 6
 696:	5f c1       	rjmp	.+702    	; 0x956 <vfprintf+0x39e>
 698:	20 64       	ori	r18, 0x40	; 64
 69a:	06 c0       	rjmp	.+12     	; 0x6a8 <vfprintf+0xf0>
 69c:	8c 36       	cpi	r24, 0x6C	; 108
 69e:	11 f4       	brne	.+4      	; 0x6a4 <vfprintf+0xec>
 6a0:	20 68       	ori	r18, 0x80	; 128
 6a2:	02 c0       	rjmp	.+4      	; 0x6a8 <vfprintf+0xf0>
 6a4:	88 36       	cpi	r24, 0x68	; 104
 6a6:	41 f4       	brne	.+16     	; 0x6b8 <vfprintf+0x100>
 6a8:	f6 01       	movw	r30, r12
 6aa:	93 fd       	sbrc	r25, 3
 6ac:	85 91       	lpm	r24, Z+
 6ae:	93 ff       	sbrs	r25, 3
 6b0:	81 91       	ld	r24, Z+
 6b2:	6f 01       	movw	r12, r30
 6b4:	81 11       	cpse	r24, r1
 6b6:	c1 cf       	rjmp	.-126    	; 0x63a <vfprintf+0x82>
 6b8:	98 2f       	mov	r25, r24
 6ba:	9f 7d       	andi	r25, 0xDF	; 223
 6bc:	95 54       	subi	r25, 0x45	; 69
 6be:	93 30       	cpi	r25, 0x03	; 3
 6c0:	28 f4       	brcc	.+10     	; 0x6cc <vfprintf+0x114>
 6c2:	0c 5f       	subi	r16, 0xFC	; 252
 6c4:	1f 4f       	sbci	r17, 0xFF	; 255
 6c6:	ff e3       	ldi	r31, 0x3F	; 63
 6c8:	f9 83       	std	Y+1, r31	; 0x01
 6ca:	0d c0       	rjmp	.+26     	; 0x6e6 <vfprintf+0x12e>
 6cc:	83 36       	cpi	r24, 0x63	; 99
 6ce:	31 f0       	breq	.+12     	; 0x6dc <vfprintf+0x124>
 6d0:	83 37       	cpi	r24, 0x73	; 115
 6d2:	71 f0       	breq	.+28     	; 0x6f0 <vfprintf+0x138>
 6d4:	83 35       	cpi	r24, 0x53	; 83
 6d6:	09 f0       	breq	.+2      	; 0x6da <vfprintf+0x122>
 6d8:	57 c0       	rjmp	.+174    	; 0x788 <vfprintf+0x1d0>
 6da:	21 c0       	rjmp	.+66     	; 0x71e <vfprintf+0x166>
 6dc:	f8 01       	movw	r30, r16
 6de:	80 81       	ld	r24, Z
 6e0:	89 83       	std	Y+1, r24	; 0x01
 6e2:	0e 5f       	subi	r16, 0xFE	; 254
 6e4:	1f 4f       	sbci	r17, 0xFF	; 255
 6e6:	44 24       	eor	r4, r4
 6e8:	43 94       	inc	r4
 6ea:	51 2c       	mov	r5, r1
 6ec:	54 01       	movw	r10, r8
 6ee:	14 c0       	rjmp	.+40     	; 0x718 <vfprintf+0x160>
 6f0:	38 01       	movw	r6, r16
 6f2:	f2 e0       	ldi	r31, 0x02	; 2
 6f4:	6f 0e       	add	r6, r31
 6f6:	71 1c       	adc	r7, r1
 6f8:	f8 01       	movw	r30, r16
 6fa:	a0 80       	ld	r10, Z
 6fc:	b1 80       	ldd	r11, Z+1	; 0x01
 6fe:	26 ff       	sbrs	r18, 6
 700:	03 c0       	rjmp	.+6      	; 0x708 <vfprintf+0x150>
 702:	65 2d       	mov	r22, r5
 704:	70 e0       	ldi	r23, 0x00	; 0
 706:	02 c0       	rjmp	.+4      	; 0x70c <vfprintf+0x154>
 708:	6f ef       	ldi	r22, 0xFF	; 255
 70a:	7f ef       	ldi	r23, 0xFF	; 255
 70c:	c5 01       	movw	r24, r10
 70e:	2c 87       	std	Y+12, r18	; 0x0c
 710:	9a d2       	rcall	.+1332   	; 0xc46 <strnlen>
 712:	2c 01       	movw	r4, r24
 714:	83 01       	movw	r16, r6
 716:	2c 85       	ldd	r18, Y+12	; 0x0c
 718:	2f 77       	andi	r18, 0x7F	; 127
 71a:	22 2e       	mov	r2, r18
 71c:	16 c0       	rjmp	.+44     	; 0x74a <vfprintf+0x192>
 71e:	38 01       	movw	r6, r16
 720:	f2 e0       	ldi	r31, 0x02	; 2
 722:	6f 0e       	add	r6, r31
 724:	71 1c       	adc	r7, r1
 726:	f8 01       	movw	r30, r16
 728:	a0 80       	ld	r10, Z
 72a:	b1 80       	ldd	r11, Z+1	; 0x01
 72c:	26 ff       	sbrs	r18, 6
 72e:	03 c0       	rjmp	.+6      	; 0x736 <vfprintf+0x17e>
 730:	65 2d       	mov	r22, r5
 732:	70 e0       	ldi	r23, 0x00	; 0
 734:	02 c0       	rjmp	.+4      	; 0x73a <vfprintf+0x182>
 736:	6f ef       	ldi	r22, 0xFF	; 255
 738:	7f ef       	ldi	r23, 0xFF	; 255
 73a:	c5 01       	movw	r24, r10
 73c:	2c 87       	std	Y+12, r18	; 0x0c
 73e:	71 d2       	rcall	.+1250   	; 0xc22 <strnlen_P>
 740:	2c 01       	movw	r4, r24
 742:	2c 85       	ldd	r18, Y+12	; 0x0c
 744:	20 68       	ori	r18, 0x80	; 128
 746:	22 2e       	mov	r2, r18
 748:	83 01       	movw	r16, r6
 74a:	23 fc       	sbrc	r2, 3
 74c:	19 c0       	rjmp	.+50     	; 0x780 <vfprintf+0x1c8>
 74e:	83 2d       	mov	r24, r3
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	48 16       	cp	r4, r24
 754:	59 06       	cpc	r5, r25
 756:	a0 f4       	brcc	.+40     	; 0x780 <vfprintf+0x1c8>
 758:	b7 01       	movw	r22, r14
 75a:	80 e2       	ldi	r24, 0x20	; 32
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	7e d2       	rcall	.+1276   	; 0xc5c <fputc>
 760:	3a 94       	dec	r3
 762:	f5 cf       	rjmp	.-22     	; 0x74e <vfprintf+0x196>
 764:	f5 01       	movw	r30, r10
 766:	27 fc       	sbrc	r2, 7
 768:	85 91       	lpm	r24, Z+
 76a:	27 fe       	sbrs	r2, 7
 76c:	81 91       	ld	r24, Z+
 76e:	5f 01       	movw	r10, r30
 770:	b7 01       	movw	r22, r14
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	73 d2       	rcall	.+1254   	; 0xc5c <fputc>
 776:	31 10       	cpse	r3, r1
 778:	3a 94       	dec	r3
 77a:	f1 e0       	ldi	r31, 0x01	; 1
 77c:	4f 1a       	sub	r4, r31
 77e:	51 08       	sbc	r5, r1
 780:	41 14       	cp	r4, r1
 782:	51 04       	cpc	r5, r1
 784:	79 f7       	brne	.-34     	; 0x764 <vfprintf+0x1ac>
 786:	de c0       	rjmp	.+444    	; 0x944 <vfprintf+0x38c>
 788:	84 36       	cpi	r24, 0x64	; 100
 78a:	11 f0       	breq	.+4      	; 0x790 <vfprintf+0x1d8>
 78c:	89 36       	cpi	r24, 0x69	; 105
 78e:	31 f5       	brne	.+76     	; 0x7dc <vfprintf+0x224>
 790:	f8 01       	movw	r30, r16
 792:	27 ff       	sbrs	r18, 7
 794:	07 c0       	rjmp	.+14     	; 0x7a4 <vfprintf+0x1ec>
 796:	60 81       	ld	r22, Z
 798:	71 81       	ldd	r23, Z+1	; 0x01
 79a:	82 81       	ldd	r24, Z+2	; 0x02
 79c:	93 81       	ldd	r25, Z+3	; 0x03
 79e:	0c 5f       	subi	r16, 0xFC	; 252
 7a0:	1f 4f       	sbci	r17, 0xFF	; 255
 7a2:	08 c0       	rjmp	.+16     	; 0x7b4 <vfprintf+0x1fc>
 7a4:	60 81       	ld	r22, Z
 7a6:	71 81       	ldd	r23, Z+1	; 0x01
 7a8:	07 2e       	mov	r0, r23
 7aa:	00 0c       	add	r0, r0
 7ac:	88 0b       	sbc	r24, r24
 7ae:	99 0b       	sbc	r25, r25
 7b0:	0e 5f       	subi	r16, 0xFE	; 254
 7b2:	1f 4f       	sbci	r17, 0xFF	; 255
 7b4:	2f 76       	andi	r18, 0x6F	; 111
 7b6:	72 2e       	mov	r7, r18
 7b8:	97 ff       	sbrs	r25, 7
 7ba:	09 c0       	rjmp	.+18     	; 0x7ce <vfprintf+0x216>
 7bc:	90 95       	com	r25
 7be:	80 95       	com	r24
 7c0:	70 95       	com	r23
 7c2:	61 95       	neg	r22
 7c4:	7f 4f       	sbci	r23, 0xFF	; 255
 7c6:	8f 4f       	sbci	r24, 0xFF	; 255
 7c8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ca:	20 68       	ori	r18, 0x80	; 128
 7cc:	72 2e       	mov	r7, r18
 7ce:	2a e0       	ldi	r18, 0x0A	; 10
 7d0:	30 e0       	ldi	r19, 0x00	; 0
 7d2:	a4 01       	movw	r20, r8
 7d4:	7b d2       	rcall	.+1270   	; 0xccc <__ultoa_invert>
 7d6:	a8 2e       	mov	r10, r24
 7d8:	a8 18       	sub	r10, r8
 7da:	43 c0       	rjmp	.+134    	; 0x862 <vfprintf+0x2aa>
 7dc:	85 37       	cpi	r24, 0x75	; 117
 7de:	29 f4       	brne	.+10     	; 0x7ea <vfprintf+0x232>
 7e0:	2f 7e       	andi	r18, 0xEF	; 239
 7e2:	b2 2e       	mov	r11, r18
 7e4:	2a e0       	ldi	r18, 0x0A	; 10
 7e6:	30 e0       	ldi	r19, 0x00	; 0
 7e8:	25 c0       	rjmp	.+74     	; 0x834 <vfprintf+0x27c>
 7ea:	f2 2f       	mov	r31, r18
 7ec:	f9 7f       	andi	r31, 0xF9	; 249
 7ee:	bf 2e       	mov	r11, r31
 7f0:	8f 36       	cpi	r24, 0x6F	; 111
 7f2:	c1 f0       	breq	.+48     	; 0x824 <vfprintf+0x26c>
 7f4:	18 f4       	brcc	.+6      	; 0x7fc <vfprintf+0x244>
 7f6:	88 35       	cpi	r24, 0x58	; 88
 7f8:	79 f0       	breq	.+30     	; 0x818 <vfprintf+0x260>
 7fa:	ad c0       	rjmp	.+346    	; 0x956 <vfprintf+0x39e>
 7fc:	80 37       	cpi	r24, 0x70	; 112
 7fe:	19 f0       	breq	.+6      	; 0x806 <vfprintf+0x24e>
 800:	88 37       	cpi	r24, 0x78	; 120
 802:	21 f0       	breq	.+8      	; 0x80c <vfprintf+0x254>
 804:	a8 c0       	rjmp	.+336    	; 0x956 <vfprintf+0x39e>
 806:	2f 2f       	mov	r18, r31
 808:	20 61       	ori	r18, 0x10	; 16
 80a:	b2 2e       	mov	r11, r18
 80c:	b4 fe       	sbrs	r11, 4
 80e:	0d c0       	rjmp	.+26     	; 0x82a <vfprintf+0x272>
 810:	8b 2d       	mov	r24, r11
 812:	84 60       	ori	r24, 0x04	; 4
 814:	b8 2e       	mov	r11, r24
 816:	09 c0       	rjmp	.+18     	; 0x82a <vfprintf+0x272>
 818:	24 ff       	sbrs	r18, 4
 81a:	0a c0       	rjmp	.+20     	; 0x830 <vfprintf+0x278>
 81c:	9f 2f       	mov	r25, r31
 81e:	96 60       	ori	r25, 0x06	; 6
 820:	b9 2e       	mov	r11, r25
 822:	06 c0       	rjmp	.+12     	; 0x830 <vfprintf+0x278>
 824:	28 e0       	ldi	r18, 0x08	; 8
 826:	30 e0       	ldi	r19, 0x00	; 0
 828:	05 c0       	rjmp	.+10     	; 0x834 <vfprintf+0x27c>
 82a:	20 e1       	ldi	r18, 0x10	; 16
 82c:	30 e0       	ldi	r19, 0x00	; 0
 82e:	02 c0       	rjmp	.+4      	; 0x834 <vfprintf+0x27c>
 830:	20 e1       	ldi	r18, 0x10	; 16
 832:	32 e0       	ldi	r19, 0x02	; 2
 834:	f8 01       	movw	r30, r16
 836:	b7 fe       	sbrs	r11, 7
 838:	07 c0       	rjmp	.+14     	; 0x848 <vfprintf+0x290>
 83a:	60 81       	ld	r22, Z
 83c:	71 81       	ldd	r23, Z+1	; 0x01
 83e:	82 81       	ldd	r24, Z+2	; 0x02
 840:	93 81       	ldd	r25, Z+3	; 0x03
 842:	0c 5f       	subi	r16, 0xFC	; 252
 844:	1f 4f       	sbci	r17, 0xFF	; 255
 846:	06 c0       	rjmp	.+12     	; 0x854 <vfprintf+0x29c>
 848:	60 81       	ld	r22, Z
 84a:	71 81       	ldd	r23, Z+1	; 0x01
 84c:	80 e0       	ldi	r24, 0x00	; 0
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	0e 5f       	subi	r16, 0xFE	; 254
 852:	1f 4f       	sbci	r17, 0xFF	; 255
 854:	a4 01       	movw	r20, r8
 856:	3a d2       	rcall	.+1140   	; 0xccc <__ultoa_invert>
 858:	a8 2e       	mov	r10, r24
 85a:	a8 18       	sub	r10, r8
 85c:	fb 2d       	mov	r31, r11
 85e:	ff 77       	andi	r31, 0x7F	; 127
 860:	7f 2e       	mov	r7, r31
 862:	76 fe       	sbrs	r7, 6
 864:	0b c0       	rjmp	.+22     	; 0x87c <vfprintf+0x2c4>
 866:	37 2d       	mov	r19, r7
 868:	3e 7f       	andi	r19, 0xFE	; 254
 86a:	a5 14       	cp	r10, r5
 86c:	50 f4       	brcc	.+20     	; 0x882 <vfprintf+0x2ca>
 86e:	74 fe       	sbrs	r7, 4
 870:	0a c0       	rjmp	.+20     	; 0x886 <vfprintf+0x2ce>
 872:	72 fc       	sbrc	r7, 2
 874:	08 c0       	rjmp	.+16     	; 0x886 <vfprintf+0x2ce>
 876:	37 2d       	mov	r19, r7
 878:	3e 7e       	andi	r19, 0xEE	; 238
 87a:	05 c0       	rjmp	.+10     	; 0x886 <vfprintf+0x2ce>
 87c:	ba 2c       	mov	r11, r10
 87e:	37 2d       	mov	r19, r7
 880:	03 c0       	rjmp	.+6      	; 0x888 <vfprintf+0x2d0>
 882:	ba 2c       	mov	r11, r10
 884:	01 c0       	rjmp	.+2      	; 0x888 <vfprintf+0x2d0>
 886:	b5 2c       	mov	r11, r5
 888:	34 ff       	sbrs	r19, 4
 88a:	0d c0       	rjmp	.+26     	; 0x8a6 <vfprintf+0x2ee>
 88c:	fe 01       	movw	r30, r28
 88e:	ea 0d       	add	r30, r10
 890:	f1 1d       	adc	r31, r1
 892:	80 81       	ld	r24, Z
 894:	80 33       	cpi	r24, 0x30	; 48
 896:	11 f4       	brne	.+4      	; 0x89c <vfprintf+0x2e4>
 898:	39 7e       	andi	r19, 0xE9	; 233
 89a:	09 c0       	rjmp	.+18     	; 0x8ae <vfprintf+0x2f6>
 89c:	32 ff       	sbrs	r19, 2
 89e:	06 c0       	rjmp	.+12     	; 0x8ac <vfprintf+0x2f4>
 8a0:	b3 94       	inc	r11
 8a2:	b3 94       	inc	r11
 8a4:	04 c0       	rjmp	.+8      	; 0x8ae <vfprintf+0x2f6>
 8a6:	83 2f       	mov	r24, r19
 8a8:	86 78       	andi	r24, 0x86	; 134
 8aa:	09 f0       	breq	.+2      	; 0x8ae <vfprintf+0x2f6>
 8ac:	b3 94       	inc	r11
 8ae:	33 fd       	sbrc	r19, 3
 8b0:	12 c0       	rjmp	.+36     	; 0x8d6 <vfprintf+0x31e>
 8b2:	30 ff       	sbrs	r19, 0
 8b4:	06 c0       	rjmp	.+12     	; 0x8c2 <vfprintf+0x30a>
 8b6:	5a 2c       	mov	r5, r10
 8b8:	b3 14       	cp	r11, r3
 8ba:	18 f4       	brcc	.+6      	; 0x8c2 <vfprintf+0x30a>
 8bc:	53 0c       	add	r5, r3
 8be:	5b 18       	sub	r5, r11
 8c0:	b3 2c       	mov	r11, r3
 8c2:	b3 14       	cp	r11, r3
 8c4:	60 f4       	brcc	.+24     	; 0x8de <vfprintf+0x326>
 8c6:	b7 01       	movw	r22, r14
 8c8:	80 e2       	ldi	r24, 0x20	; 32
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	3c 87       	std	Y+12, r19	; 0x0c
 8ce:	c6 d1       	rcall	.+908    	; 0xc5c <fputc>
 8d0:	b3 94       	inc	r11
 8d2:	3c 85       	ldd	r19, Y+12	; 0x0c
 8d4:	f6 cf       	rjmp	.-20     	; 0x8c2 <vfprintf+0x30a>
 8d6:	b3 14       	cp	r11, r3
 8d8:	10 f4       	brcc	.+4      	; 0x8de <vfprintf+0x326>
 8da:	3b 18       	sub	r3, r11
 8dc:	01 c0       	rjmp	.+2      	; 0x8e0 <vfprintf+0x328>
 8de:	31 2c       	mov	r3, r1
 8e0:	34 ff       	sbrs	r19, 4
 8e2:	11 c0       	rjmp	.+34     	; 0x906 <vfprintf+0x34e>
 8e4:	b7 01       	movw	r22, r14
 8e6:	80 e3       	ldi	r24, 0x30	; 48
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	3c 87       	std	Y+12, r19	; 0x0c
 8ec:	b7 d1       	rcall	.+878    	; 0xc5c <fputc>
 8ee:	3c 85       	ldd	r19, Y+12	; 0x0c
 8f0:	32 ff       	sbrs	r19, 2
 8f2:	16 c0       	rjmp	.+44     	; 0x920 <vfprintf+0x368>
 8f4:	31 fd       	sbrc	r19, 1
 8f6:	03 c0       	rjmp	.+6      	; 0x8fe <vfprintf+0x346>
 8f8:	88 e7       	ldi	r24, 0x78	; 120
 8fa:	90 e0       	ldi	r25, 0x00	; 0
 8fc:	02 c0       	rjmp	.+4      	; 0x902 <vfprintf+0x34a>
 8fe:	88 e5       	ldi	r24, 0x58	; 88
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	b7 01       	movw	r22, r14
 904:	0c c0       	rjmp	.+24     	; 0x91e <vfprintf+0x366>
 906:	83 2f       	mov	r24, r19
 908:	86 78       	andi	r24, 0x86	; 134
 90a:	51 f0       	breq	.+20     	; 0x920 <vfprintf+0x368>
 90c:	31 ff       	sbrs	r19, 1
 90e:	02 c0       	rjmp	.+4      	; 0x914 <vfprintf+0x35c>
 910:	8b e2       	ldi	r24, 0x2B	; 43
 912:	01 c0       	rjmp	.+2      	; 0x916 <vfprintf+0x35e>
 914:	80 e2       	ldi	r24, 0x20	; 32
 916:	37 fd       	sbrc	r19, 7
 918:	8d e2       	ldi	r24, 0x2D	; 45
 91a:	b7 01       	movw	r22, r14
 91c:	90 e0       	ldi	r25, 0x00	; 0
 91e:	9e d1       	rcall	.+828    	; 0xc5c <fputc>
 920:	a5 14       	cp	r10, r5
 922:	30 f4       	brcc	.+12     	; 0x930 <vfprintf+0x378>
 924:	b7 01       	movw	r22, r14
 926:	80 e3       	ldi	r24, 0x30	; 48
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	98 d1       	rcall	.+816    	; 0xc5c <fputc>
 92c:	5a 94       	dec	r5
 92e:	f8 cf       	rjmp	.-16     	; 0x920 <vfprintf+0x368>
 930:	aa 94       	dec	r10
 932:	f4 01       	movw	r30, r8
 934:	ea 0d       	add	r30, r10
 936:	f1 1d       	adc	r31, r1
 938:	80 81       	ld	r24, Z
 93a:	b7 01       	movw	r22, r14
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	8e d1       	rcall	.+796    	; 0xc5c <fputc>
 940:	a1 10       	cpse	r10, r1
 942:	f6 cf       	rjmp	.-20     	; 0x930 <vfprintf+0x378>
 944:	33 20       	and	r3, r3
 946:	09 f4       	brne	.+2      	; 0x94a <vfprintf+0x392>
 948:	5d ce       	rjmp	.-838    	; 0x604 <vfprintf+0x4c>
 94a:	b7 01       	movw	r22, r14
 94c:	80 e2       	ldi	r24, 0x20	; 32
 94e:	90 e0       	ldi	r25, 0x00	; 0
 950:	85 d1       	rcall	.+778    	; 0xc5c <fputc>
 952:	3a 94       	dec	r3
 954:	f7 cf       	rjmp	.-18     	; 0x944 <vfprintf+0x38c>
 956:	f7 01       	movw	r30, r14
 958:	86 81       	ldd	r24, Z+6	; 0x06
 95a:	97 81       	ldd	r25, Z+7	; 0x07
 95c:	02 c0       	rjmp	.+4      	; 0x962 <vfprintf+0x3aa>
 95e:	8f ef       	ldi	r24, 0xFF	; 255
 960:	9f ef       	ldi	r25, 0xFF	; 255
 962:	2c 96       	adiw	r28, 0x0c	; 12
 964:	0f b6       	in	r0, 0x3f	; 63
 966:	f8 94       	cli
 968:	de bf       	out	0x3e, r29	; 62
 96a:	0f be       	out	0x3f, r0	; 63
 96c:	cd bf       	out	0x3d, r28	; 61
 96e:	df 91       	pop	r29
 970:	cf 91       	pop	r28
 972:	1f 91       	pop	r17
 974:	0f 91       	pop	r16
 976:	ff 90       	pop	r15
 978:	ef 90       	pop	r14
 97a:	df 90       	pop	r13
 97c:	cf 90       	pop	r12
 97e:	bf 90       	pop	r11
 980:	af 90       	pop	r10
 982:	9f 90       	pop	r9
 984:	8f 90       	pop	r8
 986:	7f 90       	pop	r7
 988:	6f 90       	pop	r6
 98a:	5f 90       	pop	r5
 98c:	4f 90       	pop	r4
 98e:	3f 90       	pop	r3
 990:	2f 90       	pop	r2
 992:	08 95       	ret

00000994 <calloc>:
 994:	0f 93       	push	r16
 996:	1f 93       	push	r17
 998:	cf 93       	push	r28
 99a:	df 93       	push	r29
 99c:	86 9f       	mul	r24, r22
 99e:	80 01       	movw	r16, r0
 9a0:	87 9f       	mul	r24, r23
 9a2:	10 0d       	add	r17, r0
 9a4:	96 9f       	mul	r25, r22
 9a6:	10 0d       	add	r17, r0
 9a8:	11 24       	eor	r1, r1
 9aa:	c8 01       	movw	r24, r16
 9ac:	0d d0       	rcall	.+26     	; 0x9c8 <malloc>
 9ae:	ec 01       	movw	r28, r24
 9b0:	00 97       	sbiw	r24, 0x00	; 0
 9b2:	21 f0       	breq	.+8      	; 0x9bc <calloc+0x28>
 9b4:	a8 01       	movw	r20, r16
 9b6:	60 e0       	ldi	r22, 0x00	; 0
 9b8:	70 e0       	ldi	r23, 0x00	; 0
 9ba:	3e d1       	rcall	.+636    	; 0xc38 <memset>
 9bc:	ce 01       	movw	r24, r28
 9be:	df 91       	pop	r29
 9c0:	cf 91       	pop	r28
 9c2:	1f 91       	pop	r17
 9c4:	0f 91       	pop	r16
 9c6:	08 95       	ret

000009c8 <malloc>:
 9c8:	cf 93       	push	r28
 9ca:	df 93       	push	r29
 9cc:	82 30       	cpi	r24, 0x02	; 2
 9ce:	91 05       	cpc	r25, r1
 9d0:	10 f4       	brcc	.+4      	; 0x9d6 <malloc+0xe>
 9d2:	82 e0       	ldi	r24, 0x02	; 2
 9d4:	90 e0       	ldi	r25, 0x00	; 0
 9d6:	e0 91 71 01 	lds	r30, 0x0171
 9da:	f0 91 72 01 	lds	r31, 0x0172
 9de:	20 e0       	ldi	r18, 0x00	; 0
 9e0:	30 e0       	ldi	r19, 0x00	; 0
 9e2:	c0 e0       	ldi	r28, 0x00	; 0
 9e4:	d0 e0       	ldi	r29, 0x00	; 0
 9e6:	30 97       	sbiw	r30, 0x00	; 0
 9e8:	11 f1       	breq	.+68     	; 0xa2e <malloc+0x66>
 9ea:	40 81       	ld	r20, Z
 9ec:	51 81       	ldd	r21, Z+1	; 0x01
 9ee:	48 17       	cp	r20, r24
 9f0:	59 07       	cpc	r21, r25
 9f2:	c0 f0       	brcs	.+48     	; 0xa24 <malloc+0x5c>
 9f4:	48 17       	cp	r20, r24
 9f6:	59 07       	cpc	r21, r25
 9f8:	61 f4       	brne	.+24     	; 0xa12 <malloc+0x4a>
 9fa:	82 81       	ldd	r24, Z+2	; 0x02
 9fc:	93 81       	ldd	r25, Z+3	; 0x03
 9fe:	20 97       	sbiw	r28, 0x00	; 0
 a00:	19 f0       	breq	.+6      	; 0xa08 <malloc+0x40>
 a02:	9b 83       	std	Y+3, r25	; 0x03
 a04:	8a 83       	std	Y+2, r24	; 0x02
 a06:	2b c0       	rjmp	.+86     	; 0xa5e <malloc+0x96>
 a08:	90 93 72 01 	sts	0x0172, r25
 a0c:	80 93 71 01 	sts	0x0171, r24
 a10:	26 c0       	rjmp	.+76     	; 0xa5e <malloc+0x96>
 a12:	21 15       	cp	r18, r1
 a14:	31 05       	cpc	r19, r1
 a16:	19 f0       	breq	.+6      	; 0xa1e <malloc+0x56>
 a18:	42 17       	cp	r20, r18
 a1a:	53 07       	cpc	r21, r19
 a1c:	18 f4       	brcc	.+6      	; 0xa24 <malloc+0x5c>
 a1e:	9a 01       	movw	r18, r20
 a20:	be 01       	movw	r22, r28
 a22:	df 01       	movw	r26, r30
 a24:	ef 01       	movw	r28, r30
 a26:	02 80       	ldd	r0, Z+2	; 0x02
 a28:	f3 81       	ldd	r31, Z+3	; 0x03
 a2a:	e0 2d       	mov	r30, r0
 a2c:	dc cf       	rjmp	.-72     	; 0x9e6 <malloc+0x1e>
 a2e:	21 15       	cp	r18, r1
 a30:	31 05       	cpc	r19, r1
 a32:	09 f1       	breq	.+66     	; 0xa76 <malloc+0xae>
 a34:	28 1b       	sub	r18, r24
 a36:	39 0b       	sbc	r19, r25
 a38:	24 30       	cpi	r18, 0x04	; 4
 a3a:	31 05       	cpc	r19, r1
 a3c:	90 f4       	brcc	.+36     	; 0xa62 <malloc+0x9a>
 a3e:	12 96       	adiw	r26, 0x02	; 2
 a40:	8d 91       	ld	r24, X+
 a42:	9c 91       	ld	r25, X
 a44:	13 97       	sbiw	r26, 0x03	; 3
 a46:	61 15       	cp	r22, r1
 a48:	71 05       	cpc	r23, r1
 a4a:	21 f0       	breq	.+8      	; 0xa54 <malloc+0x8c>
 a4c:	fb 01       	movw	r30, r22
 a4e:	93 83       	std	Z+3, r25	; 0x03
 a50:	82 83       	std	Z+2, r24	; 0x02
 a52:	04 c0       	rjmp	.+8      	; 0xa5c <malloc+0x94>
 a54:	90 93 72 01 	sts	0x0172, r25
 a58:	80 93 71 01 	sts	0x0171, r24
 a5c:	fd 01       	movw	r30, r26
 a5e:	32 96       	adiw	r30, 0x02	; 2
 a60:	44 c0       	rjmp	.+136    	; 0xaea <malloc+0x122>
 a62:	fd 01       	movw	r30, r26
 a64:	e2 0f       	add	r30, r18
 a66:	f3 1f       	adc	r31, r19
 a68:	81 93       	st	Z+, r24
 a6a:	91 93       	st	Z+, r25
 a6c:	22 50       	subi	r18, 0x02	; 2
 a6e:	31 09       	sbc	r19, r1
 a70:	2d 93       	st	X+, r18
 a72:	3c 93       	st	X, r19
 a74:	3a c0       	rjmp	.+116    	; 0xaea <malloc+0x122>
 a76:	20 91 6f 01 	lds	r18, 0x016F
 a7a:	30 91 70 01 	lds	r19, 0x0170
 a7e:	23 2b       	or	r18, r19
 a80:	41 f4       	brne	.+16     	; 0xa92 <malloc+0xca>
 a82:	20 91 02 01 	lds	r18, 0x0102
 a86:	30 91 03 01 	lds	r19, 0x0103
 a8a:	30 93 70 01 	sts	0x0170, r19
 a8e:	20 93 6f 01 	sts	0x016F, r18
 a92:	20 91 00 01 	lds	r18, 0x0100
 a96:	30 91 01 01 	lds	r19, 0x0101
 a9a:	21 15       	cp	r18, r1
 a9c:	31 05       	cpc	r19, r1
 a9e:	41 f4       	brne	.+16     	; 0xab0 <malloc+0xe8>
 aa0:	2d b7       	in	r18, 0x3d	; 61
 aa2:	3e b7       	in	r19, 0x3e	; 62
 aa4:	40 91 04 01 	lds	r20, 0x0104
 aa8:	50 91 05 01 	lds	r21, 0x0105
 aac:	24 1b       	sub	r18, r20
 aae:	35 0b       	sbc	r19, r21
 ab0:	e0 91 6f 01 	lds	r30, 0x016F
 ab4:	f0 91 70 01 	lds	r31, 0x0170
 ab8:	e2 17       	cp	r30, r18
 aba:	f3 07       	cpc	r31, r19
 abc:	a0 f4       	brcc	.+40     	; 0xae6 <malloc+0x11e>
 abe:	2e 1b       	sub	r18, r30
 ac0:	3f 0b       	sbc	r19, r31
 ac2:	28 17       	cp	r18, r24
 ac4:	39 07       	cpc	r19, r25
 ac6:	78 f0       	brcs	.+30     	; 0xae6 <malloc+0x11e>
 ac8:	ac 01       	movw	r20, r24
 aca:	4e 5f       	subi	r20, 0xFE	; 254
 acc:	5f 4f       	sbci	r21, 0xFF	; 255
 ace:	24 17       	cp	r18, r20
 ad0:	35 07       	cpc	r19, r21
 ad2:	48 f0       	brcs	.+18     	; 0xae6 <malloc+0x11e>
 ad4:	4e 0f       	add	r20, r30
 ad6:	5f 1f       	adc	r21, r31
 ad8:	50 93 70 01 	sts	0x0170, r21
 adc:	40 93 6f 01 	sts	0x016F, r20
 ae0:	81 93       	st	Z+, r24
 ae2:	91 93       	st	Z+, r25
 ae4:	02 c0       	rjmp	.+4      	; 0xaea <malloc+0x122>
 ae6:	e0 e0       	ldi	r30, 0x00	; 0
 ae8:	f0 e0       	ldi	r31, 0x00	; 0
 aea:	cf 01       	movw	r24, r30
 aec:	df 91       	pop	r29
 aee:	cf 91       	pop	r28
 af0:	08 95       	ret

00000af2 <free>:
 af2:	0f 93       	push	r16
 af4:	1f 93       	push	r17
 af6:	cf 93       	push	r28
 af8:	df 93       	push	r29
 afa:	00 97       	sbiw	r24, 0x00	; 0
 afc:	09 f4       	brne	.+2      	; 0xb00 <free+0xe>
 afe:	8c c0       	rjmp	.+280    	; 0xc18 <free+0x126>
 b00:	fc 01       	movw	r30, r24
 b02:	32 97       	sbiw	r30, 0x02	; 2
 b04:	13 82       	std	Z+3, r1	; 0x03
 b06:	12 82       	std	Z+2, r1	; 0x02
 b08:	00 91 71 01 	lds	r16, 0x0171
 b0c:	10 91 72 01 	lds	r17, 0x0172
 b10:	01 15       	cp	r16, r1
 b12:	11 05       	cpc	r17, r1
 b14:	81 f4       	brne	.+32     	; 0xb36 <free+0x44>
 b16:	20 81       	ld	r18, Z
 b18:	31 81       	ldd	r19, Z+1	; 0x01
 b1a:	82 0f       	add	r24, r18
 b1c:	93 1f       	adc	r25, r19
 b1e:	20 91 6f 01 	lds	r18, 0x016F
 b22:	30 91 70 01 	lds	r19, 0x0170
 b26:	28 17       	cp	r18, r24
 b28:	39 07       	cpc	r19, r25
 b2a:	79 f5       	brne	.+94     	; 0xb8a <free+0x98>
 b2c:	f0 93 70 01 	sts	0x0170, r31
 b30:	e0 93 6f 01 	sts	0x016F, r30
 b34:	71 c0       	rjmp	.+226    	; 0xc18 <free+0x126>
 b36:	d8 01       	movw	r26, r16
 b38:	40 e0       	ldi	r20, 0x00	; 0
 b3a:	50 e0       	ldi	r21, 0x00	; 0
 b3c:	ae 17       	cp	r26, r30
 b3e:	bf 07       	cpc	r27, r31
 b40:	50 f4       	brcc	.+20     	; 0xb56 <free+0x64>
 b42:	12 96       	adiw	r26, 0x02	; 2
 b44:	2d 91       	ld	r18, X+
 b46:	3c 91       	ld	r19, X
 b48:	13 97       	sbiw	r26, 0x03	; 3
 b4a:	ad 01       	movw	r20, r26
 b4c:	21 15       	cp	r18, r1
 b4e:	31 05       	cpc	r19, r1
 b50:	09 f1       	breq	.+66     	; 0xb94 <free+0xa2>
 b52:	d9 01       	movw	r26, r18
 b54:	f3 cf       	rjmp	.-26     	; 0xb3c <free+0x4a>
 b56:	9d 01       	movw	r18, r26
 b58:	da 01       	movw	r26, r20
 b5a:	33 83       	std	Z+3, r19	; 0x03
 b5c:	22 83       	std	Z+2, r18	; 0x02
 b5e:	60 81       	ld	r22, Z
 b60:	71 81       	ldd	r23, Z+1	; 0x01
 b62:	86 0f       	add	r24, r22
 b64:	97 1f       	adc	r25, r23
 b66:	82 17       	cp	r24, r18
 b68:	93 07       	cpc	r25, r19
 b6a:	69 f4       	brne	.+26     	; 0xb86 <free+0x94>
 b6c:	ec 01       	movw	r28, r24
 b6e:	28 81       	ld	r18, Y
 b70:	39 81       	ldd	r19, Y+1	; 0x01
 b72:	26 0f       	add	r18, r22
 b74:	37 1f       	adc	r19, r23
 b76:	2e 5f       	subi	r18, 0xFE	; 254
 b78:	3f 4f       	sbci	r19, 0xFF	; 255
 b7a:	31 83       	std	Z+1, r19	; 0x01
 b7c:	20 83       	st	Z, r18
 b7e:	8a 81       	ldd	r24, Y+2	; 0x02
 b80:	9b 81       	ldd	r25, Y+3	; 0x03
 b82:	93 83       	std	Z+3, r25	; 0x03
 b84:	82 83       	std	Z+2, r24	; 0x02
 b86:	45 2b       	or	r20, r21
 b88:	29 f4       	brne	.+10     	; 0xb94 <free+0xa2>
 b8a:	f0 93 72 01 	sts	0x0172, r31
 b8e:	e0 93 71 01 	sts	0x0171, r30
 b92:	42 c0       	rjmp	.+132    	; 0xc18 <free+0x126>
 b94:	13 96       	adiw	r26, 0x03	; 3
 b96:	fc 93       	st	X, r31
 b98:	ee 93       	st	-X, r30
 b9a:	12 97       	sbiw	r26, 0x02	; 2
 b9c:	ed 01       	movw	r28, r26
 b9e:	49 91       	ld	r20, Y+
 ba0:	59 91       	ld	r21, Y+
 ba2:	9e 01       	movw	r18, r28
 ba4:	24 0f       	add	r18, r20
 ba6:	35 1f       	adc	r19, r21
 ba8:	e2 17       	cp	r30, r18
 baa:	f3 07       	cpc	r31, r19
 bac:	71 f4       	brne	.+28     	; 0xbca <free+0xd8>
 bae:	80 81       	ld	r24, Z
 bb0:	91 81       	ldd	r25, Z+1	; 0x01
 bb2:	84 0f       	add	r24, r20
 bb4:	95 1f       	adc	r25, r21
 bb6:	02 96       	adiw	r24, 0x02	; 2
 bb8:	11 96       	adiw	r26, 0x01	; 1
 bba:	9c 93       	st	X, r25
 bbc:	8e 93       	st	-X, r24
 bbe:	82 81       	ldd	r24, Z+2	; 0x02
 bc0:	93 81       	ldd	r25, Z+3	; 0x03
 bc2:	13 96       	adiw	r26, 0x03	; 3
 bc4:	9c 93       	st	X, r25
 bc6:	8e 93       	st	-X, r24
 bc8:	12 97       	sbiw	r26, 0x02	; 2
 bca:	e0 e0       	ldi	r30, 0x00	; 0
 bcc:	f0 e0       	ldi	r31, 0x00	; 0
 bce:	d8 01       	movw	r26, r16
 bd0:	12 96       	adiw	r26, 0x02	; 2
 bd2:	8d 91       	ld	r24, X+
 bd4:	9c 91       	ld	r25, X
 bd6:	13 97       	sbiw	r26, 0x03	; 3
 bd8:	00 97       	sbiw	r24, 0x00	; 0
 bda:	19 f0       	breq	.+6      	; 0xbe2 <free+0xf0>
 bdc:	f8 01       	movw	r30, r16
 bde:	8c 01       	movw	r16, r24
 be0:	f6 cf       	rjmp	.-20     	; 0xbce <free+0xdc>
 be2:	8d 91       	ld	r24, X+
 be4:	9c 91       	ld	r25, X
 be6:	98 01       	movw	r18, r16
 be8:	2e 5f       	subi	r18, 0xFE	; 254
 bea:	3f 4f       	sbci	r19, 0xFF	; 255
 bec:	82 0f       	add	r24, r18
 bee:	93 1f       	adc	r25, r19
 bf0:	20 91 6f 01 	lds	r18, 0x016F
 bf4:	30 91 70 01 	lds	r19, 0x0170
 bf8:	28 17       	cp	r18, r24
 bfa:	39 07       	cpc	r19, r25
 bfc:	69 f4       	brne	.+26     	; 0xc18 <free+0x126>
 bfe:	30 97       	sbiw	r30, 0x00	; 0
 c00:	29 f4       	brne	.+10     	; 0xc0c <free+0x11a>
 c02:	10 92 72 01 	sts	0x0172, r1
 c06:	10 92 71 01 	sts	0x0171, r1
 c0a:	02 c0       	rjmp	.+4      	; 0xc10 <free+0x11e>
 c0c:	13 82       	std	Z+3, r1	; 0x03
 c0e:	12 82       	std	Z+2, r1	; 0x02
 c10:	10 93 70 01 	sts	0x0170, r17
 c14:	00 93 6f 01 	sts	0x016F, r16
 c18:	df 91       	pop	r29
 c1a:	cf 91       	pop	r28
 c1c:	1f 91       	pop	r17
 c1e:	0f 91       	pop	r16
 c20:	08 95       	ret

00000c22 <strnlen_P>:
 c22:	fc 01       	movw	r30, r24
 c24:	05 90       	lpm	r0, Z+
 c26:	61 50       	subi	r22, 0x01	; 1
 c28:	70 40       	sbci	r23, 0x00	; 0
 c2a:	01 10       	cpse	r0, r1
 c2c:	d8 f7       	brcc	.-10     	; 0xc24 <strnlen_P+0x2>
 c2e:	80 95       	com	r24
 c30:	90 95       	com	r25
 c32:	8e 0f       	add	r24, r30
 c34:	9f 1f       	adc	r25, r31
 c36:	08 95       	ret

00000c38 <memset>:
 c38:	dc 01       	movw	r26, r24
 c3a:	01 c0       	rjmp	.+2      	; 0xc3e <memset+0x6>
 c3c:	6d 93       	st	X+, r22
 c3e:	41 50       	subi	r20, 0x01	; 1
 c40:	50 40       	sbci	r21, 0x00	; 0
 c42:	e0 f7       	brcc	.-8      	; 0xc3c <memset+0x4>
 c44:	08 95       	ret

00000c46 <strnlen>:
 c46:	fc 01       	movw	r30, r24
 c48:	61 50       	subi	r22, 0x01	; 1
 c4a:	70 40       	sbci	r23, 0x00	; 0
 c4c:	01 90       	ld	r0, Z+
 c4e:	01 10       	cpse	r0, r1
 c50:	d8 f7       	brcc	.-10     	; 0xc48 <strnlen+0x2>
 c52:	80 95       	com	r24
 c54:	90 95       	com	r25
 c56:	8e 0f       	add	r24, r30
 c58:	9f 1f       	adc	r25, r31
 c5a:	08 95       	ret

00000c5c <fputc>:
 c5c:	0f 93       	push	r16
 c5e:	1f 93       	push	r17
 c60:	cf 93       	push	r28
 c62:	df 93       	push	r29
 c64:	fb 01       	movw	r30, r22
 c66:	23 81       	ldd	r18, Z+3	; 0x03
 c68:	21 fd       	sbrc	r18, 1
 c6a:	03 c0       	rjmp	.+6      	; 0xc72 <fputc+0x16>
 c6c:	8f ef       	ldi	r24, 0xFF	; 255
 c6e:	9f ef       	ldi	r25, 0xFF	; 255
 c70:	28 c0       	rjmp	.+80     	; 0xcc2 <fputc+0x66>
 c72:	22 ff       	sbrs	r18, 2
 c74:	16 c0       	rjmp	.+44     	; 0xca2 <fputc+0x46>
 c76:	46 81       	ldd	r20, Z+6	; 0x06
 c78:	57 81       	ldd	r21, Z+7	; 0x07
 c7a:	24 81       	ldd	r18, Z+4	; 0x04
 c7c:	35 81       	ldd	r19, Z+5	; 0x05
 c7e:	42 17       	cp	r20, r18
 c80:	53 07       	cpc	r21, r19
 c82:	44 f4       	brge	.+16     	; 0xc94 <fputc+0x38>
 c84:	a0 81       	ld	r26, Z
 c86:	b1 81       	ldd	r27, Z+1	; 0x01
 c88:	9d 01       	movw	r18, r26
 c8a:	2f 5f       	subi	r18, 0xFF	; 255
 c8c:	3f 4f       	sbci	r19, 0xFF	; 255
 c8e:	31 83       	std	Z+1, r19	; 0x01
 c90:	20 83       	st	Z, r18
 c92:	8c 93       	st	X, r24
 c94:	26 81       	ldd	r18, Z+6	; 0x06
 c96:	37 81       	ldd	r19, Z+7	; 0x07
 c98:	2f 5f       	subi	r18, 0xFF	; 255
 c9a:	3f 4f       	sbci	r19, 0xFF	; 255
 c9c:	37 83       	std	Z+7, r19	; 0x07
 c9e:	26 83       	std	Z+6, r18	; 0x06
 ca0:	10 c0       	rjmp	.+32     	; 0xcc2 <fputc+0x66>
 ca2:	eb 01       	movw	r28, r22
 ca4:	09 2f       	mov	r16, r25
 ca6:	18 2f       	mov	r17, r24
 ca8:	00 84       	ldd	r0, Z+8	; 0x08
 caa:	f1 85       	ldd	r31, Z+9	; 0x09
 cac:	e0 2d       	mov	r30, r0
 cae:	09 95       	icall
 cb0:	89 2b       	or	r24, r25
 cb2:	e1 f6       	brne	.-72     	; 0xc6c <fputc+0x10>
 cb4:	8e 81       	ldd	r24, Y+6	; 0x06
 cb6:	9f 81       	ldd	r25, Y+7	; 0x07
 cb8:	01 96       	adiw	r24, 0x01	; 1
 cba:	9f 83       	std	Y+7, r25	; 0x07
 cbc:	8e 83       	std	Y+6, r24	; 0x06
 cbe:	81 2f       	mov	r24, r17
 cc0:	90 2f       	mov	r25, r16
 cc2:	df 91       	pop	r29
 cc4:	cf 91       	pop	r28
 cc6:	1f 91       	pop	r17
 cc8:	0f 91       	pop	r16
 cca:	08 95       	ret

00000ccc <__ultoa_invert>:
 ccc:	fa 01       	movw	r30, r20
 cce:	aa 27       	eor	r26, r26
 cd0:	28 30       	cpi	r18, 0x08	; 8
 cd2:	51 f1       	breq	.+84     	; 0xd28 <__ultoa_invert+0x5c>
 cd4:	20 31       	cpi	r18, 0x10	; 16
 cd6:	81 f1       	breq	.+96     	; 0xd38 <__ultoa_invert+0x6c>
 cd8:	e8 94       	clt
 cda:	6f 93       	push	r22
 cdc:	6e 7f       	andi	r22, 0xFE	; 254
 cde:	6e 5f       	subi	r22, 0xFE	; 254
 ce0:	7f 4f       	sbci	r23, 0xFF	; 255
 ce2:	8f 4f       	sbci	r24, 0xFF	; 255
 ce4:	9f 4f       	sbci	r25, 0xFF	; 255
 ce6:	af 4f       	sbci	r26, 0xFF	; 255
 ce8:	b1 e0       	ldi	r27, 0x01	; 1
 cea:	3e d0       	rcall	.+124    	; 0xd68 <__ultoa_invert+0x9c>
 cec:	b4 e0       	ldi	r27, 0x04	; 4
 cee:	3c d0       	rcall	.+120    	; 0xd68 <__ultoa_invert+0x9c>
 cf0:	67 0f       	add	r22, r23
 cf2:	78 1f       	adc	r23, r24
 cf4:	89 1f       	adc	r24, r25
 cf6:	9a 1f       	adc	r25, r26
 cf8:	a1 1d       	adc	r26, r1
 cfa:	68 0f       	add	r22, r24
 cfc:	79 1f       	adc	r23, r25
 cfe:	8a 1f       	adc	r24, r26
 d00:	91 1d       	adc	r25, r1
 d02:	a1 1d       	adc	r26, r1
 d04:	6a 0f       	add	r22, r26
 d06:	71 1d       	adc	r23, r1
 d08:	81 1d       	adc	r24, r1
 d0a:	91 1d       	adc	r25, r1
 d0c:	a1 1d       	adc	r26, r1
 d0e:	20 d0       	rcall	.+64     	; 0xd50 <__ultoa_invert+0x84>
 d10:	09 f4       	brne	.+2      	; 0xd14 <__ultoa_invert+0x48>
 d12:	68 94       	set
 d14:	3f 91       	pop	r19
 d16:	2a e0       	ldi	r18, 0x0A	; 10
 d18:	26 9f       	mul	r18, r22
 d1a:	11 24       	eor	r1, r1
 d1c:	30 19       	sub	r19, r0
 d1e:	30 5d       	subi	r19, 0xD0	; 208
 d20:	31 93       	st	Z+, r19
 d22:	de f6       	brtc	.-74     	; 0xcda <__ultoa_invert+0xe>
 d24:	cf 01       	movw	r24, r30
 d26:	08 95       	ret
 d28:	46 2f       	mov	r20, r22
 d2a:	47 70       	andi	r20, 0x07	; 7
 d2c:	40 5d       	subi	r20, 0xD0	; 208
 d2e:	41 93       	st	Z+, r20
 d30:	b3 e0       	ldi	r27, 0x03	; 3
 d32:	0f d0       	rcall	.+30     	; 0xd52 <__ultoa_invert+0x86>
 d34:	c9 f7       	brne	.-14     	; 0xd28 <__ultoa_invert+0x5c>
 d36:	f6 cf       	rjmp	.-20     	; 0xd24 <__ultoa_invert+0x58>
 d38:	46 2f       	mov	r20, r22
 d3a:	4f 70       	andi	r20, 0x0F	; 15
 d3c:	40 5d       	subi	r20, 0xD0	; 208
 d3e:	4a 33       	cpi	r20, 0x3A	; 58
 d40:	18 f0       	brcs	.+6      	; 0xd48 <__ultoa_invert+0x7c>
 d42:	49 5d       	subi	r20, 0xD9	; 217
 d44:	31 fd       	sbrc	r19, 1
 d46:	40 52       	subi	r20, 0x20	; 32
 d48:	41 93       	st	Z+, r20
 d4a:	02 d0       	rcall	.+4      	; 0xd50 <__ultoa_invert+0x84>
 d4c:	a9 f7       	brne	.-22     	; 0xd38 <__ultoa_invert+0x6c>
 d4e:	ea cf       	rjmp	.-44     	; 0xd24 <__ultoa_invert+0x58>
 d50:	b4 e0       	ldi	r27, 0x04	; 4
 d52:	a6 95       	lsr	r26
 d54:	97 95       	ror	r25
 d56:	87 95       	ror	r24
 d58:	77 95       	ror	r23
 d5a:	67 95       	ror	r22
 d5c:	ba 95       	dec	r27
 d5e:	c9 f7       	brne	.-14     	; 0xd52 <__ultoa_invert+0x86>
 d60:	00 97       	sbiw	r24, 0x00	; 0
 d62:	61 05       	cpc	r22, r1
 d64:	71 05       	cpc	r23, r1
 d66:	08 95       	ret
 d68:	9b 01       	movw	r18, r22
 d6a:	ac 01       	movw	r20, r24
 d6c:	0a 2e       	mov	r0, r26
 d6e:	06 94       	lsr	r0
 d70:	57 95       	ror	r21
 d72:	47 95       	ror	r20
 d74:	37 95       	ror	r19
 d76:	27 95       	ror	r18
 d78:	ba 95       	dec	r27
 d7a:	c9 f7       	brne	.-14     	; 0xd6e <__ultoa_invert+0xa2>
 d7c:	62 0f       	add	r22, r18
 d7e:	73 1f       	adc	r23, r19
 d80:	84 1f       	adc	r24, r20
 d82:	95 1f       	adc	r25, r21
 d84:	a0 1d       	adc	r26, r0
 d86:	08 95       	ret

00000d88 <_exit>:
 d88:	f8 94       	cli

00000d8a <__stop_program>:
 d8a:	ff cf       	rjmp	.-2      	; 0xd8a <__stop_program>
