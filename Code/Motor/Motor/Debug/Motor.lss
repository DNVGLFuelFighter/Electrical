
Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  00000d66  00000dfa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d66  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  00800142  00800142  00000e3c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ea8  00000000  00000000  00001028  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006ee  00000000  00000000  00001ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b42  00000000  00000000  000025be  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000328  00000000  00000000  00003100  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000433  00000000  00000000  00003428  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000099f  00000000  00000000  0000385b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  000041fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
   2:	00 00       	nop
   4:	64 c0       	rjmp	.+200    	; 0xce <__bad_interrupt>
   6:	00 00       	nop
   8:	62 c0       	rjmp	.+196    	; 0xce <__bad_interrupt>
   a:	00 00       	nop
   c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
   e:	00 00       	nop
  10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
  12:	00 00       	nop
  14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
  16:	00 00       	nop
  18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
  1a:	00 00       	nop
  1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
  1e:	00 00       	nop
  20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
  22:	00 00       	nop
  24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
  26:	00 00       	nop
  28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
  2a:	00 00       	nop
  2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
  2e:	00 00       	nop
  30:	ff c1       	rjmp	.+1022   	; 0x430 <__vector_12>
  32:	00 00       	nop
  34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
  36:	00 00       	nop
  38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
  3a:	00 00       	nop
  3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
  3e:	00 00       	nop
  40:	46 c0       	rjmp	.+140    	; 0xce <__bad_interrupt>
  42:	00 00       	nop
  44:	44 c0       	rjmp	.+136    	; 0xce <__bad_interrupt>
  46:	00 00       	nop
  48:	43 c0       	rjmp	.+134    	; 0xd0 <__vector_18>
  4a:	00 00       	nop
  4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
  4e:	00 00       	nop
  50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
  52:	00 00       	nop
  54:	3c c0       	rjmp	.+120    	; 0xce <__bad_interrupt>
  56:	00 00       	nop
  58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
  5a:	00 00       	nop
  5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
  5e:	00 00       	nop
  60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
  62:	00 00       	nop
  64:	34 c0       	rjmp	.+104    	; 0xce <__bad_interrupt>
  66:	00 00       	nop
  68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
  6a:	00 00       	nop
  6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
  6e:	00 00       	nop
  70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
  72:	00 00       	nop
  74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
  76:	00 00       	nop
  78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
  7a:	00 00       	nop
  7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
  7e:	00 00       	nop
  80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
  82:	00 00       	nop
  84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
  86:	00 00       	nop
  88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
  8a:	00 00       	nop
  8c:	20 c0       	rjmp	.+64     	; 0xce <__bad_interrupt>
  8e:	00 00       	nop
  90:	1e c0       	rjmp	.+60     	; 0xce <__bad_interrupt>
	...

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	11 e0       	ldi	r17, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	e6 e6       	ldi	r30, 0x66	; 102
  a8:	fd e0       	ldi	r31, 0x0D	; 13
  aa:	00 e0       	ldi	r16, 0x00	; 0
  ac:	0b bf       	out	0x3b, r16	; 59
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
  b0:	07 90       	elpm	r0, Z+
  b2:	0d 92       	st	X+, r0
  b4:	a2 34       	cpi	r26, 0x42	; 66
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	a2 e4       	ldi	r26, 0x42	; 66
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	a6 37       	cpi	r26, 0x76	; 118
  c6:	b2 07       	cpc	r27, r18
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	0f d1       	rcall	.+542    	; 0x2ea <main>
  cc:	4a c6       	rjmp	.+3220   	; 0xd62 <_exit>

000000ce <__bad_interrupt>:
  ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <__vector_18>:
        CANIDT4 = 1<<RTRTAG;
		CANCDMOB|=packet->length;
		}
    CANCDMOB|=0x40; //enable TX
	return TRUE;
	}
  d0:	1f 92       	push	r1
  d2:	0f 92       	push	r0
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	0f 92       	push	r0
  d8:	11 24       	eor	r1, r1
  da:	0b b6       	in	r0, 0x3b	; 59
  dc:	0f 92       	push	r0
  de:	2f 93       	push	r18
  e0:	3f 93       	push	r19
  e2:	4f 93       	push	r20
  e4:	5f 93       	push	r21
  e6:	6f 93       	push	r22
  e8:	7f 93       	push	r23
  ea:	8f 93       	push	r24
  ec:	9f 93       	push	r25
  ee:	af 93       	push	r26
  f0:	bf 93       	push	r27
  f2:	cf 93       	push	r28
  f4:	ef 93       	push	r30
  f6:	ff 93       	push	r31
  f8:	ed ee       	ldi	r30, 0xED	; 237
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	c0 81       	ld	r28, Z
  fe:	80 91 ec 00 	lds	r24, 0x00EC
 102:	68 2f       	mov	r22, r24
 104:	70 e0       	ldi	r23, 0x00	; 0
 106:	80 7f       	andi	r24, 0xF0	; 240
 108:	80 83       	st	Z, r24
 10a:	72 95       	swap	r23
 10c:	62 95       	swap	r22
 10e:	6f 70       	andi	r22, 0x0F	; 15
 110:	67 27       	eor	r22, r23
 112:	7f 70       	andi	r23, 0x0F	; 15
 114:	67 27       	eor	r22, r23
 116:	80 91 ee 00 	lds	r24, 0x00EE
 11a:	8f 75       	andi	r24, 0x5F	; 95
 11c:	09 f0       	breq	.+2      	; 0x120 <__vector_18+0x50>
 11e:	98 95       	break
 120:	20 91 f2 00 	lds	r18, 0x00F2
 124:	80 91 f3 00 	lds	r24, 0x00F3
 128:	e2 e4       	ldi	r30, 0x42	; 66
 12a:	f1 e0       	ldi	r31, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	22 95       	swap	r18
 13c:	26 95       	lsr	r18
 13e:	27 70       	andi	r18, 0x07	; 7
 140:	82 2b       	or	r24, r18
 142:	91 83       	std	Z+1, r25	; 0x01
 144:	80 83       	st	Z, r24
 146:	80 91 ef 00 	lds	r24, 0x00EF
 14a:	8f 70       	andi	r24, 0x0F	; 15
 14c:	82 83       	std	Z+2, r24	; 0x02
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	00 97       	sbiw	r24, 0x00	; 0
 152:	59 f0       	breq	.+22     	; 0x16a <__vector_18+0x9a>
 154:	e5 e4       	ldi	r30, 0x45	; 69
 156:	f1 e0       	ldi	r31, 0x01	; 1
 158:	8b 5b       	subi	r24, 0xBB	; 187
 15a:	9e 4f       	sbci	r25, 0xFE	; 254
 15c:	aa ef       	ldi	r26, 0xFA	; 250
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	2c 91       	ld	r18, X
 162:	21 93       	st	Z+, r18
 164:	e8 17       	cp	r30, r24
 166:	f9 07       	cpc	r31, r25
 168:	d9 f7       	brne	.-10     	; 0x160 <__vector_18+0x90>
 16a:	10 92 ee 00 	sts	0x00EE, r1
 16e:	80 e8       	ldi	r24, 0x80	; 128
 170:	80 93 ef 00 	sts	0x00EF, r24
 174:	fb 01       	movw	r30, r22
 176:	ee 0f       	add	r30, r30
 178:	ff 1f       	adc	r31, r31
 17a:	e2 5b       	subi	r30, 0xB2	; 178
 17c:	fe 4f       	sbci	r31, 0xFE	; 254
 17e:	01 90       	ld	r0, Z+
 180:	f0 81       	ld	r31, Z
 182:	e0 2d       	mov	r30, r0
 184:	82 e4       	ldi	r24, 0x42	; 66
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	09 95       	icall
 18a:	c0 93 ed 00 	sts	0x00ED, r28
 18e:	ff 91       	pop	r31
 190:	ef 91       	pop	r30
 192:	cf 91       	pop	r28
 194:	bf 91       	pop	r27
 196:	af 91       	pop	r26
 198:	9f 91       	pop	r25
 19a:	8f 91       	pop	r24
 19c:	7f 91       	pop	r23
 19e:	6f 91       	pop	r22
 1a0:	5f 91       	pop	r21
 1a2:	4f 91       	pop	r20
 1a4:	3f 91       	pop	r19
 1a6:	2f 91       	pop	r18
 1a8:	0f 90       	pop	r0
 1aa:	0b be       	out	0x3b, r0	; 59
 1ac:	0f 90       	pop	r0
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	0f 90       	pop	r0
 1b2:	1f 90       	pop	r1
 1b4:	18 95       	reti

000001b6 <prepare_rx>:

BOOL prepare_rx( char mob, unsigned id, unsigned idmask, CAN_cbf callback)
	{
	if( mob >= 15) 				// illegal MOB number
 1b6:	8f 30       	cpi	r24, 0x0F	; 15
 1b8:	08 f0       	brcs	.+2      	; 0x1bc <prepare_rx+0x6>
 1ba:	6d c0       	rjmp	.+218    	; 0x296 <prepare_rx+0xe0>
		return TRUE;
	canlist[ (unsigned)mob]=callback;
 1bc:	e8 2f       	mov	r30, r24
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	ee 0f       	add	r30, r30
 1c2:	ff 1f       	adc	r31, r31
 1c4:	e2 5b       	subi	r30, 0xB2	; 178
 1c6:	fe 4f       	sbci	r31, 0xFE	; 254
 1c8:	31 83       	std	Z+1, r19	; 0x01
 1ca:	20 83       	st	Z, r18
    CANPAGE = mob << 4;
 1cc:	98 2f       	mov	r25, r24
 1ce:	92 95       	swap	r25
 1d0:	90 7f       	andi	r25, 0xF0	; 240
 1d2:	90 93 ed 00 	sts	0x00ED, r25
	if( callback==0)			// release this MOB 
 1d6:	23 2b       	or	r18, r19
 1d8:	d9 f4       	brne	.+54     	; 0x210 <prepare_rx+0x5a>
		{
		CANSTMOB = 0x00;    	// cancel pending operation
 1da:	10 92 ee 00 	sts	0x00EE, r1
		CANCDMOB = 0x00;
 1de:	10 92 ef 00 	sts	0x00EF, r1
		unsigned mask=1<<mob;
 1e2:	21 e0       	ldi	r18, 0x01	; 1
 1e4:	30 e0       	ldi	r19, 0x00	; 0
 1e6:	a9 01       	movw	r20, r18
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <prepare_rx+0x38>
 1ea:	44 0f       	add	r20, r20
 1ec:	55 1f       	adc	r21, r21
 1ee:	8a 95       	dec	r24
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <prepare_rx+0x34>
 1f2:	ca 01       	movw	r24, r20
		CANIE2 &=  ~mask;
 1f4:	ee ed       	ldi	r30, 0xDE	; 222
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	20 81       	ld	r18, Z
 1fa:	80 95       	com	r24
 1fc:	82 23       	and	r24, r18
 1fe:	80 83       	st	Z, r24
		CANIE1 &= ~(mask>>8);
 200:	ef ed       	ldi	r30, 0xDF	; 223
 202:	f0 e0       	ldi	r31, 0x00	; 0
 204:	80 81       	ld	r24, Z
 206:	90 95       	com	r25
 208:	89 23       	and	r24, r25
 20a:	80 83       	st	Z, r24
		return FALSE;
 20c:	80 e0       	ldi	r24, 0x00	; 0
 20e:	08 95       	ret
		}
	if( CANCDMOB & 0b11000000) 	// if MOB already in use
 210:	90 91 ef 00 	lds	r25, 0x00EF
 214:	90 7c       	andi	r25, 0xC0	; 192
 216:	09 f0       	breq	.+2      	; 0x21a <prepare_rx+0x64>
 218:	40 c0       	rjmp	.+128    	; 0x29a <prepare_rx+0xe4>
		return TRUE;			// no vacancy ...
	CANSTMOB = 0x00;    	// cancel pending operation 
 21a:	10 92 ee 00 	sts	0x00EE, r1
	CANCDMOB = 0x00;		
 21e:	ef ee       	ldi	r30, 0xEF	; 239
 220:	f0 e0       	ldi	r31, 0x00	; 0
 222:	10 82       	st	Z, r1
	CANHPMOB = 0x00;		// enable direct mob indexing, see doc
 224:	10 92 ec 00 	sts	0x00EC, r1
	CANIDT1=id >>3;
 228:	9b 01       	movw	r18, r22
 22a:	36 95       	lsr	r19
 22c:	27 95       	ror	r18
 22e:	36 95       	lsr	r19
 230:	27 95       	ror	r18
 232:	36 95       	lsr	r19
 234:	27 95       	ror	r18
 236:	20 93 f3 00 	sts	0x00F3, r18
	CANIDT2=id <<5;
 23a:	62 95       	swap	r22
 23c:	66 0f       	add	r22, r22
 23e:	60 7e       	andi	r22, 0xE0	; 224
 240:	60 93 f2 00 	sts	0x00F2, r22
	CANIDM1=idmask >>3;
 244:	9a 01       	movw	r18, r20
 246:	36 95       	lsr	r19
 248:	27 95       	ror	r18
 24a:	36 95       	lsr	r19
 24c:	27 95       	ror	r18
 24e:	36 95       	lsr	r19
 250:	27 95       	ror	r18
 252:	20 93 f7 00 	sts	0x00F7, r18
	CANIDM2=idmask <<5;
 256:	42 95       	swap	r20
 258:	44 0f       	add	r20, r20
 25a:	40 7e       	andi	r20, 0xE0	; 224
 25c:	40 93 f6 00 	sts	0x00F6, r20
	CANIDM3=0;
 260:	10 92 f5 00 	sts	0x00F5, r1
	CANIDM4=0;
 264:	10 92 f4 00 	sts	0x00F4, r1
	CANCDMOB=0x80; // enable RX
 268:	90 e8       	ldi	r25, 0x80	; 128
 26a:	90 83       	st	Z, r25
	unsigned mask=1<<mob;
 26c:	21 e0       	ldi	r18, 0x01	; 1
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	a9 01       	movw	r20, r18
 272:	02 c0       	rjmp	.+4      	; 0x278 <prepare_rx+0xc2>
 274:	44 0f       	add	r20, r20
 276:	55 1f       	adc	r21, r21
 278:	8a 95       	dec	r24
 27a:	e2 f7       	brpl	.-8      	; 0x274 <prepare_rx+0xbe>
 27c:	ca 01       	movw	r24, r20
	CANIE2 |=  mask;
 27e:	ee ed       	ldi	r30, 0xDE	; 222
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	20 81       	ld	r18, Z
 284:	82 2b       	or	r24, r18
 286:	80 83       	st	Z, r24
	CANIE1 |= (mask>>8);
 288:	ef ed       	ldi	r30, 0xDF	; 223
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	80 81       	ld	r24, Z
 28e:	89 2b       	or	r24, r25
 290:	80 83       	st	Z, r24
	return FALSE;
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	08 95       	ret
	}

BOOL prepare_rx( char mob, unsigned id, unsigned idmask, CAN_cbf callback)
	{
	if( mob >= 15) 				// illegal MOB number
		return TRUE;
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	08 95       	ret
		CANIE2 &=  ~mask;
		CANIE1 &= ~(mask>>8);
		return FALSE;
		}
	if( CANCDMOB & 0b11000000) 	// if MOB already in use
		return TRUE;			// no vacancy ...
 29a:	81 e0       	ldi	r24, 0x01	; 1
	CANCDMOB=0x80; // enable RX
	unsigned mask=1<<mob;
	CANIE2 |=  mask;
	CANIE1 |= (mask>>8);
	return FALSE;
	}
 29c:	08 95       	ret

0000029e <can_init>:

void can_init( void)
	{
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
	unsigned mob;
//! \bug different baud rate support not implemented yet 
#if F_CPU == 8000000
	//Old implementation
	CANBT1=0x06;	// 8MHz, 100kbit/s
 2a2:	86 e0       	ldi	r24, 0x06	; 6
 2a4:	80 93 e2 00 	sts	0x00E2, r24
	CANBT2=0x0c;
 2a8:	8c e0       	ldi	r24, 0x0C	; 12
 2aa:	80 93 e3 00 	sts	0x00E3, r24
	CANBT3=0x5a;
 2ae:	8a e5       	ldi	r24, 0x5A	; 90
 2b0:	80 93 e4 00 	sts	0x00E4, r24
 2b4:	80 e0       	ldi	r24, 0x00	; 0
	CANBT2=0x04;
	CANBT3=0x13;
#endif
	for (mob = 0; mob < NO_MOBS; mob++)
		{
		CANPAGE  = (mob << 4);
 2b6:	cd ee       	ldi	r28, 0xED	; 237
 2b8:	d0 e0       	ldi	r29, 0x00	; 0
		CANSTMOB = 0;
 2ba:	ae ee       	ldi	r26, 0xEE	; 238
 2bc:	b0 e0       	ldi	r27, 0x00	; 0
		CANCDMOB = 0;
 2be:	ef ee       	ldi	r30, 0xEF	; 239
 2c0:	f0 e0       	ldi	r31, 0x00	; 0
	CANBT2=0x04;
	CANBT3=0x13;
#endif
	for (mob = 0; mob < NO_MOBS; mob++)
		{
		CANPAGE  = (mob << 4);
 2c2:	98 2f       	mov	r25, r24
 2c4:	92 95       	swap	r25
 2c6:	90 7f       	andi	r25, 0xF0	; 240
 2c8:	98 83       	st	Y, r25
		CANSTMOB = 0;
 2ca:	1c 92       	st	X, r1
		CANCDMOB = 0;
 2cc:	10 82       	st	Z, r1
 2ce:	8f 5f       	subi	r24, 0xFF	; 255
#else
	CANBT1=0x26;	// 16 MHz, 100kbit/s
	CANBT2=0x04;
	CANBT3=0x13;
#endif
	for (mob = 0; mob < NO_MOBS; mob++)
 2d0:	8f 30       	cpi	r24, 0x0F	; 15
 2d2:	b9 f7       	brne	.-18     	; 0x2c2 <can_init+0x24>
		{
		CANPAGE  = (mob << 4);
		CANSTMOB = 0;
		CANCDMOB = 0;
		}
	CANGCON |= 0x02;
 2d4:	e8 ed       	ldi	r30, 0xD8	; 216
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	80 81       	ld	r24, Z
 2da:	82 60       	ori	r24, 0x02	; 2
 2dc:	80 83       	st	Z, r24
	CANGIE=(1<<ENIT) | (1<< ENRX);
 2de:	80 ea       	ldi	r24, 0xA0	; 160
 2e0:	80 93 db 00 	sts	0x00DB, r24
}
 2e4:	df 91       	pop	r29
 2e6:	cf 91       	pop	r28
 2e8:	08 95       	ret

000002ea <main>:
#include "motor_control.h"
uint16_t tar_speed = 1024; //10bit
uint16_t old_speed = 1024;

int main(void){
	init();
 2ea:	89 d0       	rcall	.+274    	; 0x3fe <init>
	printf("\r\nHello world");
 2ec:	88 e0       	ldi	r24, 0x08	; 8
 2ee:	91 e0       	ldi	r25, 0x01	; 1
 2f0:	9f 93       	push	r25
 2f2:	8f 93       	push	r24
 2f4:	3b d1       	rcall	.+630    	; 0x56c <printf>
	RGB_init();
 2f6:	ad d0       	rcall	.+346    	; 0x452 <RGB_init>
	RGB_led_on(LED_BLUE);
 2f8:	87 e0       	ldi	r24, 0x07	; 7
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	b1 d0       	rcall	.+354    	; 0x460 <RGB_led_on>
 2fe:	0f 90       	pop	r0
 300:	0f 90       	pop	r0
				set_speed(old_speed);	
				_delay_ms(20);
			/
		}*/

	}
 302:	ff cf       	rjmp	.-2      	; 0x302 <main+0x18>

00000304 <set_speed>:
	TIMSK1 = (1 << OCIE1A);

	OCR1A = 15625; //2s 
//	OCR1A = 65000;

	TCCR1B |= (1<<CS10) | (1<<CS12); 
 304:	20 91 06 01 	lds	r18, 0x0106
 308:	30 91 07 01 	lds	r19, 0x0107
 30c:	93 95       	inc	r25
 30e:	88 0f       	add	r24, r24
 310:	99 1f       	adc	r25, r25
 312:	88 0f       	add	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	a9 01       	movw	r20, r18
 318:	46 5f       	subi	r20, 0xF6	; 246
 31a:	5f 4f       	sbci	r21, 0xFF	; 255
 31c:	48 17       	cp	r20, r24
 31e:	59 07       	cpc	r21, r25
 320:	28 f0       	brcs	.+10     	; 0x32c <set_speed+0x28>
 322:	2a 50       	subi	r18, 0x0A	; 10
 324:	31 09       	sbc	r19, r1
 326:	82 17       	cp	r24, r18
 328:	93 07       	cpc	r25, r19
 32a:	20 f4       	brcc	.+8      	; 0x334 <set_speed+0x30>
 32c:	90 93 07 01 	sts	0x0107, r25
 330:	80 93 06 01 	sts	0x0106, r24
 334:	08 95       	ret

00000336 <pwm_init>:
 336:	83 e3       	ldi	r24, 0x33	; 51
 338:	80 93 90 00 	sts	0x0090, r24
 33c:	e1 e9       	ldi	r30, 0x91	; 145
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	88 e1       	ldi	r24, 0x18	; 24
 342:	80 83       	st	Z, r24
 344:	10 92 92 00 	sts	0x0092, r1
 348:	8f e1       	ldi	r24, 0x1F	; 31
 34a:	9e e4       	ldi	r25, 0x4E	; 78
 34c:	90 93 99 00 	sts	0x0099, r25
 350:	80 93 98 00 	sts	0x0098, r24
 354:	8f e1       	ldi	r24, 0x1F	; 31
 356:	9a e4       	ldi	r25, 0x4A	; 74
 358:	90 93 9b 00 	sts	0x009B, r25
 35c:	80 93 9a 00 	sts	0x009A, r24
 360:	6c 9a       	sbi	0x0d, 4	; 13
 362:	80 81       	ld	r24, Z
 364:	82 60       	ori	r24, 0x02	; 2
 366:	80 83       	st	Z, r24
 368:	08 95       	ret

0000036a <can_recv_no_cc>:
 36a:	cf 93       	push	r28
 36c:	df 93       	push	r29
 36e:	ec 01       	movw	r28, r24
 370:	88 81       	ld	r24, Y
 372:	99 81       	ldd	r25, Y+1	; 0x01
 374:	0f 97       	sbiw	r24, 0x0f	; 15
 376:	31 f5       	brne	.+76     	; 0x3c4 <can_recv_no_cc+0x5a>
 378:	8c 81       	ldd	r24, Y+4	; 0x04
 37a:	1f 92       	push	r1
 37c:	8f 93       	push	r24
 37e:	81 e2       	ldi	r24, 0x21	; 33
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	9f 93       	push	r25
 384:	8f 93       	push	r24
 386:	f2 d0       	rcall	.+484    	; 0x56c <printf>
 388:	20 91 06 01 	lds	r18, 0x0106
 38c:	30 91 07 01 	lds	r19, 0x0107
 390:	8c 81       	ldd	r24, Y+4	; 0x04
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	93 95       	inc	r25
 396:	88 0f       	add	r24, r24
 398:	99 1f       	adc	r25, r25
 39a:	88 0f       	add	r24, r24
 39c:	99 1f       	adc	r25, r25
 39e:	a9 01       	movw	r20, r18
 3a0:	46 5f       	subi	r20, 0xF6	; 246
 3a2:	5f 4f       	sbci	r21, 0xFF	; 255
 3a4:	0f 90       	pop	r0
 3a6:	0f 90       	pop	r0
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	48 17       	cp	r20, r24
 3ae:	59 07       	cpc	r21, r25
 3b0:	28 f0       	brcs	.+10     	; 0x3bc <can_recv_no_cc+0x52>
 3b2:	2a 50       	subi	r18, 0x0A	; 10
 3b4:	31 09       	sbc	r19, r1
 3b6:	82 17       	cp	r24, r18
 3b8:	93 07       	cpc	r25, r19
 3ba:	20 f4       	brcc	.+8      	; 0x3c4 <can_recv_no_cc+0x5a>
 3bc:	90 93 07 01 	sts	0x0107, r25
 3c0:	80 93 06 01 	sts	0x0106, r24
 3c4:	80 91 06 01 	lds	r24, 0x0106
 3c8:	90 91 07 01 	lds	r25, 0x0107
 3cc:	9b df       	rcall	.-202    	; 0x304 <set_speed>
 3ce:	df 91       	pop	r29
 3d0:	cf 91       	pop	r28
 3d2:	08 95       	ret

000003d4 <timer_init>:
 3d4:	10 92 80 00 	sts	0x0080, r1
 3d8:	e1 e8       	ldi	r30, 0x81	; 129
 3da:	f0 e0       	ldi	r31, 0x00	; 0
 3dc:	88 e0       	ldi	r24, 0x08	; 8
 3de:	80 83       	st	Z, r24
 3e0:	10 92 82 00 	sts	0x0082, r1
 3e4:	82 e0       	ldi	r24, 0x02	; 2
 3e6:	80 93 6f 00 	sts	0x006F, r24
 3ea:	89 e0       	ldi	r24, 0x09	; 9
 3ec:	9d e3       	ldi	r25, 0x3D	; 61
 3ee:	90 93 89 00 	sts	0x0089, r25
 3f2:	80 93 88 00 	sts	0x0088, r24
 3f6:	80 81       	ld	r24, Z
 3f8:	85 60       	ori	r24, 0x05	; 5
 3fa:	80 83       	st	Z, r24
 3fc:	08 95       	ret

000003fe <init>:
 3fe:	61 e0       	ldi	r22, 0x01	; 1
 400:	83 e3       	ldi	r24, 0x33	; 51
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	52 d0       	rcall	.+164    	; 0x4aa <USART_init>
 406:	97 df       	rcall	.-210    	; 0x336 <pwm_init>
 408:	4a df       	rcall	.-364    	; 0x29e <can_init>
 40a:	af df       	rcall	.-162    	; 0x36a <can_recv_no_cc>
 40c:	9c 01       	movw	r18, r24
 40e:	41 e0       	ldi	r20, 0x01	; 1
 410:	50 e0       	ldi	r21, 0x00	; 0
 412:	6f e0       	ldi	r22, 0x0F	; 15
 414:	70 e0       	ldi	r23, 0x00	; 0
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	ce de       	rcall	.-612    	; 0x1b6 <prepare_rx>
 41a:	1b d0       	rcall	.+54     	; 0x452 <RGB_init>
 41c:	db df       	rcall	.-74     	; 0x3d4 <timer_init>
 41e:	82 e3       	ldi	r24, 0x32	; 50
 420:	91 e0       	ldi	r25, 0x01	; 1
 422:	9f 93       	push	r25
 424:	8f 93       	push	r24
 426:	a2 d0       	rcall	.+324    	; 0x56c <printf>
 428:	78 94       	sei
 42a:	0f 90       	pop	r0
 42c:	0f 90       	pop	r0
 42e:	08 95       	ret

00000430 <__vector_12>:
}

ISR(TIMER1_COMPA_vect){
 430:	1f 92       	push	r1
 432:	0f 92       	push	r0
 434:	0f b6       	in	r0, 0x3f	; 63
 436:	0f 92       	push	r0
 438:	11 24       	eor	r1, r1
 43a:	8f 93       	push	r24
	cli();
 43c:	f8 94       	cli
	if(can_lost == 1){
		//printf("Game (of thrones) over\n\r");
		//If you want it to work remove comment
		//brake = 1;
	}
	can_lost = 1;
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	80 93 4d 01 	sts	0x014D, r24
	/*can_send();*/
	sei();
 444:	78 94       	sei
}
 446:	8f 91       	pop	r24
 448:	0f 90       	pop	r0
 44a:	0f be       	out	0x3f, r0	; 63
 44c:	0f 90       	pop	r0
 44e:	1f 90       	pop	r1
 450:	18 95       	reti

00000452 <RGB_init>:
 *******************************************************************/
/**************
 * Init RGB led connected to PB5, PB6 and PB7
 ************ */
void RGB_init(){
	DDRB |= (1 << DDB5) | (1 << DDB6) | (1 << DDB7);
 452:	84 b1       	in	r24, 0x04	; 4
 454:	80 6e       	ori	r24, 0xE0	; 224
 456:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PB5) | (1 << PB6) | (1 << PB7);
 458:	85 b1       	in	r24, 0x05	; 5
 45a:	80 6e       	ori	r24, 0xE0	; 224
 45c:	85 b9       	out	0x05, r24	; 5
 45e:	08 95       	ret

00000460 <RGB_led_on>:
/*************
 * Turn on led.
 * 	@arg: pin number (only accepts pb5, pb6 or pb7)
 *************/
void RGB_led_on(int num){
	if(num == PB5 || num == PB6 || num == PB7){
 460:	9c 01       	movw	r18, r24
 462:	25 50       	subi	r18, 0x05	; 5
 464:	31 09       	sbc	r19, r1
 466:	23 30       	cpi	r18, 0x03	; 3
 468:	31 05       	cpc	r19, r1
 46a:	68 f4       	brcc	.+26     	; 0x486 <RGB_led_on+0x26>
		PORTB &= ~(1 << num); 
 46c:	45 b1       	in	r20, 0x05	; 5
 46e:	21 e0       	ldi	r18, 0x01	; 1
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	b9 01       	movw	r22, r18
 474:	02 c0       	rjmp	.+4      	; 0x47a <RGB_led_on+0x1a>
 476:	66 0f       	add	r22, r22
 478:	77 1f       	adc	r23, r23
 47a:	8a 95       	dec	r24
 47c:	e2 f7       	brpl	.-8      	; 0x476 <RGB_led_on+0x16>
 47e:	cb 01       	movw	r24, r22
 480:	80 95       	com	r24
 482:	84 23       	and	r24, r20
 484:	85 b9       	out	0x05, r24	; 5
 486:	08 95       	ret

00000488 <USART_tx>:
	fdevopen(USART_tx, USART_rx);
}

_Bool USART_tx(unsigned char data) {
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)));
 488:	e0 ec       	ldi	r30, 0xC0	; 192
 48a:	f0 e0       	ldi	r31, 0x00	; 0
 48c:	90 81       	ld	r25, Z
 48e:	95 ff       	sbrs	r25, 5
 490:	fd cf       	rjmp	.-6      	; 0x48c <USART_tx+0x4>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 492:	80 93 c6 00 	sts	0x00C6, r24
	// T0D0 implement 
	return true;
}
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	08 95       	ret

0000049a <USART_rx>:

unsigned char USART_rx(void) {
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)));
 49a:	e0 ec       	ldi	r30, 0xC0	; 192
 49c:	f0 e0       	ldi	r31, 0x00	; 0
 49e:	80 81       	ld	r24, Z
 4a0:	88 23       	and	r24, r24
 4a2:	ec f7       	brge	.-6      	; 0x49e <USART_rx+0x4>
	/* Get and return received data from buffer */
	return UDR0;
 4a4:	80 91 c6 00 	lds	r24, 0x00C6
}
 4a8:	08 95       	ret

000004aa <USART_init>:

/*! Initialize the serial communication
	baud is the baud rate */
void USART_init(unsigned int baud, _Bool onOff) {
	/* Set baud rate */
	UBRR0H = (unsigned char) (baud>>8);
 4aa:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char) baud;
 4ae:	80 93 c4 00 	sts	0x00C4, r24
	/* Set frame format: Asynchronous normal mode, 8data, no parity  1 stop bit */
	/*(0<<UMSEL0) | (0<<UPM0) | (0<<USBS0) | already set as Initial values */
	UCSR0C = (3<<UCSZ0);
 4b2:	86 e0       	ldi	r24, 0x06	; 6
 4b4:	80 93 c2 00 	sts	0x00C2, r24
	/* Enable receiver and transmitter */
	if (onOff) {
 4b8:	66 23       	and	r22, r22
 4ba:	41 f0       	breq	.+16     	; 0x4cc <USART_init+0x22>
		set_bit(UCSR0B,	RXEN0);
 4bc:	e1 ec       	ldi	r30, 0xC1	; 193
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	80 81       	ld	r24, Z
 4c2:	80 61       	ori	r24, 0x10	; 16
 4c4:	80 83       	st	Z, r24
		set_bit(UCSR0B, TXEN0);
 4c6:	80 81       	ld	r24, Z
 4c8:	88 60       	ori	r24, 0x08	; 8
 4ca:	80 83       	st	Z, r24
	}
	/*!	enables using fprint() instead of USART_tx_string() */
	fdevopen(USART_tx, USART_rx);
 4cc:	6d e4       	ldi	r22, 0x4D	; 77
 4ce:	72 e0       	ldi	r23, 0x02	; 2
 4d0:	84 e4       	ldi	r24, 0x44	; 68
 4d2:	92 e0       	ldi	r25, 0x02	; 2
 4d4:	01 c0       	rjmp	.+2      	; 0x4d8 <fdevopen>
 4d6:	08 95       	ret

000004d8 <fdevopen>:
 4d8:	0f 93       	push	r16
 4da:	1f 93       	push	r17
 4dc:	cf 93       	push	r28
 4de:	df 93       	push	r29
 4e0:	00 97       	sbiw	r24, 0x00	; 0
 4e2:	31 f4       	brne	.+12     	; 0x4f0 <fdevopen+0x18>
 4e4:	61 15       	cp	r22, r1
 4e6:	71 05       	cpc	r23, r1
 4e8:	19 f4       	brne	.+6      	; 0x4f0 <fdevopen+0x18>
 4ea:	80 e0       	ldi	r24, 0x00	; 0
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	39 c0       	rjmp	.+114    	; 0x562 <fdevopen+0x8a>
 4f0:	8b 01       	movw	r16, r22
 4f2:	ec 01       	movw	r28, r24
 4f4:	6e e0       	ldi	r22, 0x0E	; 14
 4f6:	70 e0       	ldi	r23, 0x00	; 0
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	38 d2       	rcall	.+1136   	; 0x96e <calloc>
 4fe:	fc 01       	movw	r30, r24
 500:	89 2b       	or	r24, r25
 502:	99 f3       	breq	.-26     	; 0x4ea <fdevopen+0x12>
 504:	80 e8       	ldi	r24, 0x80	; 128
 506:	83 83       	std	Z+3, r24	; 0x03
 508:	01 15       	cp	r16, r1
 50a:	11 05       	cpc	r17, r1
 50c:	71 f0       	breq	.+28     	; 0x52a <fdevopen+0x52>
 50e:	13 87       	std	Z+11, r17	; 0x0b
 510:	02 87       	std	Z+10, r16	; 0x0a
 512:	81 e8       	ldi	r24, 0x81	; 129
 514:	83 83       	std	Z+3, r24	; 0x03
 516:	80 91 6c 01 	lds	r24, 0x016C
 51a:	90 91 6d 01 	lds	r25, 0x016D
 51e:	89 2b       	or	r24, r25
 520:	21 f4       	brne	.+8      	; 0x52a <fdevopen+0x52>
 522:	f0 93 6d 01 	sts	0x016D, r31
 526:	e0 93 6c 01 	sts	0x016C, r30
 52a:	20 97       	sbiw	r28, 0x00	; 0
 52c:	c9 f0       	breq	.+50     	; 0x560 <fdevopen+0x88>
 52e:	d1 87       	std	Z+9, r29	; 0x09
 530:	c0 87       	std	Z+8, r28	; 0x08
 532:	83 81       	ldd	r24, Z+3	; 0x03
 534:	82 60       	ori	r24, 0x02	; 2
 536:	83 83       	std	Z+3, r24	; 0x03
 538:	80 91 6e 01 	lds	r24, 0x016E
 53c:	90 91 6f 01 	lds	r25, 0x016F
 540:	89 2b       	or	r24, r25
 542:	71 f4       	brne	.+28     	; 0x560 <fdevopen+0x88>
 544:	f0 93 6f 01 	sts	0x016F, r31
 548:	e0 93 6e 01 	sts	0x016E, r30
 54c:	80 91 70 01 	lds	r24, 0x0170
 550:	90 91 71 01 	lds	r25, 0x0171
 554:	89 2b       	or	r24, r25
 556:	21 f4       	brne	.+8      	; 0x560 <fdevopen+0x88>
 558:	f0 93 71 01 	sts	0x0171, r31
 55c:	e0 93 70 01 	sts	0x0170, r30
 560:	cf 01       	movw	r24, r30
 562:	df 91       	pop	r29
 564:	cf 91       	pop	r28
 566:	1f 91       	pop	r17
 568:	0f 91       	pop	r16
 56a:	08 95       	ret

0000056c <printf>:
 56c:	cf 93       	push	r28
 56e:	df 93       	push	r29
 570:	cd b7       	in	r28, 0x3d	; 61
 572:	de b7       	in	r29, 0x3e	; 62
 574:	ae 01       	movw	r20, r28
 576:	4b 5f       	subi	r20, 0xFB	; 251
 578:	5f 4f       	sbci	r21, 0xFF	; 255
 57a:	fa 01       	movw	r30, r20
 57c:	61 91       	ld	r22, Z+
 57e:	71 91       	ld	r23, Z+
 580:	af 01       	movw	r20, r30
 582:	80 91 6e 01 	lds	r24, 0x016E
 586:	90 91 6f 01 	lds	r25, 0x016F
 58a:	03 d0       	rcall	.+6      	; 0x592 <vfprintf>
 58c:	df 91       	pop	r29
 58e:	cf 91       	pop	r28
 590:	08 95       	ret

00000592 <vfprintf>:
 592:	2f 92       	push	r2
 594:	3f 92       	push	r3
 596:	4f 92       	push	r4
 598:	5f 92       	push	r5
 59a:	6f 92       	push	r6
 59c:	7f 92       	push	r7
 59e:	8f 92       	push	r8
 5a0:	9f 92       	push	r9
 5a2:	af 92       	push	r10
 5a4:	bf 92       	push	r11
 5a6:	cf 92       	push	r12
 5a8:	df 92       	push	r13
 5aa:	ef 92       	push	r14
 5ac:	ff 92       	push	r15
 5ae:	0f 93       	push	r16
 5b0:	1f 93       	push	r17
 5b2:	cf 93       	push	r28
 5b4:	df 93       	push	r29
 5b6:	cd b7       	in	r28, 0x3d	; 61
 5b8:	de b7       	in	r29, 0x3e	; 62
 5ba:	2c 97       	sbiw	r28, 0x0c	; 12
 5bc:	0f b6       	in	r0, 0x3f	; 63
 5be:	f8 94       	cli
 5c0:	de bf       	out	0x3e, r29	; 62
 5c2:	0f be       	out	0x3f, r0	; 63
 5c4:	cd bf       	out	0x3d, r28	; 61
 5c6:	7c 01       	movw	r14, r24
 5c8:	6b 01       	movw	r12, r22
 5ca:	8a 01       	movw	r16, r20
 5cc:	fc 01       	movw	r30, r24
 5ce:	17 82       	std	Z+7, r1	; 0x07
 5d0:	16 82       	std	Z+6, r1	; 0x06
 5d2:	83 81       	ldd	r24, Z+3	; 0x03
 5d4:	81 ff       	sbrs	r24, 1
 5d6:	b0 c1       	rjmp	.+864    	; 0x938 <vfprintf+0x3a6>
 5d8:	ce 01       	movw	r24, r28
 5da:	01 96       	adiw	r24, 0x01	; 1
 5dc:	4c 01       	movw	r8, r24
 5de:	f7 01       	movw	r30, r14
 5e0:	93 81       	ldd	r25, Z+3	; 0x03
 5e2:	f6 01       	movw	r30, r12
 5e4:	93 fd       	sbrc	r25, 3
 5e6:	85 91       	lpm	r24, Z+
 5e8:	93 ff       	sbrs	r25, 3
 5ea:	81 91       	ld	r24, Z+
 5ec:	6f 01       	movw	r12, r30
 5ee:	88 23       	and	r24, r24
 5f0:	09 f4       	brne	.+2      	; 0x5f4 <vfprintf+0x62>
 5f2:	9e c1       	rjmp	.+828    	; 0x930 <vfprintf+0x39e>
 5f4:	85 32       	cpi	r24, 0x25	; 37
 5f6:	39 f4       	brne	.+14     	; 0x606 <vfprintf+0x74>
 5f8:	93 fd       	sbrc	r25, 3
 5fa:	85 91       	lpm	r24, Z+
 5fc:	93 ff       	sbrs	r25, 3
 5fe:	81 91       	ld	r24, Z+
 600:	6f 01       	movw	r12, r30
 602:	85 32       	cpi	r24, 0x25	; 37
 604:	21 f4       	brne	.+8      	; 0x60e <vfprintf+0x7c>
 606:	b7 01       	movw	r22, r14
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	15 d3       	rcall	.+1578   	; 0xc36 <fputc>
 60c:	e8 cf       	rjmp	.-48     	; 0x5de <vfprintf+0x4c>
 60e:	51 2c       	mov	r5, r1
 610:	31 2c       	mov	r3, r1
 612:	20 e0       	ldi	r18, 0x00	; 0
 614:	20 32       	cpi	r18, 0x20	; 32
 616:	a0 f4       	brcc	.+40     	; 0x640 <vfprintf+0xae>
 618:	8b 32       	cpi	r24, 0x2B	; 43
 61a:	69 f0       	breq	.+26     	; 0x636 <vfprintf+0xa4>
 61c:	30 f4       	brcc	.+12     	; 0x62a <vfprintf+0x98>
 61e:	80 32       	cpi	r24, 0x20	; 32
 620:	59 f0       	breq	.+22     	; 0x638 <vfprintf+0xa6>
 622:	83 32       	cpi	r24, 0x23	; 35
 624:	69 f4       	brne	.+26     	; 0x640 <vfprintf+0xae>
 626:	20 61       	ori	r18, 0x10	; 16
 628:	2c c0       	rjmp	.+88     	; 0x682 <vfprintf+0xf0>
 62a:	8d 32       	cpi	r24, 0x2D	; 45
 62c:	39 f0       	breq	.+14     	; 0x63c <vfprintf+0xaa>
 62e:	80 33       	cpi	r24, 0x30	; 48
 630:	39 f4       	brne	.+14     	; 0x640 <vfprintf+0xae>
 632:	21 60       	ori	r18, 0x01	; 1
 634:	26 c0       	rjmp	.+76     	; 0x682 <vfprintf+0xf0>
 636:	22 60       	ori	r18, 0x02	; 2
 638:	24 60       	ori	r18, 0x04	; 4
 63a:	23 c0       	rjmp	.+70     	; 0x682 <vfprintf+0xf0>
 63c:	28 60       	ori	r18, 0x08	; 8
 63e:	21 c0       	rjmp	.+66     	; 0x682 <vfprintf+0xf0>
 640:	27 fd       	sbrc	r18, 7
 642:	27 c0       	rjmp	.+78     	; 0x692 <vfprintf+0x100>
 644:	30 ed       	ldi	r19, 0xD0	; 208
 646:	38 0f       	add	r19, r24
 648:	3a 30       	cpi	r19, 0x0A	; 10
 64a:	78 f4       	brcc	.+30     	; 0x66a <vfprintf+0xd8>
 64c:	26 ff       	sbrs	r18, 6
 64e:	06 c0       	rjmp	.+12     	; 0x65c <vfprintf+0xca>
 650:	fa e0       	ldi	r31, 0x0A	; 10
 652:	5f 9e       	mul	r5, r31
 654:	30 0d       	add	r19, r0
 656:	11 24       	eor	r1, r1
 658:	53 2e       	mov	r5, r19
 65a:	13 c0       	rjmp	.+38     	; 0x682 <vfprintf+0xf0>
 65c:	8a e0       	ldi	r24, 0x0A	; 10
 65e:	38 9e       	mul	r3, r24
 660:	30 0d       	add	r19, r0
 662:	11 24       	eor	r1, r1
 664:	33 2e       	mov	r3, r19
 666:	20 62       	ori	r18, 0x20	; 32
 668:	0c c0       	rjmp	.+24     	; 0x682 <vfprintf+0xf0>
 66a:	8e 32       	cpi	r24, 0x2E	; 46
 66c:	21 f4       	brne	.+8      	; 0x676 <vfprintf+0xe4>
 66e:	26 fd       	sbrc	r18, 6
 670:	5f c1       	rjmp	.+702    	; 0x930 <vfprintf+0x39e>
 672:	20 64       	ori	r18, 0x40	; 64
 674:	06 c0       	rjmp	.+12     	; 0x682 <vfprintf+0xf0>
 676:	8c 36       	cpi	r24, 0x6C	; 108
 678:	11 f4       	brne	.+4      	; 0x67e <vfprintf+0xec>
 67a:	20 68       	ori	r18, 0x80	; 128
 67c:	02 c0       	rjmp	.+4      	; 0x682 <vfprintf+0xf0>
 67e:	88 36       	cpi	r24, 0x68	; 104
 680:	41 f4       	brne	.+16     	; 0x692 <vfprintf+0x100>
 682:	f6 01       	movw	r30, r12
 684:	93 fd       	sbrc	r25, 3
 686:	85 91       	lpm	r24, Z+
 688:	93 ff       	sbrs	r25, 3
 68a:	81 91       	ld	r24, Z+
 68c:	6f 01       	movw	r12, r30
 68e:	81 11       	cpse	r24, r1
 690:	c1 cf       	rjmp	.-126    	; 0x614 <vfprintf+0x82>
 692:	98 2f       	mov	r25, r24
 694:	9f 7d       	andi	r25, 0xDF	; 223
 696:	95 54       	subi	r25, 0x45	; 69
 698:	93 30       	cpi	r25, 0x03	; 3
 69a:	28 f4       	brcc	.+10     	; 0x6a6 <vfprintf+0x114>
 69c:	0c 5f       	subi	r16, 0xFC	; 252
 69e:	1f 4f       	sbci	r17, 0xFF	; 255
 6a0:	ff e3       	ldi	r31, 0x3F	; 63
 6a2:	f9 83       	std	Y+1, r31	; 0x01
 6a4:	0d c0       	rjmp	.+26     	; 0x6c0 <vfprintf+0x12e>
 6a6:	83 36       	cpi	r24, 0x63	; 99
 6a8:	31 f0       	breq	.+12     	; 0x6b6 <vfprintf+0x124>
 6aa:	83 37       	cpi	r24, 0x73	; 115
 6ac:	71 f0       	breq	.+28     	; 0x6ca <vfprintf+0x138>
 6ae:	83 35       	cpi	r24, 0x53	; 83
 6b0:	09 f0       	breq	.+2      	; 0x6b4 <vfprintf+0x122>
 6b2:	57 c0       	rjmp	.+174    	; 0x762 <vfprintf+0x1d0>
 6b4:	21 c0       	rjmp	.+66     	; 0x6f8 <vfprintf+0x166>
 6b6:	f8 01       	movw	r30, r16
 6b8:	80 81       	ld	r24, Z
 6ba:	89 83       	std	Y+1, r24	; 0x01
 6bc:	0e 5f       	subi	r16, 0xFE	; 254
 6be:	1f 4f       	sbci	r17, 0xFF	; 255
 6c0:	44 24       	eor	r4, r4
 6c2:	43 94       	inc	r4
 6c4:	51 2c       	mov	r5, r1
 6c6:	54 01       	movw	r10, r8
 6c8:	14 c0       	rjmp	.+40     	; 0x6f2 <vfprintf+0x160>
 6ca:	38 01       	movw	r6, r16
 6cc:	f2 e0       	ldi	r31, 0x02	; 2
 6ce:	6f 0e       	add	r6, r31
 6d0:	71 1c       	adc	r7, r1
 6d2:	f8 01       	movw	r30, r16
 6d4:	a0 80       	ld	r10, Z
 6d6:	b1 80       	ldd	r11, Z+1	; 0x01
 6d8:	26 ff       	sbrs	r18, 6
 6da:	03 c0       	rjmp	.+6      	; 0x6e2 <vfprintf+0x150>
 6dc:	65 2d       	mov	r22, r5
 6de:	70 e0       	ldi	r23, 0x00	; 0
 6e0:	02 c0       	rjmp	.+4      	; 0x6e6 <vfprintf+0x154>
 6e2:	6f ef       	ldi	r22, 0xFF	; 255
 6e4:	7f ef       	ldi	r23, 0xFF	; 255
 6e6:	c5 01       	movw	r24, r10
 6e8:	2c 87       	std	Y+12, r18	; 0x0c
 6ea:	9a d2       	rcall	.+1332   	; 0xc20 <strnlen>
 6ec:	2c 01       	movw	r4, r24
 6ee:	83 01       	movw	r16, r6
 6f0:	2c 85       	ldd	r18, Y+12	; 0x0c
 6f2:	2f 77       	andi	r18, 0x7F	; 127
 6f4:	22 2e       	mov	r2, r18
 6f6:	16 c0       	rjmp	.+44     	; 0x724 <vfprintf+0x192>
 6f8:	38 01       	movw	r6, r16
 6fa:	f2 e0       	ldi	r31, 0x02	; 2
 6fc:	6f 0e       	add	r6, r31
 6fe:	71 1c       	adc	r7, r1
 700:	f8 01       	movw	r30, r16
 702:	a0 80       	ld	r10, Z
 704:	b1 80       	ldd	r11, Z+1	; 0x01
 706:	26 ff       	sbrs	r18, 6
 708:	03 c0       	rjmp	.+6      	; 0x710 <vfprintf+0x17e>
 70a:	65 2d       	mov	r22, r5
 70c:	70 e0       	ldi	r23, 0x00	; 0
 70e:	02 c0       	rjmp	.+4      	; 0x714 <vfprintf+0x182>
 710:	6f ef       	ldi	r22, 0xFF	; 255
 712:	7f ef       	ldi	r23, 0xFF	; 255
 714:	c5 01       	movw	r24, r10
 716:	2c 87       	std	Y+12, r18	; 0x0c
 718:	71 d2       	rcall	.+1250   	; 0xbfc <strnlen_P>
 71a:	2c 01       	movw	r4, r24
 71c:	2c 85       	ldd	r18, Y+12	; 0x0c
 71e:	20 68       	ori	r18, 0x80	; 128
 720:	22 2e       	mov	r2, r18
 722:	83 01       	movw	r16, r6
 724:	23 fc       	sbrc	r2, 3
 726:	19 c0       	rjmp	.+50     	; 0x75a <vfprintf+0x1c8>
 728:	83 2d       	mov	r24, r3
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	48 16       	cp	r4, r24
 72e:	59 06       	cpc	r5, r25
 730:	a0 f4       	brcc	.+40     	; 0x75a <vfprintf+0x1c8>
 732:	b7 01       	movw	r22, r14
 734:	80 e2       	ldi	r24, 0x20	; 32
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	7e d2       	rcall	.+1276   	; 0xc36 <fputc>
 73a:	3a 94       	dec	r3
 73c:	f5 cf       	rjmp	.-22     	; 0x728 <vfprintf+0x196>
 73e:	f5 01       	movw	r30, r10
 740:	27 fc       	sbrc	r2, 7
 742:	85 91       	lpm	r24, Z+
 744:	27 fe       	sbrs	r2, 7
 746:	81 91       	ld	r24, Z+
 748:	5f 01       	movw	r10, r30
 74a:	b7 01       	movw	r22, r14
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	73 d2       	rcall	.+1254   	; 0xc36 <fputc>
 750:	31 10       	cpse	r3, r1
 752:	3a 94       	dec	r3
 754:	f1 e0       	ldi	r31, 0x01	; 1
 756:	4f 1a       	sub	r4, r31
 758:	51 08       	sbc	r5, r1
 75a:	41 14       	cp	r4, r1
 75c:	51 04       	cpc	r5, r1
 75e:	79 f7       	brne	.-34     	; 0x73e <vfprintf+0x1ac>
 760:	de c0       	rjmp	.+444    	; 0x91e <vfprintf+0x38c>
 762:	84 36       	cpi	r24, 0x64	; 100
 764:	11 f0       	breq	.+4      	; 0x76a <vfprintf+0x1d8>
 766:	89 36       	cpi	r24, 0x69	; 105
 768:	31 f5       	brne	.+76     	; 0x7b6 <vfprintf+0x224>
 76a:	f8 01       	movw	r30, r16
 76c:	27 ff       	sbrs	r18, 7
 76e:	07 c0       	rjmp	.+14     	; 0x77e <vfprintf+0x1ec>
 770:	60 81       	ld	r22, Z
 772:	71 81       	ldd	r23, Z+1	; 0x01
 774:	82 81       	ldd	r24, Z+2	; 0x02
 776:	93 81       	ldd	r25, Z+3	; 0x03
 778:	0c 5f       	subi	r16, 0xFC	; 252
 77a:	1f 4f       	sbci	r17, 0xFF	; 255
 77c:	08 c0       	rjmp	.+16     	; 0x78e <vfprintf+0x1fc>
 77e:	60 81       	ld	r22, Z
 780:	71 81       	ldd	r23, Z+1	; 0x01
 782:	07 2e       	mov	r0, r23
 784:	00 0c       	add	r0, r0
 786:	88 0b       	sbc	r24, r24
 788:	99 0b       	sbc	r25, r25
 78a:	0e 5f       	subi	r16, 0xFE	; 254
 78c:	1f 4f       	sbci	r17, 0xFF	; 255
 78e:	2f 76       	andi	r18, 0x6F	; 111
 790:	72 2e       	mov	r7, r18
 792:	97 ff       	sbrs	r25, 7
 794:	09 c0       	rjmp	.+18     	; 0x7a8 <vfprintf+0x216>
 796:	90 95       	com	r25
 798:	80 95       	com	r24
 79a:	70 95       	com	r23
 79c:	61 95       	neg	r22
 79e:	7f 4f       	sbci	r23, 0xFF	; 255
 7a0:	8f 4f       	sbci	r24, 0xFF	; 255
 7a2:	9f 4f       	sbci	r25, 0xFF	; 255
 7a4:	20 68       	ori	r18, 0x80	; 128
 7a6:	72 2e       	mov	r7, r18
 7a8:	2a e0       	ldi	r18, 0x0A	; 10
 7aa:	30 e0       	ldi	r19, 0x00	; 0
 7ac:	a4 01       	movw	r20, r8
 7ae:	7b d2       	rcall	.+1270   	; 0xca6 <__ultoa_invert>
 7b0:	a8 2e       	mov	r10, r24
 7b2:	a8 18       	sub	r10, r8
 7b4:	43 c0       	rjmp	.+134    	; 0x83c <vfprintf+0x2aa>
 7b6:	85 37       	cpi	r24, 0x75	; 117
 7b8:	29 f4       	brne	.+10     	; 0x7c4 <vfprintf+0x232>
 7ba:	2f 7e       	andi	r18, 0xEF	; 239
 7bc:	b2 2e       	mov	r11, r18
 7be:	2a e0       	ldi	r18, 0x0A	; 10
 7c0:	30 e0       	ldi	r19, 0x00	; 0
 7c2:	25 c0       	rjmp	.+74     	; 0x80e <vfprintf+0x27c>
 7c4:	f2 2f       	mov	r31, r18
 7c6:	f9 7f       	andi	r31, 0xF9	; 249
 7c8:	bf 2e       	mov	r11, r31
 7ca:	8f 36       	cpi	r24, 0x6F	; 111
 7cc:	c1 f0       	breq	.+48     	; 0x7fe <vfprintf+0x26c>
 7ce:	18 f4       	brcc	.+6      	; 0x7d6 <vfprintf+0x244>
 7d0:	88 35       	cpi	r24, 0x58	; 88
 7d2:	79 f0       	breq	.+30     	; 0x7f2 <vfprintf+0x260>
 7d4:	ad c0       	rjmp	.+346    	; 0x930 <vfprintf+0x39e>
 7d6:	80 37       	cpi	r24, 0x70	; 112
 7d8:	19 f0       	breq	.+6      	; 0x7e0 <vfprintf+0x24e>
 7da:	88 37       	cpi	r24, 0x78	; 120
 7dc:	21 f0       	breq	.+8      	; 0x7e6 <vfprintf+0x254>
 7de:	a8 c0       	rjmp	.+336    	; 0x930 <vfprintf+0x39e>
 7e0:	2f 2f       	mov	r18, r31
 7e2:	20 61       	ori	r18, 0x10	; 16
 7e4:	b2 2e       	mov	r11, r18
 7e6:	b4 fe       	sbrs	r11, 4
 7e8:	0d c0       	rjmp	.+26     	; 0x804 <vfprintf+0x272>
 7ea:	8b 2d       	mov	r24, r11
 7ec:	84 60       	ori	r24, 0x04	; 4
 7ee:	b8 2e       	mov	r11, r24
 7f0:	09 c0       	rjmp	.+18     	; 0x804 <vfprintf+0x272>
 7f2:	24 ff       	sbrs	r18, 4
 7f4:	0a c0       	rjmp	.+20     	; 0x80a <vfprintf+0x278>
 7f6:	9f 2f       	mov	r25, r31
 7f8:	96 60       	ori	r25, 0x06	; 6
 7fa:	b9 2e       	mov	r11, r25
 7fc:	06 c0       	rjmp	.+12     	; 0x80a <vfprintf+0x278>
 7fe:	28 e0       	ldi	r18, 0x08	; 8
 800:	30 e0       	ldi	r19, 0x00	; 0
 802:	05 c0       	rjmp	.+10     	; 0x80e <vfprintf+0x27c>
 804:	20 e1       	ldi	r18, 0x10	; 16
 806:	30 e0       	ldi	r19, 0x00	; 0
 808:	02 c0       	rjmp	.+4      	; 0x80e <vfprintf+0x27c>
 80a:	20 e1       	ldi	r18, 0x10	; 16
 80c:	32 e0       	ldi	r19, 0x02	; 2
 80e:	f8 01       	movw	r30, r16
 810:	b7 fe       	sbrs	r11, 7
 812:	07 c0       	rjmp	.+14     	; 0x822 <vfprintf+0x290>
 814:	60 81       	ld	r22, Z
 816:	71 81       	ldd	r23, Z+1	; 0x01
 818:	82 81       	ldd	r24, Z+2	; 0x02
 81a:	93 81       	ldd	r25, Z+3	; 0x03
 81c:	0c 5f       	subi	r16, 0xFC	; 252
 81e:	1f 4f       	sbci	r17, 0xFF	; 255
 820:	06 c0       	rjmp	.+12     	; 0x82e <vfprintf+0x29c>
 822:	60 81       	ld	r22, Z
 824:	71 81       	ldd	r23, Z+1	; 0x01
 826:	80 e0       	ldi	r24, 0x00	; 0
 828:	90 e0       	ldi	r25, 0x00	; 0
 82a:	0e 5f       	subi	r16, 0xFE	; 254
 82c:	1f 4f       	sbci	r17, 0xFF	; 255
 82e:	a4 01       	movw	r20, r8
 830:	3a d2       	rcall	.+1140   	; 0xca6 <__ultoa_invert>
 832:	a8 2e       	mov	r10, r24
 834:	a8 18       	sub	r10, r8
 836:	fb 2d       	mov	r31, r11
 838:	ff 77       	andi	r31, 0x7F	; 127
 83a:	7f 2e       	mov	r7, r31
 83c:	76 fe       	sbrs	r7, 6
 83e:	0b c0       	rjmp	.+22     	; 0x856 <vfprintf+0x2c4>
 840:	37 2d       	mov	r19, r7
 842:	3e 7f       	andi	r19, 0xFE	; 254
 844:	a5 14       	cp	r10, r5
 846:	50 f4       	brcc	.+20     	; 0x85c <vfprintf+0x2ca>
 848:	74 fe       	sbrs	r7, 4
 84a:	0a c0       	rjmp	.+20     	; 0x860 <vfprintf+0x2ce>
 84c:	72 fc       	sbrc	r7, 2
 84e:	08 c0       	rjmp	.+16     	; 0x860 <vfprintf+0x2ce>
 850:	37 2d       	mov	r19, r7
 852:	3e 7e       	andi	r19, 0xEE	; 238
 854:	05 c0       	rjmp	.+10     	; 0x860 <vfprintf+0x2ce>
 856:	ba 2c       	mov	r11, r10
 858:	37 2d       	mov	r19, r7
 85a:	03 c0       	rjmp	.+6      	; 0x862 <vfprintf+0x2d0>
 85c:	ba 2c       	mov	r11, r10
 85e:	01 c0       	rjmp	.+2      	; 0x862 <vfprintf+0x2d0>
 860:	b5 2c       	mov	r11, r5
 862:	34 ff       	sbrs	r19, 4
 864:	0d c0       	rjmp	.+26     	; 0x880 <vfprintf+0x2ee>
 866:	fe 01       	movw	r30, r28
 868:	ea 0d       	add	r30, r10
 86a:	f1 1d       	adc	r31, r1
 86c:	80 81       	ld	r24, Z
 86e:	80 33       	cpi	r24, 0x30	; 48
 870:	11 f4       	brne	.+4      	; 0x876 <vfprintf+0x2e4>
 872:	39 7e       	andi	r19, 0xE9	; 233
 874:	09 c0       	rjmp	.+18     	; 0x888 <vfprintf+0x2f6>
 876:	32 ff       	sbrs	r19, 2
 878:	06 c0       	rjmp	.+12     	; 0x886 <vfprintf+0x2f4>
 87a:	b3 94       	inc	r11
 87c:	b3 94       	inc	r11
 87e:	04 c0       	rjmp	.+8      	; 0x888 <vfprintf+0x2f6>
 880:	83 2f       	mov	r24, r19
 882:	86 78       	andi	r24, 0x86	; 134
 884:	09 f0       	breq	.+2      	; 0x888 <vfprintf+0x2f6>
 886:	b3 94       	inc	r11
 888:	33 fd       	sbrc	r19, 3
 88a:	12 c0       	rjmp	.+36     	; 0x8b0 <vfprintf+0x31e>
 88c:	30 ff       	sbrs	r19, 0
 88e:	06 c0       	rjmp	.+12     	; 0x89c <vfprintf+0x30a>
 890:	5a 2c       	mov	r5, r10
 892:	b3 14       	cp	r11, r3
 894:	18 f4       	brcc	.+6      	; 0x89c <vfprintf+0x30a>
 896:	53 0c       	add	r5, r3
 898:	5b 18       	sub	r5, r11
 89a:	b3 2c       	mov	r11, r3
 89c:	b3 14       	cp	r11, r3
 89e:	60 f4       	brcc	.+24     	; 0x8b8 <vfprintf+0x326>
 8a0:	b7 01       	movw	r22, r14
 8a2:	80 e2       	ldi	r24, 0x20	; 32
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	3c 87       	std	Y+12, r19	; 0x0c
 8a8:	c6 d1       	rcall	.+908    	; 0xc36 <fputc>
 8aa:	b3 94       	inc	r11
 8ac:	3c 85       	ldd	r19, Y+12	; 0x0c
 8ae:	f6 cf       	rjmp	.-20     	; 0x89c <vfprintf+0x30a>
 8b0:	b3 14       	cp	r11, r3
 8b2:	10 f4       	brcc	.+4      	; 0x8b8 <vfprintf+0x326>
 8b4:	3b 18       	sub	r3, r11
 8b6:	01 c0       	rjmp	.+2      	; 0x8ba <vfprintf+0x328>
 8b8:	31 2c       	mov	r3, r1
 8ba:	34 ff       	sbrs	r19, 4
 8bc:	11 c0       	rjmp	.+34     	; 0x8e0 <vfprintf+0x34e>
 8be:	b7 01       	movw	r22, r14
 8c0:	80 e3       	ldi	r24, 0x30	; 48
 8c2:	90 e0       	ldi	r25, 0x00	; 0
 8c4:	3c 87       	std	Y+12, r19	; 0x0c
 8c6:	b7 d1       	rcall	.+878    	; 0xc36 <fputc>
 8c8:	3c 85       	ldd	r19, Y+12	; 0x0c
 8ca:	32 ff       	sbrs	r19, 2
 8cc:	16 c0       	rjmp	.+44     	; 0x8fa <vfprintf+0x368>
 8ce:	31 fd       	sbrc	r19, 1
 8d0:	03 c0       	rjmp	.+6      	; 0x8d8 <vfprintf+0x346>
 8d2:	88 e7       	ldi	r24, 0x78	; 120
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	02 c0       	rjmp	.+4      	; 0x8dc <vfprintf+0x34a>
 8d8:	88 e5       	ldi	r24, 0x58	; 88
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	b7 01       	movw	r22, r14
 8de:	0c c0       	rjmp	.+24     	; 0x8f8 <vfprintf+0x366>
 8e0:	83 2f       	mov	r24, r19
 8e2:	86 78       	andi	r24, 0x86	; 134
 8e4:	51 f0       	breq	.+20     	; 0x8fa <vfprintf+0x368>
 8e6:	31 ff       	sbrs	r19, 1
 8e8:	02 c0       	rjmp	.+4      	; 0x8ee <vfprintf+0x35c>
 8ea:	8b e2       	ldi	r24, 0x2B	; 43
 8ec:	01 c0       	rjmp	.+2      	; 0x8f0 <vfprintf+0x35e>
 8ee:	80 e2       	ldi	r24, 0x20	; 32
 8f0:	37 fd       	sbrc	r19, 7
 8f2:	8d e2       	ldi	r24, 0x2D	; 45
 8f4:	b7 01       	movw	r22, r14
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	9e d1       	rcall	.+828    	; 0xc36 <fputc>
 8fa:	a5 14       	cp	r10, r5
 8fc:	30 f4       	brcc	.+12     	; 0x90a <vfprintf+0x378>
 8fe:	b7 01       	movw	r22, r14
 900:	80 e3       	ldi	r24, 0x30	; 48
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	98 d1       	rcall	.+816    	; 0xc36 <fputc>
 906:	5a 94       	dec	r5
 908:	f8 cf       	rjmp	.-16     	; 0x8fa <vfprintf+0x368>
 90a:	aa 94       	dec	r10
 90c:	f4 01       	movw	r30, r8
 90e:	ea 0d       	add	r30, r10
 910:	f1 1d       	adc	r31, r1
 912:	80 81       	ld	r24, Z
 914:	b7 01       	movw	r22, r14
 916:	90 e0       	ldi	r25, 0x00	; 0
 918:	8e d1       	rcall	.+796    	; 0xc36 <fputc>
 91a:	a1 10       	cpse	r10, r1
 91c:	f6 cf       	rjmp	.-20     	; 0x90a <vfprintf+0x378>
 91e:	33 20       	and	r3, r3
 920:	09 f4       	brne	.+2      	; 0x924 <vfprintf+0x392>
 922:	5d ce       	rjmp	.-838    	; 0x5de <vfprintf+0x4c>
 924:	b7 01       	movw	r22, r14
 926:	80 e2       	ldi	r24, 0x20	; 32
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	85 d1       	rcall	.+778    	; 0xc36 <fputc>
 92c:	3a 94       	dec	r3
 92e:	f7 cf       	rjmp	.-18     	; 0x91e <vfprintf+0x38c>
 930:	f7 01       	movw	r30, r14
 932:	86 81       	ldd	r24, Z+6	; 0x06
 934:	97 81       	ldd	r25, Z+7	; 0x07
 936:	02 c0       	rjmp	.+4      	; 0x93c <vfprintf+0x3aa>
 938:	8f ef       	ldi	r24, 0xFF	; 255
 93a:	9f ef       	ldi	r25, 0xFF	; 255
 93c:	2c 96       	adiw	r28, 0x0c	; 12
 93e:	0f b6       	in	r0, 0x3f	; 63
 940:	f8 94       	cli
 942:	de bf       	out	0x3e, r29	; 62
 944:	0f be       	out	0x3f, r0	; 63
 946:	cd bf       	out	0x3d, r28	; 61
 948:	df 91       	pop	r29
 94a:	cf 91       	pop	r28
 94c:	1f 91       	pop	r17
 94e:	0f 91       	pop	r16
 950:	ff 90       	pop	r15
 952:	ef 90       	pop	r14
 954:	df 90       	pop	r13
 956:	cf 90       	pop	r12
 958:	bf 90       	pop	r11
 95a:	af 90       	pop	r10
 95c:	9f 90       	pop	r9
 95e:	8f 90       	pop	r8
 960:	7f 90       	pop	r7
 962:	6f 90       	pop	r6
 964:	5f 90       	pop	r5
 966:	4f 90       	pop	r4
 968:	3f 90       	pop	r3
 96a:	2f 90       	pop	r2
 96c:	08 95       	ret

0000096e <calloc>:
 96e:	0f 93       	push	r16
 970:	1f 93       	push	r17
 972:	cf 93       	push	r28
 974:	df 93       	push	r29
 976:	86 9f       	mul	r24, r22
 978:	80 01       	movw	r16, r0
 97a:	87 9f       	mul	r24, r23
 97c:	10 0d       	add	r17, r0
 97e:	96 9f       	mul	r25, r22
 980:	10 0d       	add	r17, r0
 982:	11 24       	eor	r1, r1
 984:	c8 01       	movw	r24, r16
 986:	0d d0       	rcall	.+26     	; 0x9a2 <malloc>
 988:	ec 01       	movw	r28, r24
 98a:	00 97       	sbiw	r24, 0x00	; 0
 98c:	21 f0       	breq	.+8      	; 0x996 <calloc+0x28>
 98e:	a8 01       	movw	r20, r16
 990:	60 e0       	ldi	r22, 0x00	; 0
 992:	70 e0       	ldi	r23, 0x00	; 0
 994:	3e d1       	rcall	.+636    	; 0xc12 <memset>
 996:	ce 01       	movw	r24, r28
 998:	df 91       	pop	r29
 99a:	cf 91       	pop	r28
 99c:	1f 91       	pop	r17
 99e:	0f 91       	pop	r16
 9a0:	08 95       	ret

000009a2 <malloc>:
 9a2:	cf 93       	push	r28
 9a4:	df 93       	push	r29
 9a6:	82 30       	cpi	r24, 0x02	; 2
 9a8:	91 05       	cpc	r25, r1
 9aa:	10 f4       	brcc	.+4      	; 0x9b0 <malloc+0xe>
 9ac:	82 e0       	ldi	r24, 0x02	; 2
 9ae:	90 e0       	ldi	r25, 0x00	; 0
 9b0:	e0 91 74 01 	lds	r30, 0x0174
 9b4:	f0 91 75 01 	lds	r31, 0x0175
 9b8:	20 e0       	ldi	r18, 0x00	; 0
 9ba:	30 e0       	ldi	r19, 0x00	; 0
 9bc:	c0 e0       	ldi	r28, 0x00	; 0
 9be:	d0 e0       	ldi	r29, 0x00	; 0
 9c0:	30 97       	sbiw	r30, 0x00	; 0
 9c2:	11 f1       	breq	.+68     	; 0xa08 <malloc+0x66>
 9c4:	40 81       	ld	r20, Z
 9c6:	51 81       	ldd	r21, Z+1	; 0x01
 9c8:	48 17       	cp	r20, r24
 9ca:	59 07       	cpc	r21, r25
 9cc:	c0 f0       	brcs	.+48     	; 0x9fe <malloc+0x5c>
 9ce:	48 17       	cp	r20, r24
 9d0:	59 07       	cpc	r21, r25
 9d2:	61 f4       	brne	.+24     	; 0x9ec <malloc+0x4a>
 9d4:	82 81       	ldd	r24, Z+2	; 0x02
 9d6:	93 81       	ldd	r25, Z+3	; 0x03
 9d8:	20 97       	sbiw	r28, 0x00	; 0
 9da:	19 f0       	breq	.+6      	; 0x9e2 <malloc+0x40>
 9dc:	9b 83       	std	Y+3, r25	; 0x03
 9de:	8a 83       	std	Y+2, r24	; 0x02
 9e0:	2b c0       	rjmp	.+86     	; 0xa38 <malloc+0x96>
 9e2:	90 93 75 01 	sts	0x0175, r25
 9e6:	80 93 74 01 	sts	0x0174, r24
 9ea:	26 c0       	rjmp	.+76     	; 0xa38 <malloc+0x96>
 9ec:	21 15       	cp	r18, r1
 9ee:	31 05       	cpc	r19, r1
 9f0:	19 f0       	breq	.+6      	; 0x9f8 <malloc+0x56>
 9f2:	42 17       	cp	r20, r18
 9f4:	53 07       	cpc	r21, r19
 9f6:	18 f4       	brcc	.+6      	; 0x9fe <malloc+0x5c>
 9f8:	9a 01       	movw	r18, r20
 9fa:	be 01       	movw	r22, r28
 9fc:	df 01       	movw	r26, r30
 9fe:	ef 01       	movw	r28, r30
 a00:	02 80       	ldd	r0, Z+2	; 0x02
 a02:	f3 81       	ldd	r31, Z+3	; 0x03
 a04:	e0 2d       	mov	r30, r0
 a06:	dc cf       	rjmp	.-72     	; 0x9c0 <malloc+0x1e>
 a08:	21 15       	cp	r18, r1
 a0a:	31 05       	cpc	r19, r1
 a0c:	09 f1       	breq	.+66     	; 0xa50 <malloc+0xae>
 a0e:	28 1b       	sub	r18, r24
 a10:	39 0b       	sbc	r19, r25
 a12:	24 30       	cpi	r18, 0x04	; 4
 a14:	31 05       	cpc	r19, r1
 a16:	90 f4       	brcc	.+36     	; 0xa3c <malloc+0x9a>
 a18:	12 96       	adiw	r26, 0x02	; 2
 a1a:	8d 91       	ld	r24, X+
 a1c:	9c 91       	ld	r25, X
 a1e:	13 97       	sbiw	r26, 0x03	; 3
 a20:	61 15       	cp	r22, r1
 a22:	71 05       	cpc	r23, r1
 a24:	21 f0       	breq	.+8      	; 0xa2e <malloc+0x8c>
 a26:	fb 01       	movw	r30, r22
 a28:	93 83       	std	Z+3, r25	; 0x03
 a2a:	82 83       	std	Z+2, r24	; 0x02
 a2c:	04 c0       	rjmp	.+8      	; 0xa36 <malloc+0x94>
 a2e:	90 93 75 01 	sts	0x0175, r25
 a32:	80 93 74 01 	sts	0x0174, r24
 a36:	fd 01       	movw	r30, r26
 a38:	32 96       	adiw	r30, 0x02	; 2
 a3a:	44 c0       	rjmp	.+136    	; 0xac4 <malloc+0x122>
 a3c:	fd 01       	movw	r30, r26
 a3e:	e2 0f       	add	r30, r18
 a40:	f3 1f       	adc	r31, r19
 a42:	81 93       	st	Z+, r24
 a44:	91 93       	st	Z+, r25
 a46:	22 50       	subi	r18, 0x02	; 2
 a48:	31 09       	sbc	r19, r1
 a4a:	2d 93       	st	X+, r18
 a4c:	3c 93       	st	X, r19
 a4e:	3a c0       	rjmp	.+116    	; 0xac4 <malloc+0x122>
 a50:	20 91 72 01 	lds	r18, 0x0172
 a54:	30 91 73 01 	lds	r19, 0x0173
 a58:	23 2b       	or	r18, r19
 a5a:	41 f4       	brne	.+16     	; 0xa6c <malloc+0xca>
 a5c:	20 91 02 01 	lds	r18, 0x0102
 a60:	30 91 03 01 	lds	r19, 0x0103
 a64:	30 93 73 01 	sts	0x0173, r19
 a68:	20 93 72 01 	sts	0x0172, r18
 a6c:	20 91 00 01 	lds	r18, 0x0100
 a70:	30 91 01 01 	lds	r19, 0x0101
 a74:	21 15       	cp	r18, r1
 a76:	31 05       	cpc	r19, r1
 a78:	41 f4       	brne	.+16     	; 0xa8a <malloc+0xe8>
 a7a:	2d b7       	in	r18, 0x3d	; 61
 a7c:	3e b7       	in	r19, 0x3e	; 62
 a7e:	40 91 04 01 	lds	r20, 0x0104
 a82:	50 91 05 01 	lds	r21, 0x0105
 a86:	24 1b       	sub	r18, r20
 a88:	35 0b       	sbc	r19, r21
 a8a:	e0 91 72 01 	lds	r30, 0x0172
 a8e:	f0 91 73 01 	lds	r31, 0x0173
 a92:	e2 17       	cp	r30, r18
 a94:	f3 07       	cpc	r31, r19
 a96:	a0 f4       	brcc	.+40     	; 0xac0 <malloc+0x11e>
 a98:	2e 1b       	sub	r18, r30
 a9a:	3f 0b       	sbc	r19, r31
 a9c:	28 17       	cp	r18, r24
 a9e:	39 07       	cpc	r19, r25
 aa0:	78 f0       	brcs	.+30     	; 0xac0 <malloc+0x11e>
 aa2:	ac 01       	movw	r20, r24
 aa4:	4e 5f       	subi	r20, 0xFE	; 254
 aa6:	5f 4f       	sbci	r21, 0xFF	; 255
 aa8:	24 17       	cp	r18, r20
 aaa:	35 07       	cpc	r19, r21
 aac:	48 f0       	brcs	.+18     	; 0xac0 <malloc+0x11e>
 aae:	4e 0f       	add	r20, r30
 ab0:	5f 1f       	adc	r21, r31
 ab2:	50 93 73 01 	sts	0x0173, r21
 ab6:	40 93 72 01 	sts	0x0172, r20
 aba:	81 93       	st	Z+, r24
 abc:	91 93       	st	Z+, r25
 abe:	02 c0       	rjmp	.+4      	; 0xac4 <malloc+0x122>
 ac0:	e0 e0       	ldi	r30, 0x00	; 0
 ac2:	f0 e0       	ldi	r31, 0x00	; 0
 ac4:	cf 01       	movw	r24, r30
 ac6:	df 91       	pop	r29
 ac8:	cf 91       	pop	r28
 aca:	08 95       	ret

00000acc <free>:
 acc:	0f 93       	push	r16
 ace:	1f 93       	push	r17
 ad0:	cf 93       	push	r28
 ad2:	df 93       	push	r29
 ad4:	00 97       	sbiw	r24, 0x00	; 0
 ad6:	09 f4       	brne	.+2      	; 0xada <free+0xe>
 ad8:	8c c0       	rjmp	.+280    	; 0xbf2 <free+0x126>
 ada:	fc 01       	movw	r30, r24
 adc:	32 97       	sbiw	r30, 0x02	; 2
 ade:	13 82       	std	Z+3, r1	; 0x03
 ae0:	12 82       	std	Z+2, r1	; 0x02
 ae2:	00 91 74 01 	lds	r16, 0x0174
 ae6:	10 91 75 01 	lds	r17, 0x0175
 aea:	01 15       	cp	r16, r1
 aec:	11 05       	cpc	r17, r1
 aee:	81 f4       	brne	.+32     	; 0xb10 <free+0x44>
 af0:	20 81       	ld	r18, Z
 af2:	31 81       	ldd	r19, Z+1	; 0x01
 af4:	82 0f       	add	r24, r18
 af6:	93 1f       	adc	r25, r19
 af8:	20 91 72 01 	lds	r18, 0x0172
 afc:	30 91 73 01 	lds	r19, 0x0173
 b00:	28 17       	cp	r18, r24
 b02:	39 07       	cpc	r19, r25
 b04:	79 f5       	brne	.+94     	; 0xb64 <free+0x98>
 b06:	f0 93 73 01 	sts	0x0173, r31
 b0a:	e0 93 72 01 	sts	0x0172, r30
 b0e:	71 c0       	rjmp	.+226    	; 0xbf2 <free+0x126>
 b10:	d8 01       	movw	r26, r16
 b12:	40 e0       	ldi	r20, 0x00	; 0
 b14:	50 e0       	ldi	r21, 0x00	; 0
 b16:	ae 17       	cp	r26, r30
 b18:	bf 07       	cpc	r27, r31
 b1a:	50 f4       	brcc	.+20     	; 0xb30 <free+0x64>
 b1c:	12 96       	adiw	r26, 0x02	; 2
 b1e:	2d 91       	ld	r18, X+
 b20:	3c 91       	ld	r19, X
 b22:	13 97       	sbiw	r26, 0x03	; 3
 b24:	ad 01       	movw	r20, r26
 b26:	21 15       	cp	r18, r1
 b28:	31 05       	cpc	r19, r1
 b2a:	09 f1       	breq	.+66     	; 0xb6e <free+0xa2>
 b2c:	d9 01       	movw	r26, r18
 b2e:	f3 cf       	rjmp	.-26     	; 0xb16 <free+0x4a>
 b30:	9d 01       	movw	r18, r26
 b32:	da 01       	movw	r26, r20
 b34:	33 83       	std	Z+3, r19	; 0x03
 b36:	22 83       	std	Z+2, r18	; 0x02
 b38:	60 81       	ld	r22, Z
 b3a:	71 81       	ldd	r23, Z+1	; 0x01
 b3c:	86 0f       	add	r24, r22
 b3e:	97 1f       	adc	r25, r23
 b40:	82 17       	cp	r24, r18
 b42:	93 07       	cpc	r25, r19
 b44:	69 f4       	brne	.+26     	; 0xb60 <free+0x94>
 b46:	ec 01       	movw	r28, r24
 b48:	28 81       	ld	r18, Y
 b4a:	39 81       	ldd	r19, Y+1	; 0x01
 b4c:	26 0f       	add	r18, r22
 b4e:	37 1f       	adc	r19, r23
 b50:	2e 5f       	subi	r18, 0xFE	; 254
 b52:	3f 4f       	sbci	r19, 0xFF	; 255
 b54:	31 83       	std	Z+1, r19	; 0x01
 b56:	20 83       	st	Z, r18
 b58:	8a 81       	ldd	r24, Y+2	; 0x02
 b5a:	9b 81       	ldd	r25, Y+3	; 0x03
 b5c:	93 83       	std	Z+3, r25	; 0x03
 b5e:	82 83       	std	Z+2, r24	; 0x02
 b60:	45 2b       	or	r20, r21
 b62:	29 f4       	brne	.+10     	; 0xb6e <free+0xa2>
 b64:	f0 93 75 01 	sts	0x0175, r31
 b68:	e0 93 74 01 	sts	0x0174, r30
 b6c:	42 c0       	rjmp	.+132    	; 0xbf2 <free+0x126>
 b6e:	13 96       	adiw	r26, 0x03	; 3
 b70:	fc 93       	st	X, r31
 b72:	ee 93       	st	-X, r30
 b74:	12 97       	sbiw	r26, 0x02	; 2
 b76:	ed 01       	movw	r28, r26
 b78:	49 91       	ld	r20, Y+
 b7a:	59 91       	ld	r21, Y+
 b7c:	9e 01       	movw	r18, r28
 b7e:	24 0f       	add	r18, r20
 b80:	35 1f       	adc	r19, r21
 b82:	e2 17       	cp	r30, r18
 b84:	f3 07       	cpc	r31, r19
 b86:	71 f4       	brne	.+28     	; 0xba4 <free+0xd8>
 b88:	80 81       	ld	r24, Z
 b8a:	91 81       	ldd	r25, Z+1	; 0x01
 b8c:	84 0f       	add	r24, r20
 b8e:	95 1f       	adc	r25, r21
 b90:	02 96       	adiw	r24, 0x02	; 2
 b92:	11 96       	adiw	r26, 0x01	; 1
 b94:	9c 93       	st	X, r25
 b96:	8e 93       	st	-X, r24
 b98:	82 81       	ldd	r24, Z+2	; 0x02
 b9a:	93 81       	ldd	r25, Z+3	; 0x03
 b9c:	13 96       	adiw	r26, 0x03	; 3
 b9e:	9c 93       	st	X, r25
 ba0:	8e 93       	st	-X, r24
 ba2:	12 97       	sbiw	r26, 0x02	; 2
 ba4:	e0 e0       	ldi	r30, 0x00	; 0
 ba6:	f0 e0       	ldi	r31, 0x00	; 0
 ba8:	d8 01       	movw	r26, r16
 baa:	12 96       	adiw	r26, 0x02	; 2
 bac:	8d 91       	ld	r24, X+
 bae:	9c 91       	ld	r25, X
 bb0:	13 97       	sbiw	r26, 0x03	; 3
 bb2:	00 97       	sbiw	r24, 0x00	; 0
 bb4:	19 f0       	breq	.+6      	; 0xbbc <free+0xf0>
 bb6:	f8 01       	movw	r30, r16
 bb8:	8c 01       	movw	r16, r24
 bba:	f6 cf       	rjmp	.-20     	; 0xba8 <free+0xdc>
 bbc:	8d 91       	ld	r24, X+
 bbe:	9c 91       	ld	r25, X
 bc0:	98 01       	movw	r18, r16
 bc2:	2e 5f       	subi	r18, 0xFE	; 254
 bc4:	3f 4f       	sbci	r19, 0xFF	; 255
 bc6:	82 0f       	add	r24, r18
 bc8:	93 1f       	adc	r25, r19
 bca:	20 91 72 01 	lds	r18, 0x0172
 bce:	30 91 73 01 	lds	r19, 0x0173
 bd2:	28 17       	cp	r18, r24
 bd4:	39 07       	cpc	r19, r25
 bd6:	69 f4       	brne	.+26     	; 0xbf2 <free+0x126>
 bd8:	30 97       	sbiw	r30, 0x00	; 0
 bda:	29 f4       	brne	.+10     	; 0xbe6 <free+0x11a>
 bdc:	10 92 75 01 	sts	0x0175, r1
 be0:	10 92 74 01 	sts	0x0174, r1
 be4:	02 c0       	rjmp	.+4      	; 0xbea <free+0x11e>
 be6:	13 82       	std	Z+3, r1	; 0x03
 be8:	12 82       	std	Z+2, r1	; 0x02
 bea:	10 93 73 01 	sts	0x0173, r17
 bee:	00 93 72 01 	sts	0x0172, r16
 bf2:	df 91       	pop	r29
 bf4:	cf 91       	pop	r28
 bf6:	1f 91       	pop	r17
 bf8:	0f 91       	pop	r16
 bfa:	08 95       	ret

00000bfc <strnlen_P>:
 bfc:	fc 01       	movw	r30, r24
 bfe:	05 90       	lpm	r0, Z+
 c00:	61 50       	subi	r22, 0x01	; 1
 c02:	70 40       	sbci	r23, 0x00	; 0
 c04:	01 10       	cpse	r0, r1
 c06:	d8 f7       	brcc	.-10     	; 0xbfe <strnlen_P+0x2>
 c08:	80 95       	com	r24
 c0a:	90 95       	com	r25
 c0c:	8e 0f       	add	r24, r30
 c0e:	9f 1f       	adc	r25, r31
 c10:	08 95       	ret

00000c12 <memset>:
 c12:	dc 01       	movw	r26, r24
 c14:	01 c0       	rjmp	.+2      	; 0xc18 <memset+0x6>
 c16:	6d 93       	st	X+, r22
 c18:	41 50       	subi	r20, 0x01	; 1
 c1a:	50 40       	sbci	r21, 0x00	; 0
 c1c:	e0 f7       	brcc	.-8      	; 0xc16 <memset+0x4>
 c1e:	08 95       	ret

00000c20 <strnlen>:
 c20:	fc 01       	movw	r30, r24
 c22:	61 50       	subi	r22, 0x01	; 1
 c24:	70 40       	sbci	r23, 0x00	; 0
 c26:	01 90       	ld	r0, Z+
 c28:	01 10       	cpse	r0, r1
 c2a:	d8 f7       	brcc	.-10     	; 0xc22 <strnlen+0x2>
 c2c:	80 95       	com	r24
 c2e:	90 95       	com	r25
 c30:	8e 0f       	add	r24, r30
 c32:	9f 1f       	adc	r25, r31
 c34:	08 95       	ret

00000c36 <fputc>:
 c36:	0f 93       	push	r16
 c38:	1f 93       	push	r17
 c3a:	cf 93       	push	r28
 c3c:	df 93       	push	r29
 c3e:	fb 01       	movw	r30, r22
 c40:	23 81       	ldd	r18, Z+3	; 0x03
 c42:	21 fd       	sbrc	r18, 1
 c44:	03 c0       	rjmp	.+6      	; 0xc4c <fputc+0x16>
 c46:	8f ef       	ldi	r24, 0xFF	; 255
 c48:	9f ef       	ldi	r25, 0xFF	; 255
 c4a:	28 c0       	rjmp	.+80     	; 0xc9c <fputc+0x66>
 c4c:	22 ff       	sbrs	r18, 2
 c4e:	16 c0       	rjmp	.+44     	; 0xc7c <fputc+0x46>
 c50:	46 81       	ldd	r20, Z+6	; 0x06
 c52:	57 81       	ldd	r21, Z+7	; 0x07
 c54:	24 81       	ldd	r18, Z+4	; 0x04
 c56:	35 81       	ldd	r19, Z+5	; 0x05
 c58:	42 17       	cp	r20, r18
 c5a:	53 07       	cpc	r21, r19
 c5c:	44 f4       	brge	.+16     	; 0xc6e <fputc+0x38>
 c5e:	a0 81       	ld	r26, Z
 c60:	b1 81       	ldd	r27, Z+1	; 0x01
 c62:	9d 01       	movw	r18, r26
 c64:	2f 5f       	subi	r18, 0xFF	; 255
 c66:	3f 4f       	sbci	r19, 0xFF	; 255
 c68:	31 83       	std	Z+1, r19	; 0x01
 c6a:	20 83       	st	Z, r18
 c6c:	8c 93       	st	X, r24
 c6e:	26 81       	ldd	r18, Z+6	; 0x06
 c70:	37 81       	ldd	r19, Z+7	; 0x07
 c72:	2f 5f       	subi	r18, 0xFF	; 255
 c74:	3f 4f       	sbci	r19, 0xFF	; 255
 c76:	37 83       	std	Z+7, r19	; 0x07
 c78:	26 83       	std	Z+6, r18	; 0x06
 c7a:	10 c0       	rjmp	.+32     	; 0xc9c <fputc+0x66>
 c7c:	eb 01       	movw	r28, r22
 c7e:	09 2f       	mov	r16, r25
 c80:	18 2f       	mov	r17, r24
 c82:	00 84       	ldd	r0, Z+8	; 0x08
 c84:	f1 85       	ldd	r31, Z+9	; 0x09
 c86:	e0 2d       	mov	r30, r0
 c88:	09 95       	icall
 c8a:	89 2b       	or	r24, r25
 c8c:	e1 f6       	brne	.-72     	; 0xc46 <fputc+0x10>
 c8e:	8e 81       	ldd	r24, Y+6	; 0x06
 c90:	9f 81       	ldd	r25, Y+7	; 0x07
 c92:	01 96       	adiw	r24, 0x01	; 1
 c94:	9f 83       	std	Y+7, r25	; 0x07
 c96:	8e 83       	std	Y+6, r24	; 0x06
 c98:	81 2f       	mov	r24, r17
 c9a:	90 2f       	mov	r25, r16
 c9c:	df 91       	pop	r29
 c9e:	cf 91       	pop	r28
 ca0:	1f 91       	pop	r17
 ca2:	0f 91       	pop	r16
 ca4:	08 95       	ret

00000ca6 <__ultoa_invert>:
 ca6:	fa 01       	movw	r30, r20
 ca8:	aa 27       	eor	r26, r26
 caa:	28 30       	cpi	r18, 0x08	; 8
 cac:	51 f1       	breq	.+84     	; 0xd02 <__ultoa_invert+0x5c>
 cae:	20 31       	cpi	r18, 0x10	; 16
 cb0:	81 f1       	breq	.+96     	; 0xd12 <__ultoa_invert+0x6c>
 cb2:	e8 94       	clt
 cb4:	6f 93       	push	r22
 cb6:	6e 7f       	andi	r22, 0xFE	; 254
 cb8:	6e 5f       	subi	r22, 0xFE	; 254
 cba:	7f 4f       	sbci	r23, 0xFF	; 255
 cbc:	8f 4f       	sbci	r24, 0xFF	; 255
 cbe:	9f 4f       	sbci	r25, 0xFF	; 255
 cc0:	af 4f       	sbci	r26, 0xFF	; 255
 cc2:	b1 e0       	ldi	r27, 0x01	; 1
 cc4:	3e d0       	rcall	.+124    	; 0xd42 <__ultoa_invert+0x9c>
 cc6:	b4 e0       	ldi	r27, 0x04	; 4
 cc8:	3c d0       	rcall	.+120    	; 0xd42 <__ultoa_invert+0x9c>
 cca:	67 0f       	add	r22, r23
 ccc:	78 1f       	adc	r23, r24
 cce:	89 1f       	adc	r24, r25
 cd0:	9a 1f       	adc	r25, r26
 cd2:	a1 1d       	adc	r26, r1
 cd4:	68 0f       	add	r22, r24
 cd6:	79 1f       	adc	r23, r25
 cd8:	8a 1f       	adc	r24, r26
 cda:	91 1d       	adc	r25, r1
 cdc:	a1 1d       	adc	r26, r1
 cde:	6a 0f       	add	r22, r26
 ce0:	71 1d       	adc	r23, r1
 ce2:	81 1d       	adc	r24, r1
 ce4:	91 1d       	adc	r25, r1
 ce6:	a1 1d       	adc	r26, r1
 ce8:	20 d0       	rcall	.+64     	; 0xd2a <__ultoa_invert+0x84>
 cea:	09 f4       	brne	.+2      	; 0xcee <__ultoa_invert+0x48>
 cec:	68 94       	set
 cee:	3f 91       	pop	r19
 cf0:	2a e0       	ldi	r18, 0x0A	; 10
 cf2:	26 9f       	mul	r18, r22
 cf4:	11 24       	eor	r1, r1
 cf6:	30 19       	sub	r19, r0
 cf8:	30 5d       	subi	r19, 0xD0	; 208
 cfa:	31 93       	st	Z+, r19
 cfc:	de f6       	brtc	.-74     	; 0xcb4 <__ultoa_invert+0xe>
 cfe:	cf 01       	movw	r24, r30
 d00:	08 95       	ret
 d02:	46 2f       	mov	r20, r22
 d04:	47 70       	andi	r20, 0x07	; 7
 d06:	40 5d       	subi	r20, 0xD0	; 208
 d08:	41 93       	st	Z+, r20
 d0a:	b3 e0       	ldi	r27, 0x03	; 3
 d0c:	0f d0       	rcall	.+30     	; 0xd2c <__ultoa_invert+0x86>
 d0e:	c9 f7       	brne	.-14     	; 0xd02 <__ultoa_invert+0x5c>
 d10:	f6 cf       	rjmp	.-20     	; 0xcfe <__ultoa_invert+0x58>
 d12:	46 2f       	mov	r20, r22
 d14:	4f 70       	andi	r20, 0x0F	; 15
 d16:	40 5d       	subi	r20, 0xD0	; 208
 d18:	4a 33       	cpi	r20, 0x3A	; 58
 d1a:	18 f0       	brcs	.+6      	; 0xd22 <__ultoa_invert+0x7c>
 d1c:	49 5d       	subi	r20, 0xD9	; 217
 d1e:	31 fd       	sbrc	r19, 1
 d20:	40 52       	subi	r20, 0x20	; 32
 d22:	41 93       	st	Z+, r20
 d24:	02 d0       	rcall	.+4      	; 0xd2a <__ultoa_invert+0x84>
 d26:	a9 f7       	brne	.-22     	; 0xd12 <__ultoa_invert+0x6c>
 d28:	ea cf       	rjmp	.-44     	; 0xcfe <__ultoa_invert+0x58>
 d2a:	b4 e0       	ldi	r27, 0x04	; 4
 d2c:	a6 95       	lsr	r26
 d2e:	97 95       	ror	r25
 d30:	87 95       	ror	r24
 d32:	77 95       	ror	r23
 d34:	67 95       	ror	r22
 d36:	ba 95       	dec	r27
 d38:	c9 f7       	brne	.-14     	; 0xd2c <__ultoa_invert+0x86>
 d3a:	00 97       	sbiw	r24, 0x00	; 0
 d3c:	61 05       	cpc	r22, r1
 d3e:	71 05       	cpc	r23, r1
 d40:	08 95       	ret
 d42:	9b 01       	movw	r18, r22
 d44:	ac 01       	movw	r20, r24
 d46:	0a 2e       	mov	r0, r26
 d48:	06 94       	lsr	r0
 d4a:	57 95       	ror	r21
 d4c:	47 95       	ror	r20
 d4e:	37 95       	ror	r19
 d50:	27 95       	ror	r18
 d52:	ba 95       	dec	r27
 d54:	c9 f7       	brne	.-14     	; 0xd48 <__ultoa_invert+0xa2>
 d56:	62 0f       	add	r22, r18
 d58:	73 1f       	adc	r23, r19
 d5a:	84 1f       	adc	r24, r20
 d5c:	95 1f       	adc	r25, r21
 d5e:	a0 1d       	adc	r26, r0
 d60:	08 95       	ret

00000d62 <_exit>:
 d62:	f8 94       	cli

00000d64 <__stop_program>:
 d64:	ff cf       	rjmp	.-2      	; 0xd64 <__stop_program>
