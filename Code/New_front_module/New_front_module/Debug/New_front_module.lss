
New_front_module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  000015b2  00001646  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000015b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000050  00800154  00800154  0000169a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000169a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00001738  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001306  00000000  00000000  00001928  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a3b  00000000  00000000  00002c2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f71  00000000  00000000  00003669  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000468  00000000  00000000  000045dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004eb  00000000  00000000  00004a44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a0d  00000000  00000000  00004f2f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  0000593c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
       2:	00 00       	nop
       4:	65 c0       	rjmp	.+202    	; 0xd0 <__bad_interrupt>
       6:	00 00       	nop
       8:	63 c0       	rjmp	.+198    	; 0xd0 <__bad_interrupt>
       a:	00 00       	nop
       c:	61 c0       	rjmp	.+194    	; 0xd0 <__bad_interrupt>
       e:	00 00       	nop
      10:	5f c0       	rjmp	.+190    	; 0xd0 <__bad_interrupt>
      12:	00 00       	nop
      14:	5d c0       	rjmp	.+186    	; 0xd0 <__bad_interrupt>
      16:	00 00       	nop
      18:	5b c0       	rjmp	.+182    	; 0xd0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	59 c0       	rjmp	.+178    	; 0xd0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	57 c0       	rjmp	.+174    	; 0xd0 <__bad_interrupt>
      22:	00 00       	nop
      24:	55 c0       	rjmp	.+170    	; 0xd0 <__bad_interrupt>
      26:	00 00       	nop
      28:	53 c0       	rjmp	.+166    	; 0xd0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	51 c0       	rjmp	.+162    	; 0xd0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4f c0       	rjmp	.+158    	; 0xd0 <__bad_interrupt>
      32:	00 00       	nop
      34:	4d c0       	rjmp	.+154    	; 0xd0 <__bad_interrupt>
      36:	00 00       	nop
      38:	4b c0       	rjmp	.+150    	; 0xd0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	bf c3       	rjmp	.+1918   	; 0x7bc <__vector_15>
      3e:	00 00       	nop
      40:	47 c0       	rjmp	.+142    	; 0xd0 <__bad_interrupt>
      42:	00 00       	nop
      44:	4e c3       	rjmp	.+1692   	; 0x6e2 <__vector_17>
      46:	00 00       	nop
      48:	44 c0       	rjmp	.+136    	; 0xd2 <__vector_18>
      4a:	00 00       	nop
      4c:	41 c0       	rjmp	.+130    	; 0xd0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3f c0       	rjmp	.+126    	; 0xd0 <__bad_interrupt>
      52:	00 00       	nop
      54:	3d c0       	rjmp	.+122    	; 0xd0 <__bad_interrupt>
      56:	00 00       	nop
      58:	3b c0       	rjmp	.+118    	; 0xd0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	39 c0       	rjmp	.+114    	; 0xd0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	37 c0       	rjmp	.+110    	; 0xd0 <__bad_interrupt>
      62:	00 00       	nop
      64:	35 c0       	rjmp	.+106    	; 0xd0 <__bad_interrupt>
      66:	00 00       	nop
      68:	33 c0       	rjmp	.+102    	; 0xd0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	31 c0       	rjmp	.+98     	; 0xd0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2f c0       	rjmp	.+94     	; 0xd0 <__bad_interrupt>
      72:	00 00       	nop
      74:	2d c0       	rjmp	.+90     	; 0xd0 <__bad_interrupt>
      76:	00 00       	nop
      78:	2b c0       	rjmp	.+86     	; 0xd0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	29 c0       	rjmp	.+82     	; 0xd0 <__bad_interrupt>
      7e:	00 00       	nop
      80:	27 c0       	rjmp	.+78     	; 0xd0 <__bad_interrupt>
      82:	00 00       	nop
      84:	25 c0       	rjmp	.+74     	; 0xd0 <__bad_interrupt>
      86:	00 00       	nop
      88:	23 c0       	rjmp	.+70     	; 0xd0 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	21 c0       	rjmp	.+66     	; 0xd0 <__bad_interrupt>
      8e:	00 00       	nop
      90:	1f c0       	rjmp	.+62     	; 0xd0 <__bad_interrupt>
	...

00000094 <__ctors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d0 e1       	ldi	r29, 0x10	; 16
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	11 e0       	ldi	r17, 0x01	; 1
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	e2 eb       	ldi	r30, 0xB2	; 178
      a8:	f5 e1       	ldi	r31, 0x15	; 21
      aa:	00 e0       	ldi	r16, 0x00	; 0
      ac:	0b bf       	out	0x3b, r16	; 59
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
      b0:	07 90       	elpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	a4 35       	cpi	r26, 0x54	; 84
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
      ba:	21 e0       	ldi	r18, 0x01	; 1
      bc:	a4 e5       	ldi	r26, 0x54	; 84
      be:	b1 e0       	ldi	r27, 0x01	; 1
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	a4 3a       	cpi	r26, 0xA4	; 164
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	d6 d2       	rcall	.+1452   	; 0x678 <main>
      cc:	0c 94 d7 0a 	jmp	0x15ae	; 0x15ae <_exit>

000000d0 <__bad_interrupt>:
      d0:	97 cf       	rjmp	.-210    	; 0x0 <__vectors>

000000d2 <__vector_18>:
		}
	CANGCON |= 0x02;
	CANGIE=(1<<ENIT) | (1<< ENRX);
}
	
void can_health(void) {
      d2:	1f 92       	push	r1
      d4:	0f 92       	push	r0
      d6:	0f b6       	in	r0, 0x3f	; 63
      d8:	0f 92       	push	r0
      da:	11 24       	eor	r1, r1
      dc:	0b b6       	in	r0, 0x3b	; 59
      de:	0f 92       	push	r0
      e0:	2f 93       	push	r18
      e2:	3f 93       	push	r19
      e4:	4f 93       	push	r20
      e6:	5f 93       	push	r21
      e8:	6f 93       	push	r22
      ea:	7f 93       	push	r23
      ec:	8f 93       	push	r24
      ee:	9f 93       	push	r25
      f0:	af 93       	push	r26
      f2:	bf 93       	push	r27
      f4:	cf 93       	push	r28
      f6:	ef 93       	push	r30
      f8:	ff 93       	push	r31
      fa:	ed ee       	ldi	r30, 0xED	; 237
      fc:	f0 e0       	ldi	r31, 0x00	; 0
      fe:	c0 81       	ld	r28, Z
     100:	80 91 ec 00 	lds	r24, 0x00EC
     104:	68 2f       	mov	r22, r24
     106:	70 e0       	ldi	r23, 0x00	; 0
     108:	80 7f       	andi	r24, 0xF0	; 240
     10a:	80 83       	st	Z, r24
     10c:	72 95       	swap	r23
     10e:	62 95       	swap	r22
     110:	6f 70       	andi	r22, 0x0F	; 15
     112:	67 27       	eor	r22, r23
     114:	7f 70       	andi	r23, 0x0F	; 15
     116:	67 27       	eor	r22, r23
     118:	80 91 ee 00 	lds	r24, 0x00EE
     11c:	8f 75       	andi	r24, 0x5F	; 95
     11e:	09 f0       	breq	.+2      	; 0x122 <__vector_18+0x50>
     120:	98 95       	break
     122:	20 91 f2 00 	lds	r18, 0x00F2
     126:	80 91 f3 00 	lds	r24, 0x00F3
     12a:	e4 e5       	ldi	r30, 0x54	; 84
     12c:	f1 e0       	ldi	r31, 0x01	; 1
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	88 0f       	add	r24, r24
     132:	99 1f       	adc	r25, r25
     134:	88 0f       	add	r24, r24
     136:	99 1f       	adc	r25, r25
     138:	88 0f       	add	r24, r24
     13a:	99 1f       	adc	r25, r25
     13c:	22 95       	swap	r18
     13e:	26 95       	lsr	r18
     140:	27 70       	andi	r18, 0x07	; 7
     142:	82 2b       	or	r24, r18
     144:	91 83       	std	Z+1, r25	; 0x01
     146:	80 83       	st	Z, r24
     148:	80 91 ef 00 	lds	r24, 0x00EF
     14c:	8f 70       	andi	r24, 0x0F	; 15
     14e:	82 83       	std	Z+2, r24	; 0x02
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	00 97       	sbiw	r24, 0x00	; 0
     154:	59 f0       	breq	.+22     	; 0x16c <__vector_18+0x9a>
     156:	e7 e5       	ldi	r30, 0x57	; 87
     158:	f1 e0       	ldi	r31, 0x01	; 1
     15a:	89 5a       	subi	r24, 0xA9	; 169
     15c:	9e 4f       	sbci	r25, 0xFE	; 254
     15e:	aa ef       	ldi	r26, 0xFA	; 250
     160:	b0 e0       	ldi	r27, 0x00	; 0
     162:	2c 91       	ld	r18, X
     164:	21 93       	st	Z+, r18
     166:	e8 17       	cp	r30, r24
     168:	f9 07       	cpc	r31, r25
     16a:	d9 f7       	brne	.-10     	; 0x162 <__vector_18+0x90>
     16c:	10 92 ee 00 	sts	0x00EE, r1
     170:	80 e8       	ldi	r24, 0x80	; 128
     172:	80 93 ef 00 	sts	0x00EF, r24
     176:	fb 01       	movw	r30, r22
     178:	ee 0f       	add	r30, r30
     17a:	ff 1f       	adc	r31, r31
     17c:	ed 59       	subi	r30, 0x9D	; 157
     17e:	fe 4f       	sbci	r31, 0xFE	; 254
     180:	01 90       	ld	r0, Z+
     182:	f0 81       	ld	r31, Z
     184:	e0 2d       	mov	r30, r0
     186:	84 e5       	ldi	r24, 0x54	; 84
     188:	91 e0       	ldi	r25, 0x01	; 1
     18a:	09 95       	icall
     18c:	c0 93 ed 00 	sts	0x00ED, r28
     190:	ff 91       	pop	r31
     192:	ef 91       	pop	r30
     194:	cf 91       	pop	r28
     196:	bf 91       	pop	r27
     198:	af 91       	pop	r26
     19a:	9f 91       	pop	r25
     19c:	8f 91       	pop	r24
     19e:	7f 91       	pop	r23
     1a0:	6f 91       	pop	r22
     1a2:	5f 91       	pop	r21
     1a4:	4f 91       	pop	r20
     1a6:	3f 91       	pop	r19
     1a8:	2f 91       	pop	r18
     1aa:	0f 90       	pop	r0
     1ac:	0b be       	out	0x3b, r0	; 59
     1ae:	0f 90       	pop	r0
     1b0:	0f be       	out	0x3f, r0	; 63
     1b2:	0f 90       	pop	r0
     1b4:	1f 90       	pop	r1
     1b6:	18 95       	reti

000001b8 <can_tx>:
     1b8:	cf 93       	push	r28
     1ba:	df 93       	push	r29
     1bc:	fb 01       	movw	r30, r22
     1be:	20 81       	ld	r18, Z
     1c0:	31 81       	ldd	r19, Z+1	; 0x01
     1c2:	21 15       	cp	r18, r1
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	08 f0       	brcs	.+2      	; 0x1ca <can_tx+0x12>
     1c8:	98 95       	break
     1ca:	92 81       	ldd	r25, Z+2	; 0x02
     1cc:	99 30       	cpi	r25, 0x09	; 9
     1ce:	08 f0       	brcs	.+2      	; 0x1d2 <can_tx+0x1a>
     1d0:	98 95       	break
     1d2:	8f 30       	cpi	r24, 0x0F	; 15
     1d4:	08 f0       	brcs	.+2      	; 0x1d8 <can_tx+0x20>
     1d6:	98 95       	break
     1d8:	82 95       	swap	r24
     1da:	80 7f       	andi	r24, 0xF0	; 240
     1dc:	80 93 ed 00 	sts	0x00ED, r24
     1e0:	80 91 ef 00 	lds	r24, 0x00EF
     1e4:	80 7c       	andi	r24, 0xC0	; 192
     1e6:	21 f0       	breq	.+8      	; 0x1f0 <can_tx+0x38>
     1e8:	80 91 ee 00 	lds	r24, 0x00EE
     1ec:	86 ff       	sbrs	r24, 6
     1ee:	55 c0       	rjmp	.+170    	; 0x29a <can_tx+0xe2>
     1f0:	10 92 ee 00 	sts	0x00EE, r1
     1f4:	10 92 ef 00 	sts	0x00EF, r1
     1f8:	82 81       	ldd	r24, Z+2	; 0x02
     1fa:	8f 3f       	cpi	r24, 0xFF	; 255
     1fc:	61 f1       	breq	.+88     	; 0x256 <can_tx+0x9e>
     1fe:	80 81       	ld	r24, Z
     200:	91 81       	ldd	r25, Z+1	; 0x01
     202:	96 95       	lsr	r25
     204:	87 95       	ror	r24
     206:	96 95       	lsr	r25
     208:	87 95       	ror	r24
     20a:	96 95       	lsr	r25
     20c:	87 95       	ror	r24
     20e:	80 93 f3 00 	sts	0x00F3, r24
     212:	80 81       	ld	r24, Z
     214:	82 95       	swap	r24
     216:	88 0f       	add	r24, r24
     218:	80 7e       	andi	r24, 0xE0	; 224
     21a:	80 93 f2 00 	sts	0x00F2, r24
     21e:	10 92 f1 00 	sts	0x00F1, r1
     222:	10 92 f0 00 	sts	0x00F0, r1
     226:	22 81       	ldd	r18, Z+2	; 0x02
     228:	22 23       	and	r18, r18
     22a:	79 f0       	breq	.+30     	; 0x24a <can_tx+0x92>
     22c:	df 01       	movw	r26, r30
     22e:	13 96       	adiw	r26, 0x03	; 3
     230:	80 e0       	ldi	r24, 0x00	; 0
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	ca ef       	ldi	r28, 0xFA	; 250
     236:	d0 e0       	ldi	r29, 0x00	; 0
     238:	2d 91       	ld	r18, X+
     23a:	28 83       	st	Y, r18
     23c:	01 96       	adiw	r24, 0x01	; 1
     23e:	22 81       	ldd	r18, Z+2	; 0x02
     240:	42 2f       	mov	r20, r18
     242:	50 e0       	ldi	r21, 0x00	; 0
     244:	84 17       	cp	r24, r20
     246:	95 07       	cpc	r25, r21
     248:	b8 f3       	brcs	.-18     	; 0x238 <can_tx+0x80>
     24a:	ef ee       	ldi	r30, 0xEF	; 239
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	80 81       	ld	r24, Z
     250:	28 2b       	or	r18, r24
     252:	20 83       	st	Z, r18
     254:	1b c0       	rjmp	.+54     	; 0x28c <can_tx+0xd4>
     256:	80 81       	ld	r24, Z
     258:	91 81       	ldd	r25, Z+1	; 0x01
     25a:	96 95       	lsr	r25
     25c:	87 95       	ror	r24
     25e:	96 95       	lsr	r25
     260:	87 95       	ror	r24
     262:	96 95       	lsr	r25
     264:	87 95       	ror	r24
     266:	80 93 f3 00 	sts	0x00F3, r24
     26a:	80 81       	ld	r24, Z
     26c:	82 95       	swap	r24
     26e:	88 0f       	add	r24, r24
     270:	80 7e       	andi	r24, 0xE0	; 224
     272:	80 93 f2 00 	sts	0x00F2, r24
     276:	10 92 f1 00 	sts	0x00F1, r1
     27a:	84 e0       	ldi	r24, 0x04	; 4
     27c:	80 93 f0 00 	sts	0x00F0, r24
     280:	af ee       	ldi	r26, 0xEF	; 239
     282:	b0 e0       	ldi	r27, 0x00	; 0
     284:	9c 91       	ld	r25, X
     286:	82 81       	ldd	r24, Z+2	; 0x02
     288:	89 2b       	or	r24, r25
     28a:	8c 93       	st	X, r24
     28c:	ef ee       	ldi	r30, 0xEF	; 239
     28e:	f0 e0       	ldi	r31, 0x00	; 0
     290:	80 81       	ld	r24, Z
     292:	80 64       	ori	r24, 0x40	; 64
     294:	80 83       	st	Z, r24
     296:	81 e0       	ldi	r24, 0x01	; 1
     298:	01 c0       	rjmp	.+2      	; 0x29c <can_tx+0xe4>
     29a:	80 e0       	ldi	r24, 0x00	; 0
     29c:	df 91       	pop	r29
     29e:	cf 91       	pop	r28
     2a0:	08 95       	ret

000002a2 <prepare_rx>:
     2a2:	8f 30       	cpi	r24, 0x0F	; 15
     2a4:	08 f0       	brcs	.+2      	; 0x2a8 <prepare_rx+0x6>
     2a6:	6d c0       	rjmp	.+218    	; 0x382 <prepare_rx+0xe0>
     2a8:	e8 2f       	mov	r30, r24
     2aa:	f0 e0       	ldi	r31, 0x00	; 0
     2ac:	ee 0f       	add	r30, r30
     2ae:	ff 1f       	adc	r31, r31
     2b0:	ed 59       	subi	r30, 0x9D	; 157
     2b2:	fe 4f       	sbci	r31, 0xFE	; 254
     2b4:	31 83       	std	Z+1, r19	; 0x01
     2b6:	20 83       	st	Z, r18
     2b8:	98 2f       	mov	r25, r24
     2ba:	92 95       	swap	r25
     2bc:	90 7f       	andi	r25, 0xF0	; 240
     2be:	90 93 ed 00 	sts	0x00ED, r25
     2c2:	23 2b       	or	r18, r19
     2c4:	d9 f4       	brne	.+54     	; 0x2fc <prepare_rx+0x5a>
     2c6:	10 92 ee 00 	sts	0x00EE, r1
     2ca:	10 92 ef 00 	sts	0x00EF, r1
     2ce:	21 e0       	ldi	r18, 0x01	; 1
     2d0:	30 e0       	ldi	r19, 0x00	; 0
     2d2:	a9 01       	movw	r20, r18
     2d4:	02 c0       	rjmp	.+4      	; 0x2da <prepare_rx+0x38>
     2d6:	44 0f       	add	r20, r20
     2d8:	55 1f       	adc	r21, r21
     2da:	8a 95       	dec	r24
     2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <prepare_rx+0x34>
     2de:	ca 01       	movw	r24, r20
     2e0:	ee ed       	ldi	r30, 0xDE	; 222
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
     2e4:	20 81       	ld	r18, Z
     2e6:	80 95       	com	r24
     2e8:	82 23       	and	r24, r18
     2ea:	80 83       	st	Z, r24
     2ec:	ef ed       	ldi	r30, 0xDF	; 223
     2ee:	f0 e0       	ldi	r31, 0x00	; 0
     2f0:	80 81       	ld	r24, Z
     2f2:	90 95       	com	r25
     2f4:	89 23       	and	r24, r25
     2f6:	80 83       	st	Z, r24
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	08 95       	ret
     2fc:	90 91 ef 00 	lds	r25, 0x00EF
     300:	90 7c       	andi	r25, 0xC0	; 192
     302:	09 f0       	breq	.+2      	; 0x306 <prepare_rx+0x64>
     304:	40 c0       	rjmp	.+128    	; 0x386 <prepare_rx+0xe4>
     306:	10 92 ee 00 	sts	0x00EE, r1
     30a:	ef ee       	ldi	r30, 0xEF	; 239
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	10 82       	st	Z, r1
     310:	10 92 ec 00 	sts	0x00EC, r1
     314:	9b 01       	movw	r18, r22
     316:	36 95       	lsr	r19
     318:	27 95       	ror	r18
     31a:	36 95       	lsr	r19
     31c:	27 95       	ror	r18
     31e:	36 95       	lsr	r19
     320:	27 95       	ror	r18
     322:	20 93 f3 00 	sts	0x00F3, r18
     326:	62 95       	swap	r22
     328:	66 0f       	add	r22, r22
     32a:	60 7e       	andi	r22, 0xE0	; 224
     32c:	60 93 f2 00 	sts	0x00F2, r22
     330:	9a 01       	movw	r18, r20
     332:	36 95       	lsr	r19
     334:	27 95       	ror	r18
     336:	36 95       	lsr	r19
     338:	27 95       	ror	r18
     33a:	36 95       	lsr	r19
     33c:	27 95       	ror	r18
     33e:	20 93 f7 00 	sts	0x00F7, r18
     342:	42 95       	swap	r20
     344:	44 0f       	add	r20, r20
     346:	40 7e       	andi	r20, 0xE0	; 224
     348:	40 93 f6 00 	sts	0x00F6, r20
     34c:	10 92 f5 00 	sts	0x00F5, r1
     350:	10 92 f4 00 	sts	0x00F4, r1
     354:	90 e8       	ldi	r25, 0x80	; 128
     356:	90 83       	st	Z, r25
     358:	21 e0       	ldi	r18, 0x01	; 1
     35a:	30 e0       	ldi	r19, 0x00	; 0
     35c:	a9 01       	movw	r20, r18
     35e:	02 c0       	rjmp	.+4      	; 0x364 <prepare_rx+0xc2>
     360:	44 0f       	add	r20, r20
     362:	55 1f       	adc	r21, r21
     364:	8a 95       	dec	r24
     366:	e2 f7       	brpl	.-8      	; 0x360 <prepare_rx+0xbe>
     368:	ca 01       	movw	r24, r20
     36a:	ee ed       	ldi	r30, 0xDE	; 222
     36c:	f0 e0       	ldi	r31, 0x00	; 0
     36e:	20 81       	ld	r18, Z
     370:	82 2b       	or	r24, r18
     372:	80 83       	st	Z, r24
     374:	ef ed       	ldi	r30, 0xDF	; 223
     376:	f0 e0       	ldi	r31, 0x00	; 0
     378:	80 81       	ld	r24, Z
     37a:	89 2b       	or	r24, r25
     37c:	80 83       	st	Z, r24
     37e:	80 e0       	ldi	r24, 0x00	; 0
     380:	08 95       	ret
     382:	81 e0       	ldi	r24, 0x01	; 1
     384:	08 95       	ret
     386:	81 e0       	ldi	r24, 0x01	; 1
     388:	08 95       	ret

0000038a <can_init>:
     38a:	cf 93       	push	r28
     38c:	df 93       	push	r29
     38e:	86 e0       	ldi	r24, 0x06	; 6
     390:	80 93 e2 00 	sts	0x00E2, r24
     394:	8c e0       	ldi	r24, 0x0C	; 12
     396:	80 93 e3 00 	sts	0x00E3, r24
     39a:	8a e5       	ldi	r24, 0x5A	; 90
     39c:	80 93 e4 00 	sts	0x00E4, r24
     3a0:	80 e0       	ldi	r24, 0x00	; 0
     3a2:	cd ee       	ldi	r28, 0xED	; 237
     3a4:	d0 e0       	ldi	r29, 0x00	; 0
     3a6:	ae ee       	ldi	r26, 0xEE	; 238
     3a8:	b0 e0       	ldi	r27, 0x00	; 0
     3aa:	ef ee       	ldi	r30, 0xEF	; 239
     3ac:	f0 e0       	ldi	r31, 0x00	; 0
     3ae:	98 2f       	mov	r25, r24
     3b0:	92 95       	swap	r25
     3b2:	90 7f       	andi	r25, 0xF0	; 240
     3b4:	98 83       	st	Y, r25
     3b6:	1c 92       	st	X, r1
     3b8:	10 82       	st	Z, r1
     3ba:	8f 5f       	subi	r24, 0xFF	; 255
     3bc:	8f 30       	cpi	r24, 0x0F	; 15
     3be:	b9 f7       	brne	.-18     	; 0x3ae <can_init+0x24>
     3c0:	e8 ed       	ldi	r30, 0xD8	; 216
     3c2:	f0 e0       	ldi	r31, 0x00	; 0
     3c4:	80 81       	ld	r24, Z
     3c6:	82 60       	ori	r24, 0x02	; 2
     3c8:	80 83       	st	Z, r24
     3ca:	80 ea       	ldi	r24, 0xA0	; 160
     3cc:	80 93 db 00 	sts	0x00DB, r24
     3d0:	df 91       	pop	r29
     3d2:	cf 91       	pop	r28
     3d4:	08 95       	ret

000003d6 <can_packet_send>:
	*/
}

BOOL can_packet_send(char mob, CAN_packet *packet) {
	/* Clear global interrupts */
	cli();
     3d6:	f8 94       	cli
	BOOL result = can_tx(mob, packet);
     3d8:	ef de       	rcall	.-546    	; 0x1b8 <can_tx>
	/* Set global interrupts */
	sei();
     3da:	78 94       	sei
	return result;
}
     3dc:	08 95       	ret

000003de <fm_msg_handler>:
		//printf("\r\nBrakes");
		set_bit(DDRB, PB7);
	}
	else
		clear_bit(DDRB, PB7);
}
     3de:	cf 93       	push	r28
     3e0:	df 93       	push	r29
     3e2:	ec 01       	movw	r28, r24
     3e4:	29 e0       	ldi	r18, 0x09	; 9
     3e6:	31 e0       	ldi	r19, 0x01	; 1
     3e8:	3f 93       	push	r19
     3ea:	2f 93       	push	r18
     3ec:	e5 d4       	rcall	.+2506   	; 0xdb8 <printf>
     3ee:	0f 90       	pop	r0
     3f0:	0f 90       	pop	r0
     3f2:	88 81       	ld	r24, Y
     3f4:	99 81       	ldd	r25, Y+1	; 0x01
     3f6:	86 30       	cpi	r24, 0x06	; 6
     3f8:	91 05       	cpc	r25, r1
     3fa:	a1 f0       	breq	.+40     	; 0x424 <fm_msg_handler+0x46>
     3fc:	0f 97       	sbiw	r24, 0x0f	; 15
     3fe:	d9 f4       	brne	.+54     	; 0x436 <fm_msg_handler+0x58>
     400:	8b 81       	ldd	r24, Y+3	; 0x03
     402:	84 ff       	sbrs	r24, 4
     404:	04 c0       	rjmp	.+8      	; 0x40e <fm_msg_handler+0x30>
     406:	91 e0       	ldi	r25, 0x01	; 1
     408:	90 93 62 01 	sts	0x0162, r25
     40c:	02 c0       	rjmp	.+4      	; 0x412 <fm_msg_handler+0x34>
     40e:	10 92 62 01 	sts	0x0162, r1
     412:	85 ff       	sbrs	r24, 5
     414:	04 c0       	rjmp	.+8      	; 0x41e <fm_msg_handler+0x40>
     416:	81 e0       	ldi	r24, 0x01	; 1
     418:	80 93 61 01 	sts	0x0161, r24
     41c:	0c c0       	rjmp	.+24     	; 0x436 <fm_msg_handler+0x58>
     41e:	10 92 61 01 	sts	0x0161, r1
     422:	09 c0       	rjmp	.+18     	; 0x436 <fm_msg_handler+0x58>
     424:	8b 81       	ldd	r24, Y+3	; 0x03
     426:	80 ff       	sbrs	r24, 0
     428:	04 c0       	rjmp	.+8      	; 0x432 <fm_msg_handler+0x54>
     42a:	81 e0       	ldi	r24, 0x01	; 1
     42c:	80 93 60 01 	sts	0x0160, r24
     430:	02 c0       	rjmp	.+4      	; 0x436 <fm_msg_handler+0x58>
     432:	10 92 60 01 	sts	0x0160, r1
     436:	df 91       	pop	r29
     438:	cf 91       	pop	r28
     43a:	08 95       	ret

0000043c <fm_wipers_duty>:
     43c:	9c 01       	movw	r18, r24
     43e:	21 52       	subi	r18, 0x21	; 33
     440:	33 40       	sbci	r19, 0x03	; 3
     442:	27 37       	cpi	r18, 0x77	; 119
     444:	35 40       	sbci	r19, 0x05	; 5
     446:	58 f4       	brcc	.+22     	; 0x45e <fm_wipers_duty+0x22>
     448:	f8 94       	cli
     44a:	2c ea       	ldi	r18, 0xAC	; 172
     44c:	3d e0       	ldi	r19, 0x0D	; 13
     44e:	a9 01       	movw	r20, r18
     450:	48 1b       	sub	r20, r24
     452:	59 0b       	sbc	r21, r25
     454:	50 93 9b 00 	sts	0x009B, r21
     458:	40 93 9a 00 	sts	0x009A, r20
     45c:	78 94       	sei
     45e:	08 95       	ret

00000460 <fm_horn_init>:

void fm_horn_init( void) {
	/* PD0 - DC0_EN, PE4 -DC1_EN, PE3 - DC2_EN */
	set_bit(DDRD, DDD0);	
     460:	50 9a       	sbi	0x0a, 0	; 10
 	clear_bit(PORTD, PD0);
     462:	58 98       	cbi	0x0b, 0	; 11
     464:	08 95       	ret

00000466 <fm_wiper_init>:
}

void fm_wiper_init( void) {
	/* Set PB4 as output */
	set_bit(DDRB, DDB4);
     466:	24 9a       	sbi	0x04, 4	; 4
	clear_bit(PORTB, PB4);
     468:	2c 98       	cbi	0x05, 4	; 5
     46a:	08 95       	ret

0000046c <fm_fans_init>:
}

void fm_fans_init( void) {
	//TODO: IMPLEMENT
	set_bit(DDRE, DDE3);
     46c:	6b 9a       	sbi	0x0d, 3	; 13
     46e:	08 95       	ret

00000470 <fm_brake_init>:
}

void fm_brake_init( void) {
	clear_bit(DDRE, DDE5);
     470:	6d 98       	cbi	0x0d, 5	; 13
	set_bit(PORTE, PE5);
     472:	75 9a       	sbi	0x0e, 5	; 14
     474:	08 95       	ret

00000476 <fm_init>:
}

void fm_init( void) {
	fm_horn_init();
     476:	f4 df       	rcall	.-24     	; 0x460 <fm_horn_init>
	fm_wiper_init();
     478:	f6 df       	rcall	.-20     	; 0x466 <fm_wiper_init>
	fm_fans_init();
     47a:	f8 df       	rcall	.-16     	; 0x46c <fm_fans_init>
	fm_brake_init();
     47c:	f9 cf       	rjmp	.-14     	; 0x470 <fm_brake_init>
     47e:	08 95       	ret

00000480 <fm_fans>:
		set_bit(PORTD, PD0);	
	}
}

void fm_fans(float voltage) {
	if (!voltage) {
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	30 e0       	ldi	r19, 0x00	; 0
     484:	a9 01       	movw	r20, r18
     486:	98 d2       	rcall	.+1328   	; 0x9b8 <__cmpsf2>
     488:	81 11       	cpse	r24, r1
     48a:	02 c0       	rjmp	.+4      	; 0x490 <fm_fans+0x10>
		/* Turn off the fans */
		clear_bit(PORTE, PE3);
     48c:	73 98       	cbi	0x0e, 3	; 14
     48e:	08 95       	ret
	} else {
		voltage = 0; // 0=24 VDC, 255=0VDC, 141=12VDC
		DAC_SELECT;
     490:	28 98       	cbi	0x05, 0	; 5
		spi_master_tx(OUT_G);
     492:	86 e3       	ldi	r24, 0x36	; 54
     494:	04 d1       	rcall	.+520    	; 0x69e <spi_master_tx>
		spi_master_tx(voltage);
     496:	80 e0       	ldi	r24, 0x00	; 0
     498:	02 d1       	rcall	.+516    	; 0x69e <spi_master_tx>
		DAC_DESELECT;
     49a:	28 9a       	sbi	0x05, 0	; 5
		
		set_bit(PORTE, PE3);
     49c:	73 9a       	sbi	0x0e, 3	; 14
     49e:	08 95       	ret

000004a0 <fm_fans_handler>:
		sei();
	}
}

void fm_fans_handler( void) {
	fm_fans(FANS_ON);
     4a0:	60 91 60 01 	lds	r22, 0x0160
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	80 e0       	ldi	r24, 0x00	; 0
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	23 d3       	rcall	.+1606   	; 0xaf2 <__floatunsisf>
     4ac:	e9 cf       	rjmp	.-46     	; 0x480 <fm_fans>
     4ae:	08 95       	ret

000004b0 <fm_voltage_to_DAC>:
	}
}

int fm_voltage_to_DAC(float voltage) {
	int dac_value = 0;
	dac_value = 255 - (255*voltage/24); //TODO: tune this
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	4f e7       	ldi	r20, 0x7F	; 127
     4b6:	53 e4       	ldi	r21, 0x43	; 67
     4b8:	d2 d3       	rcall	.+1956   	; 0xc5e <__mulsf3>
     4ba:	20 e0       	ldi	r18, 0x00	; 0
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	40 ec       	ldi	r20, 0xC0	; 192
     4c0:	51 e4       	ldi	r21, 0x41	; 65
     4c2:	7e d2       	rcall	.+1276   	; 0x9c0 <__divsf3>
     4c4:	9b 01       	movw	r18, r22
     4c6:	ac 01       	movw	r20, r24
     4c8:	60 e0       	ldi	r22, 0x00	; 0
     4ca:	70 e0       	ldi	r23, 0x00	; 0
     4cc:	8f e7       	ldi	r24, 0x7F	; 127
     4ce:	93 e4       	ldi	r25, 0x43	; 67
     4d0:	0e d2       	rcall	.+1052   	; 0x8ee <__subsf3>
     4d2:	de d2       	rcall	.+1468   	; 0xa90 <__fixsfsi>
	
	return dac_value;
     4d4:	cb 01       	movw	r24, r22
     4d6:	08 95       	ret

000004d8 <fm_horn>:
	fm_wiper_init();
	fm_fans_init();
	fm_brake_init();
}

void fm_horn(float voltage) {
     4d8:	cf 92       	push	r12
     4da:	df 92       	push	r13
     4dc:	ef 92       	push	r14
     4de:	ff 92       	push	r15
     4e0:	6b 01       	movw	r12, r22
     4e2:	7c 01       	movw	r14, r24
	if (voltage > 12) {
     4e4:	20 e0       	ldi	r18, 0x00	; 0
     4e6:	30 e0       	ldi	r19, 0x00	; 0
     4e8:	40 e4       	ldi	r20, 0x40	; 64
     4ea:	51 e4       	ldi	r21, 0x41	; 65
     4ec:	b4 d3       	rcall	.+1896   	; 0xc56 <__gesf2>
     4ee:	18 16       	cp	r1, r24
     4f0:	5c f0       	brlt	.+22     	; 0x508 <fm_horn+0x30>
		voltage = 12;
	}
	if (voltage < 3) {
     4f2:	20 e0       	ldi	r18, 0x00	; 0
     4f4:	30 e0       	ldi	r19, 0x00	; 0
     4f6:	40 e4       	ldi	r20, 0x40	; 64
     4f8:	50 e4       	ldi	r21, 0x40	; 64
     4fa:	c7 01       	movw	r24, r14
     4fc:	b6 01       	movw	r22, r12
     4fe:	5c d2       	rcall	.+1208   	; 0x9b8 <__cmpsf2>
     500:	88 23       	and	r24, r24
     502:	54 f4       	brge	.+20     	; 0x518 <fm_horn+0x40>
		/* Turn off the horn */
		clear_bit(PORTD, PD0);
     504:	58 98       	cbi	0x0b, 0	; 11
     506:	11 c0       	rjmp	.+34     	; 0x52a <fm_horn+0x52>
	fm_brake_init();
}

void fm_horn(float voltage) {
	if (voltage > 12) {
		voltage = 12;
     508:	0f 2e       	mov	r0, r31
     50a:	c1 2c       	mov	r12, r1
     50c:	d1 2c       	mov	r13, r1
     50e:	f0 e4       	ldi	r31, 0x40	; 64
     510:	ef 2e       	mov	r14, r31
     512:	f1 e4       	ldi	r31, 0x41	; 65
     514:	ff 2e       	mov	r15, r31
     516:	f0 2d       	mov	r31, r0
	}
	if (voltage < 3) {
		/* Turn off the horn */
		clear_bit(PORTD, PD0);
	} else {
		DAC_SELECT;
     518:	28 98       	cbi	0x05, 0	; 5
		spi_master_tx(OUT_E);
     51a:	86 e2       	ldi	r24, 0x26	; 38
     51c:	c0 d0       	rcall	.+384    	; 0x69e <spi_master_tx>
		spi_master_tx(fm_voltage_to_DAC(voltage));
     51e:	c7 01       	movw	r24, r14
     520:	b6 01       	movw	r22, r12
     522:	c6 df       	rcall	.-116    	; 0x4b0 <fm_voltage_to_DAC>
     524:	bc d0       	rcall	.+376    	; 0x69e <spi_master_tx>
		DAC_DESELECT;
     526:	28 9a       	sbi	0x05, 0	; 5
		set_bit(PORTD, PD0);	
     528:	58 9a       	sbi	0x0b, 0	; 11
	}
}
     52a:	ff 90       	pop	r15
     52c:	ef 90       	pop	r14
     52e:	df 90       	pop	r13
     530:	cf 90       	pop	r12
     532:	08 95       	ret

00000534 <fm_horn_handler>:
				FANS_ON = FALSE;
	}
}

void fm_horn_handler( void) {
	if(HORN_ON) {
     534:	80 91 62 01 	lds	r24, 0x0162
     538:	88 23       	and	r24, r24
     53a:	31 f0       	breq	.+12     	; 0x548 <fm_horn_handler+0x14>
		fm_horn(11); // 12 VDC
     53c:	60 e0       	ldi	r22, 0x00	; 0
     53e:	70 e0       	ldi	r23, 0x00	; 0
     540:	80 e3       	ldi	r24, 0x30	; 48
     542:	91 e4       	ldi	r25, 0x41	; 65
     544:	c9 cf       	rjmp	.-110    	; 0x4d8 <fm_horn>
     546:	08 95       	ret
	} else {
		fm_horn(0);
     548:	60 e0       	ldi	r22, 0x00	; 0
     54a:	70 e0       	ldi	r23, 0x00	; 0
     54c:	cb 01       	movw	r24, r22
     54e:	c4 cf       	rjmp	.-120    	; 0x4d8 <fm_horn>
     550:	08 95       	ret

00000552 <fm_wipers>:
		
		set_bit(PORTE, PE3);
	}
}

void fm_wipers(float voltage) {
     552:	cf 92       	push	r12
     554:	df 92       	push	r13
     556:	ef 92       	push	r14
     558:	ff 92       	push	r15
     55a:	6b 01       	movw	r12, r22
     55c:	7c 01       	movw	r14, r24
	if(voltage > 6) {
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	30 e0       	ldi	r19, 0x00	; 0
     562:	40 ec       	ldi	r20, 0xC0	; 192
     564:	50 e4       	ldi	r21, 0x40	; 64
     566:	77 d3       	rcall	.+1774   	; 0xc56 <__gesf2>
     568:	18 16       	cp	r1, r24
     56a:	5c f0       	brlt	.+22     	; 0x582 <fm_wipers+0x30>
		voltage = 7.4;
	}
	if (voltage < 2) {
     56c:	20 e0       	ldi	r18, 0x00	; 0
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	40 e0       	ldi	r20, 0x00	; 0
     572:	50 e4       	ldi	r21, 0x40	; 64
     574:	c7 01       	movw	r24, r14
     576:	b6 01       	movw	r22, r12
     578:	1f d2       	rcall	.+1086   	; 0x9b8 <__cmpsf2>
     57a:	88 23       	and	r24, r24
     57c:	64 f4       	brge	.+24     	; 0x596 <fm_wipers+0x44>
		/* Turn off the wipers */
		clear_bit(PORTB, PB4);
     57e:	2c 98       	cbi	0x05, 4	; 5
     580:	13 c0       	rjmp	.+38     	; 0x5a8 <fm_wipers+0x56>
	}
}

void fm_wipers(float voltage) {
	if(voltage > 6) {
		voltage = 7.4;
     582:	0f 2e       	mov	r0, r31
     584:	fd ec       	ldi	r31, 0xCD	; 205
     586:	cf 2e       	mov	r12, r31
     588:	fc ec       	ldi	r31, 0xCC	; 204
     58a:	df 2e       	mov	r13, r31
     58c:	fc ee       	ldi	r31, 0xEC	; 236
     58e:	ef 2e       	mov	r14, r31
     590:	f0 e4       	ldi	r31, 0x40	; 64
     592:	ff 2e       	mov	r15, r31
     594:	f0 2d       	mov	r31, r0
	}
	if (voltage < 2) {
		/* Turn off the wipers */
		clear_bit(PORTB, PB4);
	} else {
		DAC_SELECT;
     596:	28 98       	cbi	0x05, 0	; 5
		spi_master_tx(OUT_F);
     598:	8e e2       	ldi	r24, 0x2E	; 46
     59a:	81 d0       	rcall	.+258    	; 0x69e <spi_master_tx>
		spi_master_tx(fm_voltage_to_DAC(voltage));
     59c:	c7 01       	movw	r24, r14
     59e:	b6 01       	movw	r22, r12
     5a0:	87 df       	rcall	.-242    	; 0x4b0 <fm_voltage_to_DAC>
     5a2:	7d d0       	rcall	.+250    	; 0x69e <spi_master_tx>
		DAC_DESELECT;
     5a4:	28 9a       	sbi	0x05, 0	; 5
		
		set_bit(PORTB, PB4);
     5a6:	2c 9a       	sbi	0x05, 4	; 5
	}
}
     5a8:	ff 90       	pop	r15
     5aa:	ef 90       	pop	r14
     5ac:	df 90       	pop	r13
     5ae:	cf 90       	pop	r12
     5b0:	08 95       	ret

000005b2 <fm_wipers_handler>:
		fm_horn(0);
	}
}

void fm_wipers_handler( void) {
	if(WIPERS_ON) {
     5b2:	80 91 61 01 	lds	r24, 0x0161
     5b6:	88 23       	and	r24, r24
     5b8:	e1 f1       	breq	.+120    	; 0x632 <fm_wipers_handler+0x80>
		fm_wipers(6); // <6 VDC
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	80 ec       	ldi	r24, 0xC0	; 192
     5c0:	90 e4       	ldi	r25, 0x40	; 64
     5c2:	c7 df       	rcall	.-114    	; 0x552 <fm_wipers>
		if(CW) {
     5c4:	80 91 08 01 	lds	r24, 0x0108
     5c8:	88 23       	and	r24, r24
     5ca:	a1 f0       	breq	.+40     	; 0x5f4 <fm_wipers_handler+0x42>
			CCW = FALSE;
     5cc:	10 92 5f 01 	sts	0x015F, r1
			if(duty < 1600) { // MAX 2200
     5d0:	80 91 06 01 	lds	r24, 0x0106
     5d4:	90 91 07 01 	lds	r25, 0x0107
     5d8:	80 34       	cpi	r24, 0x40	; 64
     5da:	26 e0       	ldi	r18, 0x06	; 6
     5dc:	92 07       	cpc	r25, r18
     5de:	34 f4       	brge	.+12     	; 0x5ec <fm_wipers_handler+0x3a>
// 				if(cnt == 100) {
// 					duty = duty+1;
// 					cnt = 0;
// 				}
				duty = duty+10;
     5e0:	0a 96       	adiw	r24, 0x0a	; 10
     5e2:	90 93 07 01 	sts	0x0107, r25
     5e6:	80 93 06 01 	sts	0x0106, r24
     5ea:	04 c0       	rjmp	.+8      	; 0x5f4 <fm_wipers_handler+0x42>
			} else {
				CW = FALSE;
				CCW = TRUE;
     5ec:	81 e0       	ldi	r24, 0x01	; 1
     5ee:	80 93 5f 01 	sts	0x015F, r24
     5f2:	04 c0       	rjmp	.+8      	; 0x5fc <fm_wipers_handler+0x4a>
			}
		}
		if (CCW) {
     5f4:	80 91 5f 01 	lds	r24, 0x015F
     5f8:	88 23       	and	r24, r24
     5fa:	a9 f0       	breq	.+42     	; 0x626 <fm_wipers_handler+0x74>
			CW = FALSE;
     5fc:	10 92 08 01 	sts	0x0108, r1
			if(duty > 1100) { // MIN 1500
     600:	80 91 06 01 	lds	r24, 0x0106
     604:	90 91 07 01 	lds	r25, 0x0107
     608:	8d 34       	cpi	r24, 0x4D	; 77
     60a:	24 e0       	ldi	r18, 0x04	; 4
     60c:	92 07       	cpc	r25, r18
     60e:	34 f0       	brlt	.+12     	; 0x61c <fm_wipers_handler+0x6a>
// 				if(cnt==100) {
// 					duty = duty-1;
// 					cnt = 0;
// 				}
				duty = duty-10;
     610:	0a 97       	sbiw	r24, 0x0a	; 10
     612:	90 93 07 01 	sts	0x0107, r25
     616:	80 93 06 01 	sts	0x0106, r24
     61a:	05 c0       	rjmp	.+10     	; 0x626 <fm_wipers_handler+0x74>
			} else {
				CW = TRUE;
     61c:	81 e0       	ldi	r24, 0x01	; 1
     61e:	80 93 08 01 	sts	0x0108, r24
				CCW = FALSE;
     622:	10 92 5f 01 	sts	0x015F, r1
			}
		}	
		fm_wipers_duty(duty);	
     626:	80 91 06 01 	lds	r24, 0x0106
     62a:	90 91 07 01 	lds	r25, 0x0107
     62e:	06 cf       	rjmp	.-500    	; 0x43c <fm_wipers_duty>
     630:	08 95       	ret
	} else
		fm_wipers(0);
     632:	60 e0       	ldi	r22, 0x00	; 0
     634:	70 e0       	ldi	r23, 0x00	; 0
     636:	cb 01       	movw	r24, r22
     638:	8c cf       	rjmp	.-232    	; 0x552 <fm_wipers>
     63a:	08 95       	ret

0000063c <inits>:
	}
	return 0;
}

void inits( void) {
	cli();
     63c:	f8 94       	cli
	USART_init(MYUBRR, TRUE);
     63e:	61 e0       	ldi	r22, 0x01	; 1
     640:	83 e3       	ldi	r24, 0x33	; 51
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	3d d1       	rcall	.+634    	; 0x8c0 <USART_init>
	can_init();
     646:	a1 de       	rcall	.-702    	; 0x38a <can_init>
	spi_init_master();
     648:	23 d0       	rcall	.+70     	; 0x690 <spi_init_master>
	fm_init();
     64a:	15 df       	rcall	.-470    	; 0x476 <fm_init>
	timer0_init();
     64c:	2d d0       	rcall	.+90     	; 0x6a8 <timer0_init>
	timer1_init();
     64e:	9b d0       	rcall	.+310    	; 0x786 <timer1_init>
	//TODO: RUN timer3_init();
	timer3_init();
     650:	0c d1       	rcall	.+536    	; 0x86a <timer3_init>
	prepare_rx(1, ID_steeringWheel, MASK_FRONT_MODULE, fm_msg_handler);
     652:	2f ee       	ldi	r18, 0xEF	; 239
     654:	31 e0       	ldi	r19, 0x01	; 1
     656:	44 e0       	ldi	r20, 0x04	; 4
     658:	50 e0       	ldi	r21, 0x00	; 0
     65a:	6f e0       	ldi	r22, 0x0F	; 15
     65c:	70 e0       	ldi	r23, 0x00	; 0
     65e:	81 e0       	ldi	r24, 0x01	; 1
     660:	20 de       	rcall	.-960    	; 0x2a2 <prepare_rx>
	printf("\r\nFront module initialized");
     662:	85 e2       	ldi	r24, 0x25	; 37
     664:	91 e0       	ldi	r25, 0x01	; 1
     666:	9f 93       	push	r25
     668:	8f 93       	push	r24
     66a:	a6 d3       	rcall	.+1868   	; 0xdb8 <printf>
	sei();
     66c:	78 94       	sei
	set_bit(DDRB, DDB6);
     66e:	26 9a       	sbi	0x04, 6	; 4
	clear_bit(PORTB, PB6);
     670:	2e 98       	cbi	0x05, 6	; 5
     672:	0f 90       	pop	r0
     674:	0f 90       	pop	r0
     676:	08 95       	ret

00000678 <main>:
void inits( void);

int main(void)
{
	/* Initialize module */
    inits();
     678:	e1 df       	rcall	.-62     	; 0x63c <inits>
    for(;;) {
		fm_horn_handler();
     67a:	5c df       	rcall	.-328    	; 0x534 <fm_horn_handler>
		fm_wipers_handler();
     67c:	9a df       	rcall	.-204    	; 0x5b2 <fm_wipers_handler>
		fm_fans_handler();
     67e:	10 df       	rcall	.-480    	; 0x4a0 <fm_fans_handler>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     680:	8f ef       	ldi	r24, 0xFF	; 255
     682:	9c e7       	ldi	r25, 0x7C	; 124
     684:	01 97       	sbiw	r24, 0x01	; 1
     686:	f1 f7       	brne	.-4      	; 0x684 <main+0xc>
     688:	00 c0       	rjmp	.+0      	; 0x68a <main+0x12>
     68a:	00 00       	nop
		_delay_ms(16); // the longer the wait the slower the wiper will go
		asm("sleep");
     68c:	88 95       	sleep
	}
     68e:	f5 cf       	rjmp	.-22     	; 0x67a <main+0x2>

00000690 <spi_init_master>:

void spi_init_slave( void) {
	/* Set MISO output, all others input */
	DDRB = (1<<DDB3);
	/* Enable SPI */
	SPCR = (1<<SPE);
     690:	84 b1       	in	r24, 0x04	; 4
     692:	8f 60       	ori	r24, 0x0F	; 15
     694:	84 b9       	out	0x04, r24	; 4
     696:	81 e5       	ldi	r24, 0x51	; 81
     698:	8c bd       	out	0x2c, r24	; 44
     69a:	28 9a       	sbi	0x05, 0	; 5
     69c:	08 95       	ret

0000069e <spi_master_tx>:
}

void spi_master_tx(unsigned char c) {
	/* Start transmission */
	SPDR = c;
     69e:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(test_bit(SPSR, SPIF)));
     6a0:	0d b4       	in	r0, 0x2d	; 45
     6a2:	07 fe       	sbrs	r0, 7
     6a4:	fd cf       	rjmp	.-6      	; 0x6a0 <spi_master_tx+0x2>
}
     6a6:	08 95       	ret

000006a8 <timer0_init>:
CAN_packet updated_msg;


void timer0_init( void) {
	/* clk/1024 */
	set_bit(TCCR0A, CS02);
     6a8:	84 b5       	in	r24, 0x24	; 36
     6aa:	84 60       	ori	r24, 0x04	; 4
     6ac:	84 bd       	out	0x24, r24	; 36
	set_bit(TCCR0A, CS00);
     6ae:	84 b5       	in	r24, 0x24	; 36
     6b0:	81 60       	ori	r24, 0x01	; 1
     6b2:	84 bd       	out	0x24, r24	; 36
	/* Enable timer overflow */
	set_bit(TIMSK0, TOIE0);
     6b4:	ee e6       	ldi	r30, 0x6E	; 110
     6b6:	f0 e0       	ldi	r31, 0x00	; 0
     6b8:	80 81       	ld	r24, Z
     6ba:	81 60       	ori	r24, 0x01	; 1
     6bc:	80 83       	st	Z, r24
	
	/* Initialize created CAN packets */
	current_msg.id = ID_brakes;
     6be:	ef e8       	ldi	r30, 0x8F	; 143
     6c0:	f1 e0       	ldi	r31, 0x01	; 1
     6c2:	23 e0       	ldi	r18, 0x03	; 3
     6c4:	30 e0       	ldi	r19, 0x00	; 0
     6c6:	31 83       	std	Z+1, r19	; 0x01
     6c8:	20 83       	st	Z, r18
	current_msg.length = 1;
     6ca:	81 e0       	ldi	r24, 0x01	; 1
     6cc:	82 83       	std	Z+2, r24	; 0x02
	current_msg.data[0] = 0;
     6ce:	13 82       	std	Z+3, r1	; 0x03
	updated_msg.id = ID_brakes;
     6d0:	e4 e8       	ldi	r30, 0x84	; 132
     6d2:	f1 e0       	ldi	r31, 0x01	; 1
     6d4:	31 83       	std	Z+1, r19	; 0x01
     6d6:	20 83       	st	Z, r18
	updated_msg.length = 1;
     6d8:	82 83       	std	Z+2, r24	; 0x02
	updated_msg.data[0] = 0;
     6da:	13 82       	std	Z+3, r1	; 0x03
	ret = FALSE;
     6dc:	10 92 83 01 	sts	0x0183, r1
     6e0:	08 95       	ret

000006e2 <__vector_17>:
}

ISR(TIMER0_OVF_vect) {
     6e2:	1f 92       	push	r1
     6e4:	0f 92       	push	r0
     6e6:	0f b6       	in	r0, 0x3f	; 63
     6e8:	0f 92       	push	r0
     6ea:	11 24       	eor	r1, r1
     6ec:	0b b6       	in	r0, 0x3b	; 59
     6ee:	0f 92       	push	r0
     6f0:	2f 93       	push	r18
     6f2:	3f 93       	push	r19
     6f4:	4f 93       	push	r20
     6f6:	5f 93       	push	r21
     6f8:	6f 93       	push	r22
     6fa:	7f 93       	push	r23
     6fc:	8f 93       	push	r24
     6fe:	9f 93       	push	r25
     700:	af 93       	push	r26
     702:	bf 93       	push	r27
     704:	ef 93       	push	r30
     706:	ff 93       	push	r31
	/* Update one CAN_packet */
	cli();
     708:	f8 94       	cli
	if(test_bit(PINE, PE5)) {
     70a:	65 9b       	sbis	0x0c, 5	; 12
     70c:	03 c0       	rjmp	.+6      	; 0x714 <__vector_17+0x32>
		updated_msg.data[0] = 1;
     70e:	81 e0       	ldi	r24, 0x01	; 1
     710:	80 93 87 01 	sts	0x0187, r24
	}
	sei();
     714:	78 94       	sei
	/* Compare the two packets */
	different = memcmp(&current_msg.data[0], &updated_msg.data[0], 1);
     716:	80 91 92 01 	lds	r24, 0x0192
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	20 91 87 01 	lds	r18, 0x0187
     720:	82 1b       	sub	r24, r18
     722:	91 09       	sbc	r25, r1
     724:	90 93 82 01 	sts	0x0182, r25
     728:	80 93 81 01 	sts	0x0181, r24
	if (different) {
     72c:	89 2b       	or	r24, r25
     72e:	79 f0       	breq	.+30     	; 0x74e <__vector_17+0x6c>
// 		printf("\r\nCurrent ID %d, d[0] %d, d[1] %d", current_msg.id, current_msg.data[0], current_msg.data[1]);
// 		printf("\r\nUpdated ID %d, d[0] %d, d[1] %d", updated_msg.id, updated_msg.data[0], updated_msg.data[1]);
// 		printf("\r\ndiff_buttons - %d", diff_buttons);
// 		printf("\r\ndiff_speed - %d\n", diff_speed);
		/* Send a message with new data */
		ret = can_packet_send(0, &updated_msg);
     730:	64 e8       	ldi	r22, 0x84	; 132
     732:	71 e0       	ldi	r23, 0x01	; 1
     734:	80 e0       	ldi	r24, 0x00	; 0
     736:	4f de       	rcall	.-866    	; 0x3d6 <can_packet_send>
     738:	80 93 83 01 	sts	0x0183, r24
		current_msg = updated_msg;	
     73c:	8b e0       	ldi	r24, 0x0B	; 11
     73e:	e4 e8       	ldi	r30, 0x84	; 132
     740:	f1 e0       	ldi	r31, 0x01	; 1
     742:	af e8       	ldi	r26, 0x8F	; 143
     744:	b1 e0       	ldi	r27, 0x01	; 1
     746:	01 90       	ld	r0, Z+
     748:	0d 92       	st	X+, r0
     74a:	8a 95       	dec	r24
     74c:	e1 f7       	brne	.-8      	; 0x746 <__vector_17+0x64>
	}
	if (ret) {
     74e:	80 91 83 01 	lds	r24, 0x0183
     752:	88 23       	and	r24, r24
     754:	21 f0       	breq	.+8      	; 0x75e <__vector_17+0x7c>
		set_bit(DDRB, DDB7);
     756:	27 9a       	sbi	0x04, 7	; 4
		ret = FALSE;
     758:	10 92 83 01 	sts	0x0183, r1
     75c:	01 c0       	rjmp	.+2      	; 0x760 <__vector_17+0x7e>
	} else
		clear_bit(DDRB, DDB7);
     75e:	27 98       	cbi	0x04, 7	; 4
     760:	ff 91       	pop	r31
     762:	ef 91       	pop	r30
     764:	bf 91       	pop	r27
     766:	af 91       	pop	r26
     768:	9f 91       	pop	r25
     76a:	8f 91       	pop	r24
     76c:	7f 91       	pop	r23
     76e:	6f 91       	pop	r22
     770:	5f 91       	pop	r21
     772:	4f 91       	pop	r20
     774:	3f 91       	pop	r19
     776:	2f 91       	pop	r18
     778:	0f 90       	pop	r0
     77a:	0b be       	out	0x3b, r0	; 59
     77c:	0f 90       	pop	r0
     77e:	0f be       	out	0x3f, r0	; 63
     780:	0f 90       	pop	r0
     782:	1f 90       	pop	r1
     784:	18 95       	reti

00000786 <timer1_init>:
	/* DIsable interrupts */
	cli(); // same as cli()?
	/* Set TCNT1 to i */
	TCNT1 = i;
	/* Restore global interrupt flag */
	SREG = sreg;
     786:	e1 e8       	ldi	r30, 0x81	; 129
     788:	f0 e0       	ldi	r31, 0x00	; 0
     78a:	80 81       	ld	r24, Z
     78c:	82 60       	ori	r24, 0x02	; 2
     78e:	80 83       	st	Z, r24
     790:	80 81       	ld	r24, Z
     792:	81 60       	ori	r24, 0x01	; 1
     794:	80 83       	st	Z, r24
     796:	10 92 85 00 	sts	0x0085, r1
     79a:	10 92 84 00 	sts	0x0084, r1
     79e:	ef e6       	ldi	r30, 0x6F	; 111
     7a0:	f0 e0       	ldi	r31, 0x00	; 0
     7a2:	80 81       	ld	r24, Z
     7a4:	81 60       	ori	r24, 0x01	; 1
     7a6:	80 83       	st	Z, r24
     7a8:	78 94       	sei
     7aa:	e0 e8       	ldi	r30, 0x80	; 128
     7ac:	f0 e0       	ldi	r31, 0x00	; 0
     7ae:	80 81       	ld	r24, Z
     7b0:	80 68       	ori	r24, 0x80	; 128
     7b2:	80 83       	st	Z, r24
     7b4:	80 81       	ld	r24, Z
     7b6:	8f 7b       	andi	r24, 0xBF	; 191
     7b8:	80 83       	st	Z, r24
     7ba:	08 95       	ret

000007bc <__vector_15>:
}


ISR(TIMER1_OVF_vect) {
     7bc:	1f 92       	push	r1
     7be:	0f 92       	push	r0
     7c0:	0f b6       	in	r0, 0x3f	; 63
     7c2:	0f 92       	push	r0
     7c4:	11 24       	eor	r1, r1
     7c6:	0b b6       	in	r0, 0x3b	; 59
     7c8:	0f 92       	push	r0
     7ca:	2f 93       	push	r18
     7cc:	3f 93       	push	r19
     7ce:	4f 93       	push	r20
     7d0:	5f 93       	push	r21
     7d2:	6f 93       	push	r22
     7d4:	7f 93       	push	r23
     7d6:	8f 93       	push	r24
     7d8:	9f 93       	push	r25
     7da:	af 93       	push	r26
     7dc:	bf 93       	push	r27
     7de:	ef 93       	push	r30
     7e0:	ff 93       	push	r31
     7e2:	cf 93       	push	r28
     7e4:	df 93       	push	r29
     7e6:	cd b7       	in	r28, 0x3d	; 61
     7e8:	de b7       	in	r29, 0x3e	; 62
     7ea:	2b 97       	sbiw	r28, 0x0b	; 11
     7ec:	de bf       	out	0x3e, r29	; 62
     7ee:	cd bf       	out	0x3d, r28	; 61
	/* Send a "I'm alive" message with the data */
	CAN_packet msg;
	BOOL ret = FALSE;
	msg.id = ID_brakes;
     7f0:	83 e0       	ldi	r24, 0x03	; 3
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	9a 83       	std	Y+2, r25	; 0x02
     7f6:	89 83       	std	Y+1, r24	; 0x01
	msg.length = 1;
     7f8:	81 e0       	ldi	r24, 0x01	; 1
     7fa:	8b 83       	std	Y+3, r24	; 0x03
	msg.data[0] = 0;
     7fc:	1c 82       	std	Y+4, r1	; 0x04
	cli();
     7fe:	f8 94       	cli
	if(test_bit(PINE, PE5))
     800:	65 99       	sbic	0x0c, 5	; 12
		msg.data[0] = 1;
     802:	8c 83       	std	Y+4, r24	; 0x04
	printf("\r\nmsg.data[0] = %d", msg.data[0]);
     804:	8c 81       	ldd	r24, Y+4	; 0x04
     806:	1f 92       	push	r1
     808:	8f 93       	push	r24
     80a:	80 e4       	ldi	r24, 0x40	; 64
     80c:	91 e0       	ldi	r25, 0x01	; 1
     80e:	9f 93       	push	r25
     810:	8f 93       	push	r24
     812:	d2 d2       	rcall	.+1444   	; 0xdb8 <printf>
	ret = can_packet_send(0, &msg);
     814:	be 01       	movw	r22, r28
     816:	6f 5f       	subi	r22, 0xFF	; 255
     818:	7f 4f       	sbci	r23, 0xFF	; 255
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	dc dd       	rcall	.-1096   	; 0x3d6 <can_packet_send>
	sei();
     81e:	78 94       	sei
	if(ret)
     820:	0f 90       	pop	r0
     822:	0f 90       	pop	r0
     824:	0f 90       	pop	r0
     826:	0f 90       	pop	r0
     828:	88 23       	and	r24, r24
     82a:	21 f0       	breq	.+8      	; 0x834 <__vector_15+0x78>
		toggle_bit(DDRB, PB5);
     82c:	94 b1       	in	r25, 0x04	; 4
     82e:	80 e2       	ldi	r24, 0x20	; 32
     830:	89 27       	eor	r24, r25
     832:	84 b9       	out	0x04, r24	; 4
	ret = FALSE;
     834:	2b 96       	adiw	r28, 0x0b	; 11
     836:	0f b6       	in	r0, 0x3f	; 63
     838:	f8 94       	cli
     83a:	de bf       	out	0x3e, r29	; 62
     83c:	0f be       	out	0x3f, r0	; 63
     83e:	cd bf       	out	0x3d, r28	; 61
     840:	df 91       	pop	r29
     842:	cf 91       	pop	r28
     844:	ff 91       	pop	r31
     846:	ef 91       	pop	r30
     848:	bf 91       	pop	r27
     84a:	af 91       	pop	r26
     84c:	9f 91       	pop	r25
     84e:	8f 91       	pop	r24
     850:	7f 91       	pop	r23
     852:	6f 91       	pop	r22
     854:	5f 91       	pop	r21
     856:	4f 91       	pop	r20
     858:	3f 91       	pop	r19
     85a:	2f 91       	pop	r18
     85c:	0f 90       	pop	r0
     85e:	0b be       	out	0x3b, r0	; 59
     860:	0f 90       	pop	r0
     862:	0f be       	out	0x3f, r0	; 63
     864:	0f 90       	pop	r0
     866:	1f 90       	pop	r1
     868:	18 95       	reti

0000086a <timer3_init>:
	/*
	* Timer3, output compare B, clear on match, set on top
	* Prescaler = 8 MHz/ 1 fuse / 8 prescaler
	* mode = 15 fast pwm with top on ocr3a
	* */
	TCCR3A = (1 << COM3B1) | (1 << COM3B0) | (1 << WGM31) | (1 << WGM30);
     86a:	83 e3       	ldi	r24, 0x33	; 51
     86c:	80 93 90 00 	sts	0x0090, r24
	TCCR3B = (1 << WGM33) | (1 << WGM32);
     870:	e1 e9       	ldi	r30, 0x91	; 145
     872:	f0 e0       	ldi	r31, 0x00	; 0
     874:	88 e1       	ldi	r24, 0x18	; 24
     876:	80 83       	st	Z, r24
	TCCR3C = 0;
     878:	10 92 92 00 	sts	0x0092, r1
	
	uint16_t duty = 3500 - 1500;
	OCR3A = 3500;
     87c:	8c ea       	ldi	r24, 0xAC	; 172
     87e:	9d e0       	ldi	r25, 0x0D	; 13
     880:	90 93 99 00 	sts	0x0099, r25
     884:	80 93 98 00 	sts	0x0098, r24
	OCR3B = duty;
     888:	80 ed       	ldi	r24, 0xD0	; 208
     88a:	97 e0       	ldi	r25, 0x07	; 7
     88c:	90 93 9b 00 	sts	0x009B, r25
     890:	80 93 9a 00 	sts	0x009A, r24
	
	DDRE |= (1<<DDE4);
     894:	6c 9a       	sbi	0x0d, 4	; 13
	
	TCCR3B |= (1<<CS31);
     896:	80 81       	ld	r24, Z
     898:	82 60       	ori	r24, 0x02	; 2
     89a:	80 83       	st	Z, r24
     89c:	08 95       	ret

0000089e <USART_tx>:
	fdevopen(USART_tx, USART_rx);
}

_Bool USART_tx(unsigned char data) {
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)));
     89e:	e0 ec       	ldi	r30, 0xC0	; 192
     8a0:	f0 e0       	ldi	r31, 0x00	; 0
     8a2:	90 81       	ld	r25, Z
     8a4:	95 ff       	sbrs	r25, 5
     8a6:	fd cf       	rjmp	.-6      	; 0x8a2 <USART_tx+0x4>
	/* Put data into buffer, sends the data */
	UDR0 = data;
     8a8:	80 93 c6 00 	sts	0x00C6, r24
	// T0D0 implement 
	return true;
}
     8ac:	81 e0       	ldi	r24, 0x01	; 1
     8ae:	08 95       	ret

000008b0 <USART_rx>:

unsigned char USART_rx(void) {
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)));
     8b0:	e0 ec       	ldi	r30, 0xC0	; 192
     8b2:	f0 e0       	ldi	r31, 0x00	; 0
     8b4:	80 81       	ld	r24, Z
     8b6:	88 23       	and	r24, r24
     8b8:	ec f7       	brge	.-6      	; 0x8b4 <USART_rx+0x4>
	/* Get and return received data from buffer */
	return UDR0;
     8ba:	80 91 c6 00 	lds	r24, 0x00C6
}
     8be:	08 95       	ret

000008c0 <USART_init>:

/*! Initialize the serial communication
	baud is the baud rate */
void USART_init(unsigned int baud, _Bool onOff) {
	/* Set baud rate */
	UBRR0H = (unsigned char) (baud>>8);
     8c0:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char) baud;
     8c4:	80 93 c4 00 	sts	0x00C4, r24
	/* Set frame format: Asynchronous normal mode, 8data, no parity  1 stop bit */
	/*(0<<UMSEL0) | (0<<UPM0) | (0<<USBS0) | already set as Initial values */
	UCSR0C = (3<<UCSZ0);
     8c8:	86 e0       	ldi	r24, 0x06	; 6
     8ca:	80 93 c2 00 	sts	0x00C2, r24
	/* Enable receiver and transmitter */
	if (onOff) {
     8ce:	66 23       	and	r22, r22
     8d0:	41 f0       	breq	.+16     	; 0x8e2 <USART_init+0x22>
		set_bit(UCSR0B,	RXEN0);
     8d2:	e1 ec       	ldi	r30, 0xC1	; 193
     8d4:	f0 e0       	ldi	r31, 0x00	; 0
     8d6:	80 81       	ld	r24, Z
     8d8:	80 61       	ori	r24, 0x10	; 16
     8da:	80 83       	st	Z, r24
		set_bit(UCSR0B, TXEN0);
     8dc:	80 81       	ld	r24, Z
     8de:	88 60       	ori	r24, 0x08	; 8
     8e0:	80 83       	st	Z, r24
	}
	/*!	enables using fprint() instead of USART_tx_string() */
	fdevopen(USART_tx, USART_rx);
     8e2:	68 e5       	ldi	r22, 0x58	; 88
     8e4:	74 e0       	ldi	r23, 0x04	; 4
     8e6:	8f e4       	ldi	r24, 0x4F	; 79
     8e8:	94 e0       	ldi	r25, 0x04	; 4
     8ea:	1c c2       	rjmp	.+1080   	; 0xd24 <fdevopen>
     8ec:	08 95       	ret

000008ee <__subsf3>:
     8ee:	50 58       	subi	r21, 0x80	; 128

000008f0 <__addsf3>:
     8f0:	bb 27       	eor	r27, r27
     8f2:	aa 27       	eor	r26, r26
     8f4:	0e d0       	rcall	.+28     	; 0x912 <__addsf3x>
     8f6:	75 c1       	rjmp	.+746    	; 0xbe2 <__fp_round>
     8f8:	66 d1       	rcall	.+716    	; 0xbc6 <__fp_pscA>
     8fa:	30 f0       	brcs	.+12     	; 0x908 <__addsf3+0x18>
     8fc:	6b d1       	rcall	.+726    	; 0xbd4 <__fp_pscB>
     8fe:	20 f0       	brcs	.+8      	; 0x908 <__addsf3+0x18>
     900:	31 f4       	brne	.+12     	; 0x90e <__addsf3+0x1e>
     902:	9f 3f       	cpi	r25, 0xFF	; 255
     904:	11 f4       	brne	.+4      	; 0x90a <__addsf3+0x1a>
     906:	1e f4       	brtc	.+6      	; 0x90e <__addsf3+0x1e>
     908:	5b c1       	rjmp	.+694    	; 0xbc0 <__fp_nan>
     90a:	0e f4       	brtc	.+2      	; 0x90e <__addsf3+0x1e>
     90c:	e0 95       	com	r30
     90e:	e7 fb       	bst	r30, 7
     910:	51 c1       	rjmp	.+674    	; 0xbb4 <__fp_inf>

00000912 <__addsf3x>:
     912:	e9 2f       	mov	r30, r25
     914:	77 d1       	rcall	.+750    	; 0xc04 <__fp_split3>
     916:	80 f3       	brcs	.-32     	; 0x8f8 <__addsf3+0x8>
     918:	ba 17       	cp	r27, r26
     91a:	62 07       	cpc	r22, r18
     91c:	73 07       	cpc	r23, r19
     91e:	84 07       	cpc	r24, r20
     920:	95 07       	cpc	r25, r21
     922:	18 f0       	brcs	.+6      	; 0x92a <__addsf3x+0x18>
     924:	71 f4       	brne	.+28     	; 0x942 <__addsf3x+0x30>
     926:	9e f5       	brtc	.+102    	; 0x98e <__addsf3x+0x7c>
     928:	8f c1       	rjmp	.+798    	; 0xc48 <__fp_zero>
     92a:	0e f4       	brtc	.+2      	; 0x92e <__addsf3x+0x1c>
     92c:	e0 95       	com	r30
     92e:	0b 2e       	mov	r0, r27
     930:	ba 2f       	mov	r27, r26
     932:	a0 2d       	mov	r26, r0
     934:	0b 01       	movw	r0, r22
     936:	b9 01       	movw	r22, r18
     938:	90 01       	movw	r18, r0
     93a:	0c 01       	movw	r0, r24
     93c:	ca 01       	movw	r24, r20
     93e:	a0 01       	movw	r20, r0
     940:	11 24       	eor	r1, r1
     942:	ff 27       	eor	r31, r31
     944:	59 1b       	sub	r21, r25
     946:	99 f0       	breq	.+38     	; 0x96e <__addsf3x+0x5c>
     948:	59 3f       	cpi	r21, 0xF9	; 249
     94a:	50 f4       	brcc	.+20     	; 0x960 <__addsf3x+0x4e>
     94c:	50 3e       	cpi	r21, 0xE0	; 224
     94e:	68 f1       	brcs	.+90     	; 0x9aa <__addsf3x+0x98>
     950:	1a 16       	cp	r1, r26
     952:	f0 40       	sbci	r31, 0x00	; 0
     954:	a2 2f       	mov	r26, r18
     956:	23 2f       	mov	r18, r19
     958:	34 2f       	mov	r19, r20
     95a:	44 27       	eor	r20, r20
     95c:	58 5f       	subi	r21, 0xF8	; 248
     95e:	f3 cf       	rjmp	.-26     	; 0x946 <__addsf3x+0x34>
     960:	46 95       	lsr	r20
     962:	37 95       	ror	r19
     964:	27 95       	ror	r18
     966:	a7 95       	ror	r26
     968:	f0 40       	sbci	r31, 0x00	; 0
     96a:	53 95       	inc	r21
     96c:	c9 f7       	brne	.-14     	; 0x960 <__addsf3x+0x4e>
     96e:	7e f4       	brtc	.+30     	; 0x98e <__addsf3x+0x7c>
     970:	1f 16       	cp	r1, r31
     972:	ba 0b       	sbc	r27, r26
     974:	62 0b       	sbc	r22, r18
     976:	73 0b       	sbc	r23, r19
     978:	84 0b       	sbc	r24, r20
     97a:	ba f0       	brmi	.+46     	; 0x9aa <__addsf3x+0x98>
     97c:	91 50       	subi	r25, 0x01	; 1
     97e:	a1 f0       	breq	.+40     	; 0x9a8 <__addsf3x+0x96>
     980:	ff 0f       	add	r31, r31
     982:	bb 1f       	adc	r27, r27
     984:	66 1f       	adc	r22, r22
     986:	77 1f       	adc	r23, r23
     988:	88 1f       	adc	r24, r24
     98a:	c2 f7       	brpl	.-16     	; 0x97c <__addsf3x+0x6a>
     98c:	0e c0       	rjmp	.+28     	; 0x9aa <__addsf3x+0x98>
     98e:	ba 0f       	add	r27, r26
     990:	62 1f       	adc	r22, r18
     992:	73 1f       	adc	r23, r19
     994:	84 1f       	adc	r24, r20
     996:	48 f4       	brcc	.+18     	; 0x9aa <__addsf3x+0x98>
     998:	87 95       	ror	r24
     99a:	77 95       	ror	r23
     99c:	67 95       	ror	r22
     99e:	b7 95       	ror	r27
     9a0:	f7 95       	ror	r31
     9a2:	9e 3f       	cpi	r25, 0xFE	; 254
     9a4:	08 f0       	brcs	.+2      	; 0x9a8 <__addsf3x+0x96>
     9a6:	b3 cf       	rjmp	.-154    	; 0x90e <__addsf3+0x1e>
     9a8:	93 95       	inc	r25
     9aa:	88 0f       	add	r24, r24
     9ac:	08 f0       	brcs	.+2      	; 0x9b0 <__addsf3x+0x9e>
     9ae:	99 27       	eor	r25, r25
     9b0:	ee 0f       	add	r30, r30
     9b2:	97 95       	ror	r25
     9b4:	87 95       	ror	r24
     9b6:	08 95       	ret

000009b8 <__cmpsf2>:
     9b8:	d9 d0       	rcall	.+434    	; 0xb6c <__fp_cmp>
     9ba:	08 f4       	brcc	.+2      	; 0x9be <__cmpsf2+0x6>
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	08 95       	ret

000009c0 <__divsf3>:
     9c0:	0c d0       	rcall	.+24     	; 0x9da <__divsf3x>
     9c2:	0f c1       	rjmp	.+542    	; 0xbe2 <__fp_round>
     9c4:	07 d1       	rcall	.+526    	; 0xbd4 <__fp_pscB>
     9c6:	40 f0       	brcs	.+16     	; 0x9d8 <__divsf3+0x18>
     9c8:	fe d0       	rcall	.+508    	; 0xbc6 <__fp_pscA>
     9ca:	30 f0       	brcs	.+12     	; 0x9d8 <__divsf3+0x18>
     9cc:	21 f4       	brne	.+8      	; 0x9d6 <__divsf3+0x16>
     9ce:	5f 3f       	cpi	r21, 0xFF	; 255
     9d0:	19 f0       	breq	.+6      	; 0x9d8 <__divsf3+0x18>
     9d2:	f0 c0       	rjmp	.+480    	; 0xbb4 <__fp_inf>
     9d4:	51 11       	cpse	r21, r1
     9d6:	39 c1       	rjmp	.+626    	; 0xc4a <__fp_szero>
     9d8:	f3 c0       	rjmp	.+486    	; 0xbc0 <__fp_nan>

000009da <__divsf3x>:
     9da:	14 d1       	rcall	.+552    	; 0xc04 <__fp_split3>
     9dc:	98 f3       	brcs	.-26     	; 0x9c4 <__divsf3+0x4>

000009de <__divsf3_pse>:
     9de:	99 23       	and	r25, r25
     9e0:	c9 f3       	breq	.-14     	; 0x9d4 <__divsf3+0x14>
     9e2:	55 23       	and	r21, r21
     9e4:	b1 f3       	breq	.-20     	; 0x9d2 <__divsf3+0x12>
     9e6:	95 1b       	sub	r25, r21
     9e8:	55 0b       	sbc	r21, r21
     9ea:	bb 27       	eor	r27, r27
     9ec:	aa 27       	eor	r26, r26
     9ee:	62 17       	cp	r22, r18
     9f0:	73 07       	cpc	r23, r19
     9f2:	84 07       	cpc	r24, r20
     9f4:	38 f0       	brcs	.+14     	; 0xa04 <__divsf3_pse+0x26>
     9f6:	9f 5f       	subi	r25, 0xFF	; 255
     9f8:	5f 4f       	sbci	r21, 0xFF	; 255
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	aa 1f       	adc	r26, r26
     a02:	a9 f3       	breq	.-22     	; 0x9ee <__divsf3_pse+0x10>
     a04:	33 d0       	rcall	.+102    	; 0xa6c <__divsf3_pse+0x8e>
     a06:	0e 2e       	mov	r0, r30
     a08:	3a f0       	brmi	.+14     	; 0xa18 <__divsf3_pse+0x3a>
     a0a:	e0 e8       	ldi	r30, 0x80	; 128
     a0c:	30 d0       	rcall	.+96     	; 0xa6e <__divsf3_pse+0x90>
     a0e:	91 50       	subi	r25, 0x01	; 1
     a10:	50 40       	sbci	r21, 0x00	; 0
     a12:	e6 95       	lsr	r30
     a14:	00 1c       	adc	r0, r0
     a16:	ca f7       	brpl	.-14     	; 0xa0a <__divsf3_pse+0x2c>
     a18:	29 d0       	rcall	.+82     	; 0xa6c <__divsf3_pse+0x8e>
     a1a:	fe 2f       	mov	r31, r30
     a1c:	27 d0       	rcall	.+78     	; 0xa6c <__divsf3_pse+0x8e>
     a1e:	66 0f       	add	r22, r22
     a20:	77 1f       	adc	r23, r23
     a22:	88 1f       	adc	r24, r24
     a24:	bb 1f       	adc	r27, r27
     a26:	26 17       	cp	r18, r22
     a28:	37 07       	cpc	r19, r23
     a2a:	48 07       	cpc	r20, r24
     a2c:	ab 07       	cpc	r26, r27
     a2e:	b0 e8       	ldi	r27, 0x80	; 128
     a30:	09 f0       	breq	.+2      	; 0xa34 <__divsf3_pse+0x56>
     a32:	bb 0b       	sbc	r27, r27
     a34:	80 2d       	mov	r24, r0
     a36:	bf 01       	movw	r22, r30
     a38:	ff 27       	eor	r31, r31
     a3a:	93 58       	subi	r25, 0x83	; 131
     a3c:	5f 4f       	sbci	r21, 0xFF	; 255
     a3e:	2a f0       	brmi	.+10     	; 0xa4a <__divsf3_pse+0x6c>
     a40:	9e 3f       	cpi	r25, 0xFE	; 254
     a42:	51 05       	cpc	r21, r1
     a44:	68 f0       	brcs	.+26     	; 0xa60 <__divsf3_pse+0x82>
     a46:	b6 c0       	rjmp	.+364    	; 0xbb4 <__fp_inf>
     a48:	00 c1       	rjmp	.+512    	; 0xc4a <__fp_szero>
     a4a:	5f 3f       	cpi	r21, 0xFF	; 255
     a4c:	ec f3       	brlt	.-6      	; 0xa48 <__divsf3_pse+0x6a>
     a4e:	98 3e       	cpi	r25, 0xE8	; 232
     a50:	dc f3       	brlt	.-10     	; 0xa48 <__divsf3_pse+0x6a>
     a52:	86 95       	lsr	r24
     a54:	77 95       	ror	r23
     a56:	67 95       	ror	r22
     a58:	b7 95       	ror	r27
     a5a:	f7 95       	ror	r31
     a5c:	9f 5f       	subi	r25, 0xFF	; 255
     a5e:	c9 f7       	brne	.-14     	; 0xa52 <__divsf3_pse+0x74>
     a60:	88 0f       	add	r24, r24
     a62:	91 1d       	adc	r25, r1
     a64:	96 95       	lsr	r25
     a66:	87 95       	ror	r24
     a68:	97 f9       	bld	r25, 7
     a6a:	08 95       	ret
     a6c:	e1 e0       	ldi	r30, 0x01	; 1
     a6e:	66 0f       	add	r22, r22
     a70:	77 1f       	adc	r23, r23
     a72:	88 1f       	adc	r24, r24
     a74:	bb 1f       	adc	r27, r27
     a76:	62 17       	cp	r22, r18
     a78:	73 07       	cpc	r23, r19
     a7a:	84 07       	cpc	r24, r20
     a7c:	ba 07       	cpc	r27, r26
     a7e:	20 f0       	brcs	.+8      	; 0xa88 <__divsf3_pse+0xaa>
     a80:	62 1b       	sub	r22, r18
     a82:	73 0b       	sbc	r23, r19
     a84:	84 0b       	sbc	r24, r20
     a86:	ba 0b       	sbc	r27, r26
     a88:	ee 1f       	adc	r30, r30
     a8a:	88 f7       	brcc	.-30     	; 0xa6e <__divsf3_pse+0x90>
     a8c:	e0 95       	com	r30
     a8e:	08 95       	ret

00000a90 <__fixsfsi>:
     a90:	04 d0       	rcall	.+8      	; 0xa9a <__fixunssfsi>
     a92:	68 94       	set
     a94:	b1 11       	cpse	r27, r1
     a96:	d9 c0       	rjmp	.+434    	; 0xc4a <__fp_szero>
     a98:	08 95       	ret

00000a9a <__fixunssfsi>:
     a9a:	bc d0       	rcall	.+376    	; 0xc14 <__fp_splitA>
     a9c:	88 f0       	brcs	.+34     	; 0xac0 <__fixunssfsi+0x26>
     a9e:	9f 57       	subi	r25, 0x7F	; 127
     aa0:	90 f0       	brcs	.+36     	; 0xac6 <__fixunssfsi+0x2c>
     aa2:	b9 2f       	mov	r27, r25
     aa4:	99 27       	eor	r25, r25
     aa6:	b7 51       	subi	r27, 0x17	; 23
     aa8:	a0 f0       	brcs	.+40     	; 0xad2 <__fixunssfsi+0x38>
     aaa:	d1 f0       	breq	.+52     	; 0xae0 <__fixunssfsi+0x46>
     aac:	66 0f       	add	r22, r22
     aae:	77 1f       	adc	r23, r23
     ab0:	88 1f       	adc	r24, r24
     ab2:	99 1f       	adc	r25, r25
     ab4:	1a f0       	brmi	.+6      	; 0xabc <__fixunssfsi+0x22>
     ab6:	ba 95       	dec	r27
     ab8:	c9 f7       	brne	.-14     	; 0xaac <__fixunssfsi+0x12>
     aba:	12 c0       	rjmp	.+36     	; 0xae0 <__fixunssfsi+0x46>
     abc:	b1 30       	cpi	r27, 0x01	; 1
     abe:	81 f0       	breq	.+32     	; 0xae0 <__fixunssfsi+0x46>
     ac0:	c3 d0       	rcall	.+390    	; 0xc48 <__fp_zero>
     ac2:	b1 e0       	ldi	r27, 0x01	; 1
     ac4:	08 95       	ret
     ac6:	c0 c0       	rjmp	.+384    	; 0xc48 <__fp_zero>
     ac8:	67 2f       	mov	r22, r23
     aca:	78 2f       	mov	r23, r24
     acc:	88 27       	eor	r24, r24
     ace:	b8 5f       	subi	r27, 0xF8	; 248
     ad0:	39 f0       	breq	.+14     	; 0xae0 <__fixunssfsi+0x46>
     ad2:	b9 3f       	cpi	r27, 0xF9	; 249
     ad4:	cc f3       	brlt	.-14     	; 0xac8 <__fixunssfsi+0x2e>
     ad6:	86 95       	lsr	r24
     ad8:	77 95       	ror	r23
     ada:	67 95       	ror	r22
     adc:	b3 95       	inc	r27
     ade:	d9 f7       	brne	.-10     	; 0xad6 <__fixunssfsi+0x3c>
     ae0:	3e f4       	brtc	.+14     	; 0xaf0 <__fixunssfsi+0x56>
     ae2:	90 95       	com	r25
     ae4:	80 95       	com	r24
     ae6:	70 95       	com	r23
     ae8:	61 95       	neg	r22
     aea:	7f 4f       	sbci	r23, 0xFF	; 255
     aec:	8f 4f       	sbci	r24, 0xFF	; 255
     aee:	9f 4f       	sbci	r25, 0xFF	; 255
     af0:	08 95       	ret

00000af2 <__floatunsisf>:
     af2:	e8 94       	clt
     af4:	09 c0       	rjmp	.+18     	; 0xb08 <__floatsisf+0x12>

00000af6 <__floatsisf>:
     af6:	97 fb       	bst	r25, 7
     af8:	3e f4       	brtc	.+14     	; 0xb08 <__floatsisf+0x12>
     afa:	90 95       	com	r25
     afc:	80 95       	com	r24
     afe:	70 95       	com	r23
     b00:	61 95       	neg	r22
     b02:	7f 4f       	sbci	r23, 0xFF	; 255
     b04:	8f 4f       	sbci	r24, 0xFF	; 255
     b06:	9f 4f       	sbci	r25, 0xFF	; 255
     b08:	99 23       	and	r25, r25
     b0a:	a9 f0       	breq	.+42     	; 0xb36 <__floatsisf+0x40>
     b0c:	f9 2f       	mov	r31, r25
     b0e:	96 e9       	ldi	r25, 0x96	; 150
     b10:	bb 27       	eor	r27, r27
     b12:	93 95       	inc	r25
     b14:	f6 95       	lsr	r31
     b16:	87 95       	ror	r24
     b18:	77 95       	ror	r23
     b1a:	67 95       	ror	r22
     b1c:	b7 95       	ror	r27
     b1e:	f1 11       	cpse	r31, r1
     b20:	f8 cf       	rjmp	.-16     	; 0xb12 <__floatsisf+0x1c>
     b22:	fa f4       	brpl	.+62     	; 0xb62 <__floatsisf+0x6c>
     b24:	bb 0f       	add	r27, r27
     b26:	11 f4       	brne	.+4      	; 0xb2c <__floatsisf+0x36>
     b28:	60 ff       	sbrs	r22, 0
     b2a:	1b c0       	rjmp	.+54     	; 0xb62 <__floatsisf+0x6c>
     b2c:	6f 5f       	subi	r22, 0xFF	; 255
     b2e:	7f 4f       	sbci	r23, 0xFF	; 255
     b30:	8f 4f       	sbci	r24, 0xFF	; 255
     b32:	9f 4f       	sbci	r25, 0xFF	; 255
     b34:	16 c0       	rjmp	.+44     	; 0xb62 <__floatsisf+0x6c>
     b36:	88 23       	and	r24, r24
     b38:	11 f0       	breq	.+4      	; 0xb3e <__floatsisf+0x48>
     b3a:	96 e9       	ldi	r25, 0x96	; 150
     b3c:	11 c0       	rjmp	.+34     	; 0xb60 <__floatsisf+0x6a>
     b3e:	77 23       	and	r23, r23
     b40:	21 f0       	breq	.+8      	; 0xb4a <__floatsisf+0x54>
     b42:	9e e8       	ldi	r25, 0x8E	; 142
     b44:	87 2f       	mov	r24, r23
     b46:	76 2f       	mov	r23, r22
     b48:	05 c0       	rjmp	.+10     	; 0xb54 <__floatsisf+0x5e>
     b4a:	66 23       	and	r22, r22
     b4c:	71 f0       	breq	.+28     	; 0xb6a <__floatsisf+0x74>
     b4e:	96 e8       	ldi	r25, 0x86	; 134
     b50:	86 2f       	mov	r24, r22
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	60 e0       	ldi	r22, 0x00	; 0
     b56:	2a f0       	brmi	.+10     	; 0xb62 <__floatsisf+0x6c>
     b58:	9a 95       	dec	r25
     b5a:	66 0f       	add	r22, r22
     b5c:	77 1f       	adc	r23, r23
     b5e:	88 1f       	adc	r24, r24
     b60:	da f7       	brpl	.-10     	; 0xb58 <__floatsisf+0x62>
     b62:	88 0f       	add	r24, r24
     b64:	96 95       	lsr	r25
     b66:	87 95       	ror	r24
     b68:	97 f9       	bld	r25, 7
     b6a:	08 95       	ret

00000b6c <__fp_cmp>:
     b6c:	99 0f       	add	r25, r25
     b6e:	00 08       	sbc	r0, r0
     b70:	55 0f       	add	r21, r21
     b72:	aa 0b       	sbc	r26, r26
     b74:	e0 e8       	ldi	r30, 0x80	; 128
     b76:	fe ef       	ldi	r31, 0xFE	; 254
     b78:	16 16       	cp	r1, r22
     b7a:	17 06       	cpc	r1, r23
     b7c:	e8 07       	cpc	r30, r24
     b7e:	f9 07       	cpc	r31, r25
     b80:	c0 f0       	brcs	.+48     	; 0xbb2 <__fp_cmp+0x46>
     b82:	12 16       	cp	r1, r18
     b84:	13 06       	cpc	r1, r19
     b86:	e4 07       	cpc	r30, r20
     b88:	f5 07       	cpc	r31, r21
     b8a:	98 f0       	brcs	.+38     	; 0xbb2 <__fp_cmp+0x46>
     b8c:	62 1b       	sub	r22, r18
     b8e:	73 0b       	sbc	r23, r19
     b90:	84 0b       	sbc	r24, r20
     b92:	95 0b       	sbc	r25, r21
     b94:	39 f4       	brne	.+14     	; 0xba4 <__fp_cmp+0x38>
     b96:	0a 26       	eor	r0, r26
     b98:	61 f0       	breq	.+24     	; 0xbb2 <__fp_cmp+0x46>
     b9a:	23 2b       	or	r18, r19
     b9c:	24 2b       	or	r18, r20
     b9e:	25 2b       	or	r18, r21
     ba0:	21 f4       	brne	.+8      	; 0xbaa <__fp_cmp+0x3e>
     ba2:	08 95       	ret
     ba4:	0a 26       	eor	r0, r26
     ba6:	09 f4       	brne	.+2      	; 0xbaa <__fp_cmp+0x3e>
     ba8:	a1 40       	sbci	r26, 0x01	; 1
     baa:	a6 95       	lsr	r26
     bac:	8f ef       	ldi	r24, 0xFF	; 255
     bae:	81 1d       	adc	r24, r1
     bb0:	81 1d       	adc	r24, r1
     bb2:	08 95       	ret

00000bb4 <__fp_inf>:
     bb4:	97 f9       	bld	r25, 7
     bb6:	9f 67       	ori	r25, 0x7F	; 127
     bb8:	80 e8       	ldi	r24, 0x80	; 128
     bba:	70 e0       	ldi	r23, 0x00	; 0
     bbc:	60 e0       	ldi	r22, 0x00	; 0
     bbe:	08 95       	ret

00000bc0 <__fp_nan>:
     bc0:	9f ef       	ldi	r25, 0xFF	; 255
     bc2:	80 ec       	ldi	r24, 0xC0	; 192
     bc4:	08 95       	ret

00000bc6 <__fp_pscA>:
     bc6:	00 24       	eor	r0, r0
     bc8:	0a 94       	dec	r0
     bca:	16 16       	cp	r1, r22
     bcc:	17 06       	cpc	r1, r23
     bce:	18 06       	cpc	r1, r24
     bd0:	09 06       	cpc	r0, r25
     bd2:	08 95       	ret

00000bd4 <__fp_pscB>:
     bd4:	00 24       	eor	r0, r0
     bd6:	0a 94       	dec	r0
     bd8:	12 16       	cp	r1, r18
     bda:	13 06       	cpc	r1, r19
     bdc:	14 06       	cpc	r1, r20
     bde:	05 06       	cpc	r0, r21
     be0:	08 95       	ret

00000be2 <__fp_round>:
     be2:	09 2e       	mov	r0, r25
     be4:	03 94       	inc	r0
     be6:	00 0c       	add	r0, r0
     be8:	11 f4       	brne	.+4      	; 0xbee <__fp_round+0xc>
     bea:	88 23       	and	r24, r24
     bec:	52 f0       	brmi	.+20     	; 0xc02 <__fp_round+0x20>
     bee:	bb 0f       	add	r27, r27
     bf0:	40 f4       	brcc	.+16     	; 0xc02 <__fp_round+0x20>
     bf2:	bf 2b       	or	r27, r31
     bf4:	11 f4       	brne	.+4      	; 0xbfa <__fp_round+0x18>
     bf6:	60 ff       	sbrs	r22, 0
     bf8:	04 c0       	rjmp	.+8      	; 0xc02 <__fp_round+0x20>
     bfa:	6f 5f       	subi	r22, 0xFF	; 255
     bfc:	7f 4f       	sbci	r23, 0xFF	; 255
     bfe:	8f 4f       	sbci	r24, 0xFF	; 255
     c00:	9f 4f       	sbci	r25, 0xFF	; 255
     c02:	08 95       	ret

00000c04 <__fp_split3>:
     c04:	57 fd       	sbrc	r21, 7
     c06:	90 58       	subi	r25, 0x80	; 128
     c08:	44 0f       	add	r20, r20
     c0a:	55 1f       	adc	r21, r21
     c0c:	59 f0       	breq	.+22     	; 0xc24 <__fp_splitA+0x10>
     c0e:	5f 3f       	cpi	r21, 0xFF	; 255
     c10:	71 f0       	breq	.+28     	; 0xc2e <__fp_splitA+0x1a>
     c12:	47 95       	ror	r20

00000c14 <__fp_splitA>:
     c14:	88 0f       	add	r24, r24
     c16:	97 fb       	bst	r25, 7
     c18:	99 1f       	adc	r25, r25
     c1a:	61 f0       	breq	.+24     	; 0xc34 <__fp_splitA+0x20>
     c1c:	9f 3f       	cpi	r25, 0xFF	; 255
     c1e:	79 f0       	breq	.+30     	; 0xc3e <__fp_splitA+0x2a>
     c20:	87 95       	ror	r24
     c22:	08 95       	ret
     c24:	12 16       	cp	r1, r18
     c26:	13 06       	cpc	r1, r19
     c28:	14 06       	cpc	r1, r20
     c2a:	55 1f       	adc	r21, r21
     c2c:	f2 cf       	rjmp	.-28     	; 0xc12 <__fp_split3+0xe>
     c2e:	46 95       	lsr	r20
     c30:	f1 df       	rcall	.-30     	; 0xc14 <__fp_splitA>
     c32:	08 c0       	rjmp	.+16     	; 0xc44 <__fp_splitA+0x30>
     c34:	16 16       	cp	r1, r22
     c36:	17 06       	cpc	r1, r23
     c38:	18 06       	cpc	r1, r24
     c3a:	99 1f       	adc	r25, r25
     c3c:	f1 cf       	rjmp	.-30     	; 0xc20 <__fp_splitA+0xc>
     c3e:	86 95       	lsr	r24
     c40:	71 05       	cpc	r23, r1
     c42:	61 05       	cpc	r22, r1
     c44:	08 94       	sec
     c46:	08 95       	ret

00000c48 <__fp_zero>:
     c48:	e8 94       	clt

00000c4a <__fp_szero>:
     c4a:	bb 27       	eor	r27, r27
     c4c:	66 27       	eor	r22, r22
     c4e:	77 27       	eor	r23, r23
     c50:	cb 01       	movw	r24, r22
     c52:	97 f9       	bld	r25, 7
     c54:	08 95       	ret

00000c56 <__gesf2>:
     c56:	8a df       	rcall	.-236    	; 0xb6c <__fp_cmp>
     c58:	08 f4       	brcc	.+2      	; 0xc5c <__gesf2+0x6>
     c5a:	8f ef       	ldi	r24, 0xFF	; 255
     c5c:	08 95       	ret

00000c5e <__mulsf3>:
     c5e:	0b d0       	rcall	.+22     	; 0xc76 <__mulsf3x>
     c60:	c0 cf       	rjmp	.-128    	; 0xbe2 <__fp_round>
     c62:	b1 df       	rcall	.-158    	; 0xbc6 <__fp_pscA>
     c64:	28 f0       	brcs	.+10     	; 0xc70 <__mulsf3+0x12>
     c66:	b6 df       	rcall	.-148    	; 0xbd4 <__fp_pscB>
     c68:	18 f0       	brcs	.+6      	; 0xc70 <__mulsf3+0x12>
     c6a:	95 23       	and	r25, r21
     c6c:	09 f0       	breq	.+2      	; 0xc70 <__mulsf3+0x12>
     c6e:	a2 cf       	rjmp	.-188    	; 0xbb4 <__fp_inf>
     c70:	a7 cf       	rjmp	.-178    	; 0xbc0 <__fp_nan>
     c72:	11 24       	eor	r1, r1
     c74:	ea cf       	rjmp	.-44     	; 0xc4a <__fp_szero>

00000c76 <__mulsf3x>:
     c76:	c6 df       	rcall	.-116    	; 0xc04 <__fp_split3>
     c78:	a0 f3       	brcs	.-24     	; 0xc62 <__mulsf3+0x4>

00000c7a <__mulsf3_pse>:
     c7a:	95 9f       	mul	r25, r21
     c7c:	d1 f3       	breq	.-12     	; 0xc72 <__mulsf3+0x14>
     c7e:	95 0f       	add	r25, r21
     c80:	50 e0       	ldi	r21, 0x00	; 0
     c82:	55 1f       	adc	r21, r21
     c84:	62 9f       	mul	r22, r18
     c86:	f0 01       	movw	r30, r0
     c88:	72 9f       	mul	r23, r18
     c8a:	bb 27       	eor	r27, r27
     c8c:	f0 0d       	add	r31, r0
     c8e:	b1 1d       	adc	r27, r1
     c90:	63 9f       	mul	r22, r19
     c92:	aa 27       	eor	r26, r26
     c94:	f0 0d       	add	r31, r0
     c96:	b1 1d       	adc	r27, r1
     c98:	aa 1f       	adc	r26, r26
     c9a:	64 9f       	mul	r22, r20
     c9c:	66 27       	eor	r22, r22
     c9e:	b0 0d       	add	r27, r0
     ca0:	a1 1d       	adc	r26, r1
     ca2:	66 1f       	adc	r22, r22
     ca4:	82 9f       	mul	r24, r18
     ca6:	22 27       	eor	r18, r18
     ca8:	b0 0d       	add	r27, r0
     caa:	a1 1d       	adc	r26, r1
     cac:	62 1f       	adc	r22, r18
     cae:	73 9f       	mul	r23, r19
     cb0:	b0 0d       	add	r27, r0
     cb2:	a1 1d       	adc	r26, r1
     cb4:	62 1f       	adc	r22, r18
     cb6:	83 9f       	mul	r24, r19
     cb8:	a0 0d       	add	r26, r0
     cba:	61 1d       	adc	r22, r1
     cbc:	22 1f       	adc	r18, r18
     cbe:	74 9f       	mul	r23, r20
     cc0:	33 27       	eor	r19, r19
     cc2:	a0 0d       	add	r26, r0
     cc4:	61 1d       	adc	r22, r1
     cc6:	23 1f       	adc	r18, r19
     cc8:	84 9f       	mul	r24, r20
     cca:	60 0d       	add	r22, r0
     ccc:	21 1d       	adc	r18, r1
     cce:	82 2f       	mov	r24, r18
     cd0:	76 2f       	mov	r23, r22
     cd2:	6a 2f       	mov	r22, r26
     cd4:	11 24       	eor	r1, r1
     cd6:	9f 57       	subi	r25, 0x7F	; 127
     cd8:	50 40       	sbci	r21, 0x00	; 0
     cda:	8a f0       	brmi	.+34     	; 0xcfe <__mulsf3_pse+0x84>
     cdc:	e1 f0       	breq	.+56     	; 0xd16 <__mulsf3_pse+0x9c>
     cde:	88 23       	and	r24, r24
     ce0:	4a f0       	brmi	.+18     	; 0xcf4 <__mulsf3_pse+0x7a>
     ce2:	ee 0f       	add	r30, r30
     ce4:	ff 1f       	adc	r31, r31
     ce6:	bb 1f       	adc	r27, r27
     ce8:	66 1f       	adc	r22, r22
     cea:	77 1f       	adc	r23, r23
     cec:	88 1f       	adc	r24, r24
     cee:	91 50       	subi	r25, 0x01	; 1
     cf0:	50 40       	sbci	r21, 0x00	; 0
     cf2:	a9 f7       	brne	.-22     	; 0xcde <__mulsf3_pse+0x64>
     cf4:	9e 3f       	cpi	r25, 0xFE	; 254
     cf6:	51 05       	cpc	r21, r1
     cf8:	70 f0       	brcs	.+28     	; 0xd16 <__mulsf3_pse+0x9c>
     cfa:	5c cf       	rjmp	.-328    	; 0xbb4 <__fp_inf>
     cfc:	a6 cf       	rjmp	.-180    	; 0xc4a <__fp_szero>
     cfe:	5f 3f       	cpi	r21, 0xFF	; 255
     d00:	ec f3       	brlt	.-6      	; 0xcfc <__mulsf3_pse+0x82>
     d02:	98 3e       	cpi	r25, 0xE8	; 232
     d04:	dc f3       	brlt	.-10     	; 0xcfc <__mulsf3_pse+0x82>
     d06:	86 95       	lsr	r24
     d08:	77 95       	ror	r23
     d0a:	67 95       	ror	r22
     d0c:	b7 95       	ror	r27
     d0e:	f7 95       	ror	r31
     d10:	e7 95       	ror	r30
     d12:	9f 5f       	subi	r25, 0xFF	; 255
     d14:	c1 f7       	brne	.-16     	; 0xd06 <__mulsf3_pse+0x8c>
     d16:	fe 2b       	or	r31, r30
     d18:	88 0f       	add	r24, r24
     d1a:	91 1d       	adc	r25, r1
     d1c:	96 95       	lsr	r25
     d1e:	87 95       	ror	r24
     d20:	97 f9       	bld	r25, 7
     d22:	08 95       	ret

00000d24 <fdevopen>:
     d24:	0f 93       	push	r16
     d26:	1f 93       	push	r17
     d28:	cf 93       	push	r28
     d2a:	df 93       	push	r29
     d2c:	00 97       	sbiw	r24, 0x00	; 0
     d2e:	31 f4       	brne	.+12     	; 0xd3c <fdevopen+0x18>
     d30:	61 15       	cp	r22, r1
     d32:	71 05       	cpc	r23, r1
     d34:	19 f4       	brne	.+6      	; 0xd3c <fdevopen+0x18>
     d36:	80 e0       	ldi	r24, 0x00	; 0
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	39 c0       	rjmp	.+114    	; 0xdae <fdevopen+0x8a>
     d3c:	8b 01       	movw	r16, r22
     d3e:	ec 01       	movw	r28, r24
     d40:	6e e0       	ldi	r22, 0x0E	; 14
     d42:	70 e0       	ldi	r23, 0x00	; 0
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	38 d2       	rcall	.+1136   	; 0x11ba <calloc>
     d4a:	fc 01       	movw	r30, r24
     d4c:	89 2b       	or	r24, r25
     d4e:	99 f3       	breq	.-26     	; 0xd36 <fdevopen+0x12>
     d50:	80 e8       	ldi	r24, 0x80	; 128
     d52:	83 83       	std	Z+3, r24	; 0x03
     d54:	01 15       	cp	r16, r1
     d56:	11 05       	cpc	r17, r1
     d58:	71 f0       	breq	.+28     	; 0xd76 <fdevopen+0x52>
     d5a:	13 87       	std	Z+11, r17	; 0x0b
     d5c:	02 87       	std	Z+10, r16	; 0x0a
     d5e:	81 e8       	ldi	r24, 0x81	; 129
     d60:	83 83       	std	Z+3, r24	; 0x03
     d62:	80 91 9a 01 	lds	r24, 0x019A
     d66:	90 91 9b 01 	lds	r25, 0x019B
     d6a:	89 2b       	or	r24, r25
     d6c:	21 f4       	brne	.+8      	; 0xd76 <fdevopen+0x52>
     d6e:	f0 93 9b 01 	sts	0x019B, r31
     d72:	e0 93 9a 01 	sts	0x019A, r30
     d76:	20 97       	sbiw	r28, 0x00	; 0
     d78:	c9 f0       	breq	.+50     	; 0xdac <fdevopen+0x88>
     d7a:	d1 87       	std	Z+9, r29	; 0x09
     d7c:	c0 87       	std	Z+8, r28	; 0x08
     d7e:	83 81       	ldd	r24, Z+3	; 0x03
     d80:	82 60       	ori	r24, 0x02	; 2
     d82:	83 83       	std	Z+3, r24	; 0x03
     d84:	80 91 9c 01 	lds	r24, 0x019C
     d88:	90 91 9d 01 	lds	r25, 0x019D
     d8c:	89 2b       	or	r24, r25
     d8e:	71 f4       	brne	.+28     	; 0xdac <fdevopen+0x88>
     d90:	f0 93 9d 01 	sts	0x019D, r31
     d94:	e0 93 9c 01 	sts	0x019C, r30
     d98:	80 91 9e 01 	lds	r24, 0x019E
     d9c:	90 91 9f 01 	lds	r25, 0x019F
     da0:	89 2b       	or	r24, r25
     da2:	21 f4       	brne	.+8      	; 0xdac <fdevopen+0x88>
     da4:	f0 93 9f 01 	sts	0x019F, r31
     da8:	e0 93 9e 01 	sts	0x019E, r30
     dac:	cf 01       	movw	r24, r30
     dae:	df 91       	pop	r29
     db0:	cf 91       	pop	r28
     db2:	1f 91       	pop	r17
     db4:	0f 91       	pop	r16
     db6:	08 95       	ret

00000db8 <printf>:
     db8:	cf 93       	push	r28
     dba:	df 93       	push	r29
     dbc:	cd b7       	in	r28, 0x3d	; 61
     dbe:	de b7       	in	r29, 0x3e	; 62
     dc0:	ae 01       	movw	r20, r28
     dc2:	4b 5f       	subi	r20, 0xFB	; 251
     dc4:	5f 4f       	sbci	r21, 0xFF	; 255
     dc6:	fa 01       	movw	r30, r20
     dc8:	61 91       	ld	r22, Z+
     dca:	71 91       	ld	r23, Z+
     dcc:	af 01       	movw	r20, r30
     dce:	80 91 9c 01 	lds	r24, 0x019C
     dd2:	90 91 9d 01 	lds	r25, 0x019D
     dd6:	03 d0       	rcall	.+6      	; 0xdde <vfprintf>
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	08 95       	ret

00000dde <vfprintf>:
     dde:	2f 92       	push	r2
     de0:	3f 92       	push	r3
     de2:	4f 92       	push	r4
     de4:	5f 92       	push	r5
     de6:	6f 92       	push	r6
     de8:	7f 92       	push	r7
     dea:	8f 92       	push	r8
     dec:	9f 92       	push	r9
     dee:	af 92       	push	r10
     df0:	bf 92       	push	r11
     df2:	cf 92       	push	r12
     df4:	df 92       	push	r13
     df6:	ef 92       	push	r14
     df8:	ff 92       	push	r15
     dfa:	0f 93       	push	r16
     dfc:	1f 93       	push	r17
     dfe:	cf 93       	push	r28
     e00:	df 93       	push	r29
     e02:	cd b7       	in	r28, 0x3d	; 61
     e04:	de b7       	in	r29, 0x3e	; 62
     e06:	2c 97       	sbiw	r28, 0x0c	; 12
     e08:	0f b6       	in	r0, 0x3f	; 63
     e0a:	f8 94       	cli
     e0c:	de bf       	out	0x3e, r29	; 62
     e0e:	0f be       	out	0x3f, r0	; 63
     e10:	cd bf       	out	0x3d, r28	; 61
     e12:	7c 01       	movw	r14, r24
     e14:	6b 01       	movw	r12, r22
     e16:	8a 01       	movw	r16, r20
     e18:	fc 01       	movw	r30, r24
     e1a:	17 82       	std	Z+7, r1	; 0x07
     e1c:	16 82       	std	Z+6, r1	; 0x06
     e1e:	83 81       	ldd	r24, Z+3	; 0x03
     e20:	81 ff       	sbrs	r24, 1
     e22:	b0 c1       	rjmp	.+864    	; 0x1184 <__stack+0x85>
     e24:	ce 01       	movw	r24, r28
     e26:	01 96       	adiw	r24, 0x01	; 1
     e28:	4c 01       	movw	r8, r24
     e2a:	f7 01       	movw	r30, r14
     e2c:	93 81       	ldd	r25, Z+3	; 0x03
     e2e:	f6 01       	movw	r30, r12
     e30:	93 fd       	sbrc	r25, 3
     e32:	85 91       	lpm	r24, Z+
     e34:	93 ff       	sbrs	r25, 3
     e36:	81 91       	ld	r24, Z+
     e38:	6f 01       	movw	r12, r30
     e3a:	88 23       	and	r24, r24
     e3c:	09 f4       	brne	.+2      	; 0xe40 <vfprintf+0x62>
     e3e:	9e c1       	rjmp	.+828    	; 0x117c <__stack+0x7d>
     e40:	85 32       	cpi	r24, 0x25	; 37
     e42:	39 f4       	brne	.+14     	; 0xe52 <vfprintf+0x74>
     e44:	93 fd       	sbrc	r25, 3
     e46:	85 91       	lpm	r24, Z+
     e48:	93 ff       	sbrs	r25, 3
     e4a:	81 91       	ld	r24, Z+
     e4c:	6f 01       	movw	r12, r30
     e4e:	85 32       	cpi	r24, 0x25	; 37
     e50:	21 f4       	brne	.+8      	; 0xe5a <vfprintf+0x7c>
     e52:	b7 01       	movw	r22, r14
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	15 d3       	rcall	.+1578   	; 0x1482 <fputc>
     e58:	e8 cf       	rjmp	.-48     	; 0xe2a <vfprintf+0x4c>
     e5a:	51 2c       	mov	r5, r1
     e5c:	31 2c       	mov	r3, r1
     e5e:	20 e0       	ldi	r18, 0x00	; 0
     e60:	20 32       	cpi	r18, 0x20	; 32
     e62:	a0 f4       	brcc	.+40     	; 0xe8c <vfprintf+0xae>
     e64:	8b 32       	cpi	r24, 0x2B	; 43
     e66:	69 f0       	breq	.+26     	; 0xe82 <vfprintf+0xa4>
     e68:	30 f4       	brcc	.+12     	; 0xe76 <vfprintf+0x98>
     e6a:	80 32       	cpi	r24, 0x20	; 32
     e6c:	59 f0       	breq	.+22     	; 0xe84 <vfprintf+0xa6>
     e6e:	83 32       	cpi	r24, 0x23	; 35
     e70:	69 f4       	brne	.+26     	; 0xe8c <vfprintf+0xae>
     e72:	20 61       	ori	r18, 0x10	; 16
     e74:	2c c0       	rjmp	.+88     	; 0xece <vfprintf+0xf0>
     e76:	8d 32       	cpi	r24, 0x2D	; 45
     e78:	39 f0       	breq	.+14     	; 0xe88 <vfprintf+0xaa>
     e7a:	80 33       	cpi	r24, 0x30	; 48
     e7c:	39 f4       	brne	.+14     	; 0xe8c <vfprintf+0xae>
     e7e:	21 60       	ori	r18, 0x01	; 1
     e80:	26 c0       	rjmp	.+76     	; 0xece <vfprintf+0xf0>
     e82:	22 60       	ori	r18, 0x02	; 2
     e84:	24 60       	ori	r18, 0x04	; 4
     e86:	23 c0       	rjmp	.+70     	; 0xece <vfprintf+0xf0>
     e88:	28 60       	ori	r18, 0x08	; 8
     e8a:	21 c0       	rjmp	.+66     	; 0xece <vfprintf+0xf0>
     e8c:	27 fd       	sbrc	r18, 7
     e8e:	27 c0       	rjmp	.+78     	; 0xede <vfprintf+0x100>
     e90:	30 ed       	ldi	r19, 0xD0	; 208
     e92:	38 0f       	add	r19, r24
     e94:	3a 30       	cpi	r19, 0x0A	; 10
     e96:	78 f4       	brcc	.+30     	; 0xeb6 <vfprintf+0xd8>
     e98:	26 ff       	sbrs	r18, 6
     e9a:	06 c0       	rjmp	.+12     	; 0xea8 <vfprintf+0xca>
     e9c:	fa e0       	ldi	r31, 0x0A	; 10
     e9e:	5f 9e       	mul	r5, r31
     ea0:	30 0d       	add	r19, r0
     ea2:	11 24       	eor	r1, r1
     ea4:	53 2e       	mov	r5, r19
     ea6:	13 c0       	rjmp	.+38     	; 0xece <vfprintf+0xf0>
     ea8:	8a e0       	ldi	r24, 0x0A	; 10
     eaa:	38 9e       	mul	r3, r24
     eac:	30 0d       	add	r19, r0
     eae:	11 24       	eor	r1, r1
     eb0:	33 2e       	mov	r3, r19
     eb2:	20 62       	ori	r18, 0x20	; 32
     eb4:	0c c0       	rjmp	.+24     	; 0xece <vfprintf+0xf0>
     eb6:	8e 32       	cpi	r24, 0x2E	; 46
     eb8:	21 f4       	brne	.+8      	; 0xec2 <vfprintf+0xe4>
     eba:	26 fd       	sbrc	r18, 6
     ebc:	5f c1       	rjmp	.+702    	; 0x117c <__stack+0x7d>
     ebe:	20 64       	ori	r18, 0x40	; 64
     ec0:	06 c0       	rjmp	.+12     	; 0xece <vfprintf+0xf0>
     ec2:	8c 36       	cpi	r24, 0x6C	; 108
     ec4:	11 f4       	brne	.+4      	; 0xeca <vfprintf+0xec>
     ec6:	20 68       	ori	r18, 0x80	; 128
     ec8:	02 c0       	rjmp	.+4      	; 0xece <vfprintf+0xf0>
     eca:	88 36       	cpi	r24, 0x68	; 104
     ecc:	41 f4       	brne	.+16     	; 0xede <vfprintf+0x100>
     ece:	f6 01       	movw	r30, r12
     ed0:	93 fd       	sbrc	r25, 3
     ed2:	85 91       	lpm	r24, Z+
     ed4:	93 ff       	sbrs	r25, 3
     ed6:	81 91       	ld	r24, Z+
     ed8:	6f 01       	movw	r12, r30
     eda:	81 11       	cpse	r24, r1
     edc:	c1 cf       	rjmp	.-126    	; 0xe60 <vfprintf+0x82>
     ede:	98 2f       	mov	r25, r24
     ee0:	9f 7d       	andi	r25, 0xDF	; 223
     ee2:	95 54       	subi	r25, 0x45	; 69
     ee4:	93 30       	cpi	r25, 0x03	; 3
     ee6:	28 f4       	brcc	.+10     	; 0xef2 <vfprintf+0x114>
     ee8:	0c 5f       	subi	r16, 0xFC	; 252
     eea:	1f 4f       	sbci	r17, 0xFF	; 255
     eec:	ff e3       	ldi	r31, 0x3F	; 63
     eee:	f9 83       	std	Y+1, r31	; 0x01
     ef0:	0d c0       	rjmp	.+26     	; 0xf0c <vfprintf+0x12e>
     ef2:	83 36       	cpi	r24, 0x63	; 99
     ef4:	31 f0       	breq	.+12     	; 0xf02 <vfprintf+0x124>
     ef6:	83 37       	cpi	r24, 0x73	; 115
     ef8:	71 f0       	breq	.+28     	; 0xf16 <vfprintf+0x138>
     efa:	83 35       	cpi	r24, 0x53	; 83
     efc:	09 f0       	breq	.+2      	; 0xf00 <vfprintf+0x122>
     efe:	57 c0       	rjmp	.+174    	; 0xfae <vfprintf+0x1d0>
     f00:	21 c0       	rjmp	.+66     	; 0xf44 <vfprintf+0x166>
     f02:	f8 01       	movw	r30, r16
     f04:	80 81       	ld	r24, Z
     f06:	89 83       	std	Y+1, r24	; 0x01
     f08:	0e 5f       	subi	r16, 0xFE	; 254
     f0a:	1f 4f       	sbci	r17, 0xFF	; 255
     f0c:	44 24       	eor	r4, r4
     f0e:	43 94       	inc	r4
     f10:	51 2c       	mov	r5, r1
     f12:	54 01       	movw	r10, r8
     f14:	14 c0       	rjmp	.+40     	; 0xf3e <vfprintf+0x160>
     f16:	38 01       	movw	r6, r16
     f18:	f2 e0       	ldi	r31, 0x02	; 2
     f1a:	6f 0e       	add	r6, r31
     f1c:	71 1c       	adc	r7, r1
     f1e:	f8 01       	movw	r30, r16
     f20:	a0 80       	ld	r10, Z
     f22:	b1 80       	ldd	r11, Z+1	; 0x01
     f24:	26 ff       	sbrs	r18, 6
     f26:	03 c0       	rjmp	.+6      	; 0xf2e <vfprintf+0x150>
     f28:	65 2d       	mov	r22, r5
     f2a:	70 e0       	ldi	r23, 0x00	; 0
     f2c:	02 c0       	rjmp	.+4      	; 0xf32 <vfprintf+0x154>
     f2e:	6f ef       	ldi	r22, 0xFF	; 255
     f30:	7f ef       	ldi	r23, 0xFF	; 255
     f32:	c5 01       	movw	r24, r10
     f34:	2c 87       	std	Y+12, r18	; 0x0c
     f36:	9a d2       	rcall	.+1332   	; 0x146c <strnlen>
     f38:	2c 01       	movw	r4, r24
     f3a:	83 01       	movw	r16, r6
     f3c:	2c 85       	ldd	r18, Y+12	; 0x0c
     f3e:	2f 77       	andi	r18, 0x7F	; 127
     f40:	22 2e       	mov	r2, r18
     f42:	16 c0       	rjmp	.+44     	; 0xf70 <vfprintf+0x192>
     f44:	38 01       	movw	r6, r16
     f46:	f2 e0       	ldi	r31, 0x02	; 2
     f48:	6f 0e       	add	r6, r31
     f4a:	71 1c       	adc	r7, r1
     f4c:	f8 01       	movw	r30, r16
     f4e:	a0 80       	ld	r10, Z
     f50:	b1 80       	ldd	r11, Z+1	; 0x01
     f52:	26 ff       	sbrs	r18, 6
     f54:	03 c0       	rjmp	.+6      	; 0xf5c <vfprintf+0x17e>
     f56:	65 2d       	mov	r22, r5
     f58:	70 e0       	ldi	r23, 0x00	; 0
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <vfprintf+0x182>
     f5c:	6f ef       	ldi	r22, 0xFF	; 255
     f5e:	7f ef       	ldi	r23, 0xFF	; 255
     f60:	c5 01       	movw	r24, r10
     f62:	2c 87       	std	Y+12, r18	; 0x0c
     f64:	71 d2       	rcall	.+1250   	; 0x1448 <strnlen_P>
     f66:	2c 01       	movw	r4, r24
     f68:	2c 85       	ldd	r18, Y+12	; 0x0c
     f6a:	20 68       	ori	r18, 0x80	; 128
     f6c:	22 2e       	mov	r2, r18
     f6e:	83 01       	movw	r16, r6
     f70:	23 fc       	sbrc	r2, 3
     f72:	19 c0       	rjmp	.+50     	; 0xfa6 <vfprintf+0x1c8>
     f74:	83 2d       	mov	r24, r3
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	48 16       	cp	r4, r24
     f7a:	59 06       	cpc	r5, r25
     f7c:	a0 f4       	brcc	.+40     	; 0xfa6 <vfprintf+0x1c8>
     f7e:	b7 01       	movw	r22, r14
     f80:	80 e2       	ldi	r24, 0x20	; 32
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	7e d2       	rcall	.+1276   	; 0x1482 <fputc>
     f86:	3a 94       	dec	r3
     f88:	f5 cf       	rjmp	.-22     	; 0xf74 <vfprintf+0x196>
     f8a:	f5 01       	movw	r30, r10
     f8c:	27 fc       	sbrc	r2, 7
     f8e:	85 91       	lpm	r24, Z+
     f90:	27 fe       	sbrs	r2, 7
     f92:	81 91       	ld	r24, Z+
     f94:	5f 01       	movw	r10, r30
     f96:	b7 01       	movw	r22, r14
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	73 d2       	rcall	.+1254   	; 0x1482 <fputc>
     f9c:	31 10       	cpse	r3, r1
     f9e:	3a 94       	dec	r3
     fa0:	f1 e0       	ldi	r31, 0x01	; 1
     fa2:	4f 1a       	sub	r4, r31
     fa4:	51 08       	sbc	r5, r1
     fa6:	41 14       	cp	r4, r1
     fa8:	51 04       	cpc	r5, r1
     faa:	79 f7       	brne	.-34     	; 0xf8a <vfprintf+0x1ac>
     fac:	de c0       	rjmp	.+444    	; 0x116a <__stack+0x6b>
     fae:	84 36       	cpi	r24, 0x64	; 100
     fb0:	11 f0       	breq	.+4      	; 0xfb6 <vfprintf+0x1d8>
     fb2:	89 36       	cpi	r24, 0x69	; 105
     fb4:	31 f5       	brne	.+76     	; 0x1002 <vfprintf+0x224>
     fb6:	f8 01       	movw	r30, r16
     fb8:	27 ff       	sbrs	r18, 7
     fba:	07 c0       	rjmp	.+14     	; 0xfca <vfprintf+0x1ec>
     fbc:	60 81       	ld	r22, Z
     fbe:	71 81       	ldd	r23, Z+1	; 0x01
     fc0:	82 81       	ldd	r24, Z+2	; 0x02
     fc2:	93 81       	ldd	r25, Z+3	; 0x03
     fc4:	0c 5f       	subi	r16, 0xFC	; 252
     fc6:	1f 4f       	sbci	r17, 0xFF	; 255
     fc8:	08 c0       	rjmp	.+16     	; 0xfda <vfprintf+0x1fc>
     fca:	60 81       	ld	r22, Z
     fcc:	71 81       	ldd	r23, Z+1	; 0x01
     fce:	07 2e       	mov	r0, r23
     fd0:	00 0c       	add	r0, r0
     fd2:	88 0b       	sbc	r24, r24
     fd4:	99 0b       	sbc	r25, r25
     fd6:	0e 5f       	subi	r16, 0xFE	; 254
     fd8:	1f 4f       	sbci	r17, 0xFF	; 255
     fda:	2f 76       	andi	r18, 0x6F	; 111
     fdc:	72 2e       	mov	r7, r18
     fde:	97 ff       	sbrs	r25, 7
     fe0:	09 c0       	rjmp	.+18     	; 0xff4 <vfprintf+0x216>
     fe2:	90 95       	com	r25
     fe4:	80 95       	com	r24
     fe6:	70 95       	com	r23
     fe8:	61 95       	neg	r22
     fea:	7f 4f       	sbci	r23, 0xFF	; 255
     fec:	8f 4f       	sbci	r24, 0xFF	; 255
     fee:	9f 4f       	sbci	r25, 0xFF	; 255
     ff0:	20 68       	ori	r18, 0x80	; 128
     ff2:	72 2e       	mov	r7, r18
     ff4:	2a e0       	ldi	r18, 0x0A	; 10
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	a4 01       	movw	r20, r8
     ffa:	7b d2       	rcall	.+1270   	; 0x14f2 <__ultoa_invert>
     ffc:	a8 2e       	mov	r10, r24
     ffe:	a8 18       	sub	r10, r8
    1000:	43 c0       	rjmp	.+134    	; 0x1088 <vfprintf+0x2aa>
    1002:	85 37       	cpi	r24, 0x75	; 117
    1004:	29 f4       	brne	.+10     	; 0x1010 <vfprintf+0x232>
    1006:	2f 7e       	andi	r18, 0xEF	; 239
    1008:	b2 2e       	mov	r11, r18
    100a:	2a e0       	ldi	r18, 0x0A	; 10
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	25 c0       	rjmp	.+74     	; 0x105a <vfprintf+0x27c>
    1010:	f2 2f       	mov	r31, r18
    1012:	f9 7f       	andi	r31, 0xF9	; 249
    1014:	bf 2e       	mov	r11, r31
    1016:	8f 36       	cpi	r24, 0x6F	; 111
    1018:	c1 f0       	breq	.+48     	; 0x104a <vfprintf+0x26c>
    101a:	18 f4       	brcc	.+6      	; 0x1022 <vfprintf+0x244>
    101c:	88 35       	cpi	r24, 0x58	; 88
    101e:	79 f0       	breq	.+30     	; 0x103e <vfprintf+0x260>
    1020:	ad c0       	rjmp	.+346    	; 0x117c <__stack+0x7d>
    1022:	80 37       	cpi	r24, 0x70	; 112
    1024:	19 f0       	breq	.+6      	; 0x102c <vfprintf+0x24e>
    1026:	88 37       	cpi	r24, 0x78	; 120
    1028:	21 f0       	breq	.+8      	; 0x1032 <vfprintf+0x254>
    102a:	a8 c0       	rjmp	.+336    	; 0x117c <__stack+0x7d>
    102c:	2f 2f       	mov	r18, r31
    102e:	20 61       	ori	r18, 0x10	; 16
    1030:	b2 2e       	mov	r11, r18
    1032:	b4 fe       	sbrs	r11, 4
    1034:	0d c0       	rjmp	.+26     	; 0x1050 <vfprintf+0x272>
    1036:	8b 2d       	mov	r24, r11
    1038:	84 60       	ori	r24, 0x04	; 4
    103a:	b8 2e       	mov	r11, r24
    103c:	09 c0       	rjmp	.+18     	; 0x1050 <vfprintf+0x272>
    103e:	24 ff       	sbrs	r18, 4
    1040:	0a c0       	rjmp	.+20     	; 0x1056 <vfprintf+0x278>
    1042:	9f 2f       	mov	r25, r31
    1044:	96 60       	ori	r25, 0x06	; 6
    1046:	b9 2e       	mov	r11, r25
    1048:	06 c0       	rjmp	.+12     	; 0x1056 <vfprintf+0x278>
    104a:	28 e0       	ldi	r18, 0x08	; 8
    104c:	30 e0       	ldi	r19, 0x00	; 0
    104e:	05 c0       	rjmp	.+10     	; 0x105a <vfprintf+0x27c>
    1050:	20 e1       	ldi	r18, 0x10	; 16
    1052:	30 e0       	ldi	r19, 0x00	; 0
    1054:	02 c0       	rjmp	.+4      	; 0x105a <vfprintf+0x27c>
    1056:	20 e1       	ldi	r18, 0x10	; 16
    1058:	32 e0       	ldi	r19, 0x02	; 2
    105a:	f8 01       	movw	r30, r16
    105c:	b7 fe       	sbrs	r11, 7
    105e:	07 c0       	rjmp	.+14     	; 0x106e <vfprintf+0x290>
    1060:	60 81       	ld	r22, Z
    1062:	71 81       	ldd	r23, Z+1	; 0x01
    1064:	82 81       	ldd	r24, Z+2	; 0x02
    1066:	93 81       	ldd	r25, Z+3	; 0x03
    1068:	0c 5f       	subi	r16, 0xFC	; 252
    106a:	1f 4f       	sbci	r17, 0xFF	; 255
    106c:	06 c0       	rjmp	.+12     	; 0x107a <vfprintf+0x29c>
    106e:	60 81       	ld	r22, Z
    1070:	71 81       	ldd	r23, Z+1	; 0x01
    1072:	80 e0       	ldi	r24, 0x00	; 0
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	0e 5f       	subi	r16, 0xFE	; 254
    1078:	1f 4f       	sbci	r17, 0xFF	; 255
    107a:	a4 01       	movw	r20, r8
    107c:	3a d2       	rcall	.+1140   	; 0x14f2 <__ultoa_invert>
    107e:	a8 2e       	mov	r10, r24
    1080:	a8 18       	sub	r10, r8
    1082:	fb 2d       	mov	r31, r11
    1084:	ff 77       	andi	r31, 0x7F	; 127
    1086:	7f 2e       	mov	r7, r31
    1088:	76 fe       	sbrs	r7, 6
    108a:	0b c0       	rjmp	.+22     	; 0x10a2 <vfprintf+0x2c4>
    108c:	37 2d       	mov	r19, r7
    108e:	3e 7f       	andi	r19, 0xFE	; 254
    1090:	a5 14       	cp	r10, r5
    1092:	50 f4       	brcc	.+20     	; 0x10a8 <vfprintf+0x2ca>
    1094:	74 fe       	sbrs	r7, 4
    1096:	0a c0       	rjmp	.+20     	; 0x10ac <vfprintf+0x2ce>
    1098:	72 fc       	sbrc	r7, 2
    109a:	08 c0       	rjmp	.+16     	; 0x10ac <vfprintf+0x2ce>
    109c:	37 2d       	mov	r19, r7
    109e:	3e 7e       	andi	r19, 0xEE	; 238
    10a0:	05 c0       	rjmp	.+10     	; 0x10ac <vfprintf+0x2ce>
    10a2:	ba 2c       	mov	r11, r10
    10a4:	37 2d       	mov	r19, r7
    10a6:	03 c0       	rjmp	.+6      	; 0x10ae <vfprintf+0x2d0>
    10a8:	ba 2c       	mov	r11, r10
    10aa:	01 c0       	rjmp	.+2      	; 0x10ae <vfprintf+0x2d0>
    10ac:	b5 2c       	mov	r11, r5
    10ae:	34 ff       	sbrs	r19, 4
    10b0:	0d c0       	rjmp	.+26     	; 0x10cc <vfprintf+0x2ee>
    10b2:	fe 01       	movw	r30, r28
    10b4:	ea 0d       	add	r30, r10
    10b6:	f1 1d       	adc	r31, r1
    10b8:	80 81       	ld	r24, Z
    10ba:	80 33       	cpi	r24, 0x30	; 48
    10bc:	11 f4       	brne	.+4      	; 0x10c2 <vfprintf+0x2e4>
    10be:	39 7e       	andi	r19, 0xE9	; 233
    10c0:	09 c0       	rjmp	.+18     	; 0x10d4 <vfprintf+0x2f6>
    10c2:	32 ff       	sbrs	r19, 2
    10c4:	06 c0       	rjmp	.+12     	; 0x10d2 <vfprintf+0x2f4>
    10c6:	b3 94       	inc	r11
    10c8:	b3 94       	inc	r11
    10ca:	04 c0       	rjmp	.+8      	; 0x10d4 <vfprintf+0x2f6>
    10cc:	83 2f       	mov	r24, r19
    10ce:	86 78       	andi	r24, 0x86	; 134
    10d0:	09 f0       	breq	.+2      	; 0x10d4 <vfprintf+0x2f6>
    10d2:	b3 94       	inc	r11
    10d4:	33 fd       	sbrc	r19, 3
    10d6:	12 c0       	rjmp	.+36     	; 0x10fc <vfprintf+0x31e>
    10d8:	30 ff       	sbrs	r19, 0
    10da:	06 c0       	rjmp	.+12     	; 0x10e8 <vfprintf+0x30a>
    10dc:	5a 2c       	mov	r5, r10
    10de:	b3 14       	cp	r11, r3
    10e0:	18 f4       	brcc	.+6      	; 0x10e8 <vfprintf+0x30a>
    10e2:	53 0c       	add	r5, r3
    10e4:	5b 18       	sub	r5, r11
    10e6:	b3 2c       	mov	r11, r3
    10e8:	b3 14       	cp	r11, r3
    10ea:	60 f4       	brcc	.+24     	; 0x1104 <__stack+0x5>
    10ec:	b7 01       	movw	r22, r14
    10ee:	80 e2       	ldi	r24, 0x20	; 32
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	3c 87       	std	Y+12, r19	; 0x0c
    10f4:	c6 d1       	rcall	.+908    	; 0x1482 <fputc>
    10f6:	b3 94       	inc	r11
    10f8:	3c 85       	ldd	r19, Y+12	; 0x0c
    10fa:	f6 cf       	rjmp	.-20     	; 0x10e8 <vfprintf+0x30a>
    10fc:	b3 14       	cp	r11, r3
    10fe:	10 f4       	brcc	.+4      	; 0x1104 <__stack+0x5>
    1100:	3b 18       	sub	r3, r11
    1102:	01 c0       	rjmp	.+2      	; 0x1106 <__stack+0x7>
    1104:	31 2c       	mov	r3, r1
    1106:	34 ff       	sbrs	r19, 4
    1108:	11 c0       	rjmp	.+34     	; 0x112c <__stack+0x2d>
    110a:	b7 01       	movw	r22, r14
    110c:	80 e3       	ldi	r24, 0x30	; 48
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	3c 87       	std	Y+12, r19	; 0x0c
    1112:	b7 d1       	rcall	.+878    	; 0x1482 <fputc>
    1114:	3c 85       	ldd	r19, Y+12	; 0x0c
    1116:	32 ff       	sbrs	r19, 2
    1118:	16 c0       	rjmp	.+44     	; 0x1146 <__stack+0x47>
    111a:	31 fd       	sbrc	r19, 1
    111c:	03 c0       	rjmp	.+6      	; 0x1124 <__stack+0x25>
    111e:	88 e7       	ldi	r24, 0x78	; 120
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	02 c0       	rjmp	.+4      	; 0x1128 <__stack+0x29>
    1124:	88 e5       	ldi	r24, 0x58	; 88
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	b7 01       	movw	r22, r14
    112a:	0c c0       	rjmp	.+24     	; 0x1144 <__stack+0x45>
    112c:	83 2f       	mov	r24, r19
    112e:	86 78       	andi	r24, 0x86	; 134
    1130:	51 f0       	breq	.+20     	; 0x1146 <__stack+0x47>
    1132:	31 ff       	sbrs	r19, 1
    1134:	02 c0       	rjmp	.+4      	; 0x113a <__stack+0x3b>
    1136:	8b e2       	ldi	r24, 0x2B	; 43
    1138:	01 c0       	rjmp	.+2      	; 0x113c <__stack+0x3d>
    113a:	80 e2       	ldi	r24, 0x20	; 32
    113c:	37 fd       	sbrc	r19, 7
    113e:	8d e2       	ldi	r24, 0x2D	; 45
    1140:	b7 01       	movw	r22, r14
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	9e d1       	rcall	.+828    	; 0x1482 <fputc>
    1146:	a5 14       	cp	r10, r5
    1148:	30 f4       	brcc	.+12     	; 0x1156 <__stack+0x57>
    114a:	b7 01       	movw	r22, r14
    114c:	80 e3       	ldi	r24, 0x30	; 48
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	98 d1       	rcall	.+816    	; 0x1482 <fputc>
    1152:	5a 94       	dec	r5
    1154:	f8 cf       	rjmp	.-16     	; 0x1146 <__stack+0x47>
    1156:	aa 94       	dec	r10
    1158:	f4 01       	movw	r30, r8
    115a:	ea 0d       	add	r30, r10
    115c:	f1 1d       	adc	r31, r1
    115e:	80 81       	ld	r24, Z
    1160:	b7 01       	movw	r22, r14
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	8e d1       	rcall	.+796    	; 0x1482 <fputc>
    1166:	a1 10       	cpse	r10, r1
    1168:	f6 cf       	rjmp	.-20     	; 0x1156 <__stack+0x57>
    116a:	33 20       	and	r3, r3
    116c:	09 f4       	brne	.+2      	; 0x1170 <__stack+0x71>
    116e:	5d ce       	rjmp	.-838    	; 0xe2a <vfprintf+0x4c>
    1170:	b7 01       	movw	r22, r14
    1172:	80 e2       	ldi	r24, 0x20	; 32
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	85 d1       	rcall	.+778    	; 0x1482 <fputc>
    1178:	3a 94       	dec	r3
    117a:	f7 cf       	rjmp	.-18     	; 0x116a <__stack+0x6b>
    117c:	f7 01       	movw	r30, r14
    117e:	86 81       	ldd	r24, Z+6	; 0x06
    1180:	97 81       	ldd	r25, Z+7	; 0x07
    1182:	02 c0       	rjmp	.+4      	; 0x1188 <__stack+0x89>
    1184:	8f ef       	ldi	r24, 0xFF	; 255
    1186:	9f ef       	ldi	r25, 0xFF	; 255
    1188:	2c 96       	adiw	r28, 0x0c	; 12
    118a:	0f b6       	in	r0, 0x3f	; 63
    118c:	f8 94       	cli
    118e:	de bf       	out	0x3e, r29	; 62
    1190:	0f be       	out	0x3f, r0	; 63
    1192:	cd bf       	out	0x3d, r28	; 61
    1194:	df 91       	pop	r29
    1196:	cf 91       	pop	r28
    1198:	1f 91       	pop	r17
    119a:	0f 91       	pop	r16
    119c:	ff 90       	pop	r15
    119e:	ef 90       	pop	r14
    11a0:	df 90       	pop	r13
    11a2:	cf 90       	pop	r12
    11a4:	bf 90       	pop	r11
    11a6:	af 90       	pop	r10
    11a8:	9f 90       	pop	r9
    11aa:	8f 90       	pop	r8
    11ac:	7f 90       	pop	r7
    11ae:	6f 90       	pop	r6
    11b0:	5f 90       	pop	r5
    11b2:	4f 90       	pop	r4
    11b4:	3f 90       	pop	r3
    11b6:	2f 90       	pop	r2
    11b8:	08 95       	ret

000011ba <calloc>:
    11ba:	0f 93       	push	r16
    11bc:	1f 93       	push	r17
    11be:	cf 93       	push	r28
    11c0:	df 93       	push	r29
    11c2:	86 9f       	mul	r24, r22
    11c4:	80 01       	movw	r16, r0
    11c6:	87 9f       	mul	r24, r23
    11c8:	10 0d       	add	r17, r0
    11ca:	96 9f       	mul	r25, r22
    11cc:	10 0d       	add	r17, r0
    11ce:	11 24       	eor	r1, r1
    11d0:	c8 01       	movw	r24, r16
    11d2:	0d d0       	rcall	.+26     	; 0x11ee <malloc>
    11d4:	ec 01       	movw	r28, r24
    11d6:	00 97       	sbiw	r24, 0x00	; 0
    11d8:	21 f0       	breq	.+8      	; 0x11e2 <calloc+0x28>
    11da:	a8 01       	movw	r20, r16
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	3e d1       	rcall	.+636    	; 0x145e <memset>
    11e2:	ce 01       	movw	r24, r28
    11e4:	df 91       	pop	r29
    11e6:	cf 91       	pop	r28
    11e8:	1f 91       	pop	r17
    11ea:	0f 91       	pop	r16
    11ec:	08 95       	ret

000011ee <malloc>:
    11ee:	cf 93       	push	r28
    11f0:	df 93       	push	r29
    11f2:	82 30       	cpi	r24, 0x02	; 2
    11f4:	91 05       	cpc	r25, r1
    11f6:	10 f4       	brcc	.+4      	; 0x11fc <malloc+0xe>
    11f8:	82 e0       	ldi	r24, 0x02	; 2
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	e0 91 a2 01 	lds	r30, 0x01A2
    1200:	f0 91 a3 01 	lds	r31, 0x01A3
    1204:	20 e0       	ldi	r18, 0x00	; 0
    1206:	30 e0       	ldi	r19, 0x00	; 0
    1208:	c0 e0       	ldi	r28, 0x00	; 0
    120a:	d0 e0       	ldi	r29, 0x00	; 0
    120c:	30 97       	sbiw	r30, 0x00	; 0
    120e:	11 f1       	breq	.+68     	; 0x1254 <malloc+0x66>
    1210:	40 81       	ld	r20, Z
    1212:	51 81       	ldd	r21, Z+1	; 0x01
    1214:	48 17       	cp	r20, r24
    1216:	59 07       	cpc	r21, r25
    1218:	c0 f0       	brcs	.+48     	; 0x124a <malloc+0x5c>
    121a:	48 17       	cp	r20, r24
    121c:	59 07       	cpc	r21, r25
    121e:	61 f4       	brne	.+24     	; 0x1238 <malloc+0x4a>
    1220:	82 81       	ldd	r24, Z+2	; 0x02
    1222:	93 81       	ldd	r25, Z+3	; 0x03
    1224:	20 97       	sbiw	r28, 0x00	; 0
    1226:	19 f0       	breq	.+6      	; 0x122e <malloc+0x40>
    1228:	9b 83       	std	Y+3, r25	; 0x03
    122a:	8a 83       	std	Y+2, r24	; 0x02
    122c:	2b c0       	rjmp	.+86     	; 0x1284 <malloc+0x96>
    122e:	90 93 a3 01 	sts	0x01A3, r25
    1232:	80 93 a2 01 	sts	0x01A2, r24
    1236:	26 c0       	rjmp	.+76     	; 0x1284 <malloc+0x96>
    1238:	21 15       	cp	r18, r1
    123a:	31 05       	cpc	r19, r1
    123c:	19 f0       	breq	.+6      	; 0x1244 <malloc+0x56>
    123e:	42 17       	cp	r20, r18
    1240:	53 07       	cpc	r21, r19
    1242:	18 f4       	brcc	.+6      	; 0x124a <malloc+0x5c>
    1244:	9a 01       	movw	r18, r20
    1246:	be 01       	movw	r22, r28
    1248:	df 01       	movw	r26, r30
    124a:	ef 01       	movw	r28, r30
    124c:	02 80       	ldd	r0, Z+2	; 0x02
    124e:	f3 81       	ldd	r31, Z+3	; 0x03
    1250:	e0 2d       	mov	r30, r0
    1252:	dc cf       	rjmp	.-72     	; 0x120c <malloc+0x1e>
    1254:	21 15       	cp	r18, r1
    1256:	31 05       	cpc	r19, r1
    1258:	09 f1       	breq	.+66     	; 0x129c <malloc+0xae>
    125a:	28 1b       	sub	r18, r24
    125c:	39 0b       	sbc	r19, r25
    125e:	24 30       	cpi	r18, 0x04	; 4
    1260:	31 05       	cpc	r19, r1
    1262:	90 f4       	brcc	.+36     	; 0x1288 <malloc+0x9a>
    1264:	12 96       	adiw	r26, 0x02	; 2
    1266:	8d 91       	ld	r24, X+
    1268:	9c 91       	ld	r25, X
    126a:	13 97       	sbiw	r26, 0x03	; 3
    126c:	61 15       	cp	r22, r1
    126e:	71 05       	cpc	r23, r1
    1270:	21 f0       	breq	.+8      	; 0x127a <malloc+0x8c>
    1272:	fb 01       	movw	r30, r22
    1274:	93 83       	std	Z+3, r25	; 0x03
    1276:	82 83       	std	Z+2, r24	; 0x02
    1278:	04 c0       	rjmp	.+8      	; 0x1282 <malloc+0x94>
    127a:	90 93 a3 01 	sts	0x01A3, r25
    127e:	80 93 a2 01 	sts	0x01A2, r24
    1282:	fd 01       	movw	r30, r26
    1284:	32 96       	adiw	r30, 0x02	; 2
    1286:	44 c0       	rjmp	.+136    	; 0x1310 <malloc+0x122>
    1288:	fd 01       	movw	r30, r26
    128a:	e2 0f       	add	r30, r18
    128c:	f3 1f       	adc	r31, r19
    128e:	81 93       	st	Z+, r24
    1290:	91 93       	st	Z+, r25
    1292:	22 50       	subi	r18, 0x02	; 2
    1294:	31 09       	sbc	r19, r1
    1296:	2d 93       	st	X+, r18
    1298:	3c 93       	st	X, r19
    129a:	3a c0       	rjmp	.+116    	; 0x1310 <malloc+0x122>
    129c:	20 91 a0 01 	lds	r18, 0x01A0
    12a0:	30 91 a1 01 	lds	r19, 0x01A1
    12a4:	23 2b       	or	r18, r19
    12a6:	41 f4       	brne	.+16     	; 0x12b8 <malloc+0xca>
    12a8:	20 91 02 01 	lds	r18, 0x0102
    12ac:	30 91 03 01 	lds	r19, 0x0103
    12b0:	30 93 a1 01 	sts	0x01A1, r19
    12b4:	20 93 a0 01 	sts	0x01A0, r18
    12b8:	20 91 00 01 	lds	r18, 0x0100
    12bc:	30 91 01 01 	lds	r19, 0x0101
    12c0:	21 15       	cp	r18, r1
    12c2:	31 05       	cpc	r19, r1
    12c4:	41 f4       	brne	.+16     	; 0x12d6 <malloc+0xe8>
    12c6:	2d b7       	in	r18, 0x3d	; 61
    12c8:	3e b7       	in	r19, 0x3e	; 62
    12ca:	40 91 04 01 	lds	r20, 0x0104
    12ce:	50 91 05 01 	lds	r21, 0x0105
    12d2:	24 1b       	sub	r18, r20
    12d4:	35 0b       	sbc	r19, r21
    12d6:	e0 91 a0 01 	lds	r30, 0x01A0
    12da:	f0 91 a1 01 	lds	r31, 0x01A1
    12de:	e2 17       	cp	r30, r18
    12e0:	f3 07       	cpc	r31, r19
    12e2:	a0 f4       	brcc	.+40     	; 0x130c <malloc+0x11e>
    12e4:	2e 1b       	sub	r18, r30
    12e6:	3f 0b       	sbc	r19, r31
    12e8:	28 17       	cp	r18, r24
    12ea:	39 07       	cpc	r19, r25
    12ec:	78 f0       	brcs	.+30     	; 0x130c <malloc+0x11e>
    12ee:	ac 01       	movw	r20, r24
    12f0:	4e 5f       	subi	r20, 0xFE	; 254
    12f2:	5f 4f       	sbci	r21, 0xFF	; 255
    12f4:	24 17       	cp	r18, r20
    12f6:	35 07       	cpc	r19, r21
    12f8:	48 f0       	brcs	.+18     	; 0x130c <malloc+0x11e>
    12fa:	4e 0f       	add	r20, r30
    12fc:	5f 1f       	adc	r21, r31
    12fe:	50 93 a1 01 	sts	0x01A1, r21
    1302:	40 93 a0 01 	sts	0x01A0, r20
    1306:	81 93       	st	Z+, r24
    1308:	91 93       	st	Z+, r25
    130a:	02 c0       	rjmp	.+4      	; 0x1310 <malloc+0x122>
    130c:	e0 e0       	ldi	r30, 0x00	; 0
    130e:	f0 e0       	ldi	r31, 0x00	; 0
    1310:	cf 01       	movw	r24, r30
    1312:	df 91       	pop	r29
    1314:	cf 91       	pop	r28
    1316:	08 95       	ret

00001318 <free>:
    1318:	0f 93       	push	r16
    131a:	1f 93       	push	r17
    131c:	cf 93       	push	r28
    131e:	df 93       	push	r29
    1320:	00 97       	sbiw	r24, 0x00	; 0
    1322:	09 f4       	brne	.+2      	; 0x1326 <free+0xe>
    1324:	8c c0       	rjmp	.+280    	; 0x143e <free+0x126>
    1326:	fc 01       	movw	r30, r24
    1328:	32 97       	sbiw	r30, 0x02	; 2
    132a:	13 82       	std	Z+3, r1	; 0x03
    132c:	12 82       	std	Z+2, r1	; 0x02
    132e:	00 91 a2 01 	lds	r16, 0x01A2
    1332:	10 91 a3 01 	lds	r17, 0x01A3
    1336:	01 15       	cp	r16, r1
    1338:	11 05       	cpc	r17, r1
    133a:	81 f4       	brne	.+32     	; 0x135c <free+0x44>
    133c:	20 81       	ld	r18, Z
    133e:	31 81       	ldd	r19, Z+1	; 0x01
    1340:	82 0f       	add	r24, r18
    1342:	93 1f       	adc	r25, r19
    1344:	20 91 a0 01 	lds	r18, 0x01A0
    1348:	30 91 a1 01 	lds	r19, 0x01A1
    134c:	28 17       	cp	r18, r24
    134e:	39 07       	cpc	r19, r25
    1350:	79 f5       	brne	.+94     	; 0x13b0 <free+0x98>
    1352:	f0 93 a1 01 	sts	0x01A1, r31
    1356:	e0 93 a0 01 	sts	0x01A0, r30
    135a:	71 c0       	rjmp	.+226    	; 0x143e <free+0x126>
    135c:	d8 01       	movw	r26, r16
    135e:	40 e0       	ldi	r20, 0x00	; 0
    1360:	50 e0       	ldi	r21, 0x00	; 0
    1362:	ae 17       	cp	r26, r30
    1364:	bf 07       	cpc	r27, r31
    1366:	50 f4       	brcc	.+20     	; 0x137c <free+0x64>
    1368:	12 96       	adiw	r26, 0x02	; 2
    136a:	2d 91       	ld	r18, X+
    136c:	3c 91       	ld	r19, X
    136e:	13 97       	sbiw	r26, 0x03	; 3
    1370:	ad 01       	movw	r20, r26
    1372:	21 15       	cp	r18, r1
    1374:	31 05       	cpc	r19, r1
    1376:	09 f1       	breq	.+66     	; 0x13ba <free+0xa2>
    1378:	d9 01       	movw	r26, r18
    137a:	f3 cf       	rjmp	.-26     	; 0x1362 <free+0x4a>
    137c:	9d 01       	movw	r18, r26
    137e:	da 01       	movw	r26, r20
    1380:	33 83       	std	Z+3, r19	; 0x03
    1382:	22 83       	std	Z+2, r18	; 0x02
    1384:	60 81       	ld	r22, Z
    1386:	71 81       	ldd	r23, Z+1	; 0x01
    1388:	86 0f       	add	r24, r22
    138a:	97 1f       	adc	r25, r23
    138c:	82 17       	cp	r24, r18
    138e:	93 07       	cpc	r25, r19
    1390:	69 f4       	brne	.+26     	; 0x13ac <free+0x94>
    1392:	ec 01       	movw	r28, r24
    1394:	28 81       	ld	r18, Y
    1396:	39 81       	ldd	r19, Y+1	; 0x01
    1398:	26 0f       	add	r18, r22
    139a:	37 1f       	adc	r19, r23
    139c:	2e 5f       	subi	r18, 0xFE	; 254
    139e:	3f 4f       	sbci	r19, 0xFF	; 255
    13a0:	31 83       	std	Z+1, r19	; 0x01
    13a2:	20 83       	st	Z, r18
    13a4:	8a 81       	ldd	r24, Y+2	; 0x02
    13a6:	9b 81       	ldd	r25, Y+3	; 0x03
    13a8:	93 83       	std	Z+3, r25	; 0x03
    13aa:	82 83       	std	Z+2, r24	; 0x02
    13ac:	45 2b       	or	r20, r21
    13ae:	29 f4       	brne	.+10     	; 0x13ba <free+0xa2>
    13b0:	f0 93 a3 01 	sts	0x01A3, r31
    13b4:	e0 93 a2 01 	sts	0x01A2, r30
    13b8:	42 c0       	rjmp	.+132    	; 0x143e <free+0x126>
    13ba:	13 96       	adiw	r26, 0x03	; 3
    13bc:	fc 93       	st	X, r31
    13be:	ee 93       	st	-X, r30
    13c0:	12 97       	sbiw	r26, 0x02	; 2
    13c2:	ed 01       	movw	r28, r26
    13c4:	49 91       	ld	r20, Y+
    13c6:	59 91       	ld	r21, Y+
    13c8:	9e 01       	movw	r18, r28
    13ca:	24 0f       	add	r18, r20
    13cc:	35 1f       	adc	r19, r21
    13ce:	e2 17       	cp	r30, r18
    13d0:	f3 07       	cpc	r31, r19
    13d2:	71 f4       	brne	.+28     	; 0x13f0 <free+0xd8>
    13d4:	80 81       	ld	r24, Z
    13d6:	91 81       	ldd	r25, Z+1	; 0x01
    13d8:	84 0f       	add	r24, r20
    13da:	95 1f       	adc	r25, r21
    13dc:	02 96       	adiw	r24, 0x02	; 2
    13de:	11 96       	adiw	r26, 0x01	; 1
    13e0:	9c 93       	st	X, r25
    13e2:	8e 93       	st	-X, r24
    13e4:	82 81       	ldd	r24, Z+2	; 0x02
    13e6:	93 81       	ldd	r25, Z+3	; 0x03
    13e8:	13 96       	adiw	r26, 0x03	; 3
    13ea:	9c 93       	st	X, r25
    13ec:	8e 93       	st	-X, r24
    13ee:	12 97       	sbiw	r26, 0x02	; 2
    13f0:	e0 e0       	ldi	r30, 0x00	; 0
    13f2:	f0 e0       	ldi	r31, 0x00	; 0
    13f4:	d8 01       	movw	r26, r16
    13f6:	12 96       	adiw	r26, 0x02	; 2
    13f8:	8d 91       	ld	r24, X+
    13fa:	9c 91       	ld	r25, X
    13fc:	13 97       	sbiw	r26, 0x03	; 3
    13fe:	00 97       	sbiw	r24, 0x00	; 0
    1400:	19 f0       	breq	.+6      	; 0x1408 <free+0xf0>
    1402:	f8 01       	movw	r30, r16
    1404:	8c 01       	movw	r16, r24
    1406:	f6 cf       	rjmp	.-20     	; 0x13f4 <free+0xdc>
    1408:	8d 91       	ld	r24, X+
    140a:	9c 91       	ld	r25, X
    140c:	98 01       	movw	r18, r16
    140e:	2e 5f       	subi	r18, 0xFE	; 254
    1410:	3f 4f       	sbci	r19, 0xFF	; 255
    1412:	82 0f       	add	r24, r18
    1414:	93 1f       	adc	r25, r19
    1416:	20 91 a0 01 	lds	r18, 0x01A0
    141a:	30 91 a1 01 	lds	r19, 0x01A1
    141e:	28 17       	cp	r18, r24
    1420:	39 07       	cpc	r19, r25
    1422:	69 f4       	brne	.+26     	; 0x143e <free+0x126>
    1424:	30 97       	sbiw	r30, 0x00	; 0
    1426:	29 f4       	brne	.+10     	; 0x1432 <free+0x11a>
    1428:	10 92 a3 01 	sts	0x01A3, r1
    142c:	10 92 a2 01 	sts	0x01A2, r1
    1430:	02 c0       	rjmp	.+4      	; 0x1436 <free+0x11e>
    1432:	13 82       	std	Z+3, r1	; 0x03
    1434:	12 82       	std	Z+2, r1	; 0x02
    1436:	10 93 a1 01 	sts	0x01A1, r17
    143a:	00 93 a0 01 	sts	0x01A0, r16
    143e:	df 91       	pop	r29
    1440:	cf 91       	pop	r28
    1442:	1f 91       	pop	r17
    1444:	0f 91       	pop	r16
    1446:	08 95       	ret

00001448 <strnlen_P>:
    1448:	fc 01       	movw	r30, r24
    144a:	05 90       	lpm	r0, Z+
    144c:	61 50       	subi	r22, 0x01	; 1
    144e:	70 40       	sbci	r23, 0x00	; 0
    1450:	01 10       	cpse	r0, r1
    1452:	d8 f7       	brcc	.-10     	; 0x144a <strnlen_P+0x2>
    1454:	80 95       	com	r24
    1456:	90 95       	com	r25
    1458:	8e 0f       	add	r24, r30
    145a:	9f 1f       	adc	r25, r31
    145c:	08 95       	ret

0000145e <memset>:
    145e:	dc 01       	movw	r26, r24
    1460:	01 c0       	rjmp	.+2      	; 0x1464 <memset+0x6>
    1462:	6d 93       	st	X+, r22
    1464:	41 50       	subi	r20, 0x01	; 1
    1466:	50 40       	sbci	r21, 0x00	; 0
    1468:	e0 f7       	brcc	.-8      	; 0x1462 <memset+0x4>
    146a:	08 95       	ret

0000146c <strnlen>:
    146c:	fc 01       	movw	r30, r24
    146e:	61 50       	subi	r22, 0x01	; 1
    1470:	70 40       	sbci	r23, 0x00	; 0
    1472:	01 90       	ld	r0, Z+
    1474:	01 10       	cpse	r0, r1
    1476:	d8 f7       	brcc	.-10     	; 0x146e <strnlen+0x2>
    1478:	80 95       	com	r24
    147a:	90 95       	com	r25
    147c:	8e 0f       	add	r24, r30
    147e:	9f 1f       	adc	r25, r31
    1480:	08 95       	ret

00001482 <fputc>:
    1482:	0f 93       	push	r16
    1484:	1f 93       	push	r17
    1486:	cf 93       	push	r28
    1488:	df 93       	push	r29
    148a:	fb 01       	movw	r30, r22
    148c:	23 81       	ldd	r18, Z+3	; 0x03
    148e:	21 fd       	sbrc	r18, 1
    1490:	03 c0       	rjmp	.+6      	; 0x1498 <fputc+0x16>
    1492:	8f ef       	ldi	r24, 0xFF	; 255
    1494:	9f ef       	ldi	r25, 0xFF	; 255
    1496:	28 c0       	rjmp	.+80     	; 0x14e8 <fputc+0x66>
    1498:	22 ff       	sbrs	r18, 2
    149a:	16 c0       	rjmp	.+44     	; 0x14c8 <fputc+0x46>
    149c:	46 81       	ldd	r20, Z+6	; 0x06
    149e:	57 81       	ldd	r21, Z+7	; 0x07
    14a0:	24 81       	ldd	r18, Z+4	; 0x04
    14a2:	35 81       	ldd	r19, Z+5	; 0x05
    14a4:	42 17       	cp	r20, r18
    14a6:	53 07       	cpc	r21, r19
    14a8:	44 f4       	brge	.+16     	; 0x14ba <fputc+0x38>
    14aa:	a0 81       	ld	r26, Z
    14ac:	b1 81       	ldd	r27, Z+1	; 0x01
    14ae:	9d 01       	movw	r18, r26
    14b0:	2f 5f       	subi	r18, 0xFF	; 255
    14b2:	3f 4f       	sbci	r19, 0xFF	; 255
    14b4:	31 83       	std	Z+1, r19	; 0x01
    14b6:	20 83       	st	Z, r18
    14b8:	8c 93       	st	X, r24
    14ba:	26 81       	ldd	r18, Z+6	; 0x06
    14bc:	37 81       	ldd	r19, Z+7	; 0x07
    14be:	2f 5f       	subi	r18, 0xFF	; 255
    14c0:	3f 4f       	sbci	r19, 0xFF	; 255
    14c2:	37 83       	std	Z+7, r19	; 0x07
    14c4:	26 83       	std	Z+6, r18	; 0x06
    14c6:	10 c0       	rjmp	.+32     	; 0x14e8 <fputc+0x66>
    14c8:	eb 01       	movw	r28, r22
    14ca:	09 2f       	mov	r16, r25
    14cc:	18 2f       	mov	r17, r24
    14ce:	00 84       	ldd	r0, Z+8	; 0x08
    14d0:	f1 85       	ldd	r31, Z+9	; 0x09
    14d2:	e0 2d       	mov	r30, r0
    14d4:	09 95       	icall
    14d6:	89 2b       	or	r24, r25
    14d8:	e1 f6       	brne	.-72     	; 0x1492 <fputc+0x10>
    14da:	8e 81       	ldd	r24, Y+6	; 0x06
    14dc:	9f 81       	ldd	r25, Y+7	; 0x07
    14de:	01 96       	adiw	r24, 0x01	; 1
    14e0:	9f 83       	std	Y+7, r25	; 0x07
    14e2:	8e 83       	std	Y+6, r24	; 0x06
    14e4:	81 2f       	mov	r24, r17
    14e6:	90 2f       	mov	r25, r16
    14e8:	df 91       	pop	r29
    14ea:	cf 91       	pop	r28
    14ec:	1f 91       	pop	r17
    14ee:	0f 91       	pop	r16
    14f0:	08 95       	ret

000014f2 <__ultoa_invert>:
    14f2:	fa 01       	movw	r30, r20
    14f4:	aa 27       	eor	r26, r26
    14f6:	28 30       	cpi	r18, 0x08	; 8
    14f8:	51 f1       	breq	.+84     	; 0x154e <__ultoa_invert+0x5c>
    14fa:	20 31       	cpi	r18, 0x10	; 16
    14fc:	81 f1       	breq	.+96     	; 0x155e <__ultoa_invert+0x6c>
    14fe:	e8 94       	clt
    1500:	6f 93       	push	r22
    1502:	6e 7f       	andi	r22, 0xFE	; 254
    1504:	6e 5f       	subi	r22, 0xFE	; 254
    1506:	7f 4f       	sbci	r23, 0xFF	; 255
    1508:	8f 4f       	sbci	r24, 0xFF	; 255
    150a:	9f 4f       	sbci	r25, 0xFF	; 255
    150c:	af 4f       	sbci	r26, 0xFF	; 255
    150e:	b1 e0       	ldi	r27, 0x01	; 1
    1510:	3e d0       	rcall	.+124    	; 0x158e <__ultoa_invert+0x9c>
    1512:	b4 e0       	ldi	r27, 0x04	; 4
    1514:	3c d0       	rcall	.+120    	; 0x158e <__ultoa_invert+0x9c>
    1516:	67 0f       	add	r22, r23
    1518:	78 1f       	adc	r23, r24
    151a:	89 1f       	adc	r24, r25
    151c:	9a 1f       	adc	r25, r26
    151e:	a1 1d       	adc	r26, r1
    1520:	68 0f       	add	r22, r24
    1522:	79 1f       	adc	r23, r25
    1524:	8a 1f       	adc	r24, r26
    1526:	91 1d       	adc	r25, r1
    1528:	a1 1d       	adc	r26, r1
    152a:	6a 0f       	add	r22, r26
    152c:	71 1d       	adc	r23, r1
    152e:	81 1d       	adc	r24, r1
    1530:	91 1d       	adc	r25, r1
    1532:	a1 1d       	adc	r26, r1
    1534:	20 d0       	rcall	.+64     	; 0x1576 <__ultoa_invert+0x84>
    1536:	09 f4       	brne	.+2      	; 0x153a <__ultoa_invert+0x48>
    1538:	68 94       	set
    153a:	3f 91       	pop	r19
    153c:	2a e0       	ldi	r18, 0x0A	; 10
    153e:	26 9f       	mul	r18, r22
    1540:	11 24       	eor	r1, r1
    1542:	30 19       	sub	r19, r0
    1544:	30 5d       	subi	r19, 0xD0	; 208
    1546:	31 93       	st	Z+, r19
    1548:	de f6       	brtc	.-74     	; 0x1500 <__ultoa_invert+0xe>
    154a:	cf 01       	movw	r24, r30
    154c:	08 95       	ret
    154e:	46 2f       	mov	r20, r22
    1550:	47 70       	andi	r20, 0x07	; 7
    1552:	40 5d       	subi	r20, 0xD0	; 208
    1554:	41 93       	st	Z+, r20
    1556:	b3 e0       	ldi	r27, 0x03	; 3
    1558:	0f d0       	rcall	.+30     	; 0x1578 <__ultoa_invert+0x86>
    155a:	c9 f7       	brne	.-14     	; 0x154e <__ultoa_invert+0x5c>
    155c:	f6 cf       	rjmp	.-20     	; 0x154a <__ultoa_invert+0x58>
    155e:	46 2f       	mov	r20, r22
    1560:	4f 70       	andi	r20, 0x0F	; 15
    1562:	40 5d       	subi	r20, 0xD0	; 208
    1564:	4a 33       	cpi	r20, 0x3A	; 58
    1566:	18 f0       	brcs	.+6      	; 0x156e <__ultoa_invert+0x7c>
    1568:	49 5d       	subi	r20, 0xD9	; 217
    156a:	31 fd       	sbrc	r19, 1
    156c:	40 52       	subi	r20, 0x20	; 32
    156e:	41 93       	st	Z+, r20
    1570:	02 d0       	rcall	.+4      	; 0x1576 <__ultoa_invert+0x84>
    1572:	a9 f7       	brne	.-22     	; 0x155e <__ultoa_invert+0x6c>
    1574:	ea cf       	rjmp	.-44     	; 0x154a <__ultoa_invert+0x58>
    1576:	b4 e0       	ldi	r27, 0x04	; 4
    1578:	a6 95       	lsr	r26
    157a:	97 95       	ror	r25
    157c:	87 95       	ror	r24
    157e:	77 95       	ror	r23
    1580:	67 95       	ror	r22
    1582:	ba 95       	dec	r27
    1584:	c9 f7       	brne	.-14     	; 0x1578 <__ultoa_invert+0x86>
    1586:	00 97       	sbiw	r24, 0x00	; 0
    1588:	61 05       	cpc	r22, r1
    158a:	71 05       	cpc	r23, r1
    158c:	08 95       	ret
    158e:	9b 01       	movw	r18, r22
    1590:	ac 01       	movw	r20, r24
    1592:	0a 2e       	mov	r0, r26
    1594:	06 94       	lsr	r0
    1596:	57 95       	ror	r21
    1598:	47 95       	ror	r20
    159a:	37 95       	ror	r19
    159c:	27 95       	ror	r18
    159e:	ba 95       	dec	r27
    15a0:	c9 f7       	brne	.-14     	; 0x1594 <__ultoa_invert+0xa2>
    15a2:	62 0f       	add	r22, r18
    15a4:	73 1f       	adc	r23, r19
    15a6:	84 1f       	adc	r24, r20
    15a8:	95 1f       	adc	r25, r21
    15aa:	a0 1d       	adc	r26, r0
    15ac:	08 95       	ret

000015ae <_exit>:
    15ae:	f8 94       	cli

000015b0 <__stop_program>:
    15b0:	ff cf       	rjmp	.-2      	; 0x15b0 <__stop_program>
