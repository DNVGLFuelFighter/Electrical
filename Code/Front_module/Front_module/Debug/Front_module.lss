
Front_module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000056  00800100  000014f4  00001588  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000038  00800156  00800156  000015de  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015de  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000163c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  0000167c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011ea  00000000  00000000  0000183c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000098d  00000000  00000000  00002a26  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dee  00000000  00000000  000033b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000464  00000000  00000000  000041a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004c8  00000000  00000000  00004608  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b24  00000000  00000000  00004ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  000055f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
       2:	00 00       	nop
       4:	65 c0       	rjmp	.+202    	; 0xd0 <__bad_interrupt>
       6:	00 00       	nop
       8:	63 c0       	rjmp	.+198    	; 0xd0 <__bad_interrupt>
       a:	00 00       	nop
       c:	61 c0       	rjmp	.+194    	; 0xd0 <__bad_interrupt>
       e:	00 00       	nop
      10:	5f c0       	rjmp	.+190    	; 0xd0 <__bad_interrupt>
      12:	00 00       	nop
      14:	5d c0       	rjmp	.+186    	; 0xd0 <__bad_interrupt>
      16:	00 00       	nop
      18:	5b c0       	rjmp	.+182    	; 0xd0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	59 c0       	rjmp	.+178    	; 0xd0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	57 c0       	rjmp	.+174    	; 0xd0 <__bad_interrupt>
      22:	00 00       	nop
      24:	55 c0       	rjmp	.+170    	; 0xd0 <__bad_interrupt>
      26:	00 00       	nop
      28:	c4 c3       	rjmp	.+1928   	; 0x7b2 <__vector_10>
      2a:	00 00       	nop
      2c:	51 c0       	rjmp	.+162    	; 0xd0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4f c0       	rjmp	.+158    	; 0xd0 <__bad_interrupt>
      32:	00 00       	nop
      34:	91 c3       	rjmp	.+1826   	; 0x758 <__vector_13>
      36:	00 00       	nop
      38:	4b c0       	rjmp	.+150    	; 0xd0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	49 c0       	rjmp	.+146    	; 0xd0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	47 c0       	rjmp	.+142    	; 0xd0 <__bad_interrupt>
      42:	00 00       	nop
      44:	22 c3       	rjmp	.+1604   	; 0x68a <__vector_17>
      46:	00 00       	nop
      48:	44 c0       	rjmp	.+136    	; 0xd2 <__vector_18>
      4a:	00 00       	nop
      4c:	41 c0       	rjmp	.+130    	; 0xd0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3f c0       	rjmp	.+126    	; 0xd0 <__bad_interrupt>
      52:	00 00       	nop
      54:	3d c0       	rjmp	.+122    	; 0xd0 <__bad_interrupt>
      56:	00 00       	nop
      58:	3b c0       	rjmp	.+118    	; 0xd0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	39 c0       	rjmp	.+114    	; 0xd0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	37 c0       	rjmp	.+110    	; 0xd0 <__bad_interrupt>
      62:	00 00       	nop
      64:	35 c0       	rjmp	.+106    	; 0xd0 <__bad_interrupt>
      66:	00 00       	nop
      68:	33 c0       	rjmp	.+102    	; 0xd0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	31 c0       	rjmp	.+98     	; 0xd0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2f c0       	rjmp	.+94     	; 0xd0 <__bad_interrupt>
      72:	00 00       	nop
      74:	2d c0       	rjmp	.+90     	; 0xd0 <__bad_interrupt>
      76:	00 00       	nop
      78:	2b c0       	rjmp	.+86     	; 0xd0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	29 c0       	rjmp	.+82     	; 0xd0 <__bad_interrupt>
      7e:	00 00       	nop
      80:	27 c0       	rjmp	.+78     	; 0xd0 <__bad_interrupt>
      82:	00 00       	nop
      84:	25 c0       	rjmp	.+74     	; 0xd0 <__bad_interrupt>
      86:	00 00       	nop
      88:	23 c0       	rjmp	.+70     	; 0xd0 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	21 c0       	rjmp	.+66     	; 0xd0 <__bad_interrupt>
      8e:	00 00       	nop
      90:	1f c0       	rjmp	.+62     	; 0xd0 <__bad_interrupt>
	...

00000094 <__ctors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d0 e1       	ldi	r29, 0x10	; 16
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	11 e0       	ldi	r17, 0x01	; 1
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	e4 ef       	ldi	r30, 0xF4	; 244
      a8:	f4 e1       	ldi	r31, 0x14	; 20
      aa:	00 e0       	ldi	r16, 0x00	; 0
      ac:	0b bf       	out	0x3b, r16	; 59
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
      b0:	07 90       	elpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	a6 35       	cpi	r26, 0x56	; 86
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
      ba:	21 e0       	ldi	r18, 0x01	; 1
      bc:	a6 e5       	ldi	r26, 0x56	; 86
      be:	b1 e0       	ldi	r27, 0x01	; 1
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	ae 38       	cpi	r26, 0x8E	; 142
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	81 d2       	rcall	.+1282   	; 0x5ce <main>
      cc:	0c 94 78 0a 	jmp	0x14f0	; 0x14f0 <_exit>

000000d0 <__bad_interrupt>:
      d0:	97 cf       	rjmp	.-210    	; 0x0 <__vectors>

000000d2 <__vector_18>:
		}
	CANGCON |= 0x02;
	CANGIE=(1<<ENIT) | (1<< ENRX);
}
	
void can_health(void) {
      d2:	1f 92       	push	r1
      d4:	0f 92       	push	r0
      d6:	0f b6       	in	r0, 0x3f	; 63
      d8:	0f 92       	push	r0
      da:	11 24       	eor	r1, r1
      dc:	0b b6       	in	r0, 0x3b	; 59
      de:	0f 92       	push	r0
      e0:	2f 93       	push	r18
      e2:	3f 93       	push	r19
      e4:	4f 93       	push	r20
      e6:	5f 93       	push	r21
      e8:	6f 93       	push	r22
      ea:	7f 93       	push	r23
      ec:	8f 93       	push	r24
      ee:	9f 93       	push	r25
      f0:	af 93       	push	r26
      f2:	bf 93       	push	r27
      f4:	cf 93       	push	r28
      f6:	ef 93       	push	r30
      f8:	ff 93       	push	r31
      fa:	ed ee       	ldi	r30, 0xED	; 237
      fc:	f0 e0       	ldi	r31, 0x00	; 0
      fe:	c0 81       	ld	r28, Z
     100:	80 91 ec 00 	lds	r24, 0x00EC
     104:	68 2f       	mov	r22, r24
     106:	70 e0       	ldi	r23, 0x00	; 0
     108:	80 7f       	andi	r24, 0xF0	; 240
     10a:	80 83       	st	Z, r24
     10c:	72 95       	swap	r23
     10e:	62 95       	swap	r22
     110:	6f 70       	andi	r22, 0x0F	; 15
     112:	67 27       	eor	r22, r23
     114:	7f 70       	andi	r23, 0x0F	; 15
     116:	67 27       	eor	r22, r23
     118:	80 91 ee 00 	lds	r24, 0x00EE
     11c:	8f 75       	andi	r24, 0x5F	; 95
     11e:	09 f0       	breq	.+2      	; 0x122 <__vector_18+0x50>
     120:	98 95       	break
     122:	20 91 f2 00 	lds	r18, 0x00F2
     126:	80 91 f3 00 	lds	r24, 0x00F3
     12a:	e6 e5       	ldi	r30, 0x56	; 86
     12c:	f1 e0       	ldi	r31, 0x01	; 1
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	88 0f       	add	r24, r24
     132:	99 1f       	adc	r25, r25
     134:	88 0f       	add	r24, r24
     136:	99 1f       	adc	r25, r25
     138:	88 0f       	add	r24, r24
     13a:	99 1f       	adc	r25, r25
     13c:	22 95       	swap	r18
     13e:	26 95       	lsr	r18
     140:	27 70       	andi	r18, 0x07	; 7
     142:	82 2b       	or	r24, r18
     144:	91 83       	std	Z+1, r25	; 0x01
     146:	80 83       	st	Z, r24
     148:	80 91 ef 00 	lds	r24, 0x00EF
     14c:	8f 70       	andi	r24, 0x0F	; 15
     14e:	82 83       	std	Z+2, r24	; 0x02
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	00 97       	sbiw	r24, 0x00	; 0
     154:	59 f0       	breq	.+22     	; 0x16c <__vector_18+0x9a>
     156:	e9 e5       	ldi	r30, 0x59	; 89
     158:	f1 e0       	ldi	r31, 0x01	; 1
     15a:	87 5a       	subi	r24, 0xA7	; 167
     15c:	9e 4f       	sbci	r25, 0xFE	; 254
     15e:	aa ef       	ldi	r26, 0xFA	; 250
     160:	b0 e0       	ldi	r27, 0x00	; 0
     162:	2c 91       	ld	r18, X
     164:	21 93       	st	Z+, r18
     166:	e8 17       	cp	r30, r24
     168:	f9 07       	cpc	r31, r25
     16a:	d9 f7       	brne	.-10     	; 0x162 <__vector_18+0x90>
     16c:	10 92 ee 00 	sts	0x00EE, r1
     170:	80 e8       	ldi	r24, 0x80	; 128
     172:	80 93 ef 00 	sts	0x00EF, r24
     176:	fb 01       	movw	r30, r22
     178:	ee 0f       	add	r30, r30
     17a:	ff 1f       	adc	r31, r31
     17c:	ea 59       	subi	r30, 0x9A	; 154
     17e:	fe 4f       	sbci	r31, 0xFE	; 254
     180:	01 90       	ld	r0, Z+
     182:	f0 81       	ld	r31, Z
     184:	e0 2d       	mov	r30, r0
     186:	86 e5       	ldi	r24, 0x56	; 86
     188:	91 e0       	ldi	r25, 0x01	; 1
     18a:	09 95       	icall
     18c:	c0 93 ed 00 	sts	0x00ED, r28
     190:	ff 91       	pop	r31
     192:	ef 91       	pop	r30
     194:	cf 91       	pop	r28
     196:	bf 91       	pop	r27
     198:	af 91       	pop	r26
     19a:	9f 91       	pop	r25
     19c:	8f 91       	pop	r24
     19e:	7f 91       	pop	r23
     1a0:	6f 91       	pop	r22
     1a2:	5f 91       	pop	r21
     1a4:	4f 91       	pop	r20
     1a6:	3f 91       	pop	r19
     1a8:	2f 91       	pop	r18
     1aa:	0f 90       	pop	r0
     1ac:	0b be       	out	0x3b, r0	; 59
     1ae:	0f 90       	pop	r0
     1b0:	0f be       	out	0x3f, r0	; 63
     1b2:	0f 90       	pop	r0
     1b4:	1f 90       	pop	r1
     1b6:	18 95       	reti

000001b8 <can_tx>:
     1b8:	cf 93       	push	r28
     1ba:	df 93       	push	r29
     1bc:	fb 01       	movw	r30, r22
     1be:	20 81       	ld	r18, Z
     1c0:	31 81       	ldd	r19, Z+1	; 0x01
     1c2:	21 15       	cp	r18, r1
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	08 f0       	brcs	.+2      	; 0x1ca <can_tx+0x12>
     1c8:	98 95       	break
     1ca:	92 81       	ldd	r25, Z+2	; 0x02
     1cc:	99 30       	cpi	r25, 0x09	; 9
     1ce:	08 f0       	brcs	.+2      	; 0x1d2 <can_tx+0x1a>
     1d0:	98 95       	break
     1d2:	8f 30       	cpi	r24, 0x0F	; 15
     1d4:	08 f0       	brcs	.+2      	; 0x1d8 <can_tx+0x20>
     1d6:	98 95       	break
     1d8:	82 95       	swap	r24
     1da:	80 7f       	andi	r24, 0xF0	; 240
     1dc:	80 93 ed 00 	sts	0x00ED, r24
     1e0:	80 91 ef 00 	lds	r24, 0x00EF
     1e4:	80 7c       	andi	r24, 0xC0	; 192
     1e6:	21 f0       	breq	.+8      	; 0x1f0 <can_tx+0x38>
     1e8:	80 91 ee 00 	lds	r24, 0x00EE
     1ec:	86 ff       	sbrs	r24, 6
     1ee:	55 c0       	rjmp	.+170    	; 0x29a <can_tx+0xe2>
     1f0:	10 92 ee 00 	sts	0x00EE, r1
     1f4:	10 92 ef 00 	sts	0x00EF, r1
     1f8:	82 81       	ldd	r24, Z+2	; 0x02
     1fa:	8f 3f       	cpi	r24, 0xFF	; 255
     1fc:	61 f1       	breq	.+88     	; 0x256 <can_tx+0x9e>
     1fe:	80 81       	ld	r24, Z
     200:	91 81       	ldd	r25, Z+1	; 0x01
     202:	96 95       	lsr	r25
     204:	87 95       	ror	r24
     206:	96 95       	lsr	r25
     208:	87 95       	ror	r24
     20a:	96 95       	lsr	r25
     20c:	87 95       	ror	r24
     20e:	80 93 f3 00 	sts	0x00F3, r24
     212:	80 81       	ld	r24, Z
     214:	82 95       	swap	r24
     216:	88 0f       	add	r24, r24
     218:	80 7e       	andi	r24, 0xE0	; 224
     21a:	80 93 f2 00 	sts	0x00F2, r24
     21e:	10 92 f1 00 	sts	0x00F1, r1
     222:	10 92 f0 00 	sts	0x00F0, r1
     226:	22 81       	ldd	r18, Z+2	; 0x02
     228:	22 23       	and	r18, r18
     22a:	79 f0       	breq	.+30     	; 0x24a <can_tx+0x92>
     22c:	df 01       	movw	r26, r30
     22e:	13 96       	adiw	r26, 0x03	; 3
     230:	80 e0       	ldi	r24, 0x00	; 0
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	ca ef       	ldi	r28, 0xFA	; 250
     236:	d0 e0       	ldi	r29, 0x00	; 0
     238:	2d 91       	ld	r18, X+
     23a:	28 83       	st	Y, r18
     23c:	01 96       	adiw	r24, 0x01	; 1
     23e:	22 81       	ldd	r18, Z+2	; 0x02
     240:	42 2f       	mov	r20, r18
     242:	50 e0       	ldi	r21, 0x00	; 0
     244:	84 17       	cp	r24, r20
     246:	95 07       	cpc	r25, r21
     248:	b8 f3       	brcs	.-18     	; 0x238 <can_tx+0x80>
     24a:	ef ee       	ldi	r30, 0xEF	; 239
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	80 81       	ld	r24, Z
     250:	28 2b       	or	r18, r24
     252:	20 83       	st	Z, r18
     254:	1b c0       	rjmp	.+54     	; 0x28c <can_tx+0xd4>
     256:	80 81       	ld	r24, Z
     258:	91 81       	ldd	r25, Z+1	; 0x01
     25a:	96 95       	lsr	r25
     25c:	87 95       	ror	r24
     25e:	96 95       	lsr	r25
     260:	87 95       	ror	r24
     262:	96 95       	lsr	r25
     264:	87 95       	ror	r24
     266:	80 93 f3 00 	sts	0x00F3, r24
     26a:	80 81       	ld	r24, Z
     26c:	82 95       	swap	r24
     26e:	88 0f       	add	r24, r24
     270:	80 7e       	andi	r24, 0xE0	; 224
     272:	80 93 f2 00 	sts	0x00F2, r24
     276:	10 92 f1 00 	sts	0x00F1, r1
     27a:	84 e0       	ldi	r24, 0x04	; 4
     27c:	80 93 f0 00 	sts	0x00F0, r24
     280:	af ee       	ldi	r26, 0xEF	; 239
     282:	b0 e0       	ldi	r27, 0x00	; 0
     284:	9c 91       	ld	r25, X
     286:	82 81       	ldd	r24, Z+2	; 0x02
     288:	89 2b       	or	r24, r25
     28a:	8c 93       	st	X, r24
     28c:	ef ee       	ldi	r30, 0xEF	; 239
     28e:	f0 e0       	ldi	r31, 0x00	; 0
     290:	80 81       	ld	r24, Z
     292:	80 64       	ori	r24, 0x40	; 64
     294:	80 83       	st	Z, r24
     296:	81 e0       	ldi	r24, 0x01	; 1
     298:	01 c0       	rjmp	.+2      	; 0x29c <can_tx+0xe4>
     29a:	80 e0       	ldi	r24, 0x00	; 0
     29c:	df 91       	pop	r29
     29e:	cf 91       	pop	r28
     2a0:	08 95       	ret

000002a2 <prepare_rx>:
     2a2:	8f 30       	cpi	r24, 0x0F	; 15
     2a4:	08 f0       	brcs	.+2      	; 0x2a8 <prepare_rx+0x6>
     2a6:	6d c0       	rjmp	.+218    	; 0x382 <prepare_rx+0xe0>
     2a8:	e8 2f       	mov	r30, r24
     2aa:	f0 e0       	ldi	r31, 0x00	; 0
     2ac:	ee 0f       	add	r30, r30
     2ae:	ff 1f       	adc	r31, r31
     2b0:	ea 59       	subi	r30, 0x9A	; 154
     2b2:	fe 4f       	sbci	r31, 0xFE	; 254
     2b4:	31 83       	std	Z+1, r19	; 0x01
     2b6:	20 83       	st	Z, r18
     2b8:	98 2f       	mov	r25, r24
     2ba:	92 95       	swap	r25
     2bc:	90 7f       	andi	r25, 0xF0	; 240
     2be:	90 93 ed 00 	sts	0x00ED, r25
     2c2:	23 2b       	or	r18, r19
     2c4:	d9 f4       	brne	.+54     	; 0x2fc <prepare_rx+0x5a>
     2c6:	10 92 ee 00 	sts	0x00EE, r1
     2ca:	10 92 ef 00 	sts	0x00EF, r1
     2ce:	21 e0       	ldi	r18, 0x01	; 1
     2d0:	30 e0       	ldi	r19, 0x00	; 0
     2d2:	a9 01       	movw	r20, r18
     2d4:	02 c0       	rjmp	.+4      	; 0x2da <prepare_rx+0x38>
     2d6:	44 0f       	add	r20, r20
     2d8:	55 1f       	adc	r21, r21
     2da:	8a 95       	dec	r24
     2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <prepare_rx+0x34>
     2de:	ca 01       	movw	r24, r20
     2e0:	ee ed       	ldi	r30, 0xDE	; 222
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
     2e4:	20 81       	ld	r18, Z
     2e6:	80 95       	com	r24
     2e8:	82 23       	and	r24, r18
     2ea:	80 83       	st	Z, r24
     2ec:	ef ed       	ldi	r30, 0xDF	; 223
     2ee:	f0 e0       	ldi	r31, 0x00	; 0
     2f0:	80 81       	ld	r24, Z
     2f2:	90 95       	com	r25
     2f4:	89 23       	and	r24, r25
     2f6:	80 83       	st	Z, r24
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	08 95       	ret
     2fc:	90 91 ef 00 	lds	r25, 0x00EF
     300:	90 7c       	andi	r25, 0xC0	; 192
     302:	09 f0       	breq	.+2      	; 0x306 <prepare_rx+0x64>
     304:	40 c0       	rjmp	.+128    	; 0x386 <prepare_rx+0xe4>
     306:	10 92 ee 00 	sts	0x00EE, r1
     30a:	ef ee       	ldi	r30, 0xEF	; 239
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	10 82       	st	Z, r1
     310:	10 92 ec 00 	sts	0x00EC, r1
     314:	9b 01       	movw	r18, r22
     316:	36 95       	lsr	r19
     318:	27 95       	ror	r18
     31a:	36 95       	lsr	r19
     31c:	27 95       	ror	r18
     31e:	36 95       	lsr	r19
     320:	27 95       	ror	r18
     322:	20 93 f3 00 	sts	0x00F3, r18
     326:	62 95       	swap	r22
     328:	66 0f       	add	r22, r22
     32a:	60 7e       	andi	r22, 0xE0	; 224
     32c:	60 93 f2 00 	sts	0x00F2, r22
     330:	9a 01       	movw	r18, r20
     332:	36 95       	lsr	r19
     334:	27 95       	ror	r18
     336:	36 95       	lsr	r19
     338:	27 95       	ror	r18
     33a:	36 95       	lsr	r19
     33c:	27 95       	ror	r18
     33e:	20 93 f7 00 	sts	0x00F7, r18
     342:	42 95       	swap	r20
     344:	44 0f       	add	r20, r20
     346:	40 7e       	andi	r20, 0xE0	; 224
     348:	40 93 f6 00 	sts	0x00F6, r20
     34c:	10 92 f5 00 	sts	0x00F5, r1
     350:	10 92 f4 00 	sts	0x00F4, r1
     354:	90 e8       	ldi	r25, 0x80	; 128
     356:	90 83       	st	Z, r25
     358:	21 e0       	ldi	r18, 0x01	; 1
     35a:	30 e0       	ldi	r19, 0x00	; 0
     35c:	a9 01       	movw	r20, r18
     35e:	02 c0       	rjmp	.+4      	; 0x364 <prepare_rx+0xc2>
     360:	44 0f       	add	r20, r20
     362:	55 1f       	adc	r21, r21
     364:	8a 95       	dec	r24
     366:	e2 f7       	brpl	.-8      	; 0x360 <prepare_rx+0xbe>
     368:	ca 01       	movw	r24, r20
     36a:	ee ed       	ldi	r30, 0xDE	; 222
     36c:	f0 e0       	ldi	r31, 0x00	; 0
     36e:	20 81       	ld	r18, Z
     370:	82 2b       	or	r24, r18
     372:	80 83       	st	Z, r24
     374:	ef ed       	ldi	r30, 0xDF	; 223
     376:	f0 e0       	ldi	r31, 0x00	; 0
     378:	80 81       	ld	r24, Z
     37a:	89 2b       	or	r24, r25
     37c:	80 83       	st	Z, r24
     37e:	80 e0       	ldi	r24, 0x00	; 0
     380:	08 95       	ret
     382:	81 e0       	ldi	r24, 0x01	; 1
     384:	08 95       	ret
     386:	81 e0       	ldi	r24, 0x01	; 1
     388:	08 95       	ret

0000038a <can_init>:
     38a:	cf 93       	push	r28
     38c:	df 93       	push	r29
     38e:	86 e0       	ldi	r24, 0x06	; 6
     390:	80 93 e2 00 	sts	0x00E2, r24
     394:	8c e0       	ldi	r24, 0x0C	; 12
     396:	80 93 e3 00 	sts	0x00E3, r24
     39a:	8a e5       	ldi	r24, 0x5A	; 90
     39c:	80 93 e4 00 	sts	0x00E4, r24
     3a0:	80 e0       	ldi	r24, 0x00	; 0
     3a2:	cd ee       	ldi	r28, 0xED	; 237
     3a4:	d0 e0       	ldi	r29, 0x00	; 0
     3a6:	ae ee       	ldi	r26, 0xEE	; 238
     3a8:	b0 e0       	ldi	r27, 0x00	; 0
     3aa:	ef ee       	ldi	r30, 0xEF	; 239
     3ac:	f0 e0       	ldi	r31, 0x00	; 0
     3ae:	98 2f       	mov	r25, r24
     3b0:	92 95       	swap	r25
     3b2:	90 7f       	andi	r25, 0xF0	; 240
     3b4:	98 83       	st	Y, r25
     3b6:	1c 92       	st	X, r1
     3b8:	10 82       	st	Z, r1
     3ba:	8f 5f       	subi	r24, 0xFF	; 255
     3bc:	8f 30       	cpi	r24, 0x0F	; 15
     3be:	b9 f7       	brne	.-18     	; 0x3ae <can_init+0x24>
     3c0:	e8 ed       	ldi	r30, 0xD8	; 216
     3c2:	f0 e0       	ldi	r31, 0x00	; 0
     3c4:	80 81       	ld	r24, Z
     3c6:	82 60       	ori	r24, 0x02	; 2
     3c8:	80 83       	st	Z, r24
     3ca:	80 ea       	ldi	r24, 0xA0	; 160
     3cc:	80 93 db 00 	sts	0x00DB, r24
     3d0:	df 91       	pop	r29
     3d2:	cf 91       	pop	r28
     3d4:	08 95       	ret

000003d6 <can_packet_send>:
	*/
}

BOOL can_packet_send(char mob, CAN_packet *packet) {
	/* Clear global interrupts */
	cli();
     3d6:	f8 94       	cli
	BOOL result = can_tx(mob, packet);
     3d8:	ef de       	rcall	.-546    	; 0x1b8 <can_tx>
	/* Set global interrupts */
	sei();
     3da:	78 94       	sei
	return result;
}
     3dc:	08 95       	ret

000003de <fm_voltage_to_DAC>:
	}
}
// Last years function
int fm_voltage_to_DAC(float voltage) {
	int dac_value = 0;
	dac_value = 255 - (255*voltage/24);
     3de:	20 e0       	ldi	r18, 0x00	; 0
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	4f e7       	ldi	r20, 0x7F	; 127
     3e4:	53 e4       	ldi	r21, 0x43	; 67
     3e6:	cf d3       	rcall	.+1950   	; 0xb86 <__mulsf3>
     3e8:	20 e0       	ldi	r18, 0x00	; 0
     3ea:	30 e0       	ldi	r19, 0x00	; 0
     3ec:	40 ec       	ldi	r20, 0xC0	; 192
     3ee:	51 e4       	ldi	r21, 0x41	; 65
     3f0:	b8 d2       	rcall	.+1392   	; 0x962 <__divsf3>
     3f2:	9b 01       	movw	r18, r22
     3f4:	ac 01       	movw	r20, r24
     3f6:	60 e0       	ldi	r22, 0x00	; 0
     3f8:	70 e0       	ldi	r23, 0x00	; 0
     3fa:	8f e7       	ldi	r24, 0x7F	; 127
     3fc:	93 e4       	ldi	r25, 0x43	; 67
     3fe:	48 d2       	rcall	.+1168   	; 0x890 <__subsf3>
     400:	18 d3       	rcall	.+1584   	; 0xa32 <__fixsfsi>
		dac_value = 70;
	else if (voltage == 6)
		dac_value = 220;*/
	
	return dac_value;
}
     402:	cb 01       	movw	r24, r22
     404:	08 95       	ret

00000406 <fm_horn>:

void fm_fans_init( void) {
	fm_fans(0);
}

void fm_horn(float voltage) {
     406:	cf 92       	push	r12
     408:	df 92       	push	r13
     40a:	ef 92       	push	r14
     40c:	ff 92       	push	r15
     40e:	6b 01       	movw	r12, r22
     410:	7c 01       	movw	r14, r24
	if (voltage > 12) {
     412:	20 e0       	ldi	r18, 0x00	; 0
     414:	30 e0       	ldi	r19, 0x00	; 0
     416:	40 e4       	ldi	r20, 0x40	; 64
     418:	51 e4       	ldi	r21, 0x41	; 65
     41a:	b1 d3       	rcall	.+1890   	; 0xb7e <__gesf2>
     41c:	18 16       	cp	r1, r24
     41e:	5c f0       	brlt	.+22     	; 0x436 <fm_horn+0x30>
		voltage = 12;
		//set_bit(PORTD, PD0);
	}
	if (voltage < 3) {
     420:	20 e0       	ldi	r18, 0x00	; 0
     422:	30 e0       	ldi	r19, 0x00	; 0
     424:	40 e4       	ldi	r20, 0x40	; 64
     426:	50 e4       	ldi	r21, 0x40	; 64
     428:	c7 01       	movw	r24, r14
     42a:	b6 01       	movw	r22, r12
     42c:	96 d2       	rcall	.+1324   	; 0x95a <__cmpsf2>
     42e:	88 23       	and	r24, r24
     430:	54 f4       	brge	.+20     	; 0x446 <fm_horn+0x40>
		/* Turn off the horn */
		clear_bit(PORTD, PD0);
     432:	58 98       	cbi	0x0b, 0	; 11
     434:	11 c0       	rjmp	.+34     	; 0x458 <fm_horn+0x52>
	fm_fans(0);
}

void fm_horn(float voltage) {
	if (voltage > 12) {
		voltage = 12;
     436:	0f 2e       	mov	r0, r31
     438:	c1 2c       	mov	r12, r1
     43a:	d1 2c       	mov	r13, r1
     43c:	f0 e4       	ldi	r31, 0x40	; 64
     43e:	ef 2e       	mov	r14, r31
     440:	f1 e4       	ldi	r31, 0x41	; 65
     442:	ff 2e       	mov	r15, r31
     444:	f0 2d       	mov	r31, r0
	}
	if (voltage < 3) {
		/* Turn off the horn */
		clear_bit(PORTD, PD0);
	} else {
		DAC_SELECT;
     446:	28 98       	cbi	0x05, 0	; 5
		spi_master_tx(OUT_E);
     448:	86 e2       	ldi	r24, 0x26	; 38
     44a:	0d d1       	rcall	.+538    	; 0x666 <spi_master_tx>
		spi_master_tx(fm_voltage_to_DAC(voltage));
     44c:	c7 01       	movw	r24, r14
     44e:	b6 01       	movw	r22, r12
     450:	c6 df       	rcall	.-116    	; 0x3de <fm_voltage_to_DAC>
     452:	09 d1       	rcall	.+530    	; 0x666 <spi_master_tx>
		DAC_DESELECT;
     454:	28 9a       	sbi	0x05, 0	; 5
		
		set_bit(PORTD, PD0);
     456:	58 9a       	sbi	0x0b, 0	; 11
	}
}
     458:	ff 90       	pop	r15
     45a:	ef 90       	pop	r14
     45c:	df 90       	pop	r13
     45e:	cf 90       	pop	r12
     460:	08 95       	ret

00000462 <fm_horn_init>:
	fm_fans_init();
	spi_init_master();
}

void fm_horn_init( void) {
	set_bit(DDRD, DDD0);
     462:	50 9a       	sbi	0x0a, 0	; 10
	set_bit(DDRE, DDE3);
     464:	6b 9a       	sbi	0x0d, 3	; 13
	set_bit(DDRE, DDE4);
     466:	6c 9a       	sbi	0x0d, 4	; 13
	/* Brake pedal with pull up*/
	clear_bit(DDRE, DDE5);
     468:	6d 98       	cbi	0x0d, 5	; 13
	//clear_bit(PORTE, PE5);
	fm_horn(0);
     46a:	60 e0       	ldi	r22, 0x00	; 0
     46c:	70 e0       	ldi	r23, 0x00	; 0
     46e:	cb 01       	movw	r24, r22
     470:	ca cf       	rjmp	.-108    	; 0x406 <fm_horn>
     472:	08 95       	ret

00000474 <fm_wiper>:
		
		set_bit(PORTD, PD0);
	}
}

void fm_wiper(float voltage) {
     474:	cf 92       	push	r12
     476:	df 92       	push	r13
     478:	ef 92       	push	r14
     47a:	ff 92       	push	r15
     47c:	6b 01       	movw	r12, r22
     47e:	7c 01       	movw	r14, r24
	if(voltage > 6) {
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	30 e0       	ldi	r19, 0x00	; 0
     484:	40 ec       	ldi	r20, 0xC0	; 192
     486:	50 e4       	ldi	r21, 0x40	; 64
     488:	7a d3       	rcall	.+1780   	; 0xb7e <__gesf2>
     48a:	18 16       	cp	r1, r24
     48c:	5c f0       	brlt	.+22     	; 0x4a4 <fm_wiper+0x30>
		voltage = 7.4;
	}
	if (voltage < 2) {
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	30 e0       	ldi	r19, 0x00	; 0
     492:	40 e0       	ldi	r20, 0x00	; 0
     494:	50 e4       	ldi	r21, 0x40	; 64
     496:	c7 01       	movw	r24, r14
     498:	b6 01       	movw	r22, r12
     49a:	5f d2       	rcall	.+1214   	; 0x95a <__cmpsf2>
     49c:	88 23       	and	r24, r24
     49e:	64 f4       	brge	.+24     	; 0x4b8 <fm_wiper+0x44>
	/* Turn off the wipers */
		clear_bit(PORTE, PE4);
     4a0:	74 98       	cbi	0x0e, 4	; 14
     4a2:	13 c0       	rjmp	.+38     	; 0x4ca <fm_wiper+0x56>
	}
}

void fm_wiper(float voltage) {
	if(voltage > 6) {
		voltage = 7.4;
     4a4:	0f 2e       	mov	r0, r31
     4a6:	fd ec       	ldi	r31, 0xCD	; 205
     4a8:	cf 2e       	mov	r12, r31
     4aa:	fc ec       	ldi	r31, 0xCC	; 204
     4ac:	df 2e       	mov	r13, r31
     4ae:	fc ee       	ldi	r31, 0xEC	; 236
     4b0:	ef 2e       	mov	r14, r31
     4b2:	f0 e4       	ldi	r31, 0x40	; 64
     4b4:	ff 2e       	mov	r15, r31
     4b6:	f0 2d       	mov	r31, r0
	}
	if (voltage < 2) {
	/* Turn off the wipers */
		clear_bit(PORTE, PE4);
	} else {
		DAC_SELECT;
     4b8:	28 98       	cbi	0x05, 0	; 5
		spi_master_tx(OUT_F);
     4ba:	8e e2       	ldi	r24, 0x2E	; 46
     4bc:	d4 d0       	rcall	.+424    	; 0x666 <spi_master_tx>
		//printf("\r\nfm_voltage_to_ADC = %d", (int)fm_voltage_to_DAC(voltage));
		spi_master_tx(fm_voltage_to_DAC(voltage));
     4be:	c7 01       	movw	r24, r14
     4c0:	b6 01       	movw	r22, r12
     4c2:	8d df       	rcall	.-230    	; 0x3de <fm_voltage_to_DAC>
     4c4:	d0 d0       	rcall	.+416    	; 0x666 <spi_master_tx>
		//spi_master_tx(255);
		DAC_DESELECT;
     4c6:	28 9a       	sbi	0x05, 0	; 5
		
		set_bit(PORTE, PE4);
     4c8:	74 9a       	sbi	0x0e, 4	; 14
	}
}
     4ca:	ff 90       	pop	r15
     4cc:	ef 90       	pop	r14
     4ce:	df 90       	pop	r13
     4d0:	cf 90       	pop	r12
     4d2:	08 95       	ret

000004d4 <fm_wiper_init>:
	fm_horn(0);
}

void fm_wiper_init( void) {
	/* Set PB4 as output */
	set_bit(DDRB, DDB4);
     4d4:	24 9a       	sbi	0x04, 4	; 4
	fm_wiper(0);
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	cb 01       	movw	r24, r22
     4dc:	cb cf       	rjmp	.-106    	; 0x474 <fm_wiper>
     4de:	08 95       	ret

000004e0 <fm_fans>:
		
		set_bit(PORTE, PE4);
	}
}

void fm_fans(float voltage) {
     4e0:	cf 92       	push	r12
     4e2:	df 92       	push	r13
     4e4:	ef 92       	push	r14
     4e6:	ff 92       	push	r15
     4e8:	6b 01       	movw	r12, r22
     4ea:	7c 01       	movw	r14, r24
	if(voltage > 12)
     4ec:	20 e0       	ldi	r18, 0x00	; 0
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	40 e4       	ldi	r20, 0x40	; 64
     4f2:	51 e4       	ldi	r21, 0x41	; 65
     4f4:	44 d3       	rcall	.+1672   	; 0xb7e <__gesf2>
     4f6:	18 16       	cp	r1, r24
     4f8:	5c f0       	brlt	.+22     	; 0x510 <fm_fans+0x30>
		voltage = 12;
	if (voltage < 3)
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	30 e0       	ldi	r19, 0x00	; 0
     4fe:	40 e4       	ldi	r20, 0x40	; 64
     500:	50 e4       	ldi	r21, 0x40	; 64
     502:	c7 01       	movw	r24, r14
     504:	b6 01       	movw	r22, r12
     506:	29 d2       	rcall	.+1106   	; 0x95a <__cmpsf2>
     508:	88 23       	and	r24, r24
     50a:	54 f4       	brge	.+20     	; 0x520 <fm_fans+0x40>
	/* Turn off the fans */
		clear_bit(PORTE, PE3);
     50c:	73 98       	cbi	0x0e, 3	; 14
     50e:	11 c0       	rjmp	.+34     	; 0x532 <fm_fans+0x52>
	}
}

void fm_fans(float voltage) {
	if(voltage > 12)
		voltage = 12;
     510:	0f 2e       	mov	r0, r31
     512:	c1 2c       	mov	r12, r1
     514:	d1 2c       	mov	r13, r1
     516:	f0 e4       	ldi	r31, 0x40	; 64
     518:	ef 2e       	mov	r14, r31
     51a:	f1 e4       	ldi	r31, 0x41	; 65
     51c:	ff 2e       	mov	r15, r31
     51e:	f0 2d       	mov	r31, r0
	if (voltage < 3)
	/* Turn off the fans */
		clear_bit(PORTE, PE3);
	else {
		DAC_SELECT;
     520:	28 98       	cbi	0x05, 0	; 5
		spi_master_tx(OUT_G);
     522:	86 e3       	ldi	r24, 0x36	; 54
     524:	a0 d0       	rcall	.+320    	; 0x666 <spi_master_tx>
		spi_master_tx(fm_voltage_to_DAC(voltage));
     526:	c7 01       	movw	r24, r14
     528:	b6 01       	movw	r22, r12
     52a:	59 df       	rcall	.-334    	; 0x3de <fm_voltage_to_DAC>
     52c:	9c d0       	rcall	.+312    	; 0x666 <spi_master_tx>
		DAC_DESELECT;
     52e:	28 9a       	sbi	0x05, 0	; 5
		
		set_bit(PORTE, PE3);
     530:	73 9a       	sbi	0x0e, 3	; 14
	}
}
     532:	ff 90       	pop	r15
     534:	ef 90       	pop	r14
     536:	df 90       	pop	r13
     538:	cf 90       	pop	r12
     53a:	08 95       	ret

0000053c <fm_fans_init>:
	set_bit(DDRB, DDB4);
	fm_wiper(0);
}

void fm_fans_init( void) {
	fm_fans(0);
     53c:	60 e0       	ldi	r22, 0x00	; 0
     53e:	70 e0       	ldi	r23, 0x00	; 0
     540:	cb 01       	movw	r24, r22
     542:	ce cf       	rjmp	.-100    	; 0x4e0 <fm_fans>
     544:	08 95       	ret

00000546 <fm_init>:
BOOL HORN_ON =	FALSE;
BOOL WIPERS_ON = FALSE;
BOOL FANS_ON = FALSE;

void fm_init( void) {
	fm_horn_init();
     546:	8d df       	rcall	.-230    	; 0x462 <fm_horn_init>
	fm_wiper_init();
     548:	c5 df       	rcall	.-118    	; 0x4d4 <fm_wiper_init>
	fm_fans_init();
     54a:	f8 df       	rcall	.-16     	; 0x53c <fm_fans_init>
	spi_init_master();
     54c:	85 c0       	rjmp	.+266    	; 0x658 <spi_init_master>
     54e:	08 95       	ret

00000550 <fm_brake>:
	
	return dac_value;
}

void fm_brake( CAN_packet* p) {
	p->data[0] = 0;
     550:	fc 01       	movw	r30, r24
     552:	13 82       	std	Z+3, r1	; 0x03
	if(test_bit(PINE, PINE5))
     554:	65 9b       	sbis	0x0c, 5	; 12
     556:	02 c0       	rjmp	.+4      	; 0x55c <fm_brake+0xc>
		p->data[0] = 1;
     558:	21 e0       	ldi	r18, 0x01	; 1
     55a:	23 83       	std	Z+3, r18	; 0x03
     55c:	08 95       	ret

0000055e <fm_handler>:
}

void fm_handler(CAN_packet* p, unsigned char mob) {
     55e:	cf 93       	push	r28
     560:	df 93       	push	r29
     562:	ec 01       	movw	r28, r24
	(void)mob;

  	if(p->data[0] & (1<<4)) {
     564:	8b 81       	ldd	r24, Y+3	; 0x03
     566:	84 ff       	sbrs	r24, 4
     568:	0b c0       	rjmp	.+22     	; 0x580 <fm_handler+0x22>
 		HORN_ON = TRUE;
     56a:	81 e0       	ldi	r24, 0x01	; 1
     56c:	80 93 62 01 	sts	0x0162, r24
		 printf("\r\nTurn on horn");
     570:	87 e0       	ldi	r24, 0x07	; 7
     572:	91 e0       	ldi	r25, 0x01	; 1
     574:	9f 93       	push	r25
     576:	8f 93       	push	r24
     578:	c0 d3       	rcall	.+1920   	; 0xcfa <printf>
     57a:	0f 90       	pop	r0
     57c:	0f 90       	pop	r0
     57e:	02 c0       	rjmp	.+4      	; 0x584 <fm_handler+0x26>
	}
  	else
 		HORN_ON = FALSE;
     580:	10 92 62 01 	sts	0x0162, r1
		
	if (p->data[0] & (1<<5)) {
     584:	8b 81       	ldd	r24, Y+3	; 0x03
     586:	85 ff       	sbrs	r24, 5
     588:	0b c0       	rjmp	.+22     	; 0x5a0 <fm_handler+0x42>
		WIPERS_ON = TRUE;
     58a:	81 e0       	ldi	r24, 0x01	; 1
     58c:	80 93 61 01 	sts	0x0161, r24
		printf("\r\nTurn on wipers");
     590:	86 e1       	ldi	r24, 0x16	; 22
     592:	91 e0       	ldi	r25, 0x01	; 1
     594:	9f 93       	push	r25
     596:	8f 93       	push	r24
     598:	b0 d3       	rcall	.+1888   	; 0xcfa <printf>
     59a:	0f 90       	pop	r0
     59c:	0f 90       	pop	r0
     59e:	02 c0       	rjmp	.+4      	; 0x5a4 <fm_handler+0x46>
	}
	else 
		WIPERS_ON = FALSE;
     5a0:	10 92 61 01 	sts	0x0161, r1
	
	// TODO: implement fans handler
	// WHERE DOES INPUT COME FROM?
}
     5a4:	df 91       	pop	r29
     5a6:	cf 91       	pop	r28
     5a8:	08 95       	ret

000005aa <inits>:
#include "front_module.h"
#include "timer0.h"


void inits( void) {
	USART_init(MYUBRR, true);
     5aa:	61 e0       	ldi	r22, 0x01	; 1
     5ac:	83 e3       	ldi	r24, 0x33	; 51
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	58 d1       	rcall	.+688    	; 0x862 <USART_init>
	can_init();
     5b2:	eb de       	rcall	.-554    	; 0x38a <can_init>
	fm_init();
     5b4:	c8 df       	rcall	.-112    	; 0x546 <fm_init>
	timer0_init();
     5b6:	5c d0       	rcall	.+184    	; 0x670 <timer0_init>
	timer1_init();
     5b8:	a3 d0       	rcall	.+326    	; 0x700 <timer1_init>

	printf("\r\nInitialization done");
     5ba:	87 e2       	ldi	r24, 0x27	; 39
     5bc:	91 e0       	ldi	r25, 0x01	; 1
     5be:	9f 93       	push	r25
     5c0:	8f 93       	push	r24
     5c2:	9b d3       	rcall	.+1846   	; 0xcfa <printf>
	set_bit(DDRB, PB6);
     5c4:	26 9a       	sbi	0x04, 6	; 4
	sei();
     5c6:	78 94       	sei
     5c8:	0f 90       	pop	r0
     5ca:	0f 90       	pop	r0
     5cc:	08 95       	ret

000005ce <main>:
}

int main(void) {
     5ce:	cf 93       	push	r28
     5d0:	df 93       	push	r29
     5d2:	cd b7       	in	r28, 0x3d	; 61
     5d4:	de b7       	in	r29, 0x3e	; 62
     5d6:	66 97       	sbiw	r28, 0x16	; 22
     5d8:	0f b6       	in	r0, 0x3f	; 63
     5da:	f8 94       	cli
     5dc:	de bf       	out	0x3e, r29	; 62
     5de:	0f be       	out	0x3f, r0	; 63
     5e0:	cd bf       	out	0x3d, r28	; 61
	int different;
	BOOL ret;
	CAN_packet msg_old;
	CAN_packet msg_new;
	/* Initialize CAN packets */
	msg_old.id = ID_brakes;
     5e2:	23 e0       	ldi	r18, 0x03	; 3
     5e4:	30 e0       	ldi	r19, 0x00	; 0
     5e6:	3a 83       	std	Y+2, r19	; 0x02
     5e8:	29 83       	std	Y+1, r18	; 0x01
	msg_old.length = 1;
     5ea:	81 e0       	ldi	r24, 0x01	; 1
     5ec:	8b 83       	std	Y+3, r24	; 0x03
	msg_new.id = ID_brakes;
     5ee:	3d 87       	std	Y+13, r19	; 0x0d
     5f0:	2c 87       	std	Y+12, r18	; 0x0c
	msg_new.length = 1;
     5f2:	8e 87       	std	Y+14, r24	; 0x0e

	inits();
     5f4:	da df       	rcall	.-76     	; 0x5aa <inits>
	prepare_rx(1, ID_steeringWheel, MASK_FRONT_MODULE, fm_handler);
     5f6:	2f ea       	ldi	r18, 0xAF	; 175
     5f8:	32 e0       	ldi	r19, 0x02	; 2
     5fa:	44 e0       	ldi	r20, 0x04	; 4
     5fc:	50 e0       	ldi	r21, 0x00	; 0
     5fe:	65 e0       	ldi	r22, 0x05	; 5
     600:	70 e0       	ldi	r23, 0x00	; 0
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	4e de       	rcall	.-868    	; 0x2a2 <prepare_rx>
	
	
	fm_brake(&msg_old);
     606:	ce 01       	movw	r24, r28
     608:	01 96       	adiw	r24, 0x01	; 1
     60a:	a2 df       	rcall	.-188    	; 0x550 <fm_brake>
	fm_brake(&msg_new);
     60c:	ce 01       	movw	r24, r28
     60e:	0c 96       	adiw	r24, 0x0c	; 12
     610:	9f df       	rcall	.-194    	; 0x550 <fm_brake>
		different = memcmp(msg_old.data, msg_new.data, 8);
		
		if(different){
			//printf("\r\n Brakes detected");
			ret = can_packet_send(0, &msg_new);
			msg_old = msg_new;
     612:	1b e0       	ldi	r17, 0x0B	; 11
	
	fm_brake(&msg_old);
	fm_brake(&msg_new);
    for(;;) {
		//_delay_ms(50);
		fm_brake(&msg_new);
     614:	ce 01       	movw	r24, r28
     616:	0c 96       	adiw	r24, 0x0c	; 12
     618:	9b df       	rcall	.-202    	; 0x550 <fm_brake>
		//printf("\r\nMsg_new.data[0] - %u", msg_new.data[0]);
		different = memcmp(msg_old.data, msg_new.data, 8);
     61a:	48 e0       	ldi	r20, 0x08	; 8
     61c:	50 e0       	ldi	r21, 0x00	; 0
     61e:	be 01       	movw	r22, r28
     620:	61 5f       	subi	r22, 0xF1	; 241
     622:	7f 4f       	sbci	r23, 0xFF	; 255
     624:	ce 01       	movw	r24, r28
     626:	04 96       	adiw	r24, 0x04	; 4
     628:	11 d3       	rcall	.+1570   	; 0xc4c <memcmp>
		
		if(different){
     62a:	89 2b       	or	r24, r25
     62c:	91 f0       	breq	.+36     	; 0x652 <main+0x84>
			//printf("\r\n Brakes detected");
			ret = can_packet_send(0, &msg_new);
     62e:	be 01       	movw	r22, r28
     630:	64 5f       	subi	r22, 0xF4	; 244
     632:	7f 4f       	sbci	r23, 0xFF	; 255
     634:	80 e0       	ldi	r24, 0x00	; 0
     636:	cf de       	rcall	.-610    	; 0x3d6 <can_packet_send>
			msg_old = msg_new;
     638:	fe 01       	movw	r30, r28
     63a:	3c 96       	adiw	r30, 0x0c	; 12
     63c:	de 01       	movw	r26, r28
     63e:	11 96       	adiw	r26, 0x01	; 1
     640:	91 2f       	mov	r25, r17
     642:	01 90       	ld	r0, Z+
     644:	0d 92       	st	X+, r0
     646:	9a 95       	dec	r25
     648:	e1 f7       	brne	.-8      	; 0x642 <main+0x74>
		} else
			ret = FALSE;
		if (ret)
     64a:	88 23       	and	r24, r24
     64c:	11 f0       	breq	.+4      	; 0x652 <main+0x84>
			set_bit(DDRB, PB7);
     64e:	27 9a       	sbi	0x04, 7	; 4
     650:	01 c0       	rjmp	.+2      	; 0x654 <main+0x86>
		else
			clear_bit(DDRB, PB7);
     652:	27 98       	cbi	0x04, 7	; 4
		
		asm("sleep");;
     654:	88 95       	sleep
	}
     656:	de cf       	rjmp	.-68     	; 0x614 <main+0x46>

00000658 <spi_init_master>:

void spi_init_slave( void) {
	/* Set MISO output, all others input */
	DDRB = (1<<DDB3);
	/* Enable SPI */
	SPCR = (1<<SPE);
     658:	84 b1       	in	r24, 0x04	; 4
     65a:	8f 60       	ori	r24, 0x0F	; 15
     65c:	84 b9       	out	0x04, r24	; 4
     65e:	81 e5       	ldi	r24, 0x51	; 81
     660:	8c bd       	out	0x2c, r24	; 44
     662:	28 9a       	sbi	0x05, 0	; 5
     664:	08 95       	ret

00000666 <spi_master_tx>:
}

void spi_master_tx(unsigned char c) {
	/* Start transmission */
	SPDR = c;
     666:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(test_bit(SPSR, SPIF)));
     668:	0d b4       	in	r0, 0x2d	; 45
     66a:	07 fe       	sbrs	r0, 7
     66c:	fd cf       	rjmp	.-6      	; 0x668 <spi_master_tx+0x2>
}
     66e:	08 95       	ret

00000670 <timer0_init>:

#include "timer0.h"

void timer0_init( void) {
	/* clk/64 */
	set_bit(TCCR0A, CS01);
     670:	84 b5       	in	r24, 0x24	; 36
     672:	82 60       	ori	r24, 0x02	; 2
     674:	84 bd       	out	0x24, r24	; 36
	set_bit(TCCR0A, CS00);
     676:	84 b5       	in	r24, 0x24	; 36
     678:	81 60       	ori	r24, 0x01	; 1
     67a:	84 bd       	out	0x24, r24	; 36
	/* Enable timer overflow */
	set_bit(TIMSK0, TOIE0);
     67c:	ee e6       	ldi	r30, 0x6E	; 110
     67e:	f0 e0       	ldi	r31, 0x00	; 0
     680:	80 81       	ld	r24, Z
     682:	81 60       	ori	r24, 0x01	; 1
     684:	80 83       	st	Z, r24
	sei();	
     686:	78 94       	sei
     688:	08 95       	ret

0000068a <__vector_17>:
}

ISR(TIMER0_OVF_vect) {
     68a:	1f 92       	push	r1
     68c:	0f 92       	push	r0
     68e:	0f b6       	in	r0, 0x3f	; 63
     690:	0f 92       	push	r0
     692:	11 24       	eor	r1, r1
     694:	0b b6       	in	r0, 0x3b	; 59
     696:	0f 92       	push	r0
     698:	2f 93       	push	r18
     69a:	3f 93       	push	r19
     69c:	4f 93       	push	r20
     69e:	5f 93       	push	r21
     6a0:	6f 93       	push	r22
     6a2:	7f 93       	push	r23
     6a4:	8f 93       	push	r24
     6a6:	9f 93       	push	r25
     6a8:	af 93       	push	r26
     6aa:	bf 93       	push	r27
     6ac:	ef 93       	push	r30
     6ae:	ff 93       	push	r31
	cli();
     6b0:	f8 94       	cli
	if(HORN_ON) {		
     6b2:	80 91 62 01 	lds	r24, 0x0162
     6b6:	88 23       	and	r24, r24
     6b8:	59 f0       	breq	.+22     	; 0x6d0 <__vector_17+0x46>
		fm_horn(12.0);
     6ba:	60 e0       	ldi	r22, 0x00	; 0
     6bc:	70 e0       	ldi	r23, 0x00	; 0
     6be:	80 e4       	ldi	r24, 0x40	; 64
     6c0:	91 e4       	ldi	r25, 0x41	; 65
     6c2:	a1 de       	rcall	.-702    	; 0x406 <fm_horn>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6c4:	87 e8       	ldi	r24, 0x87	; 135
     6c6:	93 e1       	ldi	r25, 0x13	; 19
     6c8:	01 97       	sbiw	r24, 0x01	; 1
     6ca:	f1 f7       	brne	.-4      	; 0x6c8 <__vector_17+0x3e>
     6cc:	00 c0       	rjmp	.+0      	; 0x6ce <__vector_17+0x44>
     6ce:	00 00       	nop
		//_delay_us(1000);
		_delay_us(2500); //USE THIS VALUE -> high sound
	}
	fm_horn(0);
     6d0:	60 e0       	ldi	r22, 0x00	; 0
     6d2:	70 e0       	ldi	r23, 0x00	; 0
     6d4:	cb 01       	movw	r24, r22
     6d6:	97 de       	rcall	.-722    	; 0x406 <fm_horn>
	sei();	
     6d8:	78 94       	sei
     6da:	ff 91       	pop	r31
     6dc:	ef 91       	pop	r30
     6de:	bf 91       	pop	r27
     6e0:	af 91       	pop	r26
     6e2:	9f 91       	pop	r25
     6e4:	8f 91       	pop	r24
     6e6:	7f 91       	pop	r23
     6e8:	6f 91       	pop	r22
     6ea:	5f 91       	pop	r21
     6ec:	4f 91       	pop	r20
     6ee:	3f 91       	pop	r19
     6f0:	2f 91       	pop	r18
     6f2:	0f 90       	pop	r0
     6f4:	0b be       	out	0x3b, r0	; 59
     6f6:	0f 90       	pop	r0
     6f8:	0f be       	out	0x3f, r0	; 63
     6fa:	0f 90       	pop	r0
     6fc:	1f 90       	pop	r1
     6fe:	18 95       	reti

00000700 <timer1_init>:
 */ 

#include "timer1.h"

void timer1_init( void) {
	set_bit(TCCR1A, COM1B1);
     700:	e0 e8       	ldi	r30, 0x80	; 128
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	80 81       	ld	r24, Z
     706:	80 62       	ori	r24, 0x20	; 32
     708:	80 83       	st	Z, r24
	set_bit(TCCR1A, COM1B0);
     70a:	80 81       	ld	r24, Z
     70c:	80 61       	ori	r24, 0x10	; 16
     70e:	80 83       	st	Z, r24
	set_bit(TCCR1A, WGM11);
     710:	80 81       	ld	r24, Z
     712:	82 60       	ori	r24, 0x02	; 2
     714:	80 83       	st	Z, r24
	set_bit(TCCR1A, WGM10);
     716:	80 81       	ld	r24, Z
     718:	81 60       	ori	r24, 0x01	; 1
     71a:	80 83       	st	Z, r24
	set_bit(TCCR1B, WGM13);
     71c:	e1 e8       	ldi	r30, 0x81	; 129
     71e:	f0 e0       	ldi	r31, 0x00	; 0
     720:	80 81       	ld	r24, Z
     722:	80 61       	ori	r24, 0x10	; 16
     724:	80 83       	st	Z, r24
	set_bit(TCCR1B, WGM12);
     726:	80 81       	ld	r24, Z
     728:	88 60       	ori	r24, 0x08	; 8
     72a:	80 83       	st	Z, r24
	
	uint16_t max_cnt = 19999;
	uint16_t duty = max_cnt - 1024;
	OCR1A = max_cnt;
     72c:	8f e1       	ldi	r24, 0x1F	; 31
     72e:	9e e4       	ldi	r25, 0x4E	; 78
     730:	90 93 89 00 	sts	0x0089, r25
     734:	80 93 88 00 	sts	0x0088, r24
	OCR1B = duty;
     738:	8f e1       	ldi	r24, 0x1F	; 31
     73a:	9a e4       	ldi	r25, 0x4A	; 74
     73c:	90 93 8b 00 	sts	0x008B, r25
     740:	80 93 8a 00 	sts	0x008A, r24
	
	/* Enable output compare B match interrupt p. 142-3*/
	set_bit(TIMSK1, OCIE1B);
     744:	af e6       	ldi	r26, 0x6F	; 111
     746:	b0 e0       	ldi	r27, 0x00	; 0
     748:	8c 91       	ld	r24, X
     74a:	84 60       	ori	r24, 0x04	; 4
     74c:	8c 93       	st	X, r24
	
	set_bit(DDRB, DDB5);
     74e:	25 9a       	sbi	0x04, 5	; 4
	set_bit(TCCR1B, CS11);
     750:	80 81       	ld	r24, Z
     752:	82 60       	ori	r24, 0x02	; 2
     754:	80 83       	st	Z, r24
     756:	08 95       	ret

00000758 <__vector_13>:
}

ISR(TIMER1_COMPB_vect) {
     758:	1f 92       	push	r1
     75a:	0f 92       	push	r0
     75c:	0f b6       	in	r0, 0x3f	; 63
     75e:	0f 92       	push	r0
     760:	11 24       	eor	r1, r1
     762:	0b b6       	in	r0, 0x3b	; 59
     764:	0f 92       	push	r0
     766:	2f 93       	push	r18
     768:	3f 93       	push	r19
     76a:	4f 93       	push	r20
     76c:	5f 93       	push	r21
     76e:	6f 93       	push	r22
     770:	7f 93       	push	r23
     772:	8f 93       	push	r24
     774:	9f 93       	push	r25
     776:	af 93       	push	r26
     778:	bf 93       	push	r27
     77a:	ef 93       	push	r30
     77c:	ff 93       	push	r31
	printf("\r\nOUTPUT COMPARE MATCH B");
     77e:	8d e3       	ldi	r24, 0x3D	; 61
     780:	91 e0       	ldi	r25, 0x01	; 1
     782:	9f 93       	push	r25
     784:	8f 93       	push	r24
     786:	b9 d2       	rcall	.+1394   	; 0xcfa <printf>
     788:	0f 90       	pop	r0
     78a:	0f 90       	pop	r0
     78c:	ff 91       	pop	r31
     78e:	ef 91       	pop	r30
     790:	bf 91       	pop	r27
     792:	af 91       	pop	r26
     794:	9f 91       	pop	r25
     796:	8f 91       	pop	r24
     798:	7f 91       	pop	r23
     79a:	6f 91       	pop	r22
     79c:	5f 91       	pop	r21
     79e:	4f 91       	pop	r20
     7a0:	3f 91       	pop	r19
     7a2:	2f 91       	pop	r18
     7a4:	0f 90       	pop	r0
     7a6:	0b be       	out	0x3b, r0	; 59
     7a8:	0f 90       	pop	r0
     7aa:	0f be       	out	0x3f, r0	; 63
     7ac:	0f 90       	pop	r0
     7ae:	1f 90       	pop	r1
     7b0:	18 95       	reti

000007b2 <__vector_10>:
	/* Enable timer overflow */
	set_bit(TIMSK2, TOIE2);
	sei();	
}

ISR(TIMER2_OVF_vect) {
     7b2:	1f 92       	push	r1
     7b4:	0f 92       	push	r0
     7b6:	0f b6       	in	r0, 0x3f	; 63
     7b8:	0f 92       	push	r0
     7ba:	11 24       	eor	r1, r1
     7bc:	0b b6       	in	r0, 0x3b	; 59
     7be:	0f 92       	push	r0
     7c0:	2f 93       	push	r18
     7c2:	3f 93       	push	r19
     7c4:	4f 93       	push	r20
     7c6:	5f 93       	push	r21
     7c8:	6f 93       	push	r22
     7ca:	7f 93       	push	r23
     7cc:	8f 93       	push	r24
     7ce:	9f 93       	push	r25
     7d0:	af 93       	push	r26
     7d2:	bf 93       	push	r27
     7d4:	ef 93       	push	r30
     7d6:	ff 93       	push	r31
	sei();
     7d8:	78 94       	sei
	if(WIPERS_ON) 
     7da:	80 91 61 01 	lds	r24, 0x0161
     7de:	88 23       	and	r24, r24
     7e0:	29 f0       	breq	.+10     	; 0x7ec <__vector_10+0x3a>
		fm_wiper(5);
     7e2:	60 e0       	ldi	r22, 0x00	; 0
     7e4:	70 e0       	ldi	r23, 0x00	; 0
     7e6:	80 ea       	ldi	r24, 0xA0	; 160
     7e8:	90 e4       	ldi	r25, 0x40	; 64
     7ea:	44 de       	rcall	.-888    	; 0x474 <fm_wiper>
		if(DIR_OVF_3125 >= 3125){
     7ec:	80 91 63 01 	lds	r24, 0x0163
     7f0:	90 91 64 01 	lds	r25, 0x0164
     7f4:	85 33       	cpi	r24, 0x35	; 53
     7f6:	9c 40       	sbci	r25, 0x0C	; 12
     7f8:	7c f0       	brlt	.+30     	; 0x818 <__vector_10+0x66>
			if(CW) {
     7fa:	80 91 06 01 	lds	r24, 0x0106
     7fe:	88 23       	and	r24, r24
     800:	31 f0       	breq	.+12     	; 0x80e <__vector_10+0x5c>
				CW = FALSE;
     802:	10 92 06 01 	sts	0x0106, r1
				CCW = TRUE;
     806:	81 e0       	ldi	r24, 0x01	; 1
     808:	80 93 65 01 	sts	0x0165, r24
     80c:	05 c0       	rjmp	.+10     	; 0x818 <__vector_10+0x66>
			} else {
				CW = TRUE;
     80e:	81 e0       	ldi	r24, 0x01	; 1
     810:	80 93 06 01 	sts	0x0106, r24
				CCW = FALSE;
     814:	10 92 65 01 	sts	0x0165, r1
// 			PERIOD_OVF_95 = 0;
// 		}
// 	} else
// 		fm_wiper(0);
	}
	clear_bit(PORTB, PB4);
     818:	2c 98       	cbi	0x05, 4	; 5
	
}
     81a:	ff 91       	pop	r31
     81c:	ef 91       	pop	r30
     81e:	bf 91       	pop	r27
     820:	af 91       	pop	r26
     822:	9f 91       	pop	r25
     824:	8f 91       	pop	r24
     826:	7f 91       	pop	r23
     828:	6f 91       	pop	r22
     82a:	5f 91       	pop	r21
     82c:	4f 91       	pop	r20
     82e:	3f 91       	pop	r19
     830:	2f 91       	pop	r18
     832:	0f 90       	pop	r0
     834:	0b be       	out	0x3b, r0	; 59
     836:	0f 90       	pop	r0
     838:	0f be       	out	0x3f, r0	; 63
     83a:	0f 90       	pop	r0
     83c:	1f 90       	pop	r1
     83e:	18 95       	reti

00000840 <USART_tx>:
	fdevopen(USART_tx, USART_rx);
}

_Bool USART_tx(unsigned char data) {
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)));
     840:	e0 ec       	ldi	r30, 0xC0	; 192
     842:	f0 e0       	ldi	r31, 0x00	; 0
     844:	90 81       	ld	r25, Z
     846:	95 ff       	sbrs	r25, 5
     848:	fd cf       	rjmp	.-6      	; 0x844 <USART_tx+0x4>
	/* Put data into buffer, sends the data */
	UDR0 = data;
     84a:	80 93 c6 00 	sts	0x00C6, r24
	// T0D0 implement 
	return true;
}
     84e:	81 e0       	ldi	r24, 0x01	; 1
     850:	08 95       	ret

00000852 <USART_rx>:

unsigned char USART_rx(void) {
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)));
     852:	e0 ec       	ldi	r30, 0xC0	; 192
     854:	f0 e0       	ldi	r31, 0x00	; 0
     856:	80 81       	ld	r24, Z
     858:	88 23       	and	r24, r24
     85a:	ec f7       	brge	.-6      	; 0x856 <USART_rx+0x4>
	/* Get and return received data from buffer */
	return UDR0;
     85c:	80 91 c6 00 	lds	r24, 0x00C6
}
     860:	08 95       	ret

00000862 <USART_init>:

/*! Initialize the serial communication
	baud is the baud rate */
void USART_init(unsigned int baud, _Bool onOff) {
	/* Set baud rate */
	UBRR0H = (unsigned char) (baud>>8);
     862:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char) baud;
     866:	80 93 c4 00 	sts	0x00C4, r24
	/* Set frame format: Asynchronous normal mode, 8data, no parity  1 stop bit */
	/*(0<<UMSEL0) | (0<<UPM0) | (0<<USBS0) | already set as Initial values */
	UCSR0C = (3<<UCSZ0);
     86a:	86 e0       	ldi	r24, 0x06	; 6
     86c:	80 93 c2 00 	sts	0x00C2, r24
	/* Enable receiver and transmitter */
	if (onOff) {
     870:	66 23       	and	r22, r22
     872:	41 f0       	breq	.+16     	; 0x884 <USART_init+0x22>
		set_bit(UCSR0B,	RXEN0);
     874:	e1 ec       	ldi	r30, 0xC1	; 193
     876:	f0 e0       	ldi	r31, 0x00	; 0
     878:	80 81       	ld	r24, Z
     87a:	80 61       	ori	r24, 0x10	; 16
     87c:	80 83       	st	Z, r24
		set_bit(UCSR0B, TXEN0);
     87e:	80 81       	ld	r24, Z
     880:	88 60       	ori	r24, 0x08	; 8
     882:	80 83       	st	Z, r24
	}
	/*!	enables using fprint() instead of USART_tx_string() */
	fdevopen(USART_tx, USART_rx);
     884:	69 e2       	ldi	r22, 0x29	; 41
     886:	74 e0       	ldi	r23, 0x04	; 4
     888:	80 e2       	ldi	r24, 0x20	; 32
     88a:	94 e0       	ldi	r25, 0x04	; 4
     88c:	ec c1       	rjmp	.+984    	; 0xc66 <fdevopen>
     88e:	08 95       	ret

00000890 <__subsf3>:
     890:	50 58       	subi	r21, 0x80	; 128

00000892 <__addsf3>:
     892:	bb 27       	eor	r27, r27
     894:	aa 27       	eor	r26, r26
     896:	0e d0       	rcall	.+28     	; 0x8b4 <__addsf3x>
     898:	38 c1       	rjmp	.+624    	; 0xb0a <__fp_round>
     89a:	29 d1       	rcall	.+594    	; 0xaee <__fp_pscA>
     89c:	30 f0       	brcs	.+12     	; 0x8aa <__addsf3+0x18>
     89e:	2e d1       	rcall	.+604    	; 0xafc <__fp_pscB>
     8a0:	20 f0       	brcs	.+8      	; 0x8aa <__addsf3+0x18>
     8a2:	31 f4       	brne	.+12     	; 0x8b0 <__addsf3+0x1e>
     8a4:	9f 3f       	cpi	r25, 0xFF	; 255
     8a6:	11 f4       	brne	.+4      	; 0x8ac <__addsf3+0x1a>
     8a8:	1e f4       	brtc	.+6      	; 0x8b0 <__addsf3+0x1e>
     8aa:	1e c1       	rjmp	.+572    	; 0xae8 <__fp_nan>
     8ac:	0e f4       	brtc	.+2      	; 0x8b0 <__addsf3+0x1e>
     8ae:	e0 95       	com	r30
     8b0:	e7 fb       	bst	r30, 7
     8b2:	14 c1       	rjmp	.+552    	; 0xadc <__fp_inf>

000008b4 <__addsf3x>:
     8b4:	e9 2f       	mov	r30, r25
     8b6:	3a d1       	rcall	.+628    	; 0xb2c <__fp_split3>
     8b8:	80 f3       	brcs	.-32     	; 0x89a <__addsf3+0x8>
     8ba:	ba 17       	cp	r27, r26
     8bc:	62 07       	cpc	r22, r18
     8be:	73 07       	cpc	r23, r19
     8c0:	84 07       	cpc	r24, r20
     8c2:	95 07       	cpc	r25, r21
     8c4:	18 f0       	brcs	.+6      	; 0x8cc <__addsf3x+0x18>
     8c6:	71 f4       	brne	.+28     	; 0x8e4 <__addsf3x+0x30>
     8c8:	9e f5       	brtc	.+102    	; 0x930 <__addsf3x+0x7c>
     8ca:	52 c1       	rjmp	.+676    	; 0xb70 <__fp_zero>
     8cc:	0e f4       	brtc	.+2      	; 0x8d0 <__addsf3x+0x1c>
     8ce:	e0 95       	com	r30
     8d0:	0b 2e       	mov	r0, r27
     8d2:	ba 2f       	mov	r27, r26
     8d4:	a0 2d       	mov	r26, r0
     8d6:	0b 01       	movw	r0, r22
     8d8:	b9 01       	movw	r22, r18
     8da:	90 01       	movw	r18, r0
     8dc:	0c 01       	movw	r0, r24
     8de:	ca 01       	movw	r24, r20
     8e0:	a0 01       	movw	r20, r0
     8e2:	11 24       	eor	r1, r1
     8e4:	ff 27       	eor	r31, r31
     8e6:	59 1b       	sub	r21, r25
     8e8:	99 f0       	breq	.+38     	; 0x910 <__addsf3x+0x5c>
     8ea:	59 3f       	cpi	r21, 0xF9	; 249
     8ec:	50 f4       	brcc	.+20     	; 0x902 <__addsf3x+0x4e>
     8ee:	50 3e       	cpi	r21, 0xE0	; 224
     8f0:	68 f1       	brcs	.+90     	; 0x94c <__addsf3x+0x98>
     8f2:	1a 16       	cp	r1, r26
     8f4:	f0 40       	sbci	r31, 0x00	; 0
     8f6:	a2 2f       	mov	r26, r18
     8f8:	23 2f       	mov	r18, r19
     8fa:	34 2f       	mov	r19, r20
     8fc:	44 27       	eor	r20, r20
     8fe:	58 5f       	subi	r21, 0xF8	; 248
     900:	f3 cf       	rjmp	.-26     	; 0x8e8 <__addsf3x+0x34>
     902:	46 95       	lsr	r20
     904:	37 95       	ror	r19
     906:	27 95       	ror	r18
     908:	a7 95       	ror	r26
     90a:	f0 40       	sbci	r31, 0x00	; 0
     90c:	53 95       	inc	r21
     90e:	c9 f7       	brne	.-14     	; 0x902 <__addsf3x+0x4e>
     910:	7e f4       	brtc	.+30     	; 0x930 <__addsf3x+0x7c>
     912:	1f 16       	cp	r1, r31
     914:	ba 0b       	sbc	r27, r26
     916:	62 0b       	sbc	r22, r18
     918:	73 0b       	sbc	r23, r19
     91a:	84 0b       	sbc	r24, r20
     91c:	ba f0       	brmi	.+46     	; 0x94c <__addsf3x+0x98>
     91e:	91 50       	subi	r25, 0x01	; 1
     920:	a1 f0       	breq	.+40     	; 0x94a <__addsf3x+0x96>
     922:	ff 0f       	add	r31, r31
     924:	bb 1f       	adc	r27, r27
     926:	66 1f       	adc	r22, r22
     928:	77 1f       	adc	r23, r23
     92a:	88 1f       	adc	r24, r24
     92c:	c2 f7       	brpl	.-16     	; 0x91e <__addsf3x+0x6a>
     92e:	0e c0       	rjmp	.+28     	; 0x94c <__addsf3x+0x98>
     930:	ba 0f       	add	r27, r26
     932:	62 1f       	adc	r22, r18
     934:	73 1f       	adc	r23, r19
     936:	84 1f       	adc	r24, r20
     938:	48 f4       	brcc	.+18     	; 0x94c <__addsf3x+0x98>
     93a:	87 95       	ror	r24
     93c:	77 95       	ror	r23
     93e:	67 95       	ror	r22
     940:	b7 95       	ror	r27
     942:	f7 95       	ror	r31
     944:	9e 3f       	cpi	r25, 0xFE	; 254
     946:	08 f0       	brcs	.+2      	; 0x94a <__addsf3x+0x96>
     948:	b3 cf       	rjmp	.-154    	; 0x8b0 <__addsf3+0x1e>
     94a:	93 95       	inc	r25
     94c:	88 0f       	add	r24, r24
     94e:	08 f0       	brcs	.+2      	; 0x952 <__addsf3x+0x9e>
     950:	99 27       	eor	r25, r25
     952:	ee 0f       	add	r30, r30
     954:	97 95       	ror	r25
     956:	87 95       	ror	r24
     958:	08 95       	ret

0000095a <__cmpsf2>:
     95a:	9c d0       	rcall	.+312    	; 0xa94 <__fp_cmp>
     95c:	08 f4       	brcc	.+2      	; 0x960 <__cmpsf2+0x6>
     95e:	81 e0       	ldi	r24, 0x01	; 1
     960:	08 95       	ret

00000962 <__divsf3>:
     962:	0c d0       	rcall	.+24     	; 0x97c <__divsf3x>
     964:	d2 c0       	rjmp	.+420    	; 0xb0a <__fp_round>
     966:	ca d0       	rcall	.+404    	; 0xafc <__fp_pscB>
     968:	40 f0       	brcs	.+16     	; 0x97a <__divsf3+0x18>
     96a:	c1 d0       	rcall	.+386    	; 0xaee <__fp_pscA>
     96c:	30 f0       	brcs	.+12     	; 0x97a <__divsf3+0x18>
     96e:	21 f4       	brne	.+8      	; 0x978 <__divsf3+0x16>
     970:	5f 3f       	cpi	r21, 0xFF	; 255
     972:	19 f0       	breq	.+6      	; 0x97a <__divsf3+0x18>
     974:	b3 c0       	rjmp	.+358    	; 0xadc <__fp_inf>
     976:	51 11       	cpse	r21, r1
     978:	fc c0       	rjmp	.+504    	; 0xb72 <__fp_szero>
     97a:	b6 c0       	rjmp	.+364    	; 0xae8 <__fp_nan>

0000097c <__divsf3x>:
     97c:	d7 d0       	rcall	.+430    	; 0xb2c <__fp_split3>
     97e:	98 f3       	brcs	.-26     	; 0x966 <__divsf3+0x4>

00000980 <__divsf3_pse>:
     980:	99 23       	and	r25, r25
     982:	c9 f3       	breq	.-14     	; 0x976 <__divsf3+0x14>
     984:	55 23       	and	r21, r21
     986:	b1 f3       	breq	.-20     	; 0x974 <__divsf3+0x12>
     988:	95 1b       	sub	r25, r21
     98a:	55 0b       	sbc	r21, r21
     98c:	bb 27       	eor	r27, r27
     98e:	aa 27       	eor	r26, r26
     990:	62 17       	cp	r22, r18
     992:	73 07       	cpc	r23, r19
     994:	84 07       	cpc	r24, r20
     996:	38 f0       	brcs	.+14     	; 0x9a6 <__divsf3_pse+0x26>
     998:	9f 5f       	subi	r25, 0xFF	; 255
     99a:	5f 4f       	sbci	r21, 0xFF	; 255
     99c:	22 0f       	add	r18, r18
     99e:	33 1f       	adc	r19, r19
     9a0:	44 1f       	adc	r20, r20
     9a2:	aa 1f       	adc	r26, r26
     9a4:	a9 f3       	breq	.-22     	; 0x990 <__divsf3_pse+0x10>
     9a6:	33 d0       	rcall	.+102    	; 0xa0e <__divsf3_pse+0x8e>
     9a8:	0e 2e       	mov	r0, r30
     9aa:	3a f0       	brmi	.+14     	; 0x9ba <__divsf3_pse+0x3a>
     9ac:	e0 e8       	ldi	r30, 0x80	; 128
     9ae:	30 d0       	rcall	.+96     	; 0xa10 <__divsf3_pse+0x90>
     9b0:	91 50       	subi	r25, 0x01	; 1
     9b2:	50 40       	sbci	r21, 0x00	; 0
     9b4:	e6 95       	lsr	r30
     9b6:	00 1c       	adc	r0, r0
     9b8:	ca f7       	brpl	.-14     	; 0x9ac <__divsf3_pse+0x2c>
     9ba:	29 d0       	rcall	.+82     	; 0xa0e <__divsf3_pse+0x8e>
     9bc:	fe 2f       	mov	r31, r30
     9be:	27 d0       	rcall	.+78     	; 0xa0e <__divsf3_pse+0x8e>
     9c0:	66 0f       	add	r22, r22
     9c2:	77 1f       	adc	r23, r23
     9c4:	88 1f       	adc	r24, r24
     9c6:	bb 1f       	adc	r27, r27
     9c8:	26 17       	cp	r18, r22
     9ca:	37 07       	cpc	r19, r23
     9cc:	48 07       	cpc	r20, r24
     9ce:	ab 07       	cpc	r26, r27
     9d0:	b0 e8       	ldi	r27, 0x80	; 128
     9d2:	09 f0       	breq	.+2      	; 0x9d6 <__divsf3_pse+0x56>
     9d4:	bb 0b       	sbc	r27, r27
     9d6:	80 2d       	mov	r24, r0
     9d8:	bf 01       	movw	r22, r30
     9da:	ff 27       	eor	r31, r31
     9dc:	93 58       	subi	r25, 0x83	; 131
     9de:	5f 4f       	sbci	r21, 0xFF	; 255
     9e0:	2a f0       	brmi	.+10     	; 0x9ec <__divsf3_pse+0x6c>
     9e2:	9e 3f       	cpi	r25, 0xFE	; 254
     9e4:	51 05       	cpc	r21, r1
     9e6:	68 f0       	brcs	.+26     	; 0xa02 <__divsf3_pse+0x82>
     9e8:	79 c0       	rjmp	.+242    	; 0xadc <__fp_inf>
     9ea:	c3 c0       	rjmp	.+390    	; 0xb72 <__fp_szero>
     9ec:	5f 3f       	cpi	r21, 0xFF	; 255
     9ee:	ec f3       	brlt	.-6      	; 0x9ea <__divsf3_pse+0x6a>
     9f0:	98 3e       	cpi	r25, 0xE8	; 232
     9f2:	dc f3       	brlt	.-10     	; 0x9ea <__divsf3_pse+0x6a>
     9f4:	86 95       	lsr	r24
     9f6:	77 95       	ror	r23
     9f8:	67 95       	ror	r22
     9fa:	b7 95       	ror	r27
     9fc:	f7 95       	ror	r31
     9fe:	9f 5f       	subi	r25, 0xFF	; 255
     a00:	c9 f7       	brne	.-14     	; 0x9f4 <__divsf3_pse+0x74>
     a02:	88 0f       	add	r24, r24
     a04:	91 1d       	adc	r25, r1
     a06:	96 95       	lsr	r25
     a08:	87 95       	ror	r24
     a0a:	97 f9       	bld	r25, 7
     a0c:	08 95       	ret
     a0e:	e1 e0       	ldi	r30, 0x01	; 1
     a10:	66 0f       	add	r22, r22
     a12:	77 1f       	adc	r23, r23
     a14:	88 1f       	adc	r24, r24
     a16:	bb 1f       	adc	r27, r27
     a18:	62 17       	cp	r22, r18
     a1a:	73 07       	cpc	r23, r19
     a1c:	84 07       	cpc	r24, r20
     a1e:	ba 07       	cpc	r27, r26
     a20:	20 f0       	brcs	.+8      	; 0xa2a <__divsf3_pse+0xaa>
     a22:	62 1b       	sub	r22, r18
     a24:	73 0b       	sbc	r23, r19
     a26:	84 0b       	sbc	r24, r20
     a28:	ba 0b       	sbc	r27, r26
     a2a:	ee 1f       	adc	r30, r30
     a2c:	88 f7       	brcc	.-30     	; 0xa10 <__divsf3_pse+0x90>
     a2e:	e0 95       	com	r30
     a30:	08 95       	ret

00000a32 <__fixsfsi>:
     a32:	04 d0       	rcall	.+8      	; 0xa3c <__fixunssfsi>
     a34:	68 94       	set
     a36:	b1 11       	cpse	r27, r1
     a38:	9c c0       	rjmp	.+312    	; 0xb72 <__fp_szero>
     a3a:	08 95       	ret

00000a3c <__fixunssfsi>:
     a3c:	7f d0       	rcall	.+254    	; 0xb3c <__fp_splitA>
     a3e:	88 f0       	brcs	.+34     	; 0xa62 <__fixunssfsi+0x26>
     a40:	9f 57       	subi	r25, 0x7F	; 127
     a42:	90 f0       	brcs	.+36     	; 0xa68 <__fixunssfsi+0x2c>
     a44:	b9 2f       	mov	r27, r25
     a46:	99 27       	eor	r25, r25
     a48:	b7 51       	subi	r27, 0x17	; 23
     a4a:	a0 f0       	brcs	.+40     	; 0xa74 <__fixunssfsi+0x38>
     a4c:	d1 f0       	breq	.+52     	; 0xa82 <__fixunssfsi+0x46>
     a4e:	66 0f       	add	r22, r22
     a50:	77 1f       	adc	r23, r23
     a52:	88 1f       	adc	r24, r24
     a54:	99 1f       	adc	r25, r25
     a56:	1a f0       	brmi	.+6      	; 0xa5e <__fixunssfsi+0x22>
     a58:	ba 95       	dec	r27
     a5a:	c9 f7       	brne	.-14     	; 0xa4e <__fixunssfsi+0x12>
     a5c:	12 c0       	rjmp	.+36     	; 0xa82 <__fixunssfsi+0x46>
     a5e:	b1 30       	cpi	r27, 0x01	; 1
     a60:	81 f0       	breq	.+32     	; 0xa82 <__fixunssfsi+0x46>
     a62:	86 d0       	rcall	.+268    	; 0xb70 <__fp_zero>
     a64:	b1 e0       	ldi	r27, 0x01	; 1
     a66:	08 95       	ret
     a68:	83 c0       	rjmp	.+262    	; 0xb70 <__fp_zero>
     a6a:	67 2f       	mov	r22, r23
     a6c:	78 2f       	mov	r23, r24
     a6e:	88 27       	eor	r24, r24
     a70:	b8 5f       	subi	r27, 0xF8	; 248
     a72:	39 f0       	breq	.+14     	; 0xa82 <__fixunssfsi+0x46>
     a74:	b9 3f       	cpi	r27, 0xF9	; 249
     a76:	cc f3       	brlt	.-14     	; 0xa6a <__fixunssfsi+0x2e>
     a78:	86 95       	lsr	r24
     a7a:	77 95       	ror	r23
     a7c:	67 95       	ror	r22
     a7e:	b3 95       	inc	r27
     a80:	d9 f7       	brne	.-10     	; 0xa78 <__fixunssfsi+0x3c>
     a82:	3e f4       	brtc	.+14     	; 0xa92 <__fixunssfsi+0x56>
     a84:	90 95       	com	r25
     a86:	80 95       	com	r24
     a88:	70 95       	com	r23
     a8a:	61 95       	neg	r22
     a8c:	7f 4f       	sbci	r23, 0xFF	; 255
     a8e:	8f 4f       	sbci	r24, 0xFF	; 255
     a90:	9f 4f       	sbci	r25, 0xFF	; 255
     a92:	08 95       	ret

00000a94 <__fp_cmp>:
     a94:	99 0f       	add	r25, r25
     a96:	00 08       	sbc	r0, r0
     a98:	55 0f       	add	r21, r21
     a9a:	aa 0b       	sbc	r26, r26
     a9c:	e0 e8       	ldi	r30, 0x80	; 128
     a9e:	fe ef       	ldi	r31, 0xFE	; 254
     aa0:	16 16       	cp	r1, r22
     aa2:	17 06       	cpc	r1, r23
     aa4:	e8 07       	cpc	r30, r24
     aa6:	f9 07       	cpc	r31, r25
     aa8:	c0 f0       	brcs	.+48     	; 0xada <__fp_cmp+0x46>
     aaa:	12 16       	cp	r1, r18
     aac:	13 06       	cpc	r1, r19
     aae:	e4 07       	cpc	r30, r20
     ab0:	f5 07       	cpc	r31, r21
     ab2:	98 f0       	brcs	.+38     	; 0xada <__fp_cmp+0x46>
     ab4:	62 1b       	sub	r22, r18
     ab6:	73 0b       	sbc	r23, r19
     ab8:	84 0b       	sbc	r24, r20
     aba:	95 0b       	sbc	r25, r21
     abc:	39 f4       	brne	.+14     	; 0xacc <__fp_cmp+0x38>
     abe:	0a 26       	eor	r0, r26
     ac0:	61 f0       	breq	.+24     	; 0xada <__fp_cmp+0x46>
     ac2:	23 2b       	or	r18, r19
     ac4:	24 2b       	or	r18, r20
     ac6:	25 2b       	or	r18, r21
     ac8:	21 f4       	brne	.+8      	; 0xad2 <__fp_cmp+0x3e>
     aca:	08 95       	ret
     acc:	0a 26       	eor	r0, r26
     ace:	09 f4       	brne	.+2      	; 0xad2 <__fp_cmp+0x3e>
     ad0:	a1 40       	sbci	r26, 0x01	; 1
     ad2:	a6 95       	lsr	r26
     ad4:	8f ef       	ldi	r24, 0xFF	; 255
     ad6:	81 1d       	adc	r24, r1
     ad8:	81 1d       	adc	r24, r1
     ada:	08 95       	ret

00000adc <__fp_inf>:
     adc:	97 f9       	bld	r25, 7
     ade:	9f 67       	ori	r25, 0x7F	; 127
     ae0:	80 e8       	ldi	r24, 0x80	; 128
     ae2:	70 e0       	ldi	r23, 0x00	; 0
     ae4:	60 e0       	ldi	r22, 0x00	; 0
     ae6:	08 95       	ret

00000ae8 <__fp_nan>:
     ae8:	9f ef       	ldi	r25, 0xFF	; 255
     aea:	80 ec       	ldi	r24, 0xC0	; 192
     aec:	08 95       	ret

00000aee <__fp_pscA>:
     aee:	00 24       	eor	r0, r0
     af0:	0a 94       	dec	r0
     af2:	16 16       	cp	r1, r22
     af4:	17 06       	cpc	r1, r23
     af6:	18 06       	cpc	r1, r24
     af8:	09 06       	cpc	r0, r25
     afa:	08 95       	ret

00000afc <__fp_pscB>:
     afc:	00 24       	eor	r0, r0
     afe:	0a 94       	dec	r0
     b00:	12 16       	cp	r1, r18
     b02:	13 06       	cpc	r1, r19
     b04:	14 06       	cpc	r1, r20
     b06:	05 06       	cpc	r0, r21
     b08:	08 95       	ret

00000b0a <__fp_round>:
     b0a:	09 2e       	mov	r0, r25
     b0c:	03 94       	inc	r0
     b0e:	00 0c       	add	r0, r0
     b10:	11 f4       	brne	.+4      	; 0xb16 <__fp_round+0xc>
     b12:	88 23       	and	r24, r24
     b14:	52 f0       	brmi	.+20     	; 0xb2a <__fp_round+0x20>
     b16:	bb 0f       	add	r27, r27
     b18:	40 f4       	brcc	.+16     	; 0xb2a <__fp_round+0x20>
     b1a:	bf 2b       	or	r27, r31
     b1c:	11 f4       	brne	.+4      	; 0xb22 <__fp_round+0x18>
     b1e:	60 ff       	sbrs	r22, 0
     b20:	04 c0       	rjmp	.+8      	; 0xb2a <__fp_round+0x20>
     b22:	6f 5f       	subi	r22, 0xFF	; 255
     b24:	7f 4f       	sbci	r23, 0xFF	; 255
     b26:	8f 4f       	sbci	r24, 0xFF	; 255
     b28:	9f 4f       	sbci	r25, 0xFF	; 255
     b2a:	08 95       	ret

00000b2c <__fp_split3>:
     b2c:	57 fd       	sbrc	r21, 7
     b2e:	90 58       	subi	r25, 0x80	; 128
     b30:	44 0f       	add	r20, r20
     b32:	55 1f       	adc	r21, r21
     b34:	59 f0       	breq	.+22     	; 0xb4c <__fp_splitA+0x10>
     b36:	5f 3f       	cpi	r21, 0xFF	; 255
     b38:	71 f0       	breq	.+28     	; 0xb56 <__fp_splitA+0x1a>
     b3a:	47 95       	ror	r20

00000b3c <__fp_splitA>:
     b3c:	88 0f       	add	r24, r24
     b3e:	97 fb       	bst	r25, 7
     b40:	99 1f       	adc	r25, r25
     b42:	61 f0       	breq	.+24     	; 0xb5c <__fp_splitA+0x20>
     b44:	9f 3f       	cpi	r25, 0xFF	; 255
     b46:	79 f0       	breq	.+30     	; 0xb66 <__fp_splitA+0x2a>
     b48:	87 95       	ror	r24
     b4a:	08 95       	ret
     b4c:	12 16       	cp	r1, r18
     b4e:	13 06       	cpc	r1, r19
     b50:	14 06       	cpc	r1, r20
     b52:	55 1f       	adc	r21, r21
     b54:	f2 cf       	rjmp	.-28     	; 0xb3a <__fp_split3+0xe>
     b56:	46 95       	lsr	r20
     b58:	f1 df       	rcall	.-30     	; 0xb3c <__fp_splitA>
     b5a:	08 c0       	rjmp	.+16     	; 0xb6c <__fp_splitA+0x30>
     b5c:	16 16       	cp	r1, r22
     b5e:	17 06       	cpc	r1, r23
     b60:	18 06       	cpc	r1, r24
     b62:	99 1f       	adc	r25, r25
     b64:	f1 cf       	rjmp	.-30     	; 0xb48 <__fp_splitA+0xc>
     b66:	86 95       	lsr	r24
     b68:	71 05       	cpc	r23, r1
     b6a:	61 05       	cpc	r22, r1
     b6c:	08 94       	sec
     b6e:	08 95       	ret

00000b70 <__fp_zero>:
     b70:	e8 94       	clt

00000b72 <__fp_szero>:
     b72:	bb 27       	eor	r27, r27
     b74:	66 27       	eor	r22, r22
     b76:	77 27       	eor	r23, r23
     b78:	cb 01       	movw	r24, r22
     b7a:	97 f9       	bld	r25, 7
     b7c:	08 95       	ret

00000b7e <__gesf2>:
     b7e:	8a df       	rcall	.-236    	; 0xa94 <__fp_cmp>
     b80:	08 f4       	brcc	.+2      	; 0xb84 <__gesf2+0x6>
     b82:	8f ef       	ldi	r24, 0xFF	; 255
     b84:	08 95       	ret

00000b86 <__mulsf3>:
     b86:	0b d0       	rcall	.+22     	; 0xb9e <__mulsf3x>
     b88:	c0 cf       	rjmp	.-128    	; 0xb0a <__fp_round>
     b8a:	b1 df       	rcall	.-158    	; 0xaee <__fp_pscA>
     b8c:	28 f0       	brcs	.+10     	; 0xb98 <__mulsf3+0x12>
     b8e:	b6 df       	rcall	.-148    	; 0xafc <__fp_pscB>
     b90:	18 f0       	brcs	.+6      	; 0xb98 <__mulsf3+0x12>
     b92:	95 23       	and	r25, r21
     b94:	09 f0       	breq	.+2      	; 0xb98 <__mulsf3+0x12>
     b96:	a2 cf       	rjmp	.-188    	; 0xadc <__fp_inf>
     b98:	a7 cf       	rjmp	.-178    	; 0xae8 <__fp_nan>
     b9a:	11 24       	eor	r1, r1
     b9c:	ea cf       	rjmp	.-44     	; 0xb72 <__fp_szero>

00000b9e <__mulsf3x>:
     b9e:	c6 df       	rcall	.-116    	; 0xb2c <__fp_split3>
     ba0:	a0 f3       	brcs	.-24     	; 0xb8a <__mulsf3+0x4>

00000ba2 <__mulsf3_pse>:
     ba2:	95 9f       	mul	r25, r21
     ba4:	d1 f3       	breq	.-12     	; 0xb9a <__mulsf3+0x14>
     ba6:	95 0f       	add	r25, r21
     ba8:	50 e0       	ldi	r21, 0x00	; 0
     baa:	55 1f       	adc	r21, r21
     bac:	62 9f       	mul	r22, r18
     bae:	f0 01       	movw	r30, r0
     bb0:	72 9f       	mul	r23, r18
     bb2:	bb 27       	eor	r27, r27
     bb4:	f0 0d       	add	r31, r0
     bb6:	b1 1d       	adc	r27, r1
     bb8:	63 9f       	mul	r22, r19
     bba:	aa 27       	eor	r26, r26
     bbc:	f0 0d       	add	r31, r0
     bbe:	b1 1d       	adc	r27, r1
     bc0:	aa 1f       	adc	r26, r26
     bc2:	64 9f       	mul	r22, r20
     bc4:	66 27       	eor	r22, r22
     bc6:	b0 0d       	add	r27, r0
     bc8:	a1 1d       	adc	r26, r1
     bca:	66 1f       	adc	r22, r22
     bcc:	82 9f       	mul	r24, r18
     bce:	22 27       	eor	r18, r18
     bd0:	b0 0d       	add	r27, r0
     bd2:	a1 1d       	adc	r26, r1
     bd4:	62 1f       	adc	r22, r18
     bd6:	73 9f       	mul	r23, r19
     bd8:	b0 0d       	add	r27, r0
     bda:	a1 1d       	adc	r26, r1
     bdc:	62 1f       	adc	r22, r18
     bde:	83 9f       	mul	r24, r19
     be0:	a0 0d       	add	r26, r0
     be2:	61 1d       	adc	r22, r1
     be4:	22 1f       	adc	r18, r18
     be6:	74 9f       	mul	r23, r20
     be8:	33 27       	eor	r19, r19
     bea:	a0 0d       	add	r26, r0
     bec:	61 1d       	adc	r22, r1
     bee:	23 1f       	adc	r18, r19
     bf0:	84 9f       	mul	r24, r20
     bf2:	60 0d       	add	r22, r0
     bf4:	21 1d       	adc	r18, r1
     bf6:	82 2f       	mov	r24, r18
     bf8:	76 2f       	mov	r23, r22
     bfa:	6a 2f       	mov	r22, r26
     bfc:	11 24       	eor	r1, r1
     bfe:	9f 57       	subi	r25, 0x7F	; 127
     c00:	50 40       	sbci	r21, 0x00	; 0
     c02:	8a f0       	brmi	.+34     	; 0xc26 <__mulsf3_pse+0x84>
     c04:	e1 f0       	breq	.+56     	; 0xc3e <__mulsf3_pse+0x9c>
     c06:	88 23       	and	r24, r24
     c08:	4a f0       	brmi	.+18     	; 0xc1c <__mulsf3_pse+0x7a>
     c0a:	ee 0f       	add	r30, r30
     c0c:	ff 1f       	adc	r31, r31
     c0e:	bb 1f       	adc	r27, r27
     c10:	66 1f       	adc	r22, r22
     c12:	77 1f       	adc	r23, r23
     c14:	88 1f       	adc	r24, r24
     c16:	91 50       	subi	r25, 0x01	; 1
     c18:	50 40       	sbci	r21, 0x00	; 0
     c1a:	a9 f7       	brne	.-22     	; 0xc06 <__mulsf3_pse+0x64>
     c1c:	9e 3f       	cpi	r25, 0xFE	; 254
     c1e:	51 05       	cpc	r21, r1
     c20:	70 f0       	brcs	.+28     	; 0xc3e <__mulsf3_pse+0x9c>
     c22:	5c cf       	rjmp	.-328    	; 0xadc <__fp_inf>
     c24:	a6 cf       	rjmp	.-180    	; 0xb72 <__fp_szero>
     c26:	5f 3f       	cpi	r21, 0xFF	; 255
     c28:	ec f3       	brlt	.-6      	; 0xc24 <__mulsf3_pse+0x82>
     c2a:	98 3e       	cpi	r25, 0xE8	; 232
     c2c:	dc f3       	brlt	.-10     	; 0xc24 <__mulsf3_pse+0x82>
     c2e:	86 95       	lsr	r24
     c30:	77 95       	ror	r23
     c32:	67 95       	ror	r22
     c34:	b7 95       	ror	r27
     c36:	f7 95       	ror	r31
     c38:	e7 95       	ror	r30
     c3a:	9f 5f       	subi	r25, 0xFF	; 255
     c3c:	c1 f7       	brne	.-16     	; 0xc2e <__mulsf3_pse+0x8c>
     c3e:	fe 2b       	or	r31, r30
     c40:	88 0f       	add	r24, r24
     c42:	91 1d       	adc	r25, r1
     c44:	96 95       	lsr	r25
     c46:	87 95       	ror	r24
     c48:	97 f9       	bld	r25, 7
     c4a:	08 95       	ret

00000c4c <memcmp>:
     c4c:	fb 01       	movw	r30, r22
     c4e:	dc 01       	movw	r26, r24
     c50:	04 c0       	rjmp	.+8      	; 0xc5a <memcmp+0xe>
     c52:	8d 91       	ld	r24, X+
     c54:	01 90       	ld	r0, Z+
     c56:	80 19       	sub	r24, r0
     c58:	21 f4       	brne	.+8      	; 0xc62 <memcmp+0x16>
     c5a:	41 50       	subi	r20, 0x01	; 1
     c5c:	50 40       	sbci	r21, 0x00	; 0
     c5e:	c8 f7       	brcc	.-14     	; 0xc52 <memcmp+0x6>
     c60:	88 1b       	sub	r24, r24
     c62:	99 0b       	sbc	r25, r25
     c64:	08 95       	ret

00000c66 <fdevopen>:
     c66:	0f 93       	push	r16
     c68:	1f 93       	push	r17
     c6a:	cf 93       	push	r28
     c6c:	df 93       	push	r29
     c6e:	00 97       	sbiw	r24, 0x00	; 0
     c70:	31 f4       	brne	.+12     	; 0xc7e <fdevopen+0x18>
     c72:	61 15       	cp	r22, r1
     c74:	71 05       	cpc	r23, r1
     c76:	19 f4       	brne	.+6      	; 0xc7e <fdevopen+0x18>
     c78:	80 e0       	ldi	r24, 0x00	; 0
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	39 c0       	rjmp	.+114    	; 0xcf0 <fdevopen+0x8a>
     c7e:	8b 01       	movw	r16, r22
     c80:	ec 01       	movw	r28, r24
     c82:	6e e0       	ldi	r22, 0x0E	; 14
     c84:	70 e0       	ldi	r23, 0x00	; 0
     c86:	81 e0       	ldi	r24, 0x01	; 1
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	38 d2       	rcall	.+1136   	; 0x10fc <calloc>
     c8c:	fc 01       	movw	r30, r24
     c8e:	89 2b       	or	r24, r25
     c90:	99 f3       	breq	.-26     	; 0xc78 <fdevopen+0x12>
     c92:	80 e8       	ldi	r24, 0x80	; 128
     c94:	83 83       	std	Z+3, r24	; 0x03
     c96:	01 15       	cp	r16, r1
     c98:	11 05       	cpc	r17, r1
     c9a:	71 f0       	breq	.+28     	; 0xcb8 <fdevopen+0x52>
     c9c:	13 87       	std	Z+11, r17	; 0x0b
     c9e:	02 87       	std	Z+10, r16	; 0x0a
     ca0:	81 e8       	ldi	r24, 0x81	; 129
     ca2:	83 83       	std	Z+3, r24	; 0x03
     ca4:	80 91 84 01 	lds	r24, 0x0184
     ca8:	90 91 85 01 	lds	r25, 0x0185
     cac:	89 2b       	or	r24, r25
     cae:	21 f4       	brne	.+8      	; 0xcb8 <fdevopen+0x52>
     cb0:	f0 93 85 01 	sts	0x0185, r31
     cb4:	e0 93 84 01 	sts	0x0184, r30
     cb8:	20 97       	sbiw	r28, 0x00	; 0
     cba:	c9 f0       	breq	.+50     	; 0xcee <fdevopen+0x88>
     cbc:	d1 87       	std	Z+9, r29	; 0x09
     cbe:	c0 87       	std	Z+8, r28	; 0x08
     cc0:	83 81       	ldd	r24, Z+3	; 0x03
     cc2:	82 60       	ori	r24, 0x02	; 2
     cc4:	83 83       	std	Z+3, r24	; 0x03
     cc6:	80 91 86 01 	lds	r24, 0x0186
     cca:	90 91 87 01 	lds	r25, 0x0187
     cce:	89 2b       	or	r24, r25
     cd0:	71 f4       	brne	.+28     	; 0xcee <fdevopen+0x88>
     cd2:	f0 93 87 01 	sts	0x0187, r31
     cd6:	e0 93 86 01 	sts	0x0186, r30
     cda:	80 91 88 01 	lds	r24, 0x0188
     cde:	90 91 89 01 	lds	r25, 0x0189
     ce2:	89 2b       	or	r24, r25
     ce4:	21 f4       	brne	.+8      	; 0xcee <fdevopen+0x88>
     ce6:	f0 93 89 01 	sts	0x0189, r31
     cea:	e0 93 88 01 	sts	0x0188, r30
     cee:	cf 01       	movw	r24, r30
     cf0:	df 91       	pop	r29
     cf2:	cf 91       	pop	r28
     cf4:	1f 91       	pop	r17
     cf6:	0f 91       	pop	r16
     cf8:	08 95       	ret

00000cfa <printf>:
     cfa:	cf 93       	push	r28
     cfc:	df 93       	push	r29
     cfe:	cd b7       	in	r28, 0x3d	; 61
     d00:	de b7       	in	r29, 0x3e	; 62
     d02:	ae 01       	movw	r20, r28
     d04:	4b 5f       	subi	r20, 0xFB	; 251
     d06:	5f 4f       	sbci	r21, 0xFF	; 255
     d08:	fa 01       	movw	r30, r20
     d0a:	61 91       	ld	r22, Z+
     d0c:	71 91       	ld	r23, Z+
     d0e:	af 01       	movw	r20, r30
     d10:	80 91 86 01 	lds	r24, 0x0186
     d14:	90 91 87 01 	lds	r25, 0x0187
     d18:	03 d0       	rcall	.+6      	; 0xd20 <vfprintf>
     d1a:	df 91       	pop	r29
     d1c:	cf 91       	pop	r28
     d1e:	08 95       	ret

00000d20 <vfprintf>:
     d20:	2f 92       	push	r2
     d22:	3f 92       	push	r3
     d24:	4f 92       	push	r4
     d26:	5f 92       	push	r5
     d28:	6f 92       	push	r6
     d2a:	7f 92       	push	r7
     d2c:	8f 92       	push	r8
     d2e:	9f 92       	push	r9
     d30:	af 92       	push	r10
     d32:	bf 92       	push	r11
     d34:	cf 92       	push	r12
     d36:	df 92       	push	r13
     d38:	ef 92       	push	r14
     d3a:	ff 92       	push	r15
     d3c:	0f 93       	push	r16
     d3e:	1f 93       	push	r17
     d40:	cf 93       	push	r28
     d42:	df 93       	push	r29
     d44:	cd b7       	in	r28, 0x3d	; 61
     d46:	de b7       	in	r29, 0x3e	; 62
     d48:	2c 97       	sbiw	r28, 0x0c	; 12
     d4a:	0f b6       	in	r0, 0x3f	; 63
     d4c:	f8 94       	cli
     d4e:	de bf       	out	0x3e, r29	; 62
     d50:	0f be       	out	0x3f, r0	; 63
     d52:	cd bf       	out	0x3d, r28	; 61
     d54:	7c 01       	movw	r14, r24
     d56:	6b 01       	movw	r12, r22
     d58:	8a 01       	movw	r16, r20
     d5a:	fc 01       	movw	r30, r24
     d5c:	17 82       	std	Z+7, r1	; 0x07
     d5e:	16 82       	std	Z+6, r1	; 0x06
     d60:	83 81       	ldd	r24, Z+3	; 0x03
     d62:	81 ff       	sbrs	r24, 1
     d64:	b0 c1       	rjmp	.+864    	; 0x10c6 <vfprintf+0x3a6>
     d66:	ce 01       	movw	r24, r28
     d68:	01 96       	adiw	r24, 0x01	; 1
     d6a:	4c 01       	movw	r8, r24
     d6c:	f7 01       	movw	r30, r14
     d6e:	93 81       	ldd	r25, Z+3	; 0x03
     d70:	f6 01       	movw	r30, r12
     d72:	93 fd       	sbrc	r25, 3
     d74:	85 91       	lpm	r24, Z+
     d76:	93 ff       	sbrs	r25, 3
     d78:	81 91       	ld	r24, Z+
     d7a:	6f 01       	movw	r12, r30
     d7c:	88 23       	and	r24, r24
     d7e:	09 f4       	brne	.+2      	; 0xd82 <vfprintf+0x62>
     d80:	9e c1       	rjmp	.+828    	; 0x10be <vfprintf+0x39e>
     d82:	85 32       	cpi	r24, 0x25	; 37
     d84:	39 f4       	brne	.+14     	; 0xd94 <vfprintf+0x74>
     d86:	93 fd       	sbrc	r25, 3
     d88:	85 91       	lpm	r24, Z+
     d8a:	93 ff       	sbrs	r25, 3
     d8c:	81 91       	ld	r24, Z+
     d8e:	6f 01       	movw	r12, r30
     d90:	85 32       	cpi	r24, 0x25	; 37
     d92:	21 f4       	brne	.+8      	; 0xd9c <vfprintf+0x7c>
     d94:	b7 01       	movw	r22, r14
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	15 d3       	rcall	.+1578   	; 0x13c4 <fputc>
     d9a:	e8 cf       	rjmp	.-48     	; 0xd6c <vfprintf+0x4c>
     d9c:	51 2c       	mov	r5, r1
     d9e:	31 2c       	mov	r3, r1
     da0:	20 e0       	ldi	r18, 0x00	; 0
     da2:	20 32       	cpi	r18, 0x20	; 32
     da4:	a0 f4       	brcc	.+40     	; 0xdce <vfprintf+0xae>
     da6:	8b 32       	cpi	r24, 0x2B	; 43
     da8:	69 f0       	breq	.+26     	; 0xdc4 <vfprintf+0xa4>
     daa:	30 f4       	brcc	.+12     	; 0xdb8 <vfprintf+0x98>
     dac:	80 32       	cpi	r24, 0x20	; 32
     dae:	59 f0       	breq	.+22     	; 0xdc6 <vfprintf+0xa6>
     db0:	83 32       	cpi	r24, 0x23	; 35
     db2:	69 f4       	brne	.+26     	; 0xdce <vfprintf+0xae>
     db4:	20 61       	ori	r18, 0x10	; 16
     db6:	2c c0       	rjmp	.+88     	; 0xe10 <vfprintf+0xf0>
     db8:	8d 32       	cpi	r24, 0x2D	; 45
     dba:	39 f0       	breq	.+14     	; 0xdca <vfprintf+0xaa>
     dbc:	80 33       	cpi	r24, 0x30	; 48
     dbe:	39 f4       	brne	.+14     	; 0xdce <vfprintf+0xae>
     dc0:	21 60       	ori	r18, 0x01	; 1
     dc2:	26 c0       	rjmp	.+76     	; 0xe10 <vfprintf+0xf0>
     dc4:	22 60       	ori	r18, 0x02	; 2
     dc6:	24 60       	ori	r18, 0x04	; 4
     dc8:	23 c0       	rjmp	.+70     	; 0xe10 <vfprintf+0xf0>
     dca:	28 60       	ori	r18, 0x08	; 8
     dcc:	21 c0       	rjmp	.+66     	; 0xe10 <vfprintf+0xf0>
     dce:	27 fd       	sbrc	r18, 7
     dd0:	27 c0       	rjmp	.+78     	; 0xe20 <vfprintf+0x100>
     dd2:	30 ed       	ldi	r19, 0xD0	; 208
     dd4:	38 0f       	add	r19, r24
     dd6:	3a 30       	cpi	r19, 0x0A	; 10
     dd8:	78 f4       	brcc	.+30     	; 0xdf8 <vfprintf+0xd8>
     dda:	26 ff       	sbrs	r18, 6
     ddc:	06 c0       	rjmp	.+12     	; 0xdea <vfprintf+0xca>
     dde:	fa e0       	ldi	r31, 0x0A	; 10
     de0:	5f 9e       	mul	r5, r31
     de2:	30 0d       	add	r19, r0
     de4:	11 24       	eor	r1, r1
     de6:	53 2e       	mov	r5, r19
     de8:	13 c0       	rjmp	.+38     	; 0xe10 <vfprintf+0xf0>
     dea:	8a e0       	ldi	r24, 0x0A	; 10
     dec:	38 9e       	mul	r3, r24
     dee:	30 0d       	add	r19, r0
     df0:	11 24       	eor	r1, r1
     df2:	33 2e       	mov	r3, r19
     df4:	20 62       	ori	r18, 0x20	; 32
     df6:	0c c0       	rjmp	.+24     	; 0xe10 <vfprintf+0xf0>
     df8:	8e 32       	cpi	r24, 0x2E	; 46
     dfa:	21 f4       	brne	.+8      	; 0xe04 <vfprintf+0xe4>
     dfc:	26 fd       	sbrc	r18, 6
     dfe:	5f c1       	rjmp	.+702    	; 0x10be <vfprintf+0x39e>
     e00:	20 64       	ori	r18, 0x40	; 64
     e02:	06 c0       	rjmp	.+12     	; 0xe10 <vfprintf+0xf0>
     e04:	8c 36       	cpi	r24, 0x6C	; 108
     e06:	11 f4       	brne	.+4      	; 0xe0c <vfprintf+0xec>
     e08:	20 68       	ori	r18, 0x80	; 128
     e0a:	02 c0       	rjmp	.+4      	; 0xe10 <vfprintf+0xf0>
     e0c:	88 36       	cpi	r24, 0x68	; 104
     e0e:	41 f4       	brne	.+16     	; 0xe20 <vfprintf+0x100>
     e10:	f6 01       	movw	r30, r12
     e12:	93 fd       	sbrc	r25, 3
     e14:	85 91       	lpm	r24, Z+
     e16:	93 ff       	sbrs	r25, 3
     e18:	81 91       	ld	r24, Z+
     e1a:	6f 01       	movw	r12, r30
     e1c:	81 11       	cpse	r24, r1
     e1e:	c1 cf       	rjmp	.-126    	; 0xda2 <vfprintf+0x82>
     e20:	98 2f       	mov	r25, r24
     e22:	9f 7d       	andi	r25, 0xDF	; 223
     e24:	95 54       	subi	r25, 0x45	; 69
     e26:	93 30       	cpi	r25, 0x03	; 3
     e28:	28 f4       	brcc	.+10     	; 0xe34 <vfprintf+0x114>
     e2a:	0c 5f       	subi	r16, 0xFC	; 252
     e2c:	1f 4f       	sbci	r17, 0xFF	; 255
     e2e:	ff e3       	ldi	r31, 0x3F	; 63
     e30:	f9 83       	std	Y+1, r31	; 0x01
     e32:	0d c0       	rjmp	.+26     	; 0xe4e <vfprintf+0x12e>
     e34:	83 36       	cpi	r24, 0x63	; 99
     e36:	31 f0       	breq	.+12     	; 0xe44 <vfprintf+0x124>
     e38:	83 37       	cpi	r24, 0x73	; 115
     e3a:	71 f0       	breq	.+28     	; 0xe58 <vfprintf+0x138>
     e3c:	83 35       	cpi	r24, 0x53	; 83
     e3e:	09 f0       	breq	.+2      	; 0xe42 <vfprintf+0x122>
     e40:	57 c0       	rjmp	.+174    	; 0xef0 <vfprintf+0x1d0>
     e42:	21 c0       	rjmp	.+66     	; 0xe86 <vfprintf+0x166>
     e44:	f8 01       	movw	r30, r16
     e46:	80 81       	ld	r24, Z
     e48:	89 83       	std	Y+1, r24	; 0x01
     e4a:	0e 5f       	subi	r16, 0xFE	; 254
     e4c:	1f 4f       	sbci	r17, 0xFF	; 255
     e4e:	44 24       	eor	r4, r4
     e50:	43 94       	inc	r4
     e52:	51 2c       	mov	r5, r1
     e54:	54 01       	movw	r10, r8
     e56:	14 c0       	rjmp	.+40     	; 0xe80 <vfprintf+0x160>
     e58:	38 01       	movw	r6, r16
     e5a:	f2 e0       	ldi	r31, 0x02	; 2
     e5c:	6f 0e       	add	r6, r31
     e5e:	71 1c       	adc	r7, r1
     e60:	f8 01       	movw	r30, r16
     e62:	a0 80       	ld	r10, Z
     e64:	b1 80       	ldd	r11, Z+1	; 0x01
     e66:	26 ff       	sbrs	r18, 6
     e68:	03 c0       	rjmp	.+6      	; 0xe70 <vfprintf+0x150>
     e6a:	65 2d       	mov	r22, r5
     e6c:	70 e0       	ldi	r23, 0x00	; 0
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <vfprintf+0x154>
     e70:	6f ef       	ldi	r22, 0xFF	; 255
     e72:	7f ef       	ldi	r23, 0xFF	; 255
     e74:	c5 01       	movw	r24, r10
     e76:	2c 87       	std	Y+12, r18	; 0x0c
     e78:	9a d2       	rcall	.+1332   	; 0x13ae <strnlen>
     e7a:	2c 01       	movw	r4, r24
     e7c:	83 01       	movw	r16, r6
     e7e:	2c 85       	ldd	r18, Y+12	; 0x0c
     e80:	2f 77       	andi	r18, 0x7F	; 127
     e82:	22 2e       	mov	r2, r18
     e84:	16 c0       	rjmp	.+44     	; 0xeb2 <vfprintf+0x192>
     e86:	38 01       	movw	r6, r16
     e88:	f2 e0       	ldi	r31, 0x02	; 2
     e8a:	6f 0e       	add	r6, r31
     e8c:	71 1c       	adc	r7, r1
     e8e:	f8 01       	movw	r30, r16
     e90:	a0 80       	ld	r10, Z
     e92:	b1 80       	ldd	r11, Z+1	; 0x01
     e94:	26 ff       	sbrs	r18, 6
     e96:	03 c0       	rjmp	.+6      	; 0xe9e <vfprintf+0x17e>
     e98:	65 2d       	mov	r22, r5
     e9a:	70 e0       	ldi	r23, 0x00	; 0
     e9c:	02 c0       	rjmp	.+4      	; 0xea2 <vfprintf+0x182>
     e9e:	6f ef       	ldi	r22, 0xFF	; 255
     ea0:	7f ef       	ldi	r23, 0xFF	; 255
     ea2:	c5 01       	movw	r24, r10
     ea4:	2c 87       	std	Y+12, r18	; 0x0c
     ea6:	71 d2       	rcall	.+1250   	; 0x138a <strnlen_P>
     ea8:	2c 01       	movw	r4, r24
     eaa:	2c 85       	ldd	r18, Y+12	; 0x0c
     eac:	20 68       	ori	r18, 0x80	; 128
     eae:	22 2e       	mov	r2, r18
     eb0:	83 01       	movw	r16, r6
     eb2:	23 fc       	sbrc	r2, 3
     eb4:	19 c0       	rjmp	.+50     	; 0xee8 <vfprintf+0x1c8>
     eb6:	83 2d       	mov	r24, r3
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	48 16       	cp	r4, r24
     ebc:	59 06       	cpc	r5, r25
     ebe:	a0 f4       	brcc	.+40     	; 0xee8 <vfprintf+0x1c8>
     ec0:	b7 01       	movw	r22, r14
     ec2:	80 e2       	ldi	r24, 0x20	; 32
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	7e d2       	rcall	.+1276   	; 0x13c4 <fputc>
     ec8:	3a 94       	dec	r3
     eca:	f5 cf       	rjmp	.-22     	; 0xeb6 <vfprintf+0x196>
     ecc:	f5 01       	movw	r30, r10
     ece:	27 fc       	sbrc	r2, 7
     ed0:	85 91       	lpm	r24, Z+
     ed2:	27 fe       	sbrs	r2, 7
     ed4:	81 91       	ld	r24, Z+
     ed6:	5f 01       	movw	r10, r30
     ed8:	b7 01       	movw	r22, r14
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	73 d2       	rcall	.+1254   	; 0x13c4 <fputc>
     ede:	31 10       	cpse	r3, r1
     ee0:	3a 94       	dec	r3
     ee2:	f1 e0       	ldi	r31, 0x01	; 1
     ee4:	4f 1a       	sub	r4, r31
     ee6:	51 08       	sbc	r5, r1
     ee8:	41 14       	cp	r4, r1
     eea:	51 04       	cpc	r5, r1
     eec:	79 f7       	brne	.-34     	; 0xecc <vfprintf+0x1ac>
     eee:	de c0       	rjmp	.+444    	; 0x10ac <vfprintf+0x38c>
     ef0:	84 36       	cpi	r24, 0x64	; 100
     ef2:	11 f0       	breq	.+4      	; 0xef8 <vfprintf+0x1d8>
     ef4:	89 36       	cpi	r24, 0x69	; 105
     ef6:	31 f5       	brne	.+76     	; 0xf44 <vfprintf+0x224>
     ef8:	f8 01       	movw	r30, r16
     efa:	27 ff       	sbrs	r18, 7
     efc:	07 c0       	rjmp	.+14     	; 0xf0c <vfprintf+0x1ec>
     efe:	60 81       	ld	r22, Z
     f00:	71 81       	ldd	r23, Z+1	; 0x01
     f02:	82 81       	ldd	r24, Z+2	; 0x02
     f04:	93 81       	ldd	r25, Z+3	; 0x03
     f06:	0c 5f       	subi	r16, 0xFC	; 252
     f08:	1f 4f       	sbci	r17, 0xFF	; 255
     f0a:	08 c0       	rjmp	.+16     	; 0xf1c <vfprintf+0x1fc>
     f0c:	60 81       	ld	r22, Z
     f0e:	71 81       	ldd	r23, Z+1	; 0x01
     f10:	07 2e       	mov	r0, r23
     f12:	00 0c       	add	r0, r0
     f14:	88 0b       	sbc	r24, r24
     f16:	99 0b       	sbc	r25, r25
     f18:	0e 5f       	subi	r16, 0xFE	; 254
     f1a:	1f 4f       	sbci	r17, 0xFF	; 255
     f1c:	2f 76       	andi	r18, 0x6F	; 111
     f1e:	72 2e       	mov	r7, r18
     f20:	97 ff       	sbrs	r25, 7
     f22:	09 c0       	rjmp	.+18     	; 0xf36 <vfprintf+0x216>
     f24:	90 95       	com	r25
     f26:	80 95       	com	r24
     f28:	70 95       	com	r23
     f2a:	61 95       	neg	r22
     f2c:	7f 4f       	sbci	r23, 0xFF	; 255
     f2e:	8f 4f       	sbci	r24, 0xFF	; 255
     f30:	9f 4f       	sbci	r25, 0xFF	; 255
     f32:	20 68       	ori	r18, 0x80	; 128
     f34:	72 2e       	mov	r7, r18
     f36:	2a e0       	ldi	r18, 0x0A	; 10
     f38:	30 e0       	ldi	r19, 0x00	; 0
     f3a:	a4 01       	movw	r20, r8
     f3c:	7b d2       	rcall	.+1270   	; 0x1434 <__ultoa_invert>
     f3e:	a8 2e       	mov	r10, r24
     f40:	a8 18       	sub	r10, r8
     f42:	43 c0       	rjmp	.+134    	; 0xfca <vfprintf+0x2aa>
     f44:	85 37       	cpi	r24, 0x75	; 117
     f46:	29 f4       	brne	.+10     	; 0xf52 <vfprintf+0x232>
     f48:	2f 7e       	andi	r18, 0xEF	; 239
     f4a:	b2 2e       	mov	r11, r18
     f4c:	2a e0       	ldi	r18, 0x0A	; 10
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	25 c0       	rjmp	.+74     	; 0xf9c <vfprintf+0x27c>
     f52:	f2 2f       	mov	r31, r18
     f54:	f9 7f       	andi	r31, 0xF9	; 249
     f56:	bf 2e       	mov	r11, r31
     f58:	8f 36       	cpi	r24, 0x6F	; 111
     f5a:	c1 f0       	breq	.+48     	; 0xf8c <vfprintf+0x26c>
     f5c:	18 f4       	brcc	.+6      	; 0xf64 <vfprintf+0x244>
     f5e:	88 35       	cpi	r24, 0x58	; 88
     f60:	79 f0       	breq	.+30     	; 0xf80 <vfprintf+0x260>
     f62:	ad c0       	rjmp	.+346    	; 0x10be <vfprintf+0x39e>
     f64:	80 37       	cpi	r24, 0x70	; 112
     f66:	19 f0       	breq	.+6      	; 0xf6e <vfprintf+0x24e>
     f68:	88 37       	cpi	r24, 0x78	; 120
     f6a:	21 f0       	breq	.+8      	; 0xf74 <vfprintf+0x254>
     f6c:	a8 c0       	rjmp	.+336    	; 0x10be <vfprintf+0x39e>
     f6e:	2f 2f       	mov	r18, r31
     f70:	20 61       	ori	r18, 0x10	; 16
     f72:	b2 2e       	mov	r11, r18
     f74:	b4 fe       	sbrs	r11, 4
     f76:	0d c0       	rjmp	.+26     	; 0xf92 <vfprintf+0x272>
     f78:	8b 2d       	mov	r24, r11
     f7a:	84 60       	ori	r24, 0x04	; 4
     f7c:	b8 2e       	mov	r11, r24
     f7e:	09 c0       	rjmp	.+18     	; 0xf92 <vfprintf+0x272>
     f80:	24 ff       	sbrs	r18, 4
     f82:	0a c0       	rjmp	.+20     	; 0xf98 <vfprintf+0x278>
     f84:	9f 2f       	mov	r25, r31
     f86:	96 60       	ori	r25, 0x06	; 6
     f88:	b9 2e       	mov	r11, r25
     f8a:	06 c0       	rjmp	.+12     	; 0xf98 <vfprintf+0x278>
     f8c:	28 e0       	ldi	r18, 0x08	; 8
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	05 c0       	rjmp	.+10     	; 0xf9c <vfprintf+0x27c>
     f92:	20 e1       	ldi	r18, 0x10	; 16
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	02 c0       	rjmp	.+4      	; 0xf9c <vfprintf+0x27c>
     f98:	20 e1       	ldi	r18, 0x10	; 16
     f9a:	32 e0       	ldi	r19, 0x02	; 2
     f9c:	f8 01       	movw	r30, r16
     f9e:	b7 fe       	sbrs	r11, 7
     fa0:	07 c0       	rjmp	.+14     	; 0xfb0 <vfprintf+0x290>
     fa2:	60 81       	ld	r22, Z
     fa4:	71 81       	ldd	r23, Z+1	; 0x01
     fa6:	82 81       	ldd	r24, Z+2	; 0x02
     fa8:	93 81       	ldd	r25, Z+3	; 0x03
     faa:	0c 5f       	subi	r16, 0xFC	; 252
     fac:	1f 4f       	sbci	r17, 0xFF	; 255
     fae:	06 c0       	rjmp	.+12     	; 0xfbc <vfprintf+0x29c>
     fb0:	60 81       	ld	r22, Z
     fb2:	71 81       	ldd	r23, Z+1	; 0x01
     fb4:	80 e0       	ldi	r24, 0x00	; 0
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	0e 5f       	subi	r16, 0xFE	; 254
     fba:	1f 4f       	sbci	r17, 0xFF	; 255
     fbc:	a4 01       	movw	r20, r8
     fbe:	3a d2       	rcall	.+1140   	; 0x1434 <__ultoa_invert>
     fc0:	a8 2e       	mov	r10, r24
     fc2:	a8 18       	sub	r10, r8
     fc4:	fb 2d       	mov	r31, r11
     fc6:	ff 77       	andi	r31, 0x7F	; 127
     fc8:	7f 2e       	mov	r7, r31
     fca:	76 fe       	sbrs	r7, 6
     fcc:	0b c0       	rjmp	.+22     	; 0xfe4 <vfprintf+0x2c4>
     fce:	37 2d       	mov	r19, r7
     fd0:	3e 7f       	andi	r19, 0xFE	; 254
     fd2:	a5 14       	cp	r10, r5
     fd4:	50 f4       	brcc	.+20     	; 0xfea <vfprintf+0x2ca>
     fd6:	74 fe       	sbrs	r7, 4
     fd8:	0a c0       	rjmp	.+20     	; 0xfee <vfprintf+0x2ce>
     fda:	72 fc       	sbrc	r7, 2
     fdc:	08 c0       	rjmp	.+16     	; 0xfee <vfprintf+0x2ce>
     fde:	37 2d       	mov	r19, r7
     fe0:	3e 7e       	andi	r19, 0xEE	; 238
     fe2:	05 c0       	rjmp	.+10     	; 0xfee <vfprintf+0x2ce>
     fe4:	ba 2c       	mov	r11, r10
     fe6:	37 2d       	mov	r19, r7
     fe8:	03 c0       	rjmp	.+6      	; 0xff0 <vfprintf+0x2d0>
     fea:	ba 2c       	mov	r11, r10
     fec:	01 c0       	rjmp	.+2      	; 0xff0 <vfprintf+0x2d0>
     fee:	b5 2c       	mov	r11, r5
     ff0:	34 ff       	sbrs	r19, 4
     ff2:	0d c0       	rjmp	.+26     	; 0x100e <vfprintf+0x2ee>
     ff4:	fe 01       	movw	r30, r28
     ff6:	ea 0d       	add	r30, r10
     ff8:	f1 1d       	adc	r31, r1
     ffa:	80 81       	ld	r24, Z
     ffc:	80 33       	cpi	r24, 0x30	; 48
     ffe:	11 f4       	brne	.+4      	; 0x1004 <vfprintf+0x2e4>
    1000:	39 7e       	andi	r19, 0xE9	; 233
    1002:	09 c0       	rjmp	.+18     	; 0x1016 <vfprintf+0x2f6>
    1004:	32 ff       	sbrs	r19, 2
    1006:	06 c0       	rjmp	.+12     	; 0x1014 <vfprintf+0x2f4>
    1008:	b3 94       	inc	r11
    100a:	b3 94       	inc	r11
    100c:	04 c0       	rjmp	.+8      	; 0x1016 <vfprintf+0x2f6>
    100e:	83 2f       	mov	r24, r19
    1010:	86 78       	andi	r24, 0x86	; 134
    1012:	09 f0       	breq	.+2      	; 0x1016 <vfprintf+0x2f6>
    1014:	b3 94       	inc	r11
    1016:	33 fd       	sbrc	r19, 3
    1018:	12 c0       	rjmp	.+36     	; 0x103e <vfprintf+0x31e>
    101a:	30 ff       	sbrs	r19, 0
    101c:	06 c0       	rjmp	.+12     	; 0x102a <vfprintf+0x30a>
    101e:	5a 2c       	mov	r5, r10
    1020:	b3 14       	cp	r11, r3
    1022:	18 f4       	brcc	.+6      	; 0x102a <vfprintf+0x30a>
    1024:	53 0c       	add	r5, r3
    1026:	5b 18       	sub	r5, r11
    1028:	b3 2c       	mov	r11, r3
    102a:	b3 14       	cp	r11, r3
    102c:	60 f4       	brcc	.+24     	; 0x1046 <vfprintf+0x326>
    102e:	b7 01       	movw	r22, r14
    1030:	80 e2       	ldi	r24, 0x20	; 32
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	3c 87       	std	Y+12, r19	; 0x0c
    1036:	c6 d1       	rcall	.+908    	; 0x13c4 <fputc>
    1038:	b3 94       	inc	r11
    103a:	3c 85       	ldd	r19, Y+12	; 0x0c
    103c:	f6 cf       	rjmp	.-20     	; 0x102a <vfprintf+0x30a>
    103e:	b3 14       	cp	r11, r3
    1040:	10 f4       	brcc	.+4      	; 0x1046 <vfprintf+0x326>
    1042:	3b 18       	sub	r3, r11
    1044:	01 c0       	rjmp	.+2      	; 0x1048 <vfprintf+0x328>
    1046:	31 2c       	mov	r3, r1
    1048:	34 ff       	sbrs	r19, 4
    104a:	11 c0       	rjmp	.+34     	; 0x106e <vfprintf+0x34e>
    104c:	b7 01       	movw	r22, r14
    104e:	80 e3       	ldi	r24, 0x30	; 48
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	3c 87       	std	Y+12, r19	; 0x0c
    1054:	b7 d1       	rcall	.+878    	; 0x13c4 <fputc>
    1056:	3c 85       	ldd	r19, Y+12	; 0x0c
    1058:	32 ff       	sbrs	r19, 2
    105a:	16 c0       	rjmp	.+44     	; 0x1088 <vfprintf+0x368>
    105c:	31 fd       	sbrc	r19, 1
    105e:	03 c0       	rjmp	.+6      	; 0x1066 <vfprintf+0x346>
    1060:	88 e7       	ldi	r24, 0x78	; 120
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	02 c0       	rjmp	.+4      	; 0x106a <vfprintf+0x34a>
    1066:	88 e5       	ldi	r24, 0x58	; 88
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	b7 01       	movw	r22, r14
    106c:	0c c0       	rjmp	.+24     	; 0x1086 <vfprintf+0x366>
    106e:	83 2f       	mov	r24, r19
    1070:	86 78       	andi	r24, 0x86	; 134
    1072:	51 f0       	breq	.+20     	; 0x1088 <vfprintf+0x368>
    1074:	31 ff       	sbrs	r19, 1
    1076:	02 c0       	rjmp	.+4      	; 0x107c <vfprintf+0x35c>
    1078:	8b e2       	ldi	r24, 0x2B	; 43
    107a:	01 c0       	rjmp	.+2      	; 0x107e <vfprintf+0x35e>
    107c:	80 e2       	ldi	r24, 0x20	; 32
    107e:	37 fd       	sbrc	r19, 7
    1080:	8d e2       	ldi	r24, 0x2D	; 45
    1082:	b7 01       	movw	r22, r14
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	9e d1       	rcall	.+828    	; 0x13c4 <fputc>
    1088:	a5 14       	cp	r10, r5
    108a:	30 f4       	brcc	.+12     	; 0x1098 <vfprintf+0x378>
    108c:	b7 01       	movw	r22, r14
    108e:	80 e3       	ldi	r24, 0x30	; 48
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	98 d1       	rcall	.+816    	; 0x13c4 <fputc>
    1094:	5a 94       	dec	r5
    1096:	f8 cf       	rjmp	.-16     	; 0x1088 <vfprintf+0x368>
    1098:	aa 94       	dec	r10
    109a:	f4 01       	movw	r30, r8
    109c:	ea 0d       	add	r30, r10
    109e:	f1 1d       	adc	r31, r1
    10a0:	80 81       	ld	r24, Z
    10a2:	b7 01       	movw	r22, r14
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	8e d1       	rcall	.+796    	; 0x13c4 <fputc>
    10a8:	a1 10       	cpse	r10, r1
    10aa:	f6 cf       	rjmp	.-20     	; 0x1098 <vfprintf+0x378>
    10ac:	33 20       	and	r3, r3
    10ae:	09 f4       	brne	.+2      	; 0x10b2 <vfprintf+0x392>
    10b0:	5d ce       	rjmp	.-838    	; 0xd6c <vfprintf+0x4c>
    10b2:	b7 01       	movw	r22, r14
    10b4:	80 e2       	ldi	r24, 0x20	; 32
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	85 d1       	rcall	.+778    	; 0x13c4 <fputc>
    10ba:	3a 94       	dec	r3
    10bc:	f7 cf       	rjmp	.-18     	; 0x10ac <vfprintf+0x38c>
    10be:	f7 01       	movw	r30, r14
    10c0:	86 81       	ldd	r24, Z+6	; 0x06
    10c2:	97 81       	ldd	r25, Z+7	; 0x07
    10c4:	02 c0       	rjmp	.+4      	; 0x10ca <vfprintf+0x3aa>
    10c6:	8f ef       	ldi	r24, 0xFF	; 255
    10c8:	9f ef       	ldi	r25, 0xFF	; 255
    10ca:	2c 96       	adiw	r28, 0x0c	; 12
    10cc:	0f b6       	in	r0, 0x3f	; 63
    10ce:	f8 94       	cli
    10d0:	de bf       	out	0x3e, r29	; 62
    10d2:	0f be       	out	0x3f, r0	; 63
    10d4:	cd bf       	out	0x3d, r28	; 61
    10d6:	df 91       	pop	r29
    10d8:	cf 91       	pop	r28
    10da:	1f 91       	pop	r17
    10dc:	0f 91       	pop	r16
    10de:	ff 90       	pop	r15
    10e0:	ef 90       	pop	r14
    10e2:	df 90       	pop	r13
    10e4:	cf 90       	pop	r12
    10e6:	bf 90       	pop	r11
    10e8:	af 90       	pop	r10
    10ea:	9f 90       	pop	r9
    10ec:	8f 90       	pop	r8
    10ee:	7f 90       	pop	r7
    10f0:	6f 90       	pop	r6
    10f2:	5f 90       	pop	r5
    10f4:	4f 90       	pop	r4
    10f6:	3f 90       	pop	r3
    10f8:	2f 90       	pop	r2
    10fa:	08 95       	ret

000010fc <calloc>:
    10fc:	0f 93       	push	r16
    10fe:	1f 93       	push	r17
    1100:	cf 93       	push	r28
    1102:	df 93       	push	r29
    1104:	86 9f       	mul	r24, r22
    1106:	80 01       	movw	r16, r0
    1108:	87 9f       	mul	r24, r23
    110a:	10 0d       	add	r17, r0
    110c:	96 9f       	mul	r25, r22
    110e:	10 0d       	add	r17, r0
    1110:	11 24       	eor	r1, r1
    1112:	c8 01       	movw	r24, r16
    1114:	0d d0       	rcall	.+26     	; 0x1130 <malloc>
    1116:	ec 01       	movw	r28, r24
    1118:	00 97       	sbiw	r24, 0x00	; 0
    111a:	21 f0       	breq	.+8      	; 0x1124 <__stack+0x25>
    111c:	a8 01       	movw	r20, r16
    111e:	60 e0       	ldi	r22, 0x00	; 0
    1120:	70 e0       	ldi	r23, 0x00	; 0
    1122:	3e d1       	rcall	.+636    	; 0x13a0 <memset>
    1124:	ce 01       	movw	r24, r28
    1126:	df 91       	pop	r29
    1128:	cf 91       	pop	r28
    112a:	1f 91       	pop	r17
    112c:	0f 91       	pop	r16
    112e:	08 95       	ret

00001130 <malloc>:
    1130:	cf 93       	push	r28
    1132:	df 93       	push	r29
    1134:	82 30       	cpi	r24, 0x02	; 2
    1136:	91 05       	cpc	r25, r1
    1138:	10 f4       	brcc	.+4      	; 0x113e <malloc+0xe>
    113a:	82 e0       	ldi	r24, 0x02	; 2
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	e0 91 8c 01 	lds	r30, 0x018C
    1142:	f0 91 8d 01 	lds	r31, 0x018D
    1146:	20 e0       	ldi	r18, 0x00	; 0
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	c0 e0       	ldi	r28, 0x00	; 0
    114c:	d0 e0       	ldi	r29, 0x00	; 0
    114e:	30 97       	sbiw	r30, 0x00	; 0
    1150:	11 f1       	breq	.+68     	; 0x1196 <malloc+0x66>
    1152:	40 81       	ld	r20, Z
    1154:	51 81       	ldd	r21, Z+1	; 0x01
    1156:	48 17       	cp	r20, r24
    1158:	59 07       	cpc	r21, r25
    115a:	c0 f0       	brcs	.+48     	; 0x118c <malloc+0x5c>
    115c:	48 17       	cp	r20, r24
    115e:	59 07       	cpc	r21, r25
    1160:	61 f4       	brne	.+24     	; 0x117a <malloc+0x4a>
    1162:	82 81       	ldd	r24, Z+2	; 0x02
    1164:	93 81       	ldd	r25, Z+3	; 0x03
    1166:	20 97       	sbiw	r28, 0x00	; 0
    1168:	19 f0       	breq	.+6      	; 0x1170 <malloc+0x40>
    116a:	9b 83       	std	Y+3, r25	; 0x03
    116c:	8a 83       	std	Y+2, r24	; 0x02
    116e:	2b c0       	rjmp	.+86     	; 0x11c6 <malloc+0x96>
    1170:	90 93 8d 01 	sts	0x018D, r25
    1174:	80 93 8c 01 	sts	0x018C, r24
    1178:	26 c0       	rjmp	.+76     	; 0x11c6 <malloc+0x96>
    117a:	21 15       	cp	r18, r1
    117c:	31 05       	cpc	r19, r1
    117e:	19 f0       	breq	.+6      	; 0x1186 <malloc+0x56>
    1180:	42 17       	cp	r20, r18
    1182:	53 07       	cpc	r21, r19
    1184:	18 f4       	brcc	.+6      	; 0x118c <malloc+0x5c>
    1186:	9a 01       	movw	r18, r20
    1188:	be 01       	movw	r22, r28
    118a:	df 01       	movw	r26, r30
    118c:	ef 01       	movw	r28, r30
    118e:	02 80       	ldd	r0, Z+2	; 0x02
    1190:	f3 81       	ldd	r31, Z+3	; 0x03
    1192:	e0 2d       	mov	r30, r0
    1194:	dc cf       	rjmp	.-72     	; 0x114e <malloc+0x1e>
    1196:	21 15       	cp	r18, r1
    1198:	31 05       	cpc	r19, r1
    119a:	09 f1       	breq	.+66     	; 0x11de <malloc+0xae>
    119c:	28 1b       	sub	r18, r24
    119e:	39 0b       	sbc	r19, r25
    11a0:	24 30       	cpi	r18, 0x04	; 4
    11a2:	31 05       	cpc	r19, r1
    11a4:	90 f4       	brcc	.+36     	; 0x11ca <malloc+0x9a>
    11a6:	12 96       	adiw	r26, 0x02	; 2
    11a8:	8d 91       	ld	r24, X+
    11aa:	9c 91       	ld	r25, X
    11ac:	13 97       	sbiw	r26, 0x03	; 3
    11ae:	61 15       	cp	r22, r1
    11b0:	71 05       	cpc	r23, r1
    11b2:	21 f0       	breq	.+8      	; 0x11bc <malloc+0x8c>
    11b4:	fb 01       	movw	r30, r22
    11b6:	93 83       	std	Z+3, r25	; 0x03
    11b8:	82 83       	std	Z+2, r24	; 0x02
    11ba:	04 c0       	rjmp	.+8      	; 0x11c4 <malloc+0x94>
    11bc:	90 93 8d 01 	sts	0x018D, r25
    11c0:	80 93 8c 01 	sts	0x018C, r24
    11c4:	fd 01       	movw	r30, r26
    11c6:	32 96       	adiw	r30, 0x02	; 2
    11c8:	44 c0       	rjmp	.+136    	; 0x1252 <malloc+0x122>
    11ca:	fd 01       	movw	r30, r26
    11cc:	e2 0f       	add	r30, r18
    11ce:	f3 1f       	adc	r31, r19
    11d0:	81 93       	st	Z+, r24
    11d2:	91 93       	st	Z+, r25
    11d4:	22 50       	subi	r18, 0x02	; 2
    11d6:	31 09       	sbc	r19, r1
    11d8:	2d 93       	st	X+, r18
    11da:	3c 93       	st	X, r19
    11dc:	3a c0       	rjmp	.+116    	; 0x1252 <malloc+0x122>
    11de:	20 91 8a 01 	lds	r18, 0x018A
    11e2:	30 91 8b 01 	lds	r19, 0x018B
    11e6:	23 2b       	or	r18, r19
    11e8:	41 f4       	brne	.+16     	; 0x11fa <malloc+0xca>
    11ea:	20 91 02 01 	lds	r18, 0x0102
    11ee:	30 91 03 01 	lds	r19, 0x0103
    11f2:	30 93 8b 01 	sts	0x018B, r19
    11f6:	20 93 8a 01 	sts	0x018A, r18
    11fa:	20 91 00 01 	lds	r18, 0x0100
    11fe:	30 91 01 01 	lds	r19, 0x0101
    1202:	21 15       	cp	r18, r1
    1204:	31 05       	cpc	r19, r1
    1206:	41 f4       	brne	.+16     	; 0x1218 <malloc+0xe8>
    1208:	2d b7       	in	r18, 0x3d	; 61
    120a:	3e b7       	in	r19, 0x3e	; 62
    120c:	40 91 04 01 	lds	r20, 0x0104
    1210:	50 91 05 01 	lds	r21, 0x0105
    1214:	24 1b       	sub	r18, r20
    1216:	35 0b       	sbc	r19, r21
    1218:	e0 91 8a 01 	lds	r30, 0x018A
    121c:	f0 91 8b 01 	lds	r31, 0x018B
    1220:	e2 17       	cp	r30, r18
    1222:	f3 07       	cpc	r31, r19
    1224:	a0 f4       	brcc	.+40     	; 0x124e <malloc+0x11e>
    1226:	2e 1b       	sub	r18, r30
    1228:	3f 0b       	sbc	r19, r31
    122a:	28 17       	cp	r18, r24
    122c:	39 07       	cpc	r19, r25
    122e:	78 f0       	brcs	.+30     	; 0x124e <malloc+0x11e>
    1230:	ac 01       	movw	r20, r24
    1232:	4e 5f       	subi	r20, 0xFE	; 254
    1234:	5f 4f       	sbci	r21, 0xFF	; 255
    1236:	24 17       	cp	r18, r20
    1238:	35 07       	cpc	r19, r21
    123a:	48 f0       	brcs	.+18     	; 0x124e <malloc+0x11e>
    123c:	4e 0f       	add	r20, r30
    123e:	5f 1f       	adc	r21, r31
    1240:	50 93 8b 01 	sts	0x018B, r21
    1244:	40 93 8a 01 	sts	0x018A, r20
    1248:	81 93       	st	Z+, r24
    124a:	91 93       	st	Z+, r25
    124c:	02 c0       	rjmp	.+4      	; 0x1252 <malloc+0x122>
    124e:	e0 e0       	ldi	r30, 0x00	; 0
    1250:	f0 e0       	ldi	r31, 0x00	; 0
    1252:	cf 01       	movw	r24, r30
    1254:	df 91       	pop	r29
    1256:	cf 91       	pop	r28
    1258:	08 95       	ret

0000125a <free>:
    125a:	0f 93       	push	r16
    125c:	1f 93       	push	r17
    125e:	cf 93       	push	r28
    1260:	df 93       	push	r29
    1262:	00 97       	sbiw	r24, 0x00	; 0
    1264:	09 f4       	brne	.+2      	; 0x1268 <free+0xe>
    1266:	8c c0       	rjmp	.+280    	; 0x1380 <free+0x126>
    1268:	fc 01       	movw	r30, r24
    126a:	32 97       	sbiw	r30, 0x02	; 2
    126c:	13 82       	std	Z+3, r1	; 0x03
    126e:	12 82       	std	Z+2, r1	; 0x02
    1270:	00 91 8c 01 	lds	r16, 0x018C
    1274:	10 91 8d 01 	lds	r17, 0x018D
    1278:	01 15       	cp	r16, r1
    127a:	11 05       	cpc	r17, r1
    127c:	81 f4       	brne	.+32     	; 0x129e <free+0x44>
    127e:	20 81       	ld	r18, Z
    1280:	31 81       	ldd	r19, Z+1	; 0x01
    1282:	82 0f       	add	r24, r18
    1284:	93 1f       	adc	r25, r19
    1286:	20 91 8a 01 	lds	r18, 0x018A
    128a:	30 91 8b 01 	lds	r19, 0x018B
    128e:	28 17       	cp	r18, r24
    1290:	39 07       	cpc	r19, r25
    1292:	79 f5       	brne	.+94     	; 0x12f2 <free+0x98>
    1294:	f0 93 8b 01 	sts	0x018B, r31
    1298:	e0 93 8a 01 	sts	0x018A, r30
    129c:	71 c0       	rjmp	.+226    	; 0x1380 <free+0x126>
    129e:	d8 01       	movw	r26, r16
    12a0:	40 e0       	ldi	r20, 0x00	; 0
    12a2:	50 e0       	ldi	r21, 0x00	; 0
    12a4:	ae 17       	cp	r26, r30
    12a6:	bf 07       	cpc	r27, r31
    12a8:	50 f4       	brcc	.+20     	; 0x12be <free+0x64>
    12aa:	12 96       	adiw	r26, 0x02	; 2
    12ac:	2d 91       	ld	r18, X+
    12ae:	3c 91       	ld	r19, X
    12b0:	13 97       	sbiw	r26, 0x03	; 3
    12b2:	ad 01       	movw	r20, r26
    12b4:	21 15       	cp	r18, r1
    12b6:	31 05       	cpc	r19, r1
    12b8:	09 f1       	breq	.+66     	; 0x12fc <free+0xa2>
    12ba:	d9 01       	movw	r26, r18
    12bc:	f3 cf       	rjmp	.-26     	; 0x12a4 <free+0x4a>
    12be:	9d 01       	movw	r18, r26
    12c0:	da 01       	movw	r26, r20
    12c2:	33 83       	std	Z+3, r19	; 0x03
    12c4:	22 83       	std	Z+2, r18	; 0x02
    12c6:	60 81       	ld	r22, Z
    12c8:	71 81       	ldd	r23, Z+1	; 0x01
    12ca:	86 0f       	add	r24, r22
    12cc:	97 1f       	adc	r25, r23
    12ce:	82 17       	cp	r24, r18
    12d0:	93 07       	cpc	r25, r19
    12d2:	69 f4       	brne	.+26     	; 0x12ee <free+0x94>
    12d4:	ec 01       	movw	r28, r24
    12d6:	28 81       	ld	r18, Y
    12d8:	39 81       	ldd	r19, Y+1	; 0x01
    12da:	26 0f       	add	r18, r22
    12dc:	37 1f       	adc	r19, r23
    12de:	2e 5f       	subi	r18, 0xFE	; 254
    12e0:	3f 4f       	sbci	r19, 0xFF	; 255
    12e2:	31 83       	std	Z+1, r19	; 0x01
    12e4:	20 83       	st	Z, r18
    12e6:	8a 81       	ldd	r24, Y+2	; 0x02
    12e8:	9b 81       	ldd	r25, Y+3	; 0x03
    12ea:	93 83       	std	Z+3, r25	; 0x03
    12ec:	82 83       	std	Z+2, r24	; 0x02
    12ee:	45 2b       	or	r20, r21
    12f0:	29 f4       	brne	.+10     	; 0x12fc <free+0xa2>
    12f2:	f0 93 8d 01 	sts	0x018D, r31
    12f6:	e0 93 8c 01 	sts	0x018C, r30
    12fa:	42 c0       	rjmp	.+132    	; 0x1380 <free+0x126>
    12fc:	13 96       	adiw	r26, 0x03	; 3
    12fe:	fc 93       	st	X, r31
    1300:	ee 93       	st	-X, r30
    1302:	12 97       	sbiw	r26, 0x02	; 2
    1304:	ed 01       	movw	r28, r26
    1306:	49 91       	ld	r20, Y+
    1308:	59 91       	ld	r21, Y+
    130a:	9e 01       	movw	r18, r28
    130c:	24 0f       	add	r18, r20
    130e:	35 1f       	adc	r19, r21
    1310:	e2 17       	cp	r30, r18
    1312:	f3 07       	cpc	r31, r19
    1314:	71 f4       	brne	.+28     	; 0x1332 <free+0xd8>
    1316:	80 81       	ld	r24, Z
    1318:	91 81       	ldd	r25, Z+1	; 0x01
    131a:	84 0f       	add	r24, r20
    131c:	95 1f       	adc	r25, r21
    131e:	02 96       	adiw	r24, 0x02	; 2
    1320:	11 96       	adiw	r26, 0x01	; 1
    1322:	9c 93       	st	X, r25
    1324:	8e 93       	st	-X, r24
    1326:	82 81       	ldd	r24, Z+2	; 0x02
    1328:	93 81       	ldd	r25, Z+3	; 0x03
    132a:	13 96       	adiw	r26, 0x03	; 3
    132c:	9c 93       	st	X, r25
    132e:	8e 93       	st	-X, r24
    1330:	12 97       	sbiw	r26, 0x02	; 2
    1332:	e0 e0       	ldi	r30, 0x00	; 0
    1334:	f0 e0       	ldi	r31, 0x00	; 0
    1336:	d8 01       	movw	r26, r16
    1338:	12 96       	adiw	r26, 0x02	; 2
    133a:	8d 91       	ld	r24, X+
    133c:	9c 91       	ld	r25, X
    133e:	13 97       	sbiw	r26, 0x03	; 3
    1340:	00 97       	sbiw	r24, 0x00	; 0
    1342:	19 f0       	breq	.+6      	; 0x134a <free+0xf0>
    1344:	f8 01       	movw	r30, r16
    1346:	8c 01       	movw	r16, r24
    1348:	f6 cf       	rjmp	.-20     	; 0x1336 <free+0xdc>
    134a:	8d 91       	ld	r24, X+
    134c:	9c 91       	ld	r25, X
    134e:	98 01       	movw	r18, r16
    1350:	2e 5f       	subi	r18, 0xFE	; 254
    1352:	3f 4f       	sbci	r19, 0xFF	; 255
    1354:	82 0f       	add	r24, r18
    1356:	93 1f       	adc	r25, r19
    1358:	20 91 8a 01 	lds	r18, 0x018A
    135c:	30 91 8b 01 	lds	r19, 0x018B
    1360:	28 17       	cp	r18, r24
    1362:	39 07       	cpc	r19, r25
    1364:	69 f4       	brne	.+26     	; 0x1380 <free+0x126>
    1366:	30 97       	sbiw	r30, 0x00	; 0
    1368:	29 f4       	brne	.+10     	; 0x1374 <free+0x11a>
    136a:	10 92 8d 01 	sts	0x018D, r1
    136e:	10 92 8c 01 	sts	0x018C, r1
    1372:	02 c0       	rjmp	.+4      	; 0x1378 <free+0x11e>
    1374:	13 82       	std	Z+3, r1	; 0x03
    1376:	12 82       	std	Z+2, r1	; 0x02
    1378:	10 93 8b 01 	sts	0x018B, r17
    137c:	00 93 8a 01 	sts	0x018A, r16
    1380:	df 91       	pop	r29
    1382:	cf 91       	pop	r28
    1384:	1f 91       	pop	r17
    1386:	0f 91       	pop	r16
    1388:	08 95       	ret

0000138a <strnlen_P>:
    138a:	fc 01       	movw	r30, r24
    138c:	05 90       	lpm	r0, Z+
    138e:	61 50       	subi	r22, 0x01	; 1
    1390:	70 40       	sbci	r23, 0x00	; 0
    1392:	01 10       	cpse	r0, r1
    1394:	d8 f7       	brcc	.-10     	; 0x138c <strnlen_P+0x2>
    1396:	80 95       	com	r24
    1398:	90 95       	com	r25
    139a:	8e 0f       	add	r24, r30
    139c:	9f 1f       	adc	r25, r31
    139e:	08 95       	ret

000013a0 <memset>:
    13a0:	dc 01       	movw	r26, r24
    13a2:	01 c0       	rjmp	.+2      	; 0x13a6 <memset+0x6>
    13a4:	6d 93       	st	X+, r22
    13a6:	41 50       	subi	r20, 0x01	; 1
    13a8:	50 40       	sbci	r21, 0x00	; 0
    13aa:	e0 f7       	brcc	.-8      	; 0x13a4 <memset+0x4>
    13ac:	08 95       	ret

000013ae <strnlen>:
    13ae:	fc 01       	movw	r30, r24
    13b0:	61 50       	subi	r22, 0x01	; 1
    13b2:	70 40       	sbci	r23, 0x00	; 0
    13b4:	01 90       	ld	r0, Z+
    13b6:	01 10       	cpse	r0, r1
    13b8:	d8 f7       	brcc	.-10     	; 0x13b0 <strnlen+0x2>
    13ba:	80 95       	com	r24
    13bc:	90 95       	com	r25
    13be:	8e 0f       	add	r24, r30
    13c0:	9f 1f       	adc	r25, r31
    13c2:	08 95       	ret

000013c4 <fputc>:
    13c4:	0f 93       	push	r16
    13c6:	1f 93       	push	r17
    13c8:	cf 93       	push	r28
    13ca:	df 93       	push	r29
    13cc:	fb 01       	movw	r30, r22
    13ce:	23 81       	ldd	r18, Z+3	; 0x03
    13d0:	21 fd       	sbrc	r18, 1
    13d2:	03 c0       	rjmp	.+6      	; 0x13da <fputc+0x16>
    13d4:	8f ef       	ldi	r24, 0xFF	; 255
    13d6:	9f ef       	ldi	r25, 0xFF	; 255
    13d8:	28 c0       	rjmp	.+80     	; 0x142a <fputc+0x66>
    13da:	22 ff       	sbrs	r18, 2
    13dc:	16 c0       	rjmp	.+44     	; 0x140a <fputc+0x46>
    13de:	46 81       	ldd	r20, Z+6	; 0x06
    13e0:	57 81       	ldd	r21, Z+7	; 0x07
    13e2:	24 81       	ldd	r18, Z+4	; 0x04
    13e4:	35 81       	ldd	r19, Z+5	; 0x05
    13e6:	42 17       	cp	r20, r18
    13e8:	53 07       	cpc	r21, r19
    13ea:	44 f4       	brge	.+16     	; 0x13fc <fputc+0x38>
    13ec:	a0 81       	ld	r26, Z
    13ee:	b1 81       	ldd	r27, Z+1	; 0x01
    13f0:	9d 01       	movw	r18, r26
    13f2:	2f 5f       	subi	r18, 0xFF	; 255
    13f4:	3f 4f       	sbci	r19, 0xFF	; 255
    13f6:	31 83       	std	Z+1, r19	; 0x01
    13f8:	20 83       	st	Z, r18
    13fa:	8c 93       	st	X, r24
    13fc:	26 81       	ldd	r18, Z+6	; 0x06
    13fe:	37 81       	ldd	r19, Z+7	; 0x07
    1400:	2f 5f       	subi	r18, 0xFF	; 255
    1402:	3f 4f       	sbci	r19, 0xFF	; 255
    1404:	37 83       	std	Z+7, r19	; 0x07
    1406:	26 83       	std	Z+6, r18	; 0x06
    1408:	10 c0       	rjmp	.+32     	; 0x142a <fputc+0x66>
    140a:	eb 01       	movw	r28, r22
    140c:	09 2f       	mov	r16, r25
    140e:	18 2f       	mov	r17, r24
    1410:	00 84       	ldd	r0, Z+8	; 0x08
    1412:	f1 85       	ldd	r31, Z+9	; 0x09
    1414:	e0 2d       	mov	r30, r0
    1416:	09 95       	icall
    1418:	89 2b       	or	r24, r25
    141a:	e1 f6       	brne	.-72     	; 0x13d4 <fputc+0x10>
    141c:	8e 81       	ldd	r24, Y+6	; 0x06
    141e:	9f 81       	ldd	r25, Y+7	; 0x07
    1420:	01 96       	adiw	r24, 0x01	; 1
    1422:	9f 83       	std	Y+7, r25	; 0x07
    1424:	8e 83       	std	Y+6, r24	; 0x06
    1426:	81 2f       	mov	r24, r17
    1428:	90 2f       	mov	r25, r16
    142a:	df 91       	pop	r29
    142c:	cf 91       	pop	r28
    142e:	1f 91       	pop	r17
    1430:	0f 91       	pop	r16
    1432:	08 95       	ret

00001434 <__ultoa_invert>:
    1434:	fa 01       	movw	r30, r20
    1436:	aa 27       	eor	r26, r26
    1438:	28 30       	cpi	r18, 0x08	; 8
    143a:	51 f1       	breq	.+84     	; 0x1490 <__ultoa_invert+0x5c>
    143c:	20 31       	cpi	r18, 0x10	; 16
    143e:	81 f1       	breq	.+96     	; 0x14a0 <__ultoa_invert+0x6c>
    1440:	e8 94       	clt
    1442:	6f 93       	push	r22
    1444:	6e 7f       	andi	r22, 0xFE	; 254
    1446:	6e 5f       	subi	r22, 0xFE	; 254
    1448:	7f 4f       	sbci	r23, 0xFF	; 255
    144a:	8f 4f       	sbci	r24, 0xFF	; 255
    144c:	9f 4f       	sbci	r25, 0xFF	; 255
    144e:	af 4f       	sbci	r26, 0xFF	; 255
    1450:	b1 e0       	ldi	r27, 0x01	; 1
    1452:	3e d0       	rcall	.+124    	; 0x14d0 <__ultoa_invert+0x9c>
    1454:	b4 e0       	ldi	r27, 0x04	; 4
    1456:	3c d0       	rcall	.+120    	; 0x14d0 <__ultoa_invert+0x9c>
    1458:	67 0f       	add	r22, r23
    145a:	78 1f       	adc	r23, r24
    145c:	89 1f       	adc	r24, r25
    145e:	9a 1f       	adc	r25, r26
    1460:	a1 1d       	adc	r26, r1
    1462:	68 0f       	add	r22, r24
    1464:	79 1f       	adc	r23, r25
    1466:	8a 1f       	adc	r24, r26
    1468:	91 1d       	adc	r25, r1
    146a:	a1 1d       	adc	r26, r1
    146c:	6a 0f       	add	r22, r26
    146e:	71 1d       	adc	r23, r1
    1470:	81 1d       	adc	r24, r1
    1472:	91 1d       	adc	r25, r1
    1474:	a1 1d       	adc	r26, r1
    1476:	20 d0       	rcall	.+64     	; 0x14b8 <__ultoa_invert+0x84>
    1478:	09 f4       	brne	.+2      	; 0x147c <__ultoa_invert+0x48>
    147a:	68 94       	set
    147c:	3f 91       	pop	r19
    147e:	2a e0       	ldi	r18, 0x0A	; 10
    1480:	26 9f       	mul	r18, r22
    1482:	11 24       	eor	r1, r1
    1484:	30 19       	sub	r19, r0
    1486:	30 5d       	subi	r19, 0xD0	; 208
    1488:	31 93       	st	Z+, r19
    148a:	de f6       	brtc	.-74     	; 0x1442 <__ultoa_invert+0xe>
    148c:	cf 01       	movw	r24, r30
    148e:	08 95       	ret
    1490:	46 2f       	mov	r20, r22
    1492:	47 70       	andi	r20, 0x07	; 7
    1494:	40 5d       	subi	r20, 0xD0	; 208
    1496:	41 93       	st	Z+, r20
    1498:	b3 e0       	ldi	r27, 0x03	; 3
    149a:	0f d0       	rcall	.+30     	; 0x14ba <__ultoa_invert+0x86>
    149c:	c9 f7       	brne	.-14     	; 0x1490 <__ultoa_invert+0x5c>
    149e:	f6 cf       	rjmp	.-20     	; 0x148c <__ultoa_invert+0x58>
    14a0:	46 2f       	mov	r20, r22
    14a2:	4f 70       	andi	r20, 0x0F	; 15
    14a4:	40 5d       	subi	r20, 0xD0	; 208
    14a6:	4a 33       	cpi	r20, 0x3A	; 58
    14a8:	18 f0       	brcs	.+6      	; 0x14b0 <__ultoa_invert+0x7c>
    14aa:	49 5d       	subi	r20, 0xD9	; 217
    14ac:	31 fd       	sbrc	r19, 1
    14ae:	40 52       	subi	r20, 0x20	; 32
    14b0:	41 93       	st	Z+, r20
    14b2:	02 d0       	rcall	.+4      	; 0x14b8 <__ultoa_invert+0x84>
    14b4:	a9 f7       	brne	.-22     	; 0x14a0 <__ultoa_invert+0x6c>
    14b6:	ea cf       	rjmp	.-44     	; 0x148c <__ultoa_invert+0x58>
    14b8:	b4 e0       	ldi	r27, 0x04	; 4
    14ba:	a6 95       	lsr	r26
    14bc:	97 95       	ror	r25
    14be:	87 95       	ror	r24
    14c0:	77 95       	ror	r23
    14c2:	67 95       	ror	r22
    14c4:	ba 95       	dec	r27
    14c6:	c9 f7       	brne	.-14     	; 0x14ba <__ultoa_invert+0x86>
    14c8:	00 97       	sbiw	r24, 0x00	; 0
    14ca:	61 05       	cpc	r22, r1
    14cc:	71 05       	cpc	r23, r1
    14ce:	08 95       	ret
    14d0:	9b 01       	movw	r18, r22
    14d2:	ac 01       	movw	r20, r24
    14d4:	0a 2e       	mov	r0, r26
    14d6:	06 94       	lsr	r0
    14d8:	57 95       	ror	r21
    14da:	47 95       	ror	r20
    14dc:	37 95       	ror	r19
    14de:	27 95       	ror	r18
    14e0:	ba 95       	dec	r27
    14e2:	c9 f7       	brne	.-14     	; 0x14d6 <__ultoa_invert+0xa2>
    14e4:	62 0f       	add	r22, r18
    14e6:	73 1f       	adc	r23, r19
    14e8:	84 1f       	adc	r24, r20
    14ea:	95 1f       	adc	r25, r21
    14ec:	a0 1d       	adc	r26, r0
    14ee:	08 95       	ret

000014f0 <_exit>:
    14f0:	f8 94       	cli

000014f2 <__stop_program>:
    14f2:	ff cf       	rjmp	.-2      	; 0x14f2 <__stop_program>
